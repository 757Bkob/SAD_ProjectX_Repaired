return {
PlaceObj('ModItemFolder', {
	'name', "New Categories",
	'NameColor', RGBA(100, 124, 222, 255),
}, {
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(711822431269, --[[ModItemBuildCategory Default Supply ActionText |gender-variants]] "Supply Interface"),
		Description = T(169674508077, --[[ModItemBuildCategory Default Supply Description]] "Seek valuable suppliers to aid in the colonization efforts."),
		DisplayName = T(107090631058, --[[ModItemBuildCategory Default Supply DisplayName]] "Ask"),
		Icon = "Trade/SupplyLogo.png",
		SortKey = -4,
		id = "Supply",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(188548494809, --[[ModItemBuildCategory Default Trade ActionText |gender-variants]] "Supply Interface"),
		Description = T(870372018731, --[[ModItemBuildCategory Default Trade Description]] "Seek sellers who are willing to trade."),
		DisplayName = T(561991293074, --[[ModItemBuildCategory Default Trade DisplayName]] "Components"),
		Icon = "UI/Icons/Items/electronic_components",
		SortKey = -2,
		id = "Trade",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(134313880797, --[[ModItemBuildCategory Default GalacticPrinterMaterials ActionText |gender-variants]] "Print Interface"),
		Description = T(256904749238, --[[ModItemBuildCategory Default GalacticPrinterMaterials Description]] "Print a various selection of materials."),
		DisplayName = T(795823232943, --[[ModItemBuildCategory Default GalacticPrinterMaterials DisplayName]] "Materials"),
		Icon = "UI/Icons/Items/wood_trunk",
		SortKey = 3936,
		id = "GalacticPrinterMaterials",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(407151584868, --[[ModItemBuildCategory Default GalacticPrinterFoods ActionText |gender-variants]] "Print Interface"),
		Description = T(887558310297, --[[ModItemBuildCategory Default GalacticPrinterFoods Description]] "Print a various selection of foods."),
		DisplayName = T(313869462011, --[[ModItemBuildCategory Default GalacticPrinterFoods DisplayName]] "Foods"),
		Icon = "UI/Icons/Items/raw_meat",
		SortKey = 3935,
		id = "GalacticPrinterFoods",
	}),
	PlaceObj('ModItemBuildCategory', {
		Description = T(904361285278, --[[ModItemBuildCategory Default CriminalActivity Description]] "Steal information from someone else."),
		DisplayName = T(854940246947, --[[ModItemBuildCategory Default CriminalActivity DisplayName]] "Hack"),
		Icon = "Mod/ucCehPy/CriminalActivity/Blueprint.png",
		SortKey = -2,
		id = "CriminalActivity",
	}),
	PlaceObj('ModItemBuildCategory', {
		Description = T(970034246559, --[[ModItemBuildCategory Default illegalComponents Description]] "Craft, Trade, or splice base material into a more usable resource!"),
		DisplayName = T(916264905856, --[[ModItemBuildCategory Default illegalComponents DisplayName]] "Illegal Components"),
		Icon = "Mod/ucCehPy/CriminalActivity/CriminalActivityLogo.png",
		id = "illegalComponents",
	}),
	PlaceObj('ModItemBuildCategory', {
		Description = T(801584056155, --[[ModItemBuildCategory Default CriminalActivity_2 Description]] "Browse the black market and do some illegal trading."),
		DisplayName = T(369573795798, --[[ModItemBuildCategory Default CriminalActivity_2 DisplayName]] "Black Market"),
		Icon = "Mod/ucCehPy/CriminalActivity/CriminalActivityLogo.png",
		SortKey = -1,
		id = "CriminalActivity_2",
	}),
	PlaceObj('ModItemBuildCategory', {
		Description = T(256170793778, --[[ModItemBuildCategory Default Cyber Description]] "Craft our own Cyber Armor"),
		DisplayName = T(490732867663, --[[ModItemBuildCategory Default Cyber DisplayName]] "Cyber"),
		Icon = "Mod/ucCehPy/CriminalActivity/CyberChestSmall.png",
		SortKey = -1,
		id = "Cyber",
	}),
	PlaceObj('ModItemBuildCategory', {
		Description = T(870205165206, --[[ModItemBuildCategory Default GalacticarGearTrade Description]] "Trade for the Official Levy Equipment of the Galactican Empire"),
		DisplayName = T(599542576319, --[[ModItemBuildCategory Default GalacticarGearTrade DisplayName]] "Galactic Gear"),
		Icon = "Mod/ucCehPy/Trade/GalacticChest.png",
		id = "GalacticarGearTrade",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(807243700351, --[[ModItemBuildCategory Default Sell ActionText |gender-variants]] "Sell Interface"),
		Description = T(821573226430, --[[ModItemBuildCategory Default Sell Description]] "Donate resources for Receipts, that let us unlock Galactican Civilian Technologies"),
		DisplayName = T(908586119728, --[[ModItemBuildCategory Default Sell DisplayName]] "Donate"),
		Icon = "Mod/ucCehPy/Trade/GalacticSchematicCategory.png",
		SortKey = -3,
		id = "Sell",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(545604529598, --[[ModItemBuildCategory Default BlackMarket ActionText |gender-variants]] "Black Market Interface"),
		Description = T(888835598486, --[[ModItemBuildCategory Default BlackMarket Description]] "Browse the black market and do some illegal trading."),
		DisplayName = T(648447222063, --[[ModItemBuildCategory Default BlackMarket DisplayName]] "Illegal Wares"),
		Icon = "Mod/ucCehPy/CriminalActivity/CriminalActivityLogo.png",
		SortKey = 3931,
		id = "BlackMarket",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(322004157478, --[[ModItemBuildCategory Default Study ActionText |gender-variants]] "Study"),
		Description = T(903261409712, --[[ModItemBuildCategory Default Study Description]] "Study alien organisms to create ailments and edibles."),
		DisplayName = T(524663411447, --[[ModItemBuildCategory Default Study DisplayName]] "Study"),
		Icon = "Biologist/BiologistLogoStudy.png",
		SortKey = -5,
		id = "Study",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(830523519885, --[[ModItemBuildCategory Default Pills ActionText |gender-variants]] "Study"),
		Description = T(297301992193, --[[ModItemBuildCategory Default Pills Description]] "Crush organs into consumable pills that give a variety of buffs!"),
		DisplayName = T(629870141045, --[[ModItemBuildCategory Default Pills DisplayName]] "Pharmacy!"),
		Icon = "Mod/ucCehPy/Biologist/GlutchSlime.png",
		id = "Pills",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(329588850499, --[[ModItemBuildCategory Default Boxing ActionText |gender-variants]] "Biology"),
		Description = T(307031539838, --[[ModItemBuildCategory Default Boxing Description]] "Begin packing bodily organisms for transport."),
		DisplayName = T(241475727848, --[[ModItemBuildCategory Default Boxing DisplayName]] "Boxing"),
		Icon = "Biologist/BiologistLogoTrade.png",
		SortKey = -3,
		id = "Boxing",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(468073260485, --[[ModItemBuildCategory Default organ_sell ActionText |gender-variants]] "Biology"),
		Description = T(854365202106, --[[ModItemBuildCategory Default organ_sell Description]] "Send shipments of Organs to Contacts. <color px_purple>Warning this causes the recipients technology to improve</color>"),
		DisplayName = T(523108013433, --[[ModItemBuildCategory Default organ_sell DisplayName]] "Organ Market"),
		Icon = "Mod/ucCehPy/Biologist/RaptorBoxSmall.png",
		SortKey = -2,
		id = "organ_sell",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(981247378410, --[[ModItemBuildCategory Default GalacticPrinterComponents ActionText |gender-variants]] "Print Interface"),
		Description = T(151738933849, --[[ModItemBuildCategory Default GalacticPrinterComponents Description]] "Print a various selection of components."),
		DisplayName = T(682356293316, --[[ModItemBuildCategory Default GalacticPrinterComponents DisplayName]] "Components"),
		Icon = "UI/Icons/Items/electronic_components",
		SortKey = 3936,
		id = "GalacticPrinterComponents",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(561809707336, --[[ModItemBuildCategory Default Refinery ActionText |gender-variants]] "Refine"),
		Description = T(123299737377, --[[ModItemBuildCategory Default Refinery Description]] "Refine materials into valuable resources."),
		DisplayName = T(199237457778, --[[ModItemBuildCategory Default Refinery DisplayName]] "Refine"),
		Icon = "Trade/Refinery.png",
		SortKey = 8000,
		id = "Refinery",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(122157451184, --[[ModItemBuildCategory Default MeleePX ActionText |gender-variants]] "Repairing"),
		Description = T(661590417608, --[[ModItemBuildCategory Default MeleePX Description]] "Repair worn out melee weaponry."),
		DisplayName = T(819133072008, --[[ModItemBuildCategory Default MeleePX DisplayName]] "Melee"),
		Icon = "NanoTech/PXNaniteBlade.png",
		SortKey = 2,
		id = "MeleePX",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(687162826770, --[[ModItemBuildCategory Default RangedPX ActionText |gender-variants]] "Repairing"),
		Description = T(110933044267, --[[ModItemBuildCategory Default RangedPX Description]] "Repair worn out ranged weaponry."),
		DisplayName = T(825093729384, --[[ModItemBuildCategory Default RangedPX DisplayName]] "Ranged"),
		Icon = "NanoTech/PXAnnihilator.png",
		SortKey = 3,
		id = "RangedPX",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(257413352275, --[[ModItemBuildCategory Default ExchangePX ActionText |gender-variants]] "Exchange"),
		Description = T(946738023671, --[[ModItemBuildCategory Default ExchangePX Description]] "Exchange your worn out equipment for repair kits that can be used to fix up some new equipment!"),
		DisplayName = T(315015812633, --[[ModItemBuildCategory Default ExchangePX DisplayName]] "Exchange"),
		Icon = "General/RepairKitPXLarge.png",
		SortKey = 5,
		id = "ExchangePX",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(547775146862, --[[ModItemBuildCategory Default ArmorPX ActionText |gender-variants]] "Armor"),
		Description = T(805768856759, --[[ModItemBuildCategory Default ArmorPX Description]] "Use repair kits to refurbish some old or damaged armor."),
		DisplayName = T(274869331468, --[[ModItemBuildCategory Default ArmorPX DisplayName]] "Armor"),
		Icon = "CriminalActivity/CyberChest.png",
		SortKey = 4,
		id = "ArmorPX",
	}),
	PlaceObj('ModItemBuildCategory', {
		ActionText = T(793552316733, --[[ModItemBuildCategory Default Fuse ActionText |gender-variants]] "Ethically Experimenting"),
		Description = T(580729497378, --[[ModItemBuildCategory Default Fuse Description]] "Task the survivors to Fuse organs with metal"),
		DisplayName = T(595052888594, --[[ModItemBuildCategory Default Fuse DisplayName]] "Fuse"),
		Icon = "UI/Icons/Infopanels/device_print",
		SortKey = -4,
		id = "Fuse",
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_ProductionPX",
		BuildMenuIcon = "General/PrintedComponents.png",
		BuildMenuPos = 1,
		SortKey = 1,
		description = "",
		display_name = T(460340927600, --[[ModItemBuildMenuCategory sub_GalacticDevicesPX display_name]] "Galactic Devices"),
		id = "sub_GalacticDevicesPX",
		menu_description = "",
		menu_display_name = T(177751975565, --[[ModItemBuildMenuCategory sub_GalacticDevicesPX menu_display_name]] "Galactic Devices"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_DefensePX",
		BuildMenuIcon = "Trade/AdvCarbonTower.png",
		BuildMenuPos = 1,
		SortKey = 1,
		description = T(677200820112, --[[ModItemBuildMenuCategory sub_GalacticFortificationsPX description]] "Defensive walls and structures manufactured by Galacticans."),
		display_name = T(535083134958, --[[ModItemBuildMenuCategory sub_GalacticFortificationsPX display_name]] "Fortifications"),
		id = "sub_GalacticFortificationsPX",
		menu_description = T(374945508129, --[[ModItemBuildMenuCategory sub_GalacticFortificationsPX menu_description]] "Defensive walls and structures manufactured by Galacticans."),
		menu_display_name = T(641621048257, --[[ModItemBuildMenuCategory sub_GalacticFortificationsPX menu_display_name]] "Fortifications"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_PowerPX",
		BuildMenuIcon = "CriminalActivity/AlienCrystalGenerator.png",
		BuildMenuPos = 5,
		SortKey = 5,
		description = T(757243488977, --[[ModItemBuildMenuCategory sub_AlienPowerPX description]] "Power devices created using Alien technology.\n\n<style TechSubtitleBlue>Requires research in the tech tree to unlock.</style>"),
		display_name = T(131442819065, --[[ModItemBuildMenuCategory sub_AlienPowerPX display_name]] "Alien Power"),
		id = "sub_AlienPowerPX",
		menu_description = T(461790709155, --[[ModItemBuildMenuCategory sub_AlienPowerPX menu_description]] "Power devices created using Alien technology.\n\n<style TechSubtitleBlue>Requires research in the tech tree to unlock.</style>"),
		menu_display_name = T(969706890221, --[[ModItemBuildMenuCategory sub_AlienPowerPX menu_display_name]] "Alien Power"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_DefensePX",
		BuildMenuIcon = "CriminalActivity/CyberBlasterTurret.png",
		BuildMenuPos = 4,
		SortKey = 4,
		description = T(686221659899, --[[ModItemBuildMenuCategory sub_CyberTurretsPX description]] "Wireless/Wired Turrets created using Cyber technology. "),
		display_name = T(462676207426, --[[ModItemBuildMenuCategory sub_CyberTurretsPX display_name]] "Cyber Turrets"),
		id = "sub_CyberTurretsPX",
		menu_description = T(378200134167, --[[ModItemBuildMenuCategory sub_CyberTurretsPX menu_description]] "Wireless Turrets created using Cyber technology."),
		menu_display_name = T(837209057272, --[[ModItemBuildMenuCategory sub_CyberTurretsPX menu_display_name]] "Cyber Turrets"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "Trade/WirelessTurretsMissile.png",
		BuildMenuPos = 6,
		SortKey = 6,
		description = "",
		display_name = T(761097083462, --[[ModItemBuildMenuCategory sub_DefensePX display_name]] "Defense"),
		id = "sub_DefensePX",
		menu_description = "",
		menu_display_name = T(852082606831, --[[ModItemBuildMenuCategory sub_DefensePX menu_display_name]] "Defense"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_GalacticFortificationsPX",
		BuildMenuIcon = "Trade/AdvCarbonWall.png",
		BuildMenuPos = 2,
		SortKey = 2,
		description = T(111645649820, --[[ModItemBuildMenuCategory sub_GalacticFortificationsWallsPX description]] "Defensive walls manufactured by Galacticans."),
		display_name = T(219503232484, --[[ModItemBuildMenuCategory sub_GalacticFortificationsWallsPX display_name]] "Walls"),
		id = "sub_GalacticFortificationsWallsPX",
		menu_description = T(948613795812, --[[ModItemBuildMenuCategory sub_GalacticFortificationsWallsPX menu_description]] "Defensive walls manufactured by Galacticans."),
		menu_display_name = T(408905129389, --[[ModItemBuildMenuCategory sub_GalacticFortificationsWallsPX menu_display_name]] "Walls"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "CriminalActivity/CommandConsole.png",
		BuildMenuPos = 2,
		SortKey = 2,
		description = T(248522258849, --[[ModItemBuildMenuCategory sub_TerminalsPX description]] "Terminals, Consoles and Desks."),
		display_name = T(554136840664, --[[ModItemBuildMenuCategory sub_TerminalsPX display_name]] "Terminals"),
		id = "sub_TerminalsPX",
		menu_description = T(454772397876, --[[ModItemBuildMenuCategory sub_TerminalsPX menu_description]] "Terminals, Consoles and Desks."),
		menu_display_name = T(417364543146, --[[ModItemBuildMenuCategory sub_TerminalsPX menu_display_name]] "Terminals"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_GalacticFortificationsPX",
		BuildMenuIcon = "Trade/AdvCarbonGate.png",
		BuildMenuPos = 1,
		SortKey = 1,
		description = T(912433262964, --[[ModItemBuildMenuCategory sub_GalacticFortificationsGatesPX description]] "Defensive gates manufactured by Galacticans."),
		display_name = T(372096319387, --[[ModItemBuildMenuCategory sub_GalacticFortificationsGatesPX display_name]] "Gates"),
		id = "sub_GalacticFortificationsGatesPX",
		menu_description = T(527840312923, --[[ModItemBuildMenuCategory sub_GalacticFortificationsGatesPX menu_description]] "Defensive gates manufactured by Galacticans."),
		menu_display_name = T(746967141146, --[[ModItemBuildMenuCategory sub_GalacticFortificationsGatesPX menu_display_name]] "Gates"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_DefensePX",
		BuildMenuIcon = "General/GalacticSiren.png",
		BuildMenuPos = 50000,
		SortKey = 50000,
		description = T(463003558439, --[[ModItemBuildMenuCategory sub_DefenseDevices description]] "Misc devices used for defensive purposes."),
		display_name = T(309859613083, --[[ModItemBuildMenuCategory sub_DefenseDevices display_name]] "Devices"),
		id = "sub_DefenseDevices",
		menu_description = T(113630644850, --[[ModItemBuildMenuCategory sub_DefenseDevices menu_description]] "Misc devices used for defensive purposes."),
		menu_display_name = T(380719570987, --[[ModItemBuildMenuCategory sub_DefenseDevices menu_display_name]] "Devices"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "General/GalacticAnimalBedLarge.png",
		BuildMenuPos = 8,
		SortKey = 8,
		description = T(475779361935, --[[ModItemBuildMenuCategory sub_RanchingPX description]] "Advanced items and buildings for animals."),
		display_name = T(870469781122, --[[ModItemBuildMenuCategory sub_RanchingPX display_name]] "Ranching"),
		id = "sub_RanchingPX",
		menu_description = T(729407513272, --[[ModItemBuildMenuCategory sub_RanchingPX menu_description]] "Advanced items and buildings for animals."),
		menu_display_name = T(216377068715, --[[ModItemBuildMenuCategory sub_RanchingPX menu_display_name]] "Ranching"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "General/RingSculptureDecPX.png",
		BuildMenuPos = 9,
		SortKey = 9,
		description = T(441376376198, --[[ModItemBuildMenuCategory sub_DecorPX description]] "Objects and Buildings to spice up your colony with some much needed decorations."),
		display_name = T(892607872220, --[[ModItemBuildMenuCategory sub_DecorPX display_name]] "Decorations"),
		id = "sub_DecorPX",
		menu_description = "",
		menu_display_name = T(403920600718, --[[ModItemBuildMenuCategory sub_DecorPX menu_display_name]] "Decorations"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_DefensePX",
		BuildMenuIcon = "Trade/WirelessTurretsMissile.png",
		BuildMenuPos = 3,
		SortKey = 3,
		description = T(649370625872, --[[ModItemBuildMenuCategory sub_GalacticWirelessTurretsPX description]] "Wireless/Wired Defensive traps manufactured by Galacticans. Use power cells to function. Connection not required."),
		display_name = T(106065810808, --[[ModItemBuildMenuCategory sub_GalacticWirelessTurretsPX display_name]] "Galactic Turrets"),
		id = "sub_GalacticWirelessTurretsPX",
		menu_description = T(522444393510, --[[ModItemBuildMenuCategory sub_GalacticWirelessTurretsPX menu_description]] "Wireless/Wired Defensive traps manufactured by Galacticans. Use power cells to function. Connection not required."),
		menu_display_name = T(705746718373, --[[ModItemBuildMenuCategory sub_GalacticWirelessTurretsPX menu_display_name]] "Galactic Turrets"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "",
		BuildMenuIcon = "General/PXIconGeneral.png",
		BuildMenuPos = 100122,
		KeyBindable = true,
		SortKey = 100122,
		description = T(199076377148, --[[ModItemBuildMenuCategory ProjectX description]] "Schematics of buildings and devices obtained with the Project-X modification."),
		display_name = T(486518552271, --[[ModItemBuildMenuCategory ProjectX display_name]] "Project-X"),
		id = "ProjectX",
		menu_description = T(186349248166, --[[ModItemBuildMenuCategory ProjectX menu_description]] "Schematics of buildings and devices obtained with the Project-X modification."),
		menu_display_name = T(211659275208, --[[ModItemBuildMenuCategory ProjectX menu_display_name]] "Project-X"),
		menu_rollover_hint = "",
		shortcut_display_name = T(823672563833, --[[ModItemBuildMenuCategory ProjectX shortcut_display_name]] "Trade"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "CriminalActivity/CyberCrystalFarm.png",
		BuildMenuPos = 7,
		SortKey = 7,
		description = T(832833961146, --[[ModItemBuildMenuCategory sub_PlantsPX description]] "Plants and Crops that can be placed."),
		display_name = T(607477679800, --[[ModItemBuildMenuCategory sub_PlantsPX display_name]] "Plants"),
		id = "sub_PlantsPX",
		menu_description = T(532195367559, --[[ModItemBuildMenuCategory sub_PlantsPX menu_description]] "Plants and Crops that can be placed."),
		menu_display_name = T(387609348921, --[[ModItemBuildMenuCategory sub_PlantsPX menu_display_name]] "Plants"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "Trade/CategoryTrade.png",
		BuildMenuPos = 1,
		SortKey = 1,
		description = T(313561172342, --[[ModItemBuildMenuCategory sub_RelayPX description]] "General devices and schematics required for the Communications Relay."),
		display_name = T(953471793521, --[[ModItemBuildMenuCategory sub_RelayPX display_name]] "Relay"),
		id = "sub_RelayPX",
		menu_description = T(542160349994, --[[ModItemBuildMenuCategory sub_RelayPX menu_description]] "General devices and schematics required for the Communications Relay."),
		menu_display_name = T(155027457023, --[[ModItemBuildMenuCategory sub_RelayPX menu_display_name]] "Relay"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "CriminalActivity/AlienTurbine.png",
		BuildMenuPos = 4,
		SortKey = 4,
		description = T(740314703866, --[[ModItemBuildMenuCategory sub_PowerPX description]] "Devices that use power to function or that create power."),
		display_name = T(549631071828, --[[ModItemBuildMenuCategory sub_PowerPX display_name]] "Power"),
		id = "sub_PowerPX",
		menu_description = T(303893978007, --[[ModItemBuildMenuCategory sub_PowerPX menu_description]] "Devices that use power to function or that create power."),
		menu_display_name = T(832267387113, --[[ModItemBuildMenuCategory sub_PowerPX menu_display_name]] "Power"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightWhite.png",
		description = T(787289548240, --[[ModItemBuildMenuCategory sub_LightWhitePX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored white hue."),
		display_name = T(220880525169, --[[ModItemBuildMenuCategory sub_LightWhitePX display_name]] "Lights (White)"),
		id = "sub_LightWhitePX",
		menu_display_name = T(441618147433, --[[ModItemBuildMenuCategory sub_LightWhitePX menu_display_name]] "Lights (White)"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightYellow.png",
		BuildMenuPos = 4,
		SortKey = 4,
		description = T(298401921518, --[[ModItemBuildMenuCategory sub_LightYellowPX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored yellow hue."),
		display_name = T(998827838167, --[[ModItemBuildMenuCategory sub_LightYellowPX display_name]] "Lights (Yellow)"),
		id = "sub_LightYellowPX",
		menu_display_name = T(677481641218, --[[ModItemBuildMenuCategory sub_LightYellowPX menu_display_name]] "Lights (Yellow)"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_PowerPX",
		BuildMenuIcon = "CriminalActivity/CyberReactor.png",
		BuildMenuPos = 3,
		SortKey = 3,
		description = T(977239645456, --[[ModItemBuildMenuCategory sub_CyberPowerPX description]] "Power devices that are constructed using Cyber technology.\n\n<style TechSubtitleBlue>Requires research in the tech tree to unlock.</style>"),
		display_name = T(843417429600, --[[ModItemBuildMenuCategory sub_CyberPowerPX display_name]] "Cyber Power"),
		id = "sub_CyberPowerPX",
		menu_description = T(829356941500, --[[ModItemBuildMenuCategory sub_CyberPowerPX menu_description]] "Power devices that are constructed using Cyber technology.\n\n<style TechSubtitleBlue>Requires research in the tech tree to unlock.</style>"),
		menu_display_name = T(122622517500, --[[ModItemBuildMenuCategory sub_CyberPowerPX menu_display_name]] "Cyber Power"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "Trade/GalaxyCeilingLight.png",
		BuildMenuPos = 4,
		SortKey = 4,
		description = T(169732043243, --[[ModItemBuildMenuCategory sub_LightPX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source."),
		display_name = T(438505996310, --[[ModItemBuildMenuCategory sub_LightPX display_name]] "Lights"),
		id = "sub_LightPX",
		menu_display_name = T(529528861136, --[[ModItemBuildMenuCategory sub_LightPX menu_display_name]] "Lights"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_DefensePX",
		BuildMenuIcon = "CriminalActivity/AlienPlasmaTurret.png",
		BuildMenuPos = 5,
		SortKey = 5,
		description = T(561684885243, --[[ModItemBuildMenuCategory sub_AlienTurretsPX description]] "Turrets created using Alien technology."),
		display_name = T(610679226359, --[[ModItemBuildMenuCategory sub_AlienTurretsPX display_name]] "Alien Turrets"),
		id = "sub_AlienTurretsPX",
		menu_description = T(832318070291, --[[ModItemBuildMenuCategory sub_AlienTurretsPX menu_description]] "Turrets created using Alien technology."),
		menu_display_name = T(494397942106, --[[ModItemBuildMenuCategory sub_AlienTurretsPX menu_display_name]] "Alien Turrets"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightGreen.png",
		BuildMenuPos = 2,
		SortKey = 2,
		description = T(403830162624, --[[ModItemBuildMenuCategory sub_LightGreenPX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored green hue."),
		display_name = T(836195302858, --[[ModItemBuildMenuCategory sub_LightGreenPX display_name]] "Lights (Green)"),
		id = "sub_LightGreenPX",
		menu_display_name = T(625938008281, --[[ModItemBuildMenuCategory sub_LightGreenPX menu_display_name]] "Lights (Green)"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "General/LargeStorageCyber.png",
		BuildMenuPos = 3,
		SortKey = 3,
		description = T(421750584855, --[[ModItemBuildMenuCategory sub_StoragePX description]] "Storage Containers which are much larger in size and capacity, fitted with advanced technology beyond the standard storage devices found."),
		display_name = T(549138785231, --[[ModItemBuildMenuCategory sub_StoragePX display_name]] "Storage"),
		id = "sub_StoragePX",
		menu_description = T(650411684364, --[[ModItemBuildMenuCategory sub_StoragePX menu_description]] "Storage Containers which are much larger in size and capacity, fitted with advanced technology beyond the standard storage devices found."),
		menu_display_name = T(117494909105, --[[ModItemBuildMenuCategory sub_StoragePX menu_display_name]] "Storage"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/MedicBoxLarge.png",
		BuildMenuPos = 7,
		SortKey = 7,
		description = T(863786534374, --[[ModItemBuildMenuCategory sub_StoragePX_Medical description]] "Storage Containers specifically for medical purposes."),
		display_name = T(465562429332, --[[ModItemBuildMenuCategory sub_StoragePX_Medical display_name]] "Medical"),
		id = "sub_StoragePX_Medical",
		menu_description = T(772242665925, --[[ModItemBuildMenuCategory sub_StoragePX_Medical menu_description]] "Storage Containers specifically for medical purposes."),
		menu_display_name = T(623419078814, --[[ModItemBuildMenuCategory sub_StoragePX_Medical menu_display_name]] "Medical"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/CraftStorage.png",
		BuildMenuPos = 5,
		SortKey = 5,
		description = T(339178392983, --[[ModItemBuildMenuCategory sub_StoragePX_Crafting description]] "Storage Containers specifically for crafting materials."),
		display_name = T(469371025257, --[[ModItemBuildMenuCategory sub_StoragePX_Crafting display_name]] "Crafting"),
		id = "sub_StoragePX_Crafting",
		menu_description = T(129609938768, --[[ModItemBuildMenuCategory sub_StoragePX_Crafting menu_description]] "Storage Containers specifically for crafting materials."),
		menu_display_name = T(743945401188, --[[ModItemBuildMenuCategory sub_StoragePX_Crafting menu_display_name]] "Crafting"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/BPSafePX.png",
		BuildMenuPos = 99,
		SortKey = 99,
		description = T(684849579867, --[[ModItemBuildMenuCategory sub_StoragePX_Safes description]] "Storage Containers built to keep certain important objects safe."),
		display_name = T(242656591540, --[[ModItemBuildMenuCategory sub_StoragePX_Safes display_name]] "Safes"),
		id = "sub_StoragePX_Safes",
		menu_description = T(149229353206, --[[ModItemBuildMenuCategory sub_StoragePX_Safes menu_description]] "Storage Containers built to keep certain important objects safe."),
		menu_display_name = T(217823120332, --[[ModItemBuildMenuCategory sub_StoragePX_Safes menu_display_name]] "Safes"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/TechStorage01.png",
		BuildMenuPos = 5,
		SortKey = 5,
		description = T(758233012106, --[[ModItemBuildMenuCategory sub_StoragePX_Tech description]] "Storage Containers specifically built for tech items."),
		display_name = T(751819644777, --[[ModItemBuildMenuCategory sub_StoragePX_Tech display_name]] "Tech"),
		id = "sub_StoragePX_Tech",
		menu_description = T(523645399110, --[[ModItemBuildMenuCategory sub_StoragePX_Tech menu_description]] "Storage Containers specifically built for tech items."),
		menu_display_name = T(269851381297, --[[ModItemBuildMenuCategory sub_StoragePX_Tech menu_display_name]] "Tech"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX_Safes",
		BuildMenuIcon = "General/GalacticSafe.png",
		BuildMenuPos = 99,
		SortKey = 99,
		description = T(188951961668, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Galacticoins description]] "Safes for Galacticoins."),
		display_name = T(992440030112, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Galacticoins display_name]] "Galacticoins"),
		id = "sub_StoragePX_Safes_Galacticoins",
		menu_description = T(455871725856, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Galacticoins menu_description]] "Safes for Galacticoins."),
		menu_display_name = T(188251717434, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Galacticoins menu_display_name]] "Galacticoins"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX_Safes",
		BuildMenuIcon = "General/SafeBoxPX.png",
		BuildMenuPos = 100,
		SortKey = 100,
		description = T(569601386678, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Blueprints description]] "Safes for Blueprints and Schematics."),
		display_name = T(982598910005, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Blueprints display_name]] "Blueprints"),
		id = "sub_StoragePX_Safes_Blueprints",
		menu_description = T(180692250517, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Blueprints menu_description]] "Safes for Blueprints and Schematics."),
		menu_display_name = T(968710257734, --[[ModItemBuildMenuCategory sub_StoragePX_Safes_Blueprints menu_display_name]] "Blueprints"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/OrganFridge2.png",
		BuildMenuPos = 6,
		SortKey = 6,
		description = T(684383735229, --[[ModItemBuildMenuCategory sub_StoragePX_Fridges description]] "Fridges and Freezers for storing specific items at frozen states."),
		display_name = T(372605572360, --[[ModItemBuildMenuCategory sub_StoragePX_Fridges display_name]] "Cold Storages"),
		id = "sub_StoragePX_Fridges",
		menu_description = T(858668075790, --[[ModItemBuildMenuCategory sub_StoragePX_Fridges menu_description]] "Fridges and Freezers for storing specific items at frozen states."),
		menu_display_name = T(532195725599, --[[ModItemBuildMenuCategory sub_StoragePX_Fridges menu_display_name]] "Cold Storages"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/ConstructionBoxSmall.png",
		BuildMenuPos = 3,
		SortKey = 3,
		description = T(725455145527, --[[ModItemBuildMenuCategory sub_StoragePX_Construction description]] "Storage Containers specifically for construction materials."),
		display_name = T(318977327295, --[[ModItemBuildMenuCategory sub_StoragePX_Construction display_name]] "Construction"),
		id = "sub_StoragePX_Construction",
		menu_description = T(635359816561, --[[ModItemBuildMenuCategory sub_StoragePX_Construction menu_description]] "Storage Containers specifically for construction materials."),
		menu_display_name = T(928849076026, --[[ModItemBuildMenuCategory sub_StoragePX_Construction menu_display_name]] "Construction"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "ProjectX",
		BuildMenuIcon = "General/FabricatorPX.png",
		BuildMenuPos = 5,
		SortKey = 5,
		description = "",
		display_name = T(105143071243, --[[ModItemBuildMenuCategory sub_ProductionPX display_name]] "Production"),
		id = "sub_ProductionPX",
		menu_description = "",
		menu_display_name = T(350023216435, --[[ModItemBuildMenuCategory sub_ProductionPX menu_display_name]] "Production"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightPurple.png",
		BuildMenuPos = 6,
		SortKey = 6,
		description = T(682100709217, --[[ModItemBuildMenuCategory sub_LightPurplePX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored purple hue."),
		display_name = T(754802730076, --[[ModItemBuildMenuCategory sub_LightPurplePX display_name]] "Lights (Purple)"),
		id = "sub_LightPurplePX",
		menu_display_name = T(109961297956, --[[ModItemBuildMenuCategory sub_LightPurplePX menu_display_name]] "Lights (Purple)"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightRed.png",
		BuildMenuPos = 3,
		SortKey = 3,
		description = T(346447026873, --[[ModItemBuildMenuCategory sub_LightRedPX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored red hue."),
		display_name = T(308813935265, --[[ModItemBuildMenuCategory sub_LightRedPX display_name]] "Lights (Red)"),
		id = "sub_LightRedPX",
		menu_display_name = T(780991516428, --[[ModItemBuildMenuCategory sub_LightRedPX menu_display_name]] "Lights (Red)"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_PowerPX",
		BuildMenuIcon = "General/Production.png",
		description = "",
		display_name = T(673381257787, --[[ModItemBuildMenuCategory sub_GalacticPowerPX display_name]] "Galactic Power"),
		id = "sub_GalacticPowerPX",
		menu_description = "",
		menu_display_name = T(623041856525, --[[ModItemBuildMenuCategory sub_GalacticPowerPX menu_display_name]] "Galactic Power"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_DefensePX",
		BuildMenuIcon = "Trade/TrapExplosive2.png",
		BuildMenuPos = 2,
		SortKey = 2,
		description = T(484609187690, --[[ModItemBuildMenuCategory sub_GalacticFortificationsTrapsPX description]] "Defensive traps manufactured by Galacticans."),
		display_name = T(640217710410, --[[ModItemBuildMenuCategory sub_GalacticFortificationsTrapsPX display_name]] "Traps"),
		id = "sub_GalacticFortificationsTrapsPX",
		menu_description = T(619833797441, --[[ModItemBuildMenuCategory sub_GalacticFortificationsTrapsPX menu_description]] "Defensive traps manufactured by Galacticans."),
		menu_display_name = T(530518275109, --[[ModItemBuildMenuCategory sub_GalacticFortificationsTrapsPX menu_display_name]] "Traps"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLight.png",
		BuildMenuPos = 1,
		SortKey = 1,
		description = T(935174602990, --[[ModItemBuildMenuCategory sub_LightBluePX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored blue hue."),
		display_name = T(156467317059, --[[ModItemBuildMenuCategory sub_LightBluePX display_name]] "Lights (Blue)"),
		id = "sub_LightBluePX",
		menu_display_name = T(407981707514, --[[ModItemBuildMenuCategory sub_LightBluePX menu_display_name]] "Lights (Blue)"),
	}),
	PlaceObj('ModItemBuildMenuCategory', {
		BuildMenuCategory = "sub_LightPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightOrange.png",
		BuildMenuPos = 5,
		SortKey = 5,
		description = T(149633038326, --[[ModItemBuildMenuCategory sub_LightOrangePX description]] "Galactic Lights, enhanced range, colors and less electricity drainage. Has light indicators to show range of light source. Colored orange hue."),
		display_name = T(546865711718, --[[ModItemBuildMenuCategory sub_LightOrangePX display_name]] "Lights (Orange)"),
		id = "sub_LightOrangePX",
		menu_display_name = T(560848670887, --[[ModItemBuildMenuCategory sub_LightOrangePX menu_display_name]] "Lights (Orange)"),
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Buildings",
	'NameColor', RGBA(49, 171, 28, 255),
}, {
	PlaceObj('ModItemBuildingCompositeDef', {
		AddUseTimeWhenActive = false,
		AttackAttractionGetter = function (self)
			if self.working then
				return 150
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_DefenseDevices",
		BuildMenuIcon = "General/SirenPX.png",
		BuildMenuPos = 10,
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 20,
			energy = 20,
			gas = 20,
			pacify = 20,
			piercing = 20,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MaxHealth = 500000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 48000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 4800000,
		PowerComponent = true,
		PowerConsumption = 4000,
		ProximitySwitchActivateForEach = true,
		ProximitySwitchColor = 4290331364,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return BaseAnimalLure.ProximitySwitchFilter(self, obj) and obj.CombatGroup ~= self.CombatGroup
				and obj.CombatGroup ~= "ScavengerBirds"
				and (obj.BypassTrapsChance == 0 or self:StaticRandom(obj, 100) > obj.BypassTrapsChance)
		end,
		ProximitySwitchRange = 70000,
		TurnOffDelay = 0,
		TurnOnDelay = 0,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 1005,
		attack_weapon = "GalacticSiren",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 30000,
		}),
		construction_points = 10000,
		damage_reduction = {
			blunt = 20,
			energy = 20,
			gas = 20,
			pacify = 20,
			piercing = 20,
		},
		description = T(961784860458, --[[ModItemBuildingCompositeDef GalacticSiren description]] "A loud device that attracts hostile animals when working. Has increased range and effect."),
		display_name = T(585749880366, --[[ModItemBuildingCompositeDef GalacticSiren display_name]] "Galactic Siren"),
		display_name_pl = T(294116938771, --[[ModItemBuildingCompositeDef GalacticSiren display_name_pl]] "Galactic Sirens"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "PXSiren",
		group = "Defense",
		id = "GalacticSiren",
		load_anim_handsclose = "standing_PickUp_HandsClose",
		lock_block_box = box(-1800, -1800, 0, 1200, 1800, 8400),
		max_depth = 200,
		max_elevate = 200,
		object_class = "BaseAnimalLure",
		progress = 2000,
		snap_to_passability = true,
		soil_border = 600,
		terrain_change = "soil",
		unload_anim_handsclose = "standing_DropDown_HandsClose",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberPowerPX",
		BuildMenuIcon = "CriminalActivity/CyberAirCon.png",
		BuildMenuPos = 90,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasHeatIndicators = true,
		HasSmartConnection = true,
		Health = 400000,
		HeatIndicatorAngle = 10800,
		HeatIndicatorOffset = point(-500, 0, -1000),
		HeatIndicatorScale = 200,
		HeatIndicatorSpot = "Heatexhaust",
		HeatSourceComponent = true,
		IgnoredObstacles = {
			"RoomWallPiece",
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberAirCon",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 400000,
		MaxTimeToMalfunction = 76800000,
		MinConstructionSkill = 6,
		MinTimeToMalfunction = 28800000,
		MovingAnimHigh = true,
		MovingOffsetZ = -1000,
		PowerComponent = true,
		PowerConsumption = 30000,
		PowerOutput = 10000,
		RadiationRange = 30000,
		SourceType = "heatpump",
		TargetTemperature = 24000,
		access_range = 2400,
		affected_by_disasters = set( "SolarFlare" ),
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCrystal = 1000,
			Metal = 20000,
		}),
		construction_points = 45000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
				'room_snap_side_spot', "Heatsource",
			}),
		},
		description = T(496952824544, --[[ModItemBuildingCompositeDef CyberAirCon description]] "Maintains room temperature to a desired level. Crafted from Cyber materials which enhance the range, effect and overall efficiency of this air conditioning unit.\n\n<center><style red>Contraband</style>"),
		display_name = T(511059626222, --[[ModItemBuildingCompositeDef CyberAirCon display_name]] "Cyber Air Conditioner"),
		display_name_pl = T(708751462825, --[[ModItemBuildingCompositeDef CyberAirCon display_name_pl]] "Cyber Air Conditioner"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "AirConditioner",
		group = "Power",
		id = "CyberAirCon",
		labels = {
			"CPUCoreDevice",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-400, -600, 1750, 400, 600, 2450),
		menu_description = T(371002271057, --[[ModItemBuildingCompositeDef CyberAirCon menu_description]] "Maintains room temperature to a desired level. Crafted from Cyber materials which enhance the range, effect and overall efficiency of this air conditioning unit."),
		menu_display_name = T(433305242824, --[[ModItemBuildingCompositeDef CyberAirCon menu_display_name]] "Cyber Air Conditioner"),
		object_class = "AirConditionerBase",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
		}),
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightYellowPX",
		BuildMenuIcon = "Trade/YellowTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(529991816985, --[[ModItemBuildingCompositeDef YellowFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(290120039602, --[[ModItemBuildingCompositeDef YellowFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(676649474148, --[[ModItemBuildingCompositeDef YellowFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "YellowFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Fridges",
		BuildMenuIcon = "General/Storage1.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 300000,
		IsPowerConsumer = true,
		MaxHealth = 300000,
		PowerComponent = true,
		PowerConsumption = 8000,
		StorageDepotComponent = true,
		StorageTargetTemperature = 4000,
		TempChangeRateOff = 3000,
		TempChangeRateOn = 4000,
		accepted_res = {
			"Food",
			"FoodProcessed",
			"Drink",
			"FoodRaw_Other",
			"AndroidFood",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 1000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(432442376874, --[[ModItemBuildingCompositeDef MiniFridgePX description]] "Provides small storage for food items at a negative temperature to prevent decay."),
		display_name = T(530386689007, --[[ModItemBuildingCompositeDef MiniFridgePX display_name]] "Mini-Fridge Container"),
		display_name_pl = T(515048449042, --[[ModItemBuildingCompositeDef MiniFridgePX display_name_pl]] "Mini-Fridge Container"),
		display_name_short = T(187592487813, --[[ModItemBuildingCompositeDef MiniFridgePX display_name_short]] "Mini-Fridge Container"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXGalacticCrate",
		group = "Storages",
		id = "MiniFridgePX",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-500, -400, 0, 600, 400, 1750),
		menu_display_name = T(473042406967, --[[ModItemBuildingCompositeDef MiniFridgePX menu_display_name]] "Mini-Fridge Container"),
		object_class = "Building",
		stack_count = 100,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Fridges",
		BuildMenuIcon = "General/Storage1.png",
		BuildMenuPos = 7,
		CanWorkWithoutPower = true,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		HasSmartConnection = true,
		Health = 300000,
		IsPowerGenerator = true,
		MaxHealth = 300000,
		PowerComponent = true,
		PowerSkipsStateChange = true,
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberOrganStorage",
			}),
		},
		Production = 300000,
		StorageDepotComponent = true,
		StorageTargetTemperature = -20000,
		TempChangeRateOff = 2000,
		TempChangeRateOn = 5000,
		accepted_res = {
			"base_organs",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		can_steal_from = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			AlienElectronics = 5000,
			CarbonNanotubes = 10000,
			CyberCrystal = 5000,
			Metal = 10000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(924015093568, --[[ModItemBuildingCompositeDef MiniOrganFridgePX description]] "Able to compress and store Organs. With cyber crystals and alien electronics triggering the organs mutation capabilities. Rather than let our organs turn into whatever they want, we capture the energy and are able to push it out to our <em>electrical grid</em>!"),
		display_name = T(500414707899, --[[ModItemBuildingCompositeDef MiniOrganFridgePX display_name]] "Organ Compression PSU"),
		display_name_pl = T(632229193383, --[[ModItemBuildingCompositeDef MiniOrganFridgePX display_name_pl]] "Mini-Fridge Container"),
		display_name_short = T(277626424510, --[[ModItemBuildingCompositeDef MiniOrganFridgePX display_name_short]] "Mini-Fridge Container"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXGalacticCrate",
		group = "Storages",
		id = "MiniOrganFridgePX",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-500, -400, 0, 600, 400, 1750),
		menu_display_name = T(668891650347, --[[ModItemBuildingCompositeDef MiniOrganFridgePX menu_display_name]] "Organ Condenser"),
		object_class = "Building",
		show_amount_UI = true,
		stack_count = 50,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsMissile.png",
		BuildMenuPos = 20,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerConsumption = 30000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 60000,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retry = true,
		attack_weapon = "GalacticIncendiaryTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 100000,
			PowerCell = 1000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(384050340106, --[[ModItemBuildingCompositeDef TurretGalacticIncendiary description]] "<style blue>Wireless Incendiary Turret</style>\nWireless Automated defense station. Shoots Incendiary Missiles at all targets in its range. Does not require a target zone has a 360 area of vision. Can cause <color TextNegative>burning</color> and <color TextNegative>fire spread</color> across a 10 meter zone.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(761147942446, --[[ModItemBuildingCompositeDef TurretGalacticIncendiary display_name]] "Wireless Incendiary Turret"),
		display_name_pl = T(796574652602, --[[ModItemBuildingCompositeDef TurretGalacticIncendiary display_name_pl]] "Wireless Incendiary Turret"),
		display_name_short = T(413260526560, --[[ModItemBuildingCompositeDef TurretGalacticIncendiary display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		hit_chance_bonus = 100,
		id = "TurretGalacticIncendiary",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-600, -600, 0, 600, 600, 7000),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsMissile.png",
		BuildMenuPos = 20,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerComponent = true,
		PowerConsumption = 40000,
		RoomPlacement = "outdoors",
		SightRange = 60000,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retry = true,
		attack_weapon = "GalacticIncendiaryTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 100000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(284058077395, --[[ModItemBuildingCompositeDef TurretGalacticIncendiaryWired description]] "<style blue>Wired Incendiary Turret</style>\nWired Automated defense station. Shoots Incendiary Missiles at all targets in its range. Does not require a target zone has a 360 area of vision. Can cause <color TextNegative>burning</color> and <color TextNegative>fire spread</color> across a 10 meter zone.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(318715555870, --[[ModItemBuildingCompositeDef TurretGalacticIncendiaryWired display_name]] "Wired Incendiary Turret"),
		display_name_pl = T(196225278155, --[[ModItemBuildingCompositeDef TurretGalacticIncendiaryWired display_name_pl]] "Wired Incendiary Turret"),
		display_name_short = T(850411301766, --[[ModItemBuildingCompositeDef TurretGalacticIncendiaryWired display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		hit_chance_bonus = 100,
		id = "TurretGalacticIncendiaryWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-600, -600, 0, 600, 600, 7000),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightGreenPX",
		BuildMenuIcon = "Trade/GreenTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(945191491290, --[[ModItemBuildingCompositeDef GreenFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(858557002714, --[[ModItemBuildingCompositeDef GreenFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(457841313248, --[[ModItemBuildingCompositeDef GreenFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "GreenFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_AlienPowerPX",
		BuildMenuIcon = "General/Gen1.png",
		BuildMenuPos = 9,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		FullWindSpeed = 60,
		HasSmartConnection = true,
		Health = 1200000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienCrystalGenerator",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1200000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 201600000,
		MinConstructionSkill = 9,
		MinMalfunctionDamage = 30,
		MinTimeToMalfunction = 67200000,
		MinWindSpeed = 10,
		PowerComponent = true,
		Production = 5000000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_groups = {
			"WindTurbine_Carbon",
		},
		composite_part_names = {
			"Base",
			"Propeller",
		},
		composite_part_parent = {
			Propeller = "Base",
		},
		composite_part_spots = {
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			AlienCore = 2000,
			AlienCrystal = 10000,
			AlienProcessor = 2000,
			CarbonNanotubes = 200000,
		}),
		construction_points = 40000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(259419572369, --[[ModItemBuildingCompositeDef AlienCrystalGenerator description]] "Generates an excessively large amount of <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> while depleting a Alien Crystal. Can produce electricity for a year. Has increased health duration and is more durable. However is prone to malfunction more frequently and requires regular maintainence. \n\n<center><style red>Contraband</style>"),
		display_name = T(911971397764, --[[ModItemBuildingCompositeDef AlienCrystalGenerator display_name]] "Alien Crystal Generator"),
		display_name_pl = T(662722511755, --[[ModItemBuildingCompositeDef AlienCrystalGenerator display_name_pl]] "Alien Crystal Generator"),
		display_name_short = T(532872533474, --[[ModItemBuildingCompositeDef AlienCrystalGenerator display_name_short]] "Alien Generator"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXBatteryGen",
		group = "Power",
		id = "AlienCrystalGenerator",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-2000, -800, 0, 2000, 800, 700),
		menu_description = T(639434529062, --[[ModItemBuildingCompositeDef AlienCrystalGenerator menu_description]] "A generator powered by Alien Crystals, I mean... what could go wrong? This has never been attempted before, and i'm assuming there is a good reason why. But I can imagine that such a majestic piece of technology would definitely power the entire planet for a long time, the only downside if ofcourse... the expensive resources needed to even obtain Alien Crystals."),
		menu_display_name = T(714348152011, --[[ModItemBuildingCompositeDef AlienCrystalGenerator menu_display_name]] "Alien Crystal Generator"),
		object_class = "Building",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 10000,
			Metal = 60000,
			PowerCell = 3000,
			ScrapElectronics = 10000,
		}),
		res_consumed = "AlienCrystal",
		res_operate_time = 46080000,
		res_request_threshold = 1,
		res_start_fueled = true,
		res_stored = 1000,
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 10000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Crafting",
		BuildMenuIcon = "General/CraftStorage.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 500000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 500000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"CraftingResourcesBulk",
			"FabricsAllPlusRaw",
			"UnfinishedItem",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(235283585990, --[[ModItemBuildingCompositeDef CraftStoragePX description]] "Provides small storage space for crafting and fabric items. Can be stolen. Has increased durability."),
		display_name = T(517775274125, --[[ModItemBuildingCompositeDef CraftStoragePX display_name]] "Small Craft Storage"),
		display_name_pl = T(681918163979, --[[ModItemBuildingCompositeDef CraftStoragePX display_name_pl]] "Small"),
		display_name_short = T(552426996456, --[[ModItemBuildingCompositeDef CraftStoragePX display_name_short]] "Small"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXCraftStorage1",
		group = "Storages",
		id = "CraftStoragePX",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-300, -600, 0, 600, 600, 1750),
		menu_display_name = T(893630897684, --[[ModItemBuildingCompositeDef CraftStoragePX menu_display_name]] "Small"),
		object_class = "Building",
		stack_count = 100,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Crafting",
		BuildMenuIcon = "General/CraftStorageMed.png",
		BuildMenuPos = 2,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 750000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 750000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"CraftingResourcesBulk",
			"FabricsAllPlusRaw",
			"UnfinishedItem",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 40000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(393469861531, --[[ModItemBuildingCompositeDef CraftStoragePX_Medium description]] "Provides Medium storage space for crafting and fabric items. Can be stolen. Has increased durability."),
		display_name = T(610419804235, --[[ModItemBuildingCompositeDef CraftStoragePX_Medium display_name]] "Medium Craft Storage"),
		display_name_pl = T(525502802223, --[[ModItemBuildingCompositeDef CraftStoragePX_Medium display_name_pl]] "Medium"),
		display_name_short = T(355596751285, --[[ModItemBuildingCompositeDef CraftStoragePX_Medium display_name_short]] "Medium"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "LCraftingCratePX",
		group = "Storages",
		id = "CraftStoragePX_Medium",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-900, -600, 0, 900, 600, 1400),
		menu_display_name = T(616336696738, --[[ModItemBuildingCompositeDef CraftStoragePX_Medium menu_display_name]] "Medium"),
		object_class = "Building",
		stack_count = 250,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticPowerPX",
		BuildMenuIcon = "General/Gen3.png",
		BuildMenuPos = 9,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal",
		HasSmartConnection = true,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxTimeToMalfunction = 38400000,
		MinConstructionSkill = 4,
		PowerComponent = true,
		PowerConsumption = 30000,
		Production = 50000,
		access_range = 2400,
		affected_by_disasters = set( "SolarFlare" ),
		attack_attraction = 20,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 50000,
			ScrapElectronics = 5000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 30000,
			ScrapElectronics = 3000,
		}),
		description = T(932189388885, --[[ModItemBuildingCompositeDef CarbonGenerator description]] "Generates a small amount of <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> without any fuel requirement 24 hours a day. \n\nAn efficient supply of electricity to help off-set solar panels and wind turbines that do not produce during certain times."),
		display_name = T(833924322503, --[[ModItemBuildingCompositeDef CarbonGenerator display_name]] "Stirling Generator"),
		display_name_pl = T(174489296852, --[[ModItemBuildingCompositeDef CarbonGenerator display_name_pl]] "Stirling Generator"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CarbonGeneratorPX",
		group = "Power",
		id = "CarbonGenerator",
		interfaces = {
			"",
		},
		labels = {
			"PowerSources",
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-300, -300, 0, 300, 300, 700),
		menu_display_name = T(550671771879, --[[ModItemBuildingCompositeDef CarbonGenerator menu_display_name]] "Stirling Generator"),
		object_class = "Building",
		off_when_idle = true,
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 10000,
		}),
		res_consumed = "CarbonNanotubes",
		res_operate_time = -40000,
		res_request_threshold = 0,
		res_start_fueled = true,
		res_stored = -1000,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 10000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticDevicesPX",
		BuildMenuIcon = "General/FabricatorPX.png",
		BuildMenuPos = 15,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal",
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPrinter",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1000000,
		MaxTimeToMalfunction = 48000000,
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 250000,
		ProductionDeviceComponent = true,
		access_range = 2400,
		affected_by_disasters = set( "SolarFlare" ),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 10000,
			CarbonNanotubes = 200000,
			MatterGenerator = 3000,
			Metal = 200000,
		}),
		construction_points = 300000,
		damage_reduction = {
			blunt = 50,
			energy = 50,
			gas = 50,
			pacify = 50,
			piercing = 50,
		},
		description = T(248287721917, --[[ModItemBuildingCompositeDef GalacticFabricator description]] "Most commonly found in Galactic Military Outposts, these devices are capable of producing many much required resources, materials and even edibles. The technology is very expensive and has been restricted for Galactic Authorities use only due to how limited the supply is. Takes less resources and time to create items than the standard printers and has a higher durability, however consumes a large amount of electricity to use."),
		display_name = T(854039547404, --[[ModItemBuildingCompositeDef GalacticFabricator display_name]] "Galactic Fabricator"),
		display_name_pl = T(163556429752, --[[ModItemBuildingCompositeDef GalacticFabricator display_name_pl]] "Galactic Fabricator"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXFabricatorGalac",
		group = "Devices",
		id = "GalacticFabricator",
		interfaces = {
			"GalacticPrinter",
		},
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1800, -900, 0, 1800, 900, 4550),
		menu_description = T(990397020235, --[[ModItemBuildingCompositeDef GalacticFabricator menu_description]] "Most commonly found in Galactic Military Outposts, these devices are capable of producing many much required resources, materials and even edibles. The technology is very expensive and has been restricted for Galactic Authorities use only due to how limited the supply is. Takes less resources and time to create items than the standard printers and has a higher durability, however consumes a large amount of electricity to use."),
		menu_display_name = T(706014864055, --[[ModItemBuildingCompositeDef GalacticFabricator menu_display_name]] "Galactic Fabricator"),
		object_class = "Building",
		off_when_idle = true,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 100000,
		}),
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AOEFilter = function (obj, self)
			return IsKindOf(obj, "UnitHealth") and obj.CombatGroup ~= self.CombatGroup
		end,
		AddUseTimeWhenActive = false,
		BuildMenuCategory = "sub_GalacticFortificationsTrapsPX",
		BuildMenuIcon = "Trade/TrapExplosive6.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		Health = 25000,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketTraps",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 25000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 96000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 9600000,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return obj:CanMove() and obj.CombatGroup ~= self.CombatGroup and obj.CombatGroup ~= "ScavengerBirds" and obj:IsOnGround()
		end,
		ProximitySwitchRange = 600,
		ProximitySwitchTargetSpot = "Foot",
		access_range = 2400,
		apply_res_reqs = false,
		attack_weapon = "LethalityMine",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			LiquidFuel = 15000,
			Metal = 30000,
		}),
		construction_points = 10000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 5000,
		}),
		description = T(368257869043, --[[ModItemBuildingCompositeDef LethalityMine description]] "Lethality mine is an upgraded version of the standard mine, except this one has been designed to absolutely destroy the target without any humane care at all.\n\nStats:\n<style TechSubtitleBlue>- 2 Meter Range.\n- 20% Health Conditions Chance (Burning, Explosion Effect, Torn Off Skin and Lung Damage)</style>\n\n<style red>Element:</style> \n<color TextPositive>Blunt</color> | <color TextPositive>Piercing</color> | <color TextNegative>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(543122943142, --[[ModItemBuildingCompositeDef LethalityMine display_name]] "Lethality Mine"),
		display_name_pl = T(390219853181, --[[ModItemBuildingCompositeDef LethalityMine display_name_pl]] "Lethality Mine"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
			RoomsOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Trap_LandMine",
		forbid_clip_plane = true,
		group = "Defense",
		id = "LethalityMine",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -450, 0, 450, 450, 0),
		lock_pass_box = box(-600, -600, 0, 600, 600, 700),
		max_depth = 200,
		max_elevate = 200,
		menu_display_name = T(565948749831, --[[ModItemBuildingCompositeDef LethalityMine menu_display_name]] "Lethality Mine"),
		menu_rollover_hint = T(813333036818, --[[ModItemBuildingCompositeDef LethalityMine menu_rollover_hint]] "Lethality Mine"),
		multi_placement = true,
		multi_placement_name = T(151894929900, --[[ModItemBuildingCompositeDef LethalityMine multi_placement_name]] "mine"),
		multi_placement_name_pl = T(201147480351, --[[ModItemBuildingCompositeDef LethalityMine multi_placement_name_pl]] "mines"),
		object_class = "SingleUseTrap",
		orient_to_terrain = true,
		progress = 2000,
		range_tags = {
			"combat",
		},
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
		}),
		require_surfaces = false,
		snap_to_passability = true,
		turn_off_anim = "standing_DropDown_Hands_Low",
		turn_off_description = T(495353547617, --[[ModItemBuildingCompositeDef LethalityMine turn_off_description]] "Task the survivors to disarm this trap."),
		turn_off_icon = "UI/Icons/Infopanels/trap_disarm",
		turn_off_text = T(328497391536, --[[ModItemBuildingCompositeDef LethalityMine turn_off_text |gender-variants]] "Disarm"),
		turn_on_anim = "standing_DropDown_Hands_Low",
		turn_on_description = T(613863138980, --[[ModItemBuildingCompositeDef LethalityMine turn_on_description]] "Task the survivors to arm this trap."),
		turn_on_icon = "UI/Icons/Infopanels/trap_arm",
		turn_on_text = T(667839128760, --[[ModItemBuildingCompositeDef LethalityMine turn_on_text |gender-variants]] "Arm"),
		turned_off_warning = "Disarmed",
		turning_off_text = T(242896200658, --[[ModItemBuildingCompositeDef LethalityMine turning_off_text]] "Waiting to be disarmed"),
		turning_on_text = T(847661774043, --[[ModItemBuildingCompositeDef LethalityMine turning_on_text]] "Waiting to be armed"),
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "UI/Icons/Build Menu/storage_pile",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Dirt",
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		VisualStorageComponent = true,
		accepted_res = {
			"Organs",
			"Blueprint",
			"CyberBlueprint",
			"AlienBlueprint",
			"TradingSchematic",
		},
		access_range = 2400,
		adjust_waypoint_z = true,
		affected_by_disasters = set(),
		attack_attraction = 40,
		can_be_moved = false,
		construction_points = 200,
		description = T(755224839618, --[[ModItemBuildingCompositeDef PXPiles description]] "Provides a temporary storage for organs and blueprints until you have unlocked the Lab Fridge and Blueprint safe."),
		display_name = T(962075289302, --[[ModItemBuildingCompositeDef PXPiles display_name]] "Project-X Stockpile"),
		display_name_pl = T(687995948099, --[[ModItemBuildingCompositeDef PXPiles display_name_pl]] "Project-X Stockpile"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		forbid_clip_plane = true,
		group = "Storages",
		id = "PXPiles",
		is_visual_depot = true,
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-600, -600, 0, 600, 600, 700),
		menu_display_name = T(323336066541, --[[ModItemBuildingCompositeDef PXPiles menu_display_name]] "Project-X Stockpile"),
		object_class = "StoragePile",
		res_entity_for_stack = true,
		stack_count = 4,
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightOrangePX",
		BuildMenuIcon = "Trade/OrangeTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(488916059196, --[[ModItemBuildingCompositeDef OrangeFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(743667010060, --[[ModItemBuildingCompositeDef OrangeFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(856497835022, --[[ModItemBuildingCompositeDef OrangeFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "OrangeFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BrokenStateAt = 20,
		BuildMenuCategory = "sub_CyberTurretsPX",
		BuildMenuIcon = "CriminalActivity/CyberBlasterTurret.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		DistressCallRange = 25000,
		DistressCallRangeFirst = 25000,
		HasSmartConnection = true,
		Health = 800000,
		HitNegationChance = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurrets",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 800000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 240000000,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 115200000,
		PowerConsumption = 100000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 80000,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retry = true,
		attack_weapon = "CyberBlasterTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCore = 1000,
			CyberCrystal = 5000,
			CyberProcessor = 3000,
			Metal = 100000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		description = T(404153295419, --[[ModItemBuildingCompositeDef CyberBlasterTurret description]] "<style blue>Cyber Blaster Turret</style>\nWireless Cyber Energy Enhanced Automated Blaster Turret. Capable of emitting a bolt of cyber energy at its targets with very fast speed between firing sequence. Has poor accuracy but high shots per second ratio. Cyber material is immune to all weather conditions and more resistant. Has increased health. Is prone to malfunctions. Can hit flying targets. Fitted with <color TextPositive>heat seeking vision</color> able to see in the dark. Functions from Cyber Cores and not electricity. No power supply required. Small damage but rapid projectile output.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextPositive>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(214222091716, --[[ModItemBuildingCompositeDef CyberBlasterTurret display_name]] "Cyber Blaster Turret"),
		display_name_pl = T(587348893202, --[[ModItemBuildingCompositeDef CyberBlasterTurret display_name_pl]] "Cyber Blaster Turret"),
		display_name_short = T(915750127525, --[[ModItemBuildingCompositeDef CyberBlasterTurret display_name_short]] "Cyber Blaster Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "CyberBlasterTurret",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(695578075484, --[[ModItemBuildingCompositeDef CyberBlasterTurret menu_display_name]] "Cyber Blaster Turret"),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 50000,
		}),
		res_consumed = "CyberCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = false,
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BrokenStateAt = 20,
		BuildMenuCategory = "sub_CyberTurretsPX",
		BuildMenuIcon = "CriminalActivity/CyberBlasterTurret.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		DistressCallRange = 25000,
		DistressCallRangeFirst = 25000,
		HasSmartConnection = true,
		Health = 800000,
		HitNegationChance = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurrets",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 800000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 240000000,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 115200000,
		PowerComponent = true,
		PowerConsumption = 100000,
		RoomPlacement = "outdoors",
		SightRange = 80000,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retry = true,
		attack_weapon = "CyberBlasterTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCore = 1000,
			CyberCrystal = 5000,
			CyberProcessor = 3000,
			Metal = 100000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		description = T(532117451960, --[[ModItemBuildingCompositeDef CyberBlasterTurretWired description]] "<style blue>Cyber Blaster Turret (Wired)</style>\nWired Cyber Energy Enhanced Automated Blaster Turret. Capable of emitting a bolt of cyber energy at its targets with very fast speed between firing sequence. Has poor accuracy but high shots per second ratio. Cyber material is immune to all weather conditions and more resistant. Has increased health. Is prone to malfunctions. Can hit flying targets. Fitted with <color TextPositive>heat seeking vision</color> able to see in the dark. Functions from Cyber Cores and not electricity. No power supply required. Small damage but rapid projectile output.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextPositive>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(250828050733, --[[ModItemBuildingCompositeDef CyberBlasterTurretWired display_name]] "Cyber Blaster Turret (Wired)"),
		display_name_pl = T(504076538405, --[[ModItemBuildingCompositeDef CyberBlasterTurretWired display_name_pl]] "Cyber Blaster Turret (Wired)"),
		display_name_short = T(254531797999, --[[ModItemBuildingCompositeDef CyberBlasterTurretWired display_name_short]] "Cyber Blaster Turret (Wired)"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "CyberBlasterTurretWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(551518826371, --[[ModItemBuildingCompositeDef CyberBlasterTurretWired menu_display_name]] "Cyber Blaster Turret (Wired)"),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 50000,
		}),
		res_consumed = "CyberCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = false,
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightWhitePX",
		BuildMenuIcon = "Trade/WhiteTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(942531566064, --[[ModItemBuildingCompositeDef WhiteFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(488355200219, --[[ModItemBuildingCompositeDef WhiteFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(581114897543, --[[ModItemBuildingCompositeDef WhiteFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "WhiteFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_StoragePX_Safes_Galacticoins",
		BuildMenuIcon = "General/GalacticSafe.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		CustomMaterial = "Metal",
		Health = 1500000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "StorageSafes",
			}),
		},
		MaxHealth = 1500000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"Money",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 15000,
		}),
		construction_points = 5000,
		description = T(345433935143, --[[ModItemBuildingCompositeDef GalacticSafe description]] "Provides small storage space for <color TextEmphasis>Galacticoins</color><image 'UI/Icons/Resources/res_money' 1100>. Cannot be stolen from."),
		display_name = T(777795040025, --[[ModItemBuildingCompositeDef GalacticSafe display_name]] "Galactican Storage Safe"),
		display_name_pl = T(720676556322, --[[ModItemBuildingCompositeDef GalacticSafe display_name_pl]] "Standard"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "Safe",
		group = "Storages",
		id = "GalacticSafe",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-500, -400, 0, 600, 400, 1750),
		menu_display_name = T(870017436060, --[[ModItemBuildingCompositeDef GalacticSafe menu_display_name]] "Standard"),
		object_class = "Building",
		prefer_in_buildmenu = true,
		stack_count = 5,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_StoragePX_Safes_Galacticoins",
		BuildMenuIcon = "General/SafeBoxPX.png",
		BuildMenuPos = 2,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		CustomMaterial = "Metal",
		Health = 1500000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticSafe",
			}),
		},
		MaxHealth = 1500000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"Money",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 40000,
		}),
		construction_points = 5000,
		description = T(515518564827, --[[ModItemBuildingCompositeDef GalacticSafe_Large description]] "Provides Large storage space for <color TextEmphasis>Galacticoins</color><image 'UI/Icons/Resources/res_money' 1100>. Cannot be stolen from."),
		display_name = T(746795259744, --[[ModItemBuildingCompositeDef GalacticSafe_Large display_name]] "Large Galactican Safe"),
		display_name_pl = T(629901152738, --[[ModItemBuildingCompositeDef GalacticSafe_Large display_name_pl]] "Large"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "GalacticoinSafePX",
		group = "Storages",
		id = "GalacticSafe_Large",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-900, -1800, 0, 900, 1800, 2100),
		menu_display_name = T(349301211424, --[[ModItemBuildingCompositeDef GalacticSafe_Large menu_display_name]] "Large"),
		object_class = "Building",
		prefer_in_buildmenu = true,
		stack_count = 40,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Construction",
		BuildMenuIcon = "General/Storage2.png",
		BuildMenuPos = 3,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 1000000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 1000000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"ConstructionResources",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 60000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(767295416963, --[[ModItemBuildingCompositeDef ConstructionStoragePX description]] "Provides large storage space for construction material items. Can be stolen. Has increased durability."),
		display_name = T(804260132814, --[[ModItemBuildingCompositeDef ConstructionStoragePX display_name]] "Large Construction Storage"),
		display_name_pl = T(157592304326, --[[ModItemBuildingCompositeDef ConstructionStoragePX display_name_pl]] "Large"),
		display_name_short = T(737435264983, --[[ModItemBuildingCompositeDef ConstructionStoragePX display_name_short]] "Large"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXCrate2",
		group = "Storages",
		id = "ConstructionStoragePX",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1200, -2400, 0, 1200, 2400, 700),
		menu_display_name = T(109598534990, --[[ModItemBuildingCompositeDef ConstructionStoragePX menu_display_name]] "Large"),
		object_class = "Building",
		show_amount_UI = true,
		stack_count = 500,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Construction",
		BuildMenuIcon = "General/ConstructionBoxSmall.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 500000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 500000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"ConstructionResources",
			"Other",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 30000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(267655009015, --[[ModItemBuildingCompositeDef ConstructionStoragePX_Small description]] "Provides small storage space for construction material items. Can be stolen. Has increased durability."),
		display_name = T(216984372180, --[[ModItemBuildingCompositeDef ConstructionStoragePX_Small display_name]] "Small Construction Storage"),
		display_name_pl = T(425424721972, --[[ModItemBuildingCompositeDef ConstructionStoragePX_Small display_name_pl]] "Small"),
		display_name_short = T(497035334456, --[[ModItemBuildingCompositeDef ConstructionStoragePX_Small display_name_short]] "Small"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXConstructionSmall",
		group = "Storages",
		id = "ConstructionStoragePX_Small",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1800, -900, 0, 1800, 900, 1400),
		menu_display_name = T(163020556235, --[[ModItemBuildingCompositeDef ConstructionStoragePX_Small menu_display_name]] "Small"),
		object_class = "Building",
		stack_count = 250,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsGatesPX",
		BuildMenuIcon = "Trade/AdvCarbonFenceDoor.png",
		BuildMenuPos = 50,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		Health = 1500000,
		IgnoredObstacles = {
			"FortificationColumnElement",
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 1500000,
		MinConstructionSkill = 5,
		RoomPlacement = "outdoors",
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 0,
		can_be_moved = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 25000,
		}),
		construction_points = 5000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(245606844025, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor description]] "Provides access through fences, an advanced carbon structure that has more durability than standard Carbon."),
		display_name = T(903012479488, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor display_name]] "Adv Carbon Fence Door"),
		display_name_pl = T(835939428352, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor display_name_pl]] "Adv Carbon Fence Door"),
		display_name_short = T(592527841019, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor display_name_short]] "Fence door"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		entity = "Fence_Carbon_DoorSmall_01",
		fx_actor_base_class = "FenceDoor",
		group = "Defense_FenceDoors",
		has_turned_off_warning = false,
		id = "AdvancedCarbonFenceDoor",
		is_building = false,
		labels = {
			"Structures",
		},
		lock_block_box = box(0, -600, 0, 0, 600, 1050),
		lock_pass_box = box(-900, -600, 0, 900, 600, 1400),
		menu_display_name = T(562729275671, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor menu_display_name]] "Adv Carbon Fence Gate"),
		object_class = "FortDoor",
		prefer_in_buildmenu = true,
		turn_off_description = T(625369879934, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor turn_off_description]] "Task survivors to close this gate."),
		turn_off_icon = "UI/Icons/Infopanels/open_window",
		turn_off_text = T(656106245087, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor turn_off_text |gender-variants]] "Close"),
		turn_on_description = T(878786475097, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor turn_on_description]] "Task survivors to open this gate."),
		turn_on_icon = "UI/Icons/Infopanels/close_window",
		turn_on_text = T(403559387766, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor turn_on_text |gender-variants]] "Open"),
		turning_off_text = T(246745940715, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor turning_off_text]] "Waiting to be closed"),
		turning_on_text = T(771433487069, --[[ModItemBuildingCompositeDef AdvancedCarbonFenceDoor turning_on_text]] "Waiting to be opened"),
		upgrade_label = "FenceGate",
		use_upgrade_dummy = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackMemory = 5000,
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsPacifierTurret.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CombatDisengageCooldown = 5000,
		CombatDisengageDist = 10000,
		CombatFleeAccuracy = 90,
		CombatGiveUpNoHit = 10000,
		CombatSearchCacheTime = 20000,
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerConsumption = 40000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 90000,
		SwitchTargetChance = 100,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retarget = true,
		attack_weapon = "GalacticPacifierTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 100000,
			PowerCell = 1000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(231791960847, --[[ModItemBuildingCompositeDef TurretGalacticPacifier description]] "<style blue>Wireless Pacifier Turret</style>\nWireless Automated Pacifier Turret. Shoots rounds of ammunition filled with sedative chemicals that cause sleepiness and paralysis of bodily functions. Inflicts <color TextNegative>pacify</color>. Harmless turret otherwise. Only used to deter wildlife from compounds.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextNegative>Gas</color> | <color TextPositive>Pacify</color>"),
		display_name = T(748577233055, --[[ModItemBuildingCompositeDef TurretGalacticPacifier display_name]] "Wireless Pacifier Turret"),
		display_name_pl = T(469303443454, --[[ModItemBuildingCompositeDef TurretGalacticPacifier display_name_pl]] "Wireless Pacifier Turret"),
		display_name_short = T(414051666264, --[[ModItemBuildingCompositeDef TurretGalacticPacifier display_name_short]] "Pacifier Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "TurretGalacticPacifier",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(978016664044, --[[ModItemBuildingCompositeDef TurretGalacticPacifier menu_display_name]] "Wireless Pacifier Turret"),
		object_class = "FortificationTurret",
		prefer_in_buildmenu = true,
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackMemory = 5000,
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsPacifierTurret.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CombatDisengageCooldown = 5000,
		CombatDisengageDist = 10000,
		CombatFleeAccuracy = 90,
		CombatGiveUpNoHit = 10000,
		CombatSearchCacheTime = 20000,
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerComponent = true,
		PowerConsumption = 30000,
		RoomPlacement = "outdoors",
		SightRange = 90000,
		SwitchTargetChance = 100,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retarget = true,
		attack_weapon = "GalacticPacifierTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 100000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(339841243466, --[[ModItemBuildingCompositeDef TurretGalacticPacifierWired description]] "<style blue>Wired Pacifier Turret</style>\nWired Automated Pacifier Turret. Shoots rounds of ammunition filled with sedative chemicals that cause sleepiness and paralysis of bodily functions. Inflicts <color TextNegative>pacify</color>. Harmless turret otherwise. Only used to deter wildlife from compounds.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextNegative>Gas</color> | <color TextPositive>Pacify</color>"),
		display_name = T(895934487035, --[[ModItemBuildingCompositeDef TurretGalacticPacifierWired display_name]] "Wired Pacifier Turret"),
		display_name_pl = T(383420152106, --[[ModItemBuildingCompositeDef TurretGalacticPacifierWired display_name_pl]] "Wired Pacifier Turret"),
		display_name_short = T(369738130376, --[[ModItemBuildingCompositeDef TurretGalacticPacifierWired display_name_short]] "Pacifier Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "TurretGalacticPacifierWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(924497735702, --[[ModItemBuildingCompositeDef TurretGalacticPacifierWired menu_display_name]] "Wired Pacifier Turret"),
		object_class = "FortificationTurret",
		prefer_in_buildmenu = true,
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_RelayPX",
		BuildMenuIcon = "General/LandingPad.png",
		BuildMenuPos = 100,
		CanPlaceInShelter = false,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructColor = 4284769380,
		ConstructEntity = "DecLandingSpot_Construct",
		ConstructHasResourcesColor = 4284769380,
		ConstructIgnore = set( "Flooring" ),
		DestroyedEntity = "DecLandingSpot_Destruct",
		InvulnerableComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		affected_by_disasters = set(),
		attack_attraction = 0,
		can_change_ownership = false,
		construction_points = 20000,
		description = T(589958651226, --[[ModItemBuildingCompositeDef LandingSpot description]] "A landing site for <color TextEmphasis>supply crates</color>."),
		display_name = T(141872542351, --[[ModItemBuildingCompositeDef LandingSpot display_name]] "Landing Pad"),
		display_name_pl = T(688014067434, --[[ModItemBuildingCompositeDef LandingSpot display_name_pl]] "Landing Pad"),
		entity = "DecLandingSpot",
		group = "Structures",
		id = "LandingSpot",
		is_building = false,
		lock_block_box = box(-4200, -4200, 0, 4200, 4200, 0),
		lock_flags = 44,
		lock_pass_box = box(-3600, -3600, 0, 3600, 3600, 35000),
		menu_display_name = T(351158595633, --[[ModItemBuildingCompositeDef LandingSpot menu_display_name]] "Landing Spot"),
		object_class = "LandingSpotBuilding",
		require_surfaces = false,
		soil_form = "circle",
		sort_priority = 1,
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_AlienPowerPX",
		BuildMenuIcon = "General/AlienBatteryPX.png",
		BuildMenuPos = 5,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasPowerIndicator = true,
		Health = 1300000,
		IsPowerStorage = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienReactor",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxCharge = 2015000,
		MaxDischarge = 5015000,
		MaxHealth = 1300000,
		MaxMalfunctionDamage = 20,
		MaxTimeToMalfunction = 769308167102355968,
		MinConstructionSkill = 7,
		MinMalfunctionDamage = 0,
		MinTimeToMalfunction = 769308167102355968,
		PowerComponent = true,
		StorageCapacity = 11000000,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		code = function ()
			function PowerBattery:CheatChargeUp()
				self:SetStorageCharge(GetMaxPowerStorageCapacity(self))
			end
			
			function PowerBattery:CheatEmpty()
				self:SetStorageCharge(0)
			end
			
			function SavegameFixups.UpdateBatteryDischargeRate()
				MapForEach("map", "Building", function(obj)
					if obj.PowerComponent and obj.IsPowerStorage then
						obj:UpdatePowerElement()
					end
				end)
			end
		end,
		construction_cost = PlaceObj('ConstructionCost', {
			AlienCore = 2000,
			AlienElectronics = 10000,
			AlienProcessor = 1000,
			CarbonNanotubes = 200000,
		}),
		construction_points = 100000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(873559221505, --[[ModItemBuildingCompositeDef AlienReactor description]] "An advanced version of the Cyber battery except this has a huge capacity boost.  Stores and supplies stored <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100>. This version of the battery cannot be effected by natural disasters. Due to it being alien technology, it is unlikely to malfunction.\n\n<center><style red>Contraband</style>"),
		display_name = T(914305769827, --[[ModItemBuildingCompositeDef AlienReactor display_name]] "Alien Reactor Battery"),
		display_name_pl = T(251972047901, --[[ModItemBuildingCompositeDef AlienReactor display_name_pl]] "Alien Reactor"),
		display_name_short = T(652982217862, --[[ModItemBuildingCompositeDef AlienReactor display_name_short]] "Alien Reactor"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXAlienBattery03",
		group = "Power",
		id = "AlienReactor",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-2400, -900, 0, 2400, 900, 2450),
		object_class = "Building",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 115000,
		}),
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberTurretsPX",
		BuildMenuIcon = "CriminalActivity/CyberLaserTurret.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 1250000,
		HitNegationChance = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurrets",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1250000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 240000000,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 115200000,
		PowerConsumption = 100000,
		Production = 100000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 70000,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 70,
		attack_pitch_max = 3600,
		attack_pitch_min = -1200,
		attack_weapon = "CyberPulseTurret",
		can_see_in_the_dark = true,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCore = 1000,
			CyberCrystal = 5000,
			CyberProcessor = 3000,
			Metal = 300000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		description = T(560981598969, --[[ModItemBuildingCompositeDef CyberPulseTurret description]] "<style blue>Cyber Pulse Turret</style>\nWireless Cyber Energy Enhanced Automated PPulse Turret. Capable of emitting a pulse wave of cyber energy at its targets, effecting the senses, ability to hear and see and temporary cyber paralysis. Cyber material is immune to all weather conditions and more resistant. Has increased health. Is prone to malfunctions. Cannot hit flying targets. Fitted with <color TextPositive>heat seeking vision</color> able to see in the dark. Functions from Cyber Cores and not electricity. No power supply required. Does no damage, only stuns targets and can stun own survivors if in the blast zone.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(206718116376, --[[ModItemBuildingCompositeDef CyberPulseTurret display_name]] "Cyber Pulse Turret"),
		display_name_pl = T(590324739525, --[[ModItemBuildingCompositeDef CyberPulseTurret display_name_pl]] "Cyber Blaster Turret"),
		display_name_short = T(827404387977, --[[ModItemBuildingCompositeDef CyberPulseTurret display_name_short]] "Cyber Blaster Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		hit_chance_bonus = 100,
		id = "CyberPulseTurret",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(507753290572, --[[ModItemBuildingCompositeDef CyberPulseTurret menu_display_name]] "Cyber Pulse Turret"),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 50000,
		}),
		res_consumed = "CyberCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberTurretsPX",
		BuildMenuIcon = "CriminalActivity/CyberLaserTurret.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 1250000,
		HitNegationChance = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurrets",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1250000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 240000000,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 115200000,
		PowerComponent = true,
		PowerConsumption = 100000,
		Production = 100000,
		RoomPlacement = "outdoors",
		SightRange = 70000,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 70,
		attack_pitch_max = 3600,
		attack_pitch_min = -1200,
		attack_weapon = "CyberPulseTurret",
		can_see_in_the_dark = true,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCore = 1000,
			CyberCrystal = 5000,
			CyberProcessor = 3000,
			Metal = 300000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		description = T(680206642518, --[[ModItemBuildingCompositeDef CyberPulseTurretWired description]] "<style blue>Cyber Pulse Turret (Wired)</style>\nWired Cyber Energy Enhanced Automated PPulse Turret. Capable of emitting a pulse wave of cyber energy at its targets, effecting the senses, ability to hear and see and temporary cyber paralysis. Cyber material is immune to all weather conditions and more resistant. Has increased health. Is prone to malfunctions. Cannot hit flying targets. Fitted with <color TextPositive>heat seeking vision</color> able to see in the dark. Functions from Cyber Cores and not electricity. No power supply required. Does no damage, only stuns targets and can stun own survivors if in the blast zone.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(847542014773, --[[ModItemBuildingCompositeDef CyberPulseTurretWired display_name]] "Cyber Pulse Turret (Wired)"),
		display_name_pl = T(521111355157, --[[ModItemBuildingCompositeDef CyberPulseTurretWired display_name_pl]] "Cyber Pulse Turret (Wired)"),
		display_name_short = T(473305659696, --[[ModItemBuildingCompositeDef CyberPulseTurretWired display_name_short]] "Cyber Pulse Turret (Wired)"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		hit_chance_bonus = 100,
		id = "CyberPulseTurretWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(900192281574, --[[ModItemBuildingCompositeDef CyberPulseTurretWired menu_display_name]] "Cyber Pulse Turret (Wired)"),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 50000,
		}),
		res_consumed = "CyberCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightPurplePX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightPurple.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1000,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(861234617562, --[[ModItemBuildingCompositeDef GalacticCeilingLampPurple description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(838472634104, --[[ModItemBuildingCompositeDef GalacticCeilingLampPurple display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(520743157731, --[[ModItemBuildingCompositeDef GalacticCeilingLampPurple display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampPurple",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_AlienPowerPX",
		BuildMenuIcon = "CriminalActivity/AlienLightningPole.png",
		BuildMenuPos = 1000,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal-Construction",
		HasSmartConnection = true,
		Health = 1500000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienLightningPole",
			}),
		},
		MaxHealth = 1500000,
		PowerCharge = 4000000,
		PowerComponent = true,
		RoomPlacement = "outdoors",
		ShieldArea = 50000,
		SupportStrengthRequirement = "average",
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 10,
		construction_cost = PlaceObj('ConstructionCost', {
			AlienElectronics = 3000,
			Metal = 20000,
			ScrapElectronics = 5000,
			ScrapMetal = 10000,
		}),
		construction_points = 40000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(713853095395, --[[ModItemBuildingCompositeDef AlienLightningPole description]] "Catches nearby lightning strikes in a greater radius. Increases and Distributes the absorbed energy to all batteries in the grid. Has increased range, energy output, durability and weather resistant. "),
		display_name = T(767627557658, --[[ModItemBuildingCompositeDef AlienLightningPole display_name]] "Alien Lightning Rod"),
		display_name_pl = T(620274738681, --[[ModItemBuildingCompositeDef AlienLightningPole display_name_pl]] "Alien Lightning Rod"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "PXLightningRod",
		group = "Power",
		id = "AlienLightningPole",
		lock_block_box = box(-1200, -900, 0, 1200, 900, 23800),
		menu_display_name = T(850214315205, --[[ModItemBuildingCompositeDef AlienLightningPole menu_display_name]] "Alien Lightning Pole"),
		object_class = "LightningRodBuilding",
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_RelayPX",
		BuildMenuIcon = "Trade/TradeShuttle.png",
		BuildMenuPos = 200,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		ConstructionCostLock = false,
		CustomMaterial = "Metal",
		InvulnerableComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		affected_by_disasters = set(),
		attack_attraction = 5,
		can_be_copied = false,
		construction_points = 200000,
		description = T(950445043966, --[[ModItemBuildingCompositeDef TradingPodBuilding description]] "Small automated cargo vessel used for communication and transport of goods."),
		display_name = T(381200493201, --[[ModItemBuildingCompositeDef TradingPodBuilding display_name]] "Communication Relay"),
		display_name_pl = T(936184823766, --[[ModItemBuildingCompositeDef TradingPodBuilding display_name_pl]] "Communication Relay"),
		entity = "DecLandingPad",
		fuel_amount = 50000,
		fuel_consumed = "LiquidFuel",
		fuel_stored = 50000,
		group = "Structures",
		id = "TradingPodBuilding",
		load_anim = "standing_PickUp_Hands_HighCargo",
		load_anim_hands = "standing_PickUp_Hands_HighCargo",
		load_anim_handsclose = "standing_PickUp_HandsClose_HighCargo",
		load_anim_wood = "",
		lock_block_box = box(-3600, -3600, 0, 3600, 3600, 0),
		lock_pass_box = box(-3000, -3000, 0, 3000, 3000, 35000),
		max_count = 1,
		max_depth = 70,
		max_elevate = 70,
		menu_description = T(922787233535, --[[ModItemBuildingCompositeDef TradingPodBuilding menu_description]] "Pod that can transport goods and establish transmissions with external sources."),
		menu_display_name = T(855515401503, --[[ModItemBuildingCompositeDef TradingPodBuilding menu_display_name]] "Communication Relay"),
		object_class = "TradingPodBase",
		require_surfaces = false,
		sort_priority = 1,
		unload_anim = "standing_DropDown_Hands_HighCargo",
		unload_anim_basket = "",
		unload_anim_hands = "standing_DropDown_Hands_HighCargo",
		unload_anim_handsclose = "standing_DropDown_HandsClose_HighCargo",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightPurplePX",
		BuildMenuIcon = "Trade/GalaxyWallLightPurple.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(805159130825, --[[ModItemBuildingCompositeDef GalacticWallLampPurple description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(351614154821, --[[ModItemBuildingCompositeDef GalacticWallLampPurple display_name]] "Galactic Wall Light"),
		display_name_pl = T(192061132710, --[[ModItemBuildingCompositeDef GalacticWallLampPurple display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(805683654140, --[[ModItemBuildingCompositeDef GalacticWallLampPurple display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampPurple",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightOrangePX",
		BuildMenuIcon = "Trade/OrangeTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(631242735334, --[[ModItemBuildingCompositeDef OrangeFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(335673573445, --[[ModItemBuildingCompositeDef OrangeFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(995503953101, --[[ModItemBuildingCompositeDef OrangeFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "OrangeFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightBluePX",
		BuildMenuIcon = "Trade/BlueTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(386965413438, --[[ModItemBuildingCompositeDef BlueFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(801648894507, --[[ModItemBuildingCompositeDef BlueFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(190954371156, --[[ModItemBuildingCompositeDef BlueFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "BlueFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_TerminalsPX",
		BuildMenuIcon = "CriminalActivity/HackingTerminal.png",
		BuildMenuPos = 20,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal-Construction",
		HasSmartConnection = true,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "HackingTerminal",
			}),
		},
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 40000,
		ProductionDeviceComponent = true,
		ProductionDeviceSkipsStateChange = true,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 5,
		can_be_copied = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			HackingDevice = 1000,
			Metal = 30000,
			ScrapElectronics = 10000,
		}),
		construction_points = 20000,
		description = T(497389882295, --[[ModItemBuildingCompositeDef HackersTerminal description]] "Produce blueprints by hacking into government software and retrieving confidential files to research."),
		display_name = T(406722529671, --[[ModItemBuildingCompositeDef HackersTerminal display_name]] "Hackers Terminal"),
		display_name_pl = T(188211552025, --[[ModItemBuildingCompositeDef HackersTerminal display_name_pl]] "Hackers Terminal"),
		display_name_short = T(193568058486, --[[ModItemBuildingCompositeDef HackersTerminal display_name_short]] "Hackers Terminal"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXHackingCNS",
		group = "Devices",
		id = "HackersTerminal",
		interfaces = {
			"Hacking",
		},
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -300, 0, 600, 300, 1750),
		menu_display_name = T(642895792129, --[[ModItemBuildingCompositeDef HackersTerminal menu_display_name]] "Hackers Terminal"),
		object_class = "Building",
		off_when_idle = true,
		override_material_during_production = false,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 4000,
		}),
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_TerminalsPX",
		BuildMenuIcon = "General/RepairBayPX.png",
		BuildMenuPos = 70,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		CustomMaterial = "Metal-Construction",
		HasSmartConnection = true,
		Health = 400000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "RepairBayPX",
			}),
		},
		MaxHealth = 400000,
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 20000,
		ProductionDeviceComponent = true,
		ProductionDeviceSkipsStateChange = true,
		SingleItemPerStack = true,
		StorageDemandPriority = 4,
		accepted_res = {
			"Weapons",
			"Apparel",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 30000,
			ScrapElectronics = 10000,
		}),
		construction_points = 20000,
		description = T(300300263210, --[[ModItemBuildingCompositeDef RepairBayPX description]] "Use this repair bay to repair worn down clothing, weaponry and armor."),
		display_name = T(444329092158, --[[ModItemBuildingCompositeDef RepairBayPX display_name]] "Repair Bay"),
		display_name_pl = T(413117232652, --[[ModItemBuildingCompositeDef RepairBayPX display_name_pl]] "Repair Bay"),
		display_name_short = T(632652012102, --[[ModItemBuildingCompositeDef RepairBayPX display_name_short]] "Repair Bay"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXRepairBayCNS",
		group = "Devices",
		id = "RepairBayPX",
		interfaces = {
			"RepairPX",
		},
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -1500, 0, 600, 1800, 1750),
		menu_display_name = T(119846140891, --[[ModItemBuildingCompositeDef RepairBayPX menu_display_name]] "Repair Bay"),
		object_class = "Building",
		override_material_during_production = false,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 4000,
		}),
		stack_count = 40,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Tech",
		BuildMenuIcon = "General/TechStorage01.png",
		BuildMenuPos = 2,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 1000000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 1000000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"AlienCore",
			"AlienElectronics",
			"AlienProcessor",
			"AlienCrystal",
			"ChipDevice",
			"CyberCore",
			"CyberCrystal",
			"CyberProcessor",
			"HackingDevice",
			"CPUCore",
			"MechCore",
			"PowerCell",
			"ScrapElectronics",
			"MatterGenerator",
			"RepairKitPX",
			"AICore",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(101689495843, --[[ModItemBuildingCompositeDef TechStoragePX description]] "Provides large storage space for tech items. Cannot be stolen. Has increased durability."),
		display_name = T(386083635397, --[[ModItemBuildingCompositeDef TechStoragePX display_name]] "Large Tech Storage"),
		display_name_pl = T(243874621164, --[[ModItemBuildingCompositeDef TechStoragePX display_name_pl]] "Large"),
		display_name_short = T(654351134936, --[[ModItemBuildingCompositeDef TechStoragePX display_name_short]] "Large"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXTechCrate01",
		group = "Storages",
		id = "TechStoragePX",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1800, -900, 0, 1800, 900, 1750),
		menu_description = T(482329356283, --[[ModItemBuildingCompositeDef TechStoragePX menu_description]] "Locked Galactic Tech Storage. Increased storage capacity. Contents cannot be stolen."),
		menu_display_name = T(767463424105, --[[ModItemBuildingCompositeDef TechStoragePX menu_display_name]] "Large"),
		object_class = "Building",
		stack_count = 300,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 2
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Tech",
		BuildMenuIcon = "General/Storage3.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		Health = 500000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 500000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"AlienCore",
			"AlienElectronics",
			"AlienProcessor",
			"AlienCrystal",
			"ChipDevice",
			"CyberCore",
			"CyberCrystal",
			"CyberProcessor",
			"HackingDevice",
			"CPUCore",
			"MechCore",
			"PowerCell",
			"ScrapElectronics",
			"MatterGenerator",
			"RepairKitPX",
			"AICore",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 25,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 15000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(660087612072, --[[ModItemBuildingCompositeDef TechStoragePX_Small description]] "Provides small storage space for tech items. Cannot be stolen. Has increased durability."),
		display_name = T(401951006265, --[[ModItemBuildingCompositeDef TechStoragePX_Small display_name]] "Small Tech Storage"),
		display_name_pl = T(682036847843, --[[ModItemBuildingCompositeDef TechStoragePX_Small display_name_pl]] "Small"),
		display_name_short = T(244241996334, --[[ModItemBuildingCompositeDef TechStoragePX_Small display_name_short]] "Small"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXCrate01",
		group = "Storages",
		id = "TechStoragePX_Small",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -600, 0, 600, 600, 1050),
		menu_description = T(496645366173, --[[ModItemBuildingCompositeDef TechStoragePX_Small menu_description]] "Locked Galactic Tech Storage. Increased storage capacity. Contents cannot be stolen."),
		menu_display_name = T(117780928056, --[[ModItemBuildingCompositeDef TechStoragePX_Small menu_display_name]] "Small"),
		object_class = "Building",
		stack_count = 100,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberPowerPX",
		BuildMenuIcon = "CriminalActivity/CyberTurbine.png",
		BuildMenuPos = 7,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		FullWindSpeed = 60,
		Health = 300000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurbines",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 300000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 96000000,
		MinConstructionSkill = 6,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 38400000,
		MinWindSpeed = 10,
		PowerComponent = true,
		Production = 400000,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_groups = {
			"WindTurbine_Carbon",
		},
		composite_part_names = {
			"Base",
			"Propeller",
		},
		composite_part_parent = {
			Propeller = "Base",
		},
		composite_part_spots = {
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 40000,
			CyberCore = 1000,
			HackingDevice = 1000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 25000,
			ScrapElectronics = 30000,
		}),
		description = T(602314245198, --[[ModItemBuildingCompositeDef CyberTurbines description]] "Generates <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> depending on wind speed. Has been electronically hacked to bypass software's programming and cyber technology added that enhances the turbines energy production. Malfunctions less and always produces electricity, has an increased production."),
		display_name = T(407229588606, --[[ModItemBuildingCompositeDef CyberTurbines display_name]] "Cyber Wind Turbine"),
		display_name_pl = T(263008706024, --[[ModItemBuildingCompositeDef CyberTurbines display_name_pl]] "Cyber Wind Turbines"),
		entity = "WindTurbineCarbone",
		group = "Power",
		id = "CyberTurbines",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 8400),
		menu_description = T(223149991478, --[[ModItemBuildingCompositeDef CyberTurbines menu_description]] "Generates <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> depending on wind speed. Has been electronically hacked to bypass software's programming and cyber technology added that enhances the turbines energy production. Malfunctions less and always produces electricity, has an increased production."),
		menu_display_name = T(376988845520, --[[ModItemBuildingCompositeDef CyberTurbines menu_display_name]] "Cyber Wind Turbine"),
		object_class = "WindTurbineBuilding",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 20000,
		}),
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsMain.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerConsumption = 50000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 70000,
		affected_by_disasters = set( "DustStorm", "Thunderstorm" ),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retry = true,
		attack_weapon = "GalacticLaserTurret",
		can_see_in_the_dark = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 50000,
			PowerCell = 1000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(434699622202, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurret description]] "<style blue>Wireless Laser Turret</style>\nWireless Automated defense station. Shoots a highly concentrated electrical laser beam at a target in range. Has increased range and damage. Can cause <color TextNegative>laser burns</color>.\n\n<style red>Element:</style> \n<color TextPositive>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(649047915031, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurret display_name]] "Wireless Laser Turret"),
		display_name_pl = T(888141710886, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurret display_name_pl]] "Wireless Laser Turret"),
		display_name_short = T(986715074206, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurret display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "TurretGalacticLaserTurret",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(914295440271, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurret menu_display_name]] "Wireless Laser Turret"),
		object_class = "LaserTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsMain.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerComponent = true,
		PowerConsumption = 50000,
		RoomPlacement = "outdoors",
		SightRange = 70000,
		affected_by_disasters = set( "DustStorm", "Thunderstorm" ),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retry = true,
		attack_weapon = "GalacticLaserTurret",
		can_see_in_the_dark = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 50000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(313921701664, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurretWired description]] "<style blue>Wired Laser Turret</style>\nWired Automated defense station. Shoots a highly concentrated electrical laser beam at a target in range. Has increased range and damage. Can cause <color TextNegative>laser burns</color>.\n\n<style red>Element:</style> \n<color TextPositive>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(441810651393, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurretWired display_name]] "Wired Laser Turret"),
		display_name_pl = T(893277842950, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurretWired display_name_pl]] "Wired Laser Turret"),
		display_name_short = T(797585673753, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurretWired display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "TurretGalacticLaserTurretWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(827382586792, --[[ModItemBuildingCompositeDef TurretGalacticLaserTurretWired menu_display_name]] "Wired Laser Turret"),
		object_class = "LaserTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberPowerPX",
		BuildMenuIcon = "CriminalActivity/CyberSolarPanel.png",
		BuildMenuPos = 4,
		CanPlaceInShelter = false,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		FullWindSpeed = 60,
		Health = 300000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberSolarPanel",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 300000,
		MaxTimeToMalfunction = 115200000,
		MinConstructionSkill = 6,
		MinTimeToMalfunction = 57600000,
		MinWindSpeed = 10,
		PowerComponent = true,
		PowerProductionStopsAtNight = true,
		Production = 550000,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_parent = {
			Arm = "Base",
			Panel = "Arm",
			Propeller = "Base",
		},
		composite_part_spots = {
			Arm = "Arm",
			Panel = "Panel",
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 40000,
			CyberCore = 1000,
			HackingDevice = 1000,
		}),
		construction_points = 100000,
		description = T(542723819889, --[[ModItemBuildingCompositeDef CyberSolar description]] "Generates increased <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> during the day. Cannot be effected by weather conditions."),
		display_name = T(262188938830, --[[ModItemBuildingCompositeDef CyberSolar display_name]] "Cyber Solar Panel"),
		display_name_pl = T(792088598498, --[[ModItemBuildingCompositeDef CyberSolar display_name_pl]] "Cyber Solar Panel"),
		display_name_short = T(831792475690, --[[ModItemBuildingCompositeDef CyberSolar display_name_short]] "Cyber Solar"),
		entity = "GraphenSolarPanel",
		group = "Power",
		id = "CyberSolar",
		labels = {
			"PowerSources",
			"SolarFlareShieldedTargets",
			"BerserkTargets",
		},
		lock_block_box = box(-600, -1800, 0, 1800, 600, 2100),
		menu_description = T(916091193205, --[[ModItemBuildingCompositeDef CyberSolar menu_description]] "Cyber Solar Panel generates electricity during the day. Has increased output and capacity. Weather resistant."),
		menu_display_name = T(745630640496, --[[ModItemBuildingCompositeDef CyberSolar menu_display_name]] "Cyber Solar Panel"),
		object_class = "SolarPanelAutomated",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 10000,
		}),
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackMemory = 5000,
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsMachinegun.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CombatDisengageCooldown = 5000,
		CombatDisengageDist = 10000,
		CombatFleeAccuracy = 90,
		CombatGiveUpNoHit = 10000,
		CombatSearchCacheTime = 20000,
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerConsumption = 40000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 70000,
		SwitchTargetChance = 100,
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retarget = true,
		attack_weapon = "GalacticToxicTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 100000,
			PowerCell = 1000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(979023229595, --[[ModItemBuildingCompositeDef TurretGalacticToxic description]] "<style blue>Wireless Toxic Turret</style>\nWireless Automated defense station. Shoots rounds of ammunition filled with toxic chemicals that when punctured into the bloodstream can cause <color TextNegative>poisoning</color> and <color TextNegative>paralysis</color>. \n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextPositive>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(680716455072, --[[ModItemBuildingCompositeDef TurretGalacticToxic display_name]] "Wireless Toxic Turret"),
		display_name_pl = T(764802248276, --[[ModItemBuildingCompositeDef TurretGalacticToxic display_name_pl]] "Wireless Toxic Turret"),
		display_name_short = T(191916474718, --[[ModItemBuildingCompositeDef TurretGalacticToxic display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "TurretGalacticToxic",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(530212275422, --[[ModItemBuildingCompositeDef TurretGalacticToxic menu_display_name]] "Wireless Toxic Turret"),
		object_class = "FortificationTurret",
		prefer_in_buildmenu = true,
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackMemory = 5000,
		BuildMenuCategory = "sub_GalacticWirelessTurretsPX",
		BuildMenuIcon = "Trade/WirelessTurretsMachinegun.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CombatDisengageCooldown = 5000,
		CombatDisengageDist = 10000,
		CombatFleeAccuracy = 90,
		CombatGiveUpNoHit = 10000,
		CombatSearchCacheTime = 20000,
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 76800000,
		MinTimeToMalfunction = 38400000,
		PowerComponent = true,
		PowerConsumption = 35000,
		RoomPlacement = "outdoors",
		SightRange = 70000,
		SwitchTargetChance = 100,
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_retarget = true,
		attack_weapon = "GalacticToxicTurret",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			Metal = 100000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 10,
			energy = 10,
			gas = 10,
			pacify = 10,
			piercing = 10,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapMetal = 50000,
		}),
		description = T(440160380813, --[[ModItemBuildingCompositeDef TurretGalacticToxicWired description]] "<style blue>Wired Toxic Turret</style>\nWired Automated defense station. Shoots rounds of ammunition filled with toxic chemicals that when punctured into the bloodstream can cause <color TextNegative>poisoning</color> and <color TextNegative>paralysis</color>. \n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextPositive>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(306725494660, --[[ModItemBuildingCompositeDef TurretGalacticToxicWired display_name]] "Wired Toxic Turret"),
		display_name_pl = T(230600755293, --[[ModItemBuildingCompositeDef TurretGalacticToxicWired display_name_pl]] "Wired Toxic Turret"),
		display_name_short = T(904357550294, --[[ModItemBuildingCompositeDef TurretGalacticToxicWired display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		id = "TurretGalacticToxicWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(462864393198, --[[ModItemBuildingCompositeDef TurretGalacticToxicWired menu_display_name]] "Wired Toxic Turret"),
		object_class = "FortificationTurret",
		prefer_in_buildmenu = true,
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		res_consumed = "PowerCell",
		res_operate_time = 23040000,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightBluePX",
		BuildMenuIcon = "Trade/BlueTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(310630551822, --[[ModItemBuildingCompositeDef BlueFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(664988852863, --[[ModItemBuildingCompositeDef BlueFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(343688908517, --[[ModItemBuildingCompositeDef BlueFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "BlueFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticPowerPX",
		BuildMenuIcon = "General/CarbonBattery2.png",
		BuildMenuPos = 5,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasPowerIndicator = true,
		Health = 500000,
		IsPowerStorage = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxCharge = 1000000,
		MaxDischarge = 2500000,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 67200000,
		MinConstructionSkill = 4,
		MinTimeToMalfunction = 28800000,
		PowerComponent = true,
		StorageCapacity = 5000000,
		access_range = 2400,
		attack_attraction = 20,
		can_turn_off = true,
		code = function ()
			function PowerBattery:CheatChargeUp()
				self:SetStorageCharge(GetMaxPowerStorageCapacity(self))
			end
			
			function PowerBattery:CheatEmpty()
				self:SetStorageCharge(0)
			end
			
			function SavegameFixups.UpdateBatteryDischargeRate()
				MapForEach("map", "Building", function(obj)
					if obj.PowerComponent and obj.IsPowerStorage then
						obj:UpdatePowerElement()
					end
				end)
			end
		end,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 100000,
			ScrapElectronics = 5000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 70000,
			ScrapElectronics = 3000,
		}),
		description = T(788279792588, --[[ModItemBuildingCompositeDef CarbonBattery description]] "Stores and supplies stored <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100>. Has an increased amount of storage capacity than the traditional batteries used."),
		display_name = T(427168931901, --[[ModItemBuildingCompositeDef CarbonBattery display_name]] "Carbon Battery"),
		display_name_pl = T(843195022593, --[[ModItemBuildingCompositeDef CarbonBattery display_name_pl]] "Batteries"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXCarbonBatteryNew",
		group = "Power",
		id = "CarbonBattery",
		labels = {
			"PowerSources",
			"BerserkTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 3850),
		menu_display_name = T(305876050439, --[[ModItemBuildingCompositeDef CarbonBattery menu_display_name]] "Carbon Battery"),
		object_class = "Building",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 50000,
			ScrapElectronics = 3000,
		}),
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_AlienPowerPX",
		BuildMenuIcon = "CriminalActivity/AlienTurbine.png",
		BuildMenuPos = 7,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		FullWindSpeed = 60,
		Health = 1500000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienTurbines",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1500000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 211200000,
		MinConstructionSkill = 6,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 105600000,
		MinWindSpeed = 20,
		PowerComponent = true,
		Production = 1000000,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_groups = {
			"WindTurbine_Carbon",
		},
		composite_part_names = {
			"Base",
			"Propeller",
		},
		composite_part_parent = {
			Propeller = "Base",
		},
		composite_part_spots = {
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			AlienCore = 1000,
			CarbonNanotubes = 80000,
			CyberProcessor = 1000,
			HackingDevice = 1000,
		}),
		construction_points = 40000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(620920578628, --[[ModItemBuildingCompositeDef AlienTurbines description]] "Generates <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> depending on wind speed. Has been electronically hacked to bypass software's programming and cyber technology added that enhances the turbines energy production. Alien technology then used to add an extra layer of durability to all weather conditions, increased production and efficiency. Does not malfunction at all and always produces electricity regardless."),
		display_name = T(199974579565, --[[ModItemBuildingCompositeDef AlienTurbines display_name]] "Alien Wind Turbine"),
		display_name_pl = T(994718827983, --[[ModItemBuildingCompositeDef AlienTurbines display_name_pl]] "Advanced Alien Wind Turbine"),
		entity = "WindTurbineCarbone",
		group = "Power",
		id = "AlienTurbines",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 8400),
		menu_description = T(879133482351, --[[ModItemBuildingCompositeDef AlienTurbines menu_description]] "Generates <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> depending on wind speed. Has been electronically hacked to bypass software's programming and cyber technology added that enhances the turbines energy production. Alien technology then used to add an extra layer of durability to all weather conditions, increased production and efficiency. Does not malfunction at all and always produces electricity regardless."),
		menu_display_name = T(805287392294, --[[ModItemBuildingCompositeDef AlienTurbines menu_display_name]] "Alien Wind Turbine"),
		object_class = "WindTurbineBuilding",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 40000,
		}),
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/ArmoryLocker.png",
		BuildMenuPos = 301,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		CustomMaterial = "Metal",
		Health = 1500000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 1500000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"Apparel",
			"Weapons",
			"Tools",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 15000,
		}),
		construction_points = 5000,
		description = T(190662442705, --[[ModItemBuildingCompositeDef GalacticArmoryLocker description]] "Provides storage space for <color TextEmphasis>Armor and Weapons</color>. Cannot be stolen from."),
		display_name = T(368783109236, --[[ModItemBuildingCompositeDef GalacticArmoryLocker display_name]] "Armory Locker"),
		display_name_pl = T(715186736417, --[[ModItemBuildingCompositeDef GalacticArmoryLocker display_name_pl]] "Armory Locker"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXContainer0101",
		group = "Storages",
		id = "GalacticArmoryLocker",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1500, -600, 0, 1500, 600, 1050),
		object_class = "Building",
		prefer_in_buildmenu = true,
		stack_count = 300,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX",
		BuildMenuIcon = "General/Storage4.png",
		BuildMenuPos = 80,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		HasSmartConnection = true,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
			PlaceObj('CheckTech', {
				Tech = "Freezers",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxMalfunctionDamage = 25,
		MinMalfunctionDamage = 10,
		MinTimeToMalfunction = 28800000,
		PowerComponent = true,
		PowerConsumption = 8000,
		ResourceDismantlingComponent = true,
		StorageDemandPriority = 2,
		StorageDepotComponent = true,
		StorageTargetTemperature = -18000,
		TempChangeRateOff = 3000,
		TempChangeRateOn = 4000,
		accepted_res = {
			"FuelManure",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 60000,
			ScrapElectronics = 5000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapElectronics = 2000,
			ScrapMetal = 40000,
		}),
		description = T(532960315792, --[[ModItemBuildingCompositeDef GalacticManureFreezer description]] "Stores a large amount of <color TextEmphasis>Manure</color> at frozen state. Stops resource decay."),
		display_name = T(353867272101, --[[ModItemBuildingCompositeDef GalacticManureFreezer display_name]] "Galactic Manure Box"),
		display_name_pl = T(192732011980, --[[ModItemBuildingCompositeDef GalacticManureFreezer display_name_pl]] "Galactic Manure Box"),
		display_name_short = T(980212343337, --[[ModItemBuildingCompositeDef GalacticManureFreezer display_name_short]] "Galactic Manure Box"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXRecycleBox",
		group = "Storages",
		id = "GalacticManureFreezer",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-500, -400, 0, 600, 400, 1750),
		menu_display_name = T(980252072104, --[[ModItemBuildingCompositeDef GalacticManureFreezer menu_display_name]] "Manure Box"),
		object_class = "Building",
		placement_spots = {
			"Resourceup",
			"Resourcemiddle1",
			"Resourcemiddle2",
			"Resourcedown",
		},
		show_amount_UI = true,
		stack_count = 1000,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightWhitePX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightWhite.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 2400,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(302517183302, --[[ModItemBuildingCompositeDef GalacticCeilingLampWhite description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(826443437135, --[[ModItemBuildingCompositeDef GalacticCeilingLampWhite display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(162020431129, --[[ModItemBuildingCompositeDef GalacticCeilingLampWhite display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampWhite",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightPurplePX",
		BuildMenuIcon = "Trade/PurpleTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(981612966150, --[[ModItemBuildingCompositeDef PurpleFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(628812555140, --[[ModItemBuildingCompositeDef PurpleFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(672056003930, --[[ModItemBuildingCompositeDef PurpleFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "PurpleFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_PlantsPX",
		BuildMenuIcon = "CriminalActivity/CyberCrystalFarm.png",
		BuildMenuPos = 70,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		Crop = "CyberCrystals",
		Health = 0,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCrystalFarm",
			}),
		},
		MaxHealth = 0,
		access_range = 2400,
		affected_by_disasters = set(),
		can_be_copied = false,
		can_be_deconstructed = false,
		can_be_moved = false,
		description = T(463545890619, --[[ModItemBuildingCompositeDef CyberCrystals description]] "Instead of making these crystals with expensive components, we could grow our own in the purest of form."),
		display_name = T(483058851226, --[[ModItemBuildingCompositeDef CyberCrystals display_name]] "Cyber Crystals Field"),
		display_name_pl = T(456422567556, --[[ModItemBuildingCompositeDef CyberCrystals display_name_pl]] "Cyber Crystal Field"),
		display_name_short = T(755664138286, --[[ModItemBuildingCompositeDef CyberCrystals display_name_short]] "Cyber Crystal Field"),
		group = "Farms",
		id = "CyberCrystals",
		menu_description = T(747001919667, --[[ModItemBuildingCompositeDef CyberCrystals menu_description]] "Instead of making these crystals synthetically, we could grow our own in the purest of form."),
		menu_display_name = T(960671201514, --[[ModItemBuildingCompositeDef CyberCrystals menu_display_name]] "Cyber Crystal Farm"),
		object_class = "FieldBase",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightRedPX",
		BuildMenuIcon = "Trade/RedTiltedLight.png",
		BuildMenuPos = 200,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(-4096, 0, -4096),
		LightFov = 7800,
		LightRadius = 70000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(928228722702, --[[ModItemBuildingCompositeDef RedFloodLightTiltedPX description]] "Lights up a wide area in front of itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(916234646415, --[[ModItemBuildingCompositeDef RedFloodLightTiltedPX display_name]] "Tilted Floodlight"),
		display_name_pl = T(258257333402, --[[ModItemBuildingCompositeDef RedFloodLightTiltedPX display_name_pl]] "Tilted Floodlights"),
		entity = "Floodlight_Diagonal",
		group = "Temperature",
		id = "RedFloodLightTiltedPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_TerminalsPX",
		BuildMenuIcon = "CriminalActivity/HackingTerminal.png",
		BuildMenuPos = 8,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		DisplayAmountsInInfobar = false,
		HasSmartConnection = true,
		Health = 400000,
		IsPowerConsumer = true,
		LightRadius = 2000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_building",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 400000,
		MaxTimeToMalfunction = 86400000,
		MinTimeToMalfunction = 48000000,
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 30000,
		ProductionDeviceComponent = true,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 20,
		can_be_copied = false,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 3000,
			Metal = 50000,
			PowerCell = 3000,
			ScrapElectronics = 7000,
		}),
		construction_points = 20000,
		description = T(754156180944, --[[ModItemBuildingCompositeDef TradingConsole description]] "Interact with the market, suppliers and contractors to receive additional materials and unique blueprints for devices or structures.\n\n<center><style red>Requires a electrical connection to use.</style>"),
		display_name = T(450928432948, --[[ModItemBuildingCompositeDef TradingConsole display_name]] "Trading Console"),
		display_name_pl = T(841348151604, --[[ModItemBuildingCompositeDef TradingConsole display_name_pl]] "Trading Console"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXHackingCNS",
		group = "Devices",
		id = "TradingConsole",
		interfaces = {
			"Trading",
		},
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -300, 0, 600, 300, 1750),
		max_count = 5,
		menu_description = T(795823974581, --[[ModItemBuildingCompositeDef TradingConsole menu_description]] "Interact with the market, suppliers and contractors to receive additional materials and unique blueprints for devices or structures."),
		menu_display_name = T(771230204358, --[[ModItemBuildingCompositeDef TradingConsole menu_display_name]] "Trading Console"),
		object_class = "Building",
		off_when_idle = true,
		override_material_during_production = false,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 4000,
		}),
		show_name_in_direct_order = false,
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightBluePX",
		BuildMenuIcon = "Trade/GalaxyWallLight.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 20000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(389179855497, --[[ModItemBuildingCompositeDef GalacticWallLampBlue description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(171142887546, --[[ModItemBuildingCompositeDef GalacticWallLampBlue display_name]] "Galactic Wall Light"),
		display_name_pl = T(147535892129, --[[ModItemBuildingCompositeDef GalacticWallLampBlue display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(613051529114, --[[ModItemBuildingCompositeDef GalacticWallLampBlue display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampBlue",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AOEFilter = function (obj, self)
			return IsKindOf(obj, "UnitHealth") and obj.CombatGroup ~= self.CombatGroup
		end,
		AddUseTimeWhenActive = false,
		BuildMenuCategory = "sub_GalacticFortificationsTrapsPX",
		BuildMenuIcon = "Trade/TrapExplosive5.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		Health = 25000,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketTraps",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 25000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 96000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 9600000,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return obj:CanMove() and obj.CombatGroup ~= self.CombatGroup and obj.CombatGroup ~= "ScavengerBirds" and obj:IsOnGround()
		end,
		ProximitySwitchRange = 600,
		ProximitySwitchTargetSpot = "Foot",
		apply_res_reqs = false,
		attack_weapon = "CryoFreezeMine",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			LiquidFuel = 5000,
			Metal = 25000,
			PowerCell = 1000,
		}),
		construction_points = 10000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 5000,
		}),
		description = T(270788868850, --[[ModItemBuildingCompositeDef CryoFreezeMine description]] "Cryo-Freeze, a chemical used in this very trap that when triggered, will disperse the liquid up the limb, freezing it in place for up to an hour or two. Works a charm to keep them nasty ol'critters in one place for that clean headshot. Downside is a 1 meter range and the blasted things take a long time to reload. Good for thinning out a wave of threats though.\n\nStats:\n<style TechSubtitleBlue>- 1 Meter Range.\n- Health Conditions (Cryogenically Frozen)\n- 60% Chance to Cryogenically Freeze.</style>\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextPositive>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(133617197031, --[[ModItemBuildingCompositeDef CryoFreezeMine display_name]] "Cryo Freeze Mine"),
		display_name_pl = T(634441570884, --[[ModItemBuildingCompositeDef CryoFreezeMine display_name_pl]] "Cryo Freeze Mine"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
			RoomsOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Trap_LandMine",
		forbid_clip_plane = true,
		group = "Defense",
		id = "CryoFreezeMine",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -450, 0, 450, 450, 0),
		lock_pass_box = box(-600, -600, 0, 600, 600, 700),
		max_depth = 200,
		max_elevate = 200,
		menu_display_name = T(847240640587, --[[ModItemBuildingCompositeDef CryoFreezeMine menu_display_name]] "Cryo Freeze Mine"),
		menu_rollover_hint = T(397004684840, --[[ModItemBuildingCompositeDef CryoFreezeMine menu_rollover_hint]] "Cryo Freeze Mine"),
		multi_placement = true,
		multi_placement_name = T(422653109224, --[[ModItemBuildingCompositeDef CryoFreezeMine multi_placement_name]] "mine"),
		multi_placement_name_pl = T(144939496078, --[[ModItemBuildingCompositeDef CryoFreezeMine multi_placement_name_pl]] "mines"),
		object_class = "SingleUseTrap",
		orient_to_terrain = true,
		progress = 2000,
		range_tags = {
			"combat",
		},
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 5000,
		}),
		require_surfaces = false,
		snap_to_passability = true,
		turn_off_anim = "standing_DropDown_Hands_Low",
		turn_off_description = T(406762240031, --[[ModItemBuildingCompositeDef CryoFreezeMine turn_off_description]] "Task the survivors to disarm this trap."),
		turn_off_icon = "UI/Icons/Infopanels/trap_disarm",
		turn_off_text = T(459764697051, --[[ModItemBuildingCompositeDef CryoFreezeMine turn_off_text |gender-variants]] "Disarm"),
		turn_on_anim = "standing_DropDown_Hands_Low",
		turn_on_description = T(128692633485, --[[ModItemBuildingCompositeDef CryoFreezeMine turn_on_description]] "Task the survivors to arm this trap."),
		turn_on_icon = "UI/Icons/Infopanels/trap_arm",
		turn_on_text = T(468775892531, --[[ModItemBuildingCompositeDef CryoFreezeMine turn_on_text |gender-variants]] "Arm"),
		turned_off_warning = "Disarmed",
		turning_off_text = T(795191503127, --[[ModItemBuildingCompositeDef CryoFreezeMine turning_off_text]] "Waiting to be disarmed"),
		turning_on_text = T(636316361637, --[[ModItemBuildingCompositeDef CryoFreezeMine turning_on_text]] "Waiting to be armed"),
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AddUseTimeWhenActive = false,
		AttackAttractionGetter = function (self)
			if self.working then
				return 150
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_DefenseDevices",
		BuildMenuIcon = "General/PXScentTower.png",
		HasSmartConnection = true,
		Health = 500000,
		HitNegationChance = {
			blunt = 20,
			energy = 20,
			gas = 20,
			pacify = 20,
			piercing = 20,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "WirelessGalacticTurret",
			}),
		},
		MaxHealth = 500000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 48000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 4800000,
		PowerComponent = true,
		PowerConsumption = 6000,
		ProximitySwitchActivateForEach = true,
		ProximitySwitchColor = 4289544932,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return BaseAnimalLure.ProximitySwitchFilter(self, obj) and 
				obj.CombatGroup ~= self.CombatGroup
				and obj.CombatGroup ~= "ScavengerBirds"
				and obj:IsOnGround()
				and (obj.BypassTrapsChance == 0 or self:StaticRandom(obj, 100) > obj.BypassTrapsChance)
		end,
		ProximitySwitchRange = 50000,
		TurnOffDelay = 0,
		TurnOnDelay = 0,
		access_range = 2400,
		attack_attraction = 100,
		attack_weapon = "GalacticMeatLure",
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 2000,
			ScrapMetal = 20000,
		}),
		construction_points = 10000,
		damage_reduction = {
			blunt = 20,
			energy = 20,
			gas = 20,
			pacify = 20,
			piercing = 20,
		},
		description = T(442201480461, --[[ModItemBuildingCompositeDef GalacticMeatLure description]] "A tower that is programmed to release strong scents that attract hostile animals. A stronger and more futuristic version of the stone aged meat lure. The big difference is, this uses electricity to run, not meat."),
		display_name = T(300517925200, --[[ModItemBuildingCompositeDef GalacticMeatLure display_name]] "Scent Lure"),
		display_name_pl = T(843532292477, --[[ModItemBuildingCompositeDef GalacticMeatLure display_name_pl]] "Scent Lure"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "PXLureTower",
		group = "Defense",
		id = "GalacticMeatLure",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-300, -600, 0, 600, 600, 2450),
		max_depth = 200,
		max_elevate = 200,
		object_class = "BaseAnimalLure",
		orient_to_terrain = true,
		progress = 2000,
		res_consumed = "RawMeat",
		res_operate_time = 13600000,
		res_stored = 10000,
		snap_to_passability = true,
		soil_border = 0,
		terrain_change = "soil",
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AOEFilter = function (obj, self)
			return IsKindOf(obj, "UnitHealth") and obj.CombatGroup ~= self.CombatGroup
		end,
		AddUseTimeWhenActive = false,
		BuildMenuCategory = "sub_GalacticFortificationsTrapsPX",
		BuildMenuIcon = "Trade/TrapExplosive4.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		Health = 25000,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketTraps",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 25000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 96000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 9600000,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return obj:CanMove() and obj.CombatGroup ~= self.CombatGroup and obj.CombatGroup ~= "ScavengerBirds" and obj:IsOnGround()
		end,
		ProximitySwitchRange = 600,
		ProximitySwitchTargetSpot = "Foot",
		apply_res_reqs = false,
		attack_weapon = "SplinterMine",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			LiquidFuel = 3000,
			Metal = 20000,
			Sticks = 20000,
		}),
		construction_points = 10000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 5000,
		}),
		description = T(910695077484, --[[ModItemBuildingCompositeDef SplinterMine description]] "A deadly mine that is barbaric. This little device if stepped on will send thousands of splinters in a 3 meter distance. You've probably had a splinter before... so now imagine 100's of them. It is capable of causing so many wounds that the person will simply faint from pain.\n\nStats:\n<style TechSubtitleBlue>- 3 Meter Range.\n- 20% Health Conditions Chance (Cut, Scratch, Puncture, Fracture, Slash)</style>\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextPositive>Piercing</color> | <color TextNegative>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(444486808843, --[[ModItemBuildingCompositeDef SplinterMine display_name]] "SplinterMine"),
		display_name_pl = T(500352875798, --[[ModItemBuildingCompositeDef SplinterMine display_name_pl]] "SplinterMine"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
			RoomsOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Trap_LandMine",
		forbid_clip_plane = true,
		group = "Defense",
		id = "SplinterMine",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -450, 0, 450, 450, 0),
		lock_pass_box = box(-600, -600, 0, 600, 600, 700),
		max_depth = 200,
		max_elevate = 200,
		menu_display_name = T(252099834653, --[[ModItemBuildingCompositeDef SplinterMine menu_display_name]] "Splinter Mine"),
		menu_rollover_hint = T(611520506546, --[[ModItemBuildingCompositeDef SplinterMine menu_rollover_hint]] "Splinter Mine"),
		multi_placement = true,
		multi_placement_name = T(693963273686, --[[ModItemBuildingCompositeDef SplinterMine multi_placement_name]] "mine"),
		multi_placement_name_pl = T(163099745191, --[[ModItemBuildingCompositeDef SplinterMine multi_placement_name_pl]] "mines"),
		object_class = "SingleUseTrap",
		orient_to_terrain = true,
		progress = 2000,
		range_tags = {
			"combat",
		},
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
		}),
		require_surfaces = false,
		snap_to_passability = true,
		turn_off_anim = "standing_DropDown_Hands_Low",
		turn_off_description = T(740285081534, --[[ModItemBuildingCompositeDef SplinterMine turn_off_description]] "Task the survivors to disarm this trap."),
		turn_off_icon = "UI/Icons/Infopanels/trap_disarm",
		turn_off_text = T(107891992314, --[[ModItemBuildingCompositeDef SplinterMine turn_off_text |gender-variants]] "Disarm"),
		turn_on_anim = "standing_DropDown_Hands_Low",
		turn_on_description = T(993422746758, --[[ModItemBuildingCompositeDef SplinterMine turn_on_description]] "Task the survivors to arm this trap."),
		turn_on_icon = "UI/Icons/Infopanels/trap_arm",
		turn_on_text = T(652064067570, --[[ModItemBuildingCompositeDef SplinterMine turn_on_text |gender-variants]] "Arm"),
		turned_off_warning = "Disarmed",
		turning_off_text = T(101697364213, --[[ModItemBuildingCompositeDef SplinterMine turning_off_text]] "Waiting to be disarmed"),
		turning_on_text = T(857952418123, --[[ModItemBuildingCompositeDef SplinterMine turning_on_text]] "Waiting to be armed"),
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_RanchingPX",
		BuildMenuIcon = "General/GalacticAnimalBedLarge.png",
		BuildMenuPos = 20,
		ChangeOwnerIcon = "UI/Icons/Infopanels/animal_change_owner",
		ChangeOwnerRolloverText = T(527258650453, --[[ModItemBuildingCompositeDef GalacticAnimalBedL ChangeOwnerRolloverText]] "Decide which animal is allowed to sleep on this spot."),
		ConstructHelper = "BedAnimal_Large_Placing",
		ConstructIgnore = set( "Flooring" ),
		CustomMaterial = "BedSoil",
		ForwardDir = 5400,
		Health = 1000000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticAnimalTaming",
			}),
		},
		MaxHealth = 1000000,
		MovingAs = "entity",
		OwnedComponent = true,
		OwnerLabel = "TamedAnimals",
		RoomPlacement = "outdoors",
		access_range = 2400,
		affected_by_disasters = set(),
		attack_attraction = 1,
		construction_cost = PlaceObj('ConstructionCost', {
			Hay = 40000,
		}),
		construction_points = 5000,
		description = T(742105470484, --[[ModItemBuildingCompositeDef GalacticAnimalBedL description]] "Dedicated sleeping spot for small, medium and large animals. Sleeping in it makes the animal more happy. Increased durability and cannot be a target of weather conditions such as lightning."),
		display_name = T(204831321139, --[[ModItemBuildingCompositeDef GalacticAnimalBedL display_name]] "Large animal spot"),
		display_name_pl = T(830329257466, --[[ModItemBuildingCompositeDef GalacticAnimalBedL display_name_pl]] "Large animal spots"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "BedAnimal_Large",
		fx_actor_base_class = "AnimalBed",
		group = "Furniture",
		id = "GalacticAnimalBedL",
		labels = {
			"AnimalSleepingSpot",
		},
		lock_block_box = box(-1800, -1800, 0, 1800, 1800, 0),
		lock_pass_box = box(-1800, -1800, 0, 1800, 1800, 3500),
		object_class = "Building",
		ownership_class = "AnimalBedLarge",
		require_surfaces = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightOrangePX",
		BuildMenuIcon = "Trade/GalaxyWallLightOrange.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(611977679908, --[[ModItemBuildingCompositeDef GalacticWallLampOrange description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(226962221416, --[[ModItemBuildingCompositeDef GalacticWallLampOrange display_name]] "Galactic Wall Light"),
		display_name_pl = T(266123627281, --[[ModItemBuildingCompositeDef GalacticWallLampOrange display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(595854240144, --[[ModItemBuildingCompositeDef GalacticWallLampOrange display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampOrange",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightWhitePX",
		BuildMenuIcon = "Trade/GalaxyWallLightWhite.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(822816441834, --[[ModItemBuildingCompositeDef GalacticWallLampWhite description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(683918739576, --[[ModItemBuildingCompositeDef GalacticWallLampWhite display_name]] "Galactic Wall Light"),
		display_name_pl = T(125104811254, --[[ModItemBuildingCompositeDef GalacticWallLampWhite display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(821374159411, --[[ModItemBuildingCompositeDef GalacticWallLampWhite display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampWhite",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightPurplePX",
		BuildMenuIcon = "Trade/PurpleTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(737851482306, --[[ModItemBuildingCompositeDef PurpleFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(212979734448, --[[ModItemBuildingCompositeDef PurpleFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(338969035151, --[[ModItemBuildingCompositeDef PurpleFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "PurpleFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberTurretsPX",
		BuildMenuIcon = "CriminalActivity/CyberMissileTurret.png",
		BuildMenuPos = 20,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		DistressCallRange = 25000,
		DistressCallRangeFirst = 25000,
		HasSmartConnection = true,
		Health = 1000000,
		HitNegationChance = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurrets",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1000000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 240000000,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 115200000,
		PowerConsumption = 125000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 90000,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_weapon = "CyberMissileTurret",
		can_see_in_the_dark = true,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCore = 1000,
			CyberCrystal = 5000,
			CyberProcessor = 3000,
			Metal = 300000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		description = T(675903976417, --[[ModItemBuildingCompositeDef CyberMissileTurret description]] "<style blue>Cyber Missile Turret</style> \nWireless Cyber infused automated defense station. Shoots explosive missiles at all targets in its range. Cyber material is immune to all weather conditions and has increased durability and resistance. Has a 360 degree sensor fitted to target everything in range. Can track targets in the dark. High energy cost to maintain. Functions from Cyber Cores and not electricity. No power supply required. Launches <color red>Heat seeking missiles</color>.\n\n<style red>Element:</style> \n<color TextPositive>Blunt</color> | <color TextPositive>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(925015232159, --[[ModItemBuildingCompositeDef CyberMissileTurret display_name]] "Cyber Missile Turret"),
		display_name_pl = T(146681171829, --[[ModItemBuildingCompositeDef CyberMissileTurret display_name_pl]] "Cyber Missile Turret"),
		display_name_short = T(998755801618, --[[ModItemBuildingCompositeDef CyberMissileTurret display_name_short]] "Cyber Missile Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		hit_chance_bonus = 100,
		id = "CyberMissileTurret",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-600, -600, 0, 600, 600, 7000),
		menu_display_name = T(449534408005, --[[ModItemBuildingCompositeDef CyberMissileTurret menu_display_name]] "Cyber Missile Turret"),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 50000,
		}),
		res_consumed = "CyberCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		target_area_color = 4294377727,
		target_area_radius = 90000,
		target_area_radius_max = 90000,
		target_area_radius_min = 0,
		target_area_radius_step = 0,
		terrain_change = false,
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberTurretsPX",
		BuildMenuIcon = "CriminalActivity/CyberMissileTurret.png",
		BuildMenuPos = 20,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		DistressCallRange = 25000,
		DistressCallRangeFirst = 25000,
		HasSmartConnection = true,
		Health = 1000000,
		HitNegationChance = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberTurrets",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1000000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 240000000,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 115200000,
		PowerComponent = true,
		PowerConsumption = 125000,
		RoomPlacement = "outdoors",
		SightRange = 90000,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_weapon = "CyberMissileTurret",
		can_see_in_the_dark = true,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberCore = 1000,
			CyberCrystal = 5000,
			CyberProcessor = 3000,
			Metal = 300000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 25,
			energy = 25,
			gas = 25,
			pacify = 25,
			piercing = 25,
		},
		description = T(127278690823, --[[ModItemBuildingCompositeDef CyberMissileTurretWired description]] "<style blue>Cyber Missile Turret (Wired)</style> \nWired Cyber infused automated defense station. Shoots explosive missiles at all targets in its range. Cyber material is immune to all weather conditions and has increased durability and resistance. Has a 360 degree sensor fitted to target everything in range. Can track targets in the dark. High energy cost to maintain. Functions from Cyber Cores and not electricity. No power supply required. Launches <color red>Heat seeking missiles</color>.\n\n<style red>Element:</style> \n<color TextPositive>Blunt</color> | <color TextPositive>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(667419904976, --[[ModItemBuildingCompositeDef CyberMissileTurretWired display_name]] "Cyber Missile Turret (Wired)"),
		display_name_pl = T(558380112028, --[[ModItemBuildingCompositeDef CyberMissileTurretWired display_name_pl]] "Cyber Missile Turret (Wired)"),
		display_name_short = T(798220051732, --[[ModItemBuildingCompositeDef CyberMissileTurretWired display_name_short]] "Cyber Missile Turret (Wired)"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		group = "Defense_Turrets",
		hit_chance_bonus = 100,
		id = "CyberMissileTurretWired",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-600, -600, 0, 600, 600, 7000),
		menu_display_name = T(363714090577, --[[ModItemBuildingCompositeDef CyberMissileTurretWired menu_display_name]] "Cyber Missile Turret"),
		object_class = "FortificationTurret",
		progress = 50000,
		repair_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 50000,
		}),
		res_consumed = "CyberCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		target_area_color = 4294377727,
		target_area_radius = 90000,
		target_area_radius_max = 90000,
		target_area_radius_min = 0,
		target_area_radius_step = 0,
		terrain_change = false,
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsWallsPX",
		BuildMenuIcon = "Trade/AdvCarbonFence.png",
		BuildMenuPos = 7,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal-Construction",
		Health = 1500000,
		IgnoredObstacles = {
			"FortificationElement",
			"FortificationColumnElement",
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 1500000,
		MinConstructionSkill = 3,
		NextTemplate = {
			"Gate_Wood",
		},
		RoomPlacement = "outdoors",
		apply_res_reqs = false,
		attack_attraction = 0,
		can_be_moved = false,
		column_freq = 3,
		column_priority = 3,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 12000,
		}),
		construction_points = 2500,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(854010311189, --[[ModItemBuildingCompositeDef AdvancedCarbonFence description]] "A low advanced carbon barrier that diverts most animals from their path."),
		display_name = T(702707855033, --[[ModItemBuildingCompositeDef AdvancedCarbonFence display_name]] "Adv Carbon Fence"),
		display_name_pl = T(442155105818, --[[ModItemBuildingCompositeDef AdvancedCarbonFence display_name_pl]] "Adv Carbon Fence"),
		display_name_short = T(368920239292, --[[ModItemBuildingCompositeDef AdvancedCarbonFence display_name_short]] "Fence"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		fx_actor_base_class = "Fence",
		group = "Defense_Fortifications",
		id = "AdvancedCarbonFence",
		labels = {
			"Structures",
		},
		material = "Carbon",
		max_depth = 350,
		max_elevate = 350,
		menu_display_name = T(823083258013, --[[ModItemBuildingCompositeDef AdvancedCarbonFence menu_display_name]] "Adv Carbon Fence"),
		object_class = "FenceWallPiece",
		prefer_in_buildmenu = true,
		range_tags = {
			"combat",
		},
		require_block_box_above_0 = false,
		upgrade_label = "Fence",
		use_upgrade_dummy = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsWallsPX",
		BuildMenuIcon = "Trade/AdvCarbonWall.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		Health = 2000000,
		IgnoredObstacles = {
			"FortificationElement",
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 2000000,
		MinConstructionSkill = 5,
		NextTemplate = {
			"Gate_Wood",
		},
		RoomPlacement = "outdoors",
		apply_res_reqs = false,
		attack_attraction = 0,
		can_be_moved = false,
		column_freq = 5,
		column_priority = 1000,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 35000,
		}),
		construction_points = 2800,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(422666690743, --[[ModItemBuildingCompositeDef AdvancedCarbonWall description]] "Tall and durable wall used for defense against hostile species. Has extra durability and resistances."),
		display_name = T(112661407127, --[[ModItemBuildingCompositeDef AdvancedCarbonWall display_name]] "Advanced Carbon Wall"),
		display_name_pl = T(624369392837, --[[ModItemBuildingCompositeDef AdvancedCarbonWall display_name_pl]] "Advanced Carbon Wall"),
		display_name_short = T(475906137575, --[[ModItemBuildingCompositeDef AdvancedCarbonWall display_name_short]] "Advanced Carbon Wall"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		fx_actor_base_class = "Fortification",
		group = "Defense_Fortifications",
		id = "AdvancedCarbonWall",
		labels = {
			"Structures",
		},
		material = "Carbon",
		max_depth = 350,
		menu_display_name = T(982420608965, --[[ModItemBuildingCompositeDef AdvancedCarbonWall menu_display_name]] "Advanced Carbon Wall"),
		object_class = "FortWallPiece",
		prefer_in_buildmenu = true,
		range_tags = {
			"combat",
		},
		require_block_box_above_0 = false,
		upgrade_label = "Wall",
		use_upgrade_dummy = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightGreenPX",
		BuildMenuIcon = "Trade/GreenTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(857492747305, --[[ModItemBuildingCompositeDef GreenFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(239290275470, --[[ModItemBuildingCompositeDef GreenFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(146886832042, --[[ModItemBuildingCompositeDef GreenFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "GreenFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_AlienPowerPX",
		BuildMenuIcon = "CriminalActivity/AlienAirCon.png",
		BuildMenuPos = 90,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasHeatIndicators = true,
		HasSmartConnection = true,
		Health = 1400000,
		HeatIndicatorAngle = 10910,
		HeatIndicatorOffset = point(-500, 0, -1000),
		HeatIndicatorOpacity = 100,
		HeatIndicatorScale = 200,
		HeatIndicatorSpot = "Heatexhaust",
		HeatSourceComponent = true,
		IgnoredObstacles = {
			"RoomWallPiece",
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienAirCon",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1400000,
		MaxMalfunctionDamage = 0,
		MaxTimeToMalfunction = 960000000000000000,
		MinConstructionSkill = 6,
		MinMalfunctionDamage = 0,
		MinTimeToMalfunction = 96000000000000000,
		MovingAnimHigh = true,
		MovingOffsetZ = -1000,
		PowerComponent = true,
		PowerConsumption = 5000,
		PowerOutput = 30000,
		RadiationRange = 30000,
		SourceType = "heatpump",
		TargetTemperature = 24000,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			AlienCrystal = 1000,
			AlienElectronics = 1000,
			AlienProcessor = 1000,
			Metal = 10000,
		}),
		construction_points = 80000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
				'room_snap_side_spot', "Heatsource",
			}),
		},
		description = T(479266936859, --[[ModItemBuildingCompositeDef AlienAirCon description]] "Maintains room temperature to a desired level. Crafted from Alien materials which enhance the range, effect and overall efficiency of this air conditioning unit beyond believe. Due to the alien technology used it is resistant to all natural disasters and will probably survive a nuclear bomb if I was honest with you. Not to mention it has less power drain than a standard air conditioning unit and rarely needs maintainence, so go ahead, make 200 of them. "),
		display_name = T(123931995489, --[[ModItemBuildingCompositeDef AlienAirCon display_name]] "Alien Air Conditioner"),
		display_name_pl = T(118439412802, --[[ModItemBuildingCompositeDef AlienAirCon display_name_pl]] "Alien Air Conditioner"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "AirConditioner",
		group = "Power",
		id = "AlienAirCon",
		labels = {
			"CPUCoreDevice",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-400, -600, 1750, 400, 600, 2450),
		menu_description = T(367139262104, --[[ModItemBuildingCompositeDef AlienAirCon menu_description]] "Maintains room temperature to a desired level. Crafted from Alien materials which enhance the range, effect and overall efficiency of this air conditioning unit beyond believe. Due to the alien technology used it is resistant to all natural disasters and will probably survive a nuclear bomb if I was honest with you. Not to mention it has less power drain than a standard air conditioning unit and rarely needs maintainence, so go ahead, make 200 of them. "),
		menu_display_name = T(437384524319, --[[ModItemBuildingCompositeDef AlienAirCon menu_display_name]] "Alien Air Conditioner"),
		object_class = "AirConditionerBase",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
		}),
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Fridges",
		BuildMenuIcon = "General/OrganFridge2.png",
		BuildMenuPos = 4,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		ConstructIgnore = set( "Roof" ),
		HasSmartConnection = true,
		Health = 400000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "LaboratoryFridge",
			}),
		},
		MaxHealth = 400000,
		MaxMalfunctionDamage = 25,
		MinMalfunctionDamage = 10,
		MinTimeToMalfunction = 28800000,
		PowerComponent = true,
		PowerConsumption = 25000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		StorageTargetTemperature = -18000,
		TempChangeRateOff = 3000,
		TempChangeRateOn = 4000,
		accepted_res = {
			"Organs",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 60000,
			ScrapElectronics = 5000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapElectronics = 2000,
			ScrapMetal = 40000,
		}),
		description = T(445675067122, --[[ModItemBuildingCompositeDef LaboratoryFridgePX description]] "Stores a large amount of <color TextEmphasis>organisms</color> at a frozen state. Stops resource decay."),
		display_name = T(670072984264, --[[ModItemBuildingCompositeDef LaboratoryFridgePX display_name]] "Laboratory Fridge"),
		display_name_pl = T(457895989592, --[[ModItemBuildingCompositeDef LaboratoryFridgePX display_name_pl]] "Laboratory Fridge"),
		display_name_short = T(130757364411, --[[ModItemBuildingCompositeDef LaboratoryFridgePX display_name_short]] "Laboratory Fridge"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXFridgeSciFi",
		group = "Storages",
		id = "LaboratoryFridgePX",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-400, -400, 0, 1500, 400, 3150),
		menu_display_name = T(113271298281, --[[ModItemBuildingCompositeDef LaboratoryFridgePX menu_display_name]] "Laboratory Fridge"),
		object_class = "Building",
		placement_spots = {
			"Resourceup",
			"Resourcemiddle1",
			"Resourcemiddle2",
			"Resourcedown",
		},
		stack_count = 2000,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberPowerPX",
		BuildMenuIcon = "General/CyberBattery02.png",
		BuildMenuPos = 5,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasPowerIndicator = true,
		Health = 500000,
		IsPowerStorage = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberReactor",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxCharge = 1015000,
		MaxDischarge = 2600000,
		MaxHealth = 500000,
		MaxTimeToMalfunction = 96000000,
		MinConstructionSkill = 4,
		MinTimeToMalfunction = 48000000,
		PowerComponent = true,
		StorageCapacity = 6000000,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		code = function ()
			function PowerBattery:CheatChargeUp()
				self:SetStorageCharge(GetMaxPowerStorageCapacity(self))
			end
			
			function PowerBattery:CheatEmpty()
				self:SetStorageCharge(0)
			end
			
			function SavegameFixups.UpdateBatteryDischargeRate()
				MapForEach("map", "Building", function(obj)
					if obj.PowerComponent and obj.IsPowerStorage then
						obj:UpdatePowerElement()
					end
				end)
			end
		end,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 100000,
			CyberCrystal = 5000,
			CyberProcessor = 1000,
		}),
		construction_points = 100000,
		description = T(645318750737, --[[ModItemBuildingCompositeDef CyberReactor description]] "An advanced version of the standard battery except this has a capacity boost. Stores and supplies stored <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100>. This version of the battery cannot be effected by natural disasters. However is more prone to malfunctions. "),
		display_name = T(307574660500, --[[ModItemBuildingCompositeDef CyberReactor display_name]] "Cyber Reactor Battery"),
		display_name_pl = T(393810764891, --[[ModItemBuildingCompositeDef CyberReactor display_name_pl]] "Cyber Reactor"),
		display_name_short = T(843664493910, --[[ModItemBuildingCompositeDef CyberReactor display_name_short]] "Cyber Reactor"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXCyberBattery02",
		group = "Power",
		id = "CyberReactor",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-1800, -1800, 0, 1800, 1800, 3850),
		object_class = "Building",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 50000,
		}),
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightOrangePX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightOrange.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1000,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(341863663558, --[[ModItemBuildingCompositeDef GalacticCeilingLampOrange description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(161064033348, --[[ModItemBuildingCompositeDef GalacticCeilingLampOrange display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(459569003178, --[[ModItemBuildingCompositeDef GalacticCeilingLampOrange display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampOrange",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_RanchingPX",
		BuildMenuIcon = "General/GalacticFeeder.png",
		BuildMenuPos = 3,
		CustomMaterial = "Metal",
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticAnimalTaming",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 5000,
		StorageDepotComponent = true,
		StorageTargetTemperature = -18000,
		TempChangeRateOff = 3000,
		TempChangeRateOn = 4000,
		TreatStorageAsDevice = true,
		VisualStorageComponent = true,
		accepted_res = {
			"FoodAnimalCarnivore",
			"FoodAnimalHerbivore",
			"Slop",
		},
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 30000,
			ScrapElectronics = 2000,
		}),
		construction_points = 5000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 30000,
		}),
		description = T(349368920238, --[[ModItemBuildingCompositeDef GalacticAnimalFeeder description]] "A feeding rack for domesticated animals. The food inside is kept as a freezing temperature to prevent decay of food over time, allowing resources to last longer."),
		display_name = T(614648275376, --[[ModItemBuildingCompositeDef GalacticAnimalFeeder display_name]] "Animal Feeder"),
		display_name_pl = T(215171320730, --[[ModItemBuildingCompositeDef GalacticAnimalFeeder display_name_pl]] "Metal animal feeders"),
		display_name_short = T(520954751541, --[[ModItemBuildingCompositeDef GalacticAnimalFeeder display_name_short]] "Animal feeder"),
		distribute_allowed_res = false,
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "AnimalFeeder_Metal",
		group = "Storages",
		id = "GalacticAnimalFeeder",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -1650, 0, 450, 450, 350),
		object_class = "AnimalFeeder",
		orient_to_terrain = true,
		placement_spots = {
			"Resourceleft",
			"Resourcemiddle",
			"Resourceright",
		},
		show_amount_UI = true,
		show_grouped_stacks = false,
		stack_count = 3,
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 20000,
		upgrade_label = "AnimalFeeder",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_RanchingPX",
		BuildMenuIcon = "General/GalacticAnimalBedSmall.png",
		BuildMenuPos = 10,
		ChangeOwnerIcon = "UI/Icons/Infopanels/animal_change_owner",
		ChangeOwnerRolloverText = T(961039390316, --[[ModItemBuildingCompositeDef GalacticAnimalBedS ChangeOwnerRolloverText]] "Decide which animal is allowed to sleep on this spot."),
		ConstructHelper = "BedAnimal_Placing",
		ConstructIgnore = set( "Flooring" ),
		CustomMaterial = "BedSoil",
		Filter = function (obj)
			local size = obj.BodySize
			return (size == "small") or (size == "medium")
		end,
		ForwardDir = 5400,
		Health = 1000000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticAnimalTaming",
			}),
		},
		MaxHealth = 1000000,
		MovingAs = "entity",
		OwnedComponent = true,
		OwnerLabel = "TamedAnimals",
		RoomPlacement = "outdoors",
		access_range = 2400,
		affected_by_disasters = set(),
		attack_attraction = 1,
		construction_cost = PlaceObj('ConstructionCost', {
			Hay = 20000,
		}),
		construction_points = 5000,
		description = T(182929164543, --[[ModItemBuildingCompositeDef GalacticAnimalBedS description]] "Dedicated sleeping spot for small and medium animals. Sleeping in it makes the animal more happy. Increased durability and cannot be a target of weather conditions such as lightning."),
		display_name = T(498063460917, --[[ModItemBuildingCompositeDef GalacticAnimalBedS display_name]] "Animal spot"),
		display_name_pl = T(602909724329, --[[ModItemBuildingCompositeDef GalacticAnimalBedS display_name_pl]] "Animal spots"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "BedAnimal",
		fx_actor_base_class = "AnimalBed",
		group = "Furniture",
		id = "GalacticAnimalBedS",
		labels = {
			"AnimalSleepingSpot",
		},
		lock_block_box = box(-1800, -1800, 0, 600, 600, 0),
		lock_pass_box = box(-1800, -1800, 0, 600, 600, 700),
		object_class = "Building",
		ownership_class = "AnimalBedSmall",
		require_surfaces = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AOEFilter = function (obj, self)
			return IsKindOf(obj, "UnitHealth") and obj.CombatGroup ~= self.CombatGroup
		end,
		AddUseTimeWhenActive = false,
		BuildMenuCategory = "sub_GalacticFortificationsTrapsPX",
		BuildMenuIcon = "Trade/TrapExplosive.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		Health = 25000,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeTraps",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 25000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 96000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 9600000,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return obj:CanMove() and obj.CombatGroup ~= self.CombatGroup and obj.CombatGroup ~= "ScavengerBirds" and obj:IsOnGround()
		end,
		ProximitySwitchRange = 600,
		ProximitySwitchTargetSpot = "Foot",
		apply_res_reqs = false,
		attack_weapon = "PacifyMine",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			LiquidFuel = 5000,
			Metal = 45000,
			OilAnimal = 5000,
		}),
		construction_points = 10000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 5000,
		}),
		description = T(428226678873, --[[ModItemBuildingCompositeDef PacifierMine description]] "Simple pressure-activated pacifier trap. Requires rearming after each use. The number one pick for hunters, this mine is rigged with gasses that are non-lethal and induce a sedative effect on anyone in a 2 meter distance. Usually Galactic Militia will use these to keep aggressive alien life away from camps without wanting to hurt them.\n\nStats:\n<style TechSubtitleBlue>- 2 Meter Range.\n- Health Conditions (Pacified.)\n- 60% Chance to Pacify a species for a set duration of time.</style>\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextNegative>Gas</color> | <color TextPositive>Pacify</color>"),
		display_name = T(737369049137, --[[ModItemBuildingCompositeDef PacifierMine display_name]] "Pacifier Mine"),
		display_name_pl = T(596118858351, --[[ModItemBuildingCompositeDef PacifierMine display_name_pl]] "Pacifier Mine"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
			RoomsOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Trap_LandMine",
		forbid_clip_plane = true,
		group = "Defense",
		id = "PacifierMine",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -450, 0, 450, 450, 0),
		lock_pass_box = box(-600, -600, 0, 600, 600, 700),
		max_depth = 200,
		max_elevate = 200,
		menu_display_name = T(933046307999, --[[ModItemBuildingCompositeDef PacifierMine menu_display_name]] "Pacifier Mine"),
		menu_rollover_hint = T(487444088396, --[[ModItemBuildingCompositeDef PacifierMine menu_rollover_hint]] "Pacifier Mine"),
		multi_placement = true,
		multi_placement_name = T(428639425082, --[[ModItemBuildingCompositeDef PacifierMine multi_placement_name]] "mine"),
		multi_placement_name_pl = T(161804503369, --[[ModItemBuildingCompositeDef PacifierMine multi_placement_name_pl]] "mines"),
		object_class = "SingleUseTrap",
		orient_to_terrain = true,
		progress = 2000,
		range_tags = {
			"combat",
		},
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 30000,
		}),
		require_surfaces = false,
		snap_to_passability = true,
		turn_off_anim = "standing_DropDown_Hands_Low",
		turn_off_description = T(715522840831, --[[ModItemBuildingCompositeDef PacifierMine turn_off_description]] "Task the survivors to disarm this trap."),
		turn_off_icon = "UI/Icons/Infopanels/trap_disarm",
		turn_off_text = T(706403861667, --[[ModItemBuildingCompositeDef PacifierMine turn_off_text |gender-variants]] "Disarm"),
		turn_on_anim = "standing_DropDown_Hands_Low",
		turn_on_description = T(267228844181, --[[ModItemBuildingCompositeDef PacifierMine turn_on_description]] "Task the survivors to arm this trap."),
		turn_on_icon = "UI/Icons/Infopanels/trap_arm",
		turn_on_text = T(914449985817, --[[ModItemBuildingCompositeDef PacifierMine turn_on_text |gender-variants]] "Arm"),
		turned_off_warning = "Disarmed",
		turning_off_text = T(679126146849, --[[ModItemBuildingCompositeDef PacifierMine turning_off_text]] "Waiting to be disarmed"),
		turning_on_text = T(963431455256, --[[ModItemBuildingCompositeDef PacifierMine turning_on_text]] "Waiting to be armed"),
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsGatesPX",
		BuildMenuIcon = "Trade/AdvCarbonGate.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		Health = 2000000,
		IgnoredObstacles = {
			"FortificationColumnElement",
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 2000000,
		MinConstructionSkill = 5,
		RoomPlacement = "outdoors",
		access_range = 1200,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 0,
		can_be_moved = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 50000,
		}),
		construction_points = 24500,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(197342172028, --[[ModItemBuildingCompositeDef AdvancedCarbonGate description]] "Provides unrestricted access if kept open. People can pass through closed gates and lead animals through them."),
		display_name = T(252716248444, --[[ModItemBuildingCompositeDef AdvancedCarbonGate display_name]] "Advanced Carbon Gate"),
		display_name_pl = T(299948364797, --[[ModItemBuildingCompositeDef AdvancedCarbonGate display_name_pl]] "Advanced Carbon Gates"),
		display_name_short = T(516755402278, --[[ModItemBuildingCompositeDef AdvancedCarbonGate display_name_short]] "Advanced Carbon Gates"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		entity = "Fort_Carbon_Gate",
		fx_actor_base_class = "FortificationGate",
		group = "Defense_Gates",
		has_turned_off_warning = false,
		id = "AdvancedCarbonGate",
		is_building = false,
		labels = {
			"Structures",
		},
		lock_block_box = box(0, -1800, 0, 0, 1800, 2100),
		lock_pass_box = box(-600, -1800, 0, 1800, 1800, 2100),
		menu_display_name = T(461086141016, --[[ModItemBuildingCompositeDef AdvancedCarbonGate menu_display_name]] "Advanced Carbon Gate"),
		object_class = "FortGate",
		prefer_in_buildmenu = true,
		turn_off_description = T(906634311350, --[[ModItemBuildingCompositeDef AdvancedCarbonGate turn_off_description]] "Task survivors to close this gate."),
		turn_off_icon = "UI/Icons/Infopanels/open_window",
		turn_off_text = T(458633464802, --[[ModItemBuildingCompositeDef AdvancedCarbonGate turn_off_text |gender-variants]] "Close"),
		turn_on_description = T(502295027659, --[[ModItemBuildingCompositeDef AdvancedCarbonGate turn_on_description]] "Task survivors to open this gate."),
		turn_on_icon = "UI/Icons/Infopanels/close_window",
		turn_on_text = T(896956995725, --[[ModItemBuildingCompositeDef AdvancedCarbonGate turn_on_text |gender-variants]] "Open"),
		turning_off_text = T(588977234906, --[[ModItemBuildingCompositeDef AdvancedCarbonGate turning_off_text]] "Waiting to be closed"),
		turning_on_text = T(915111261771, --[[ModItemBuildingCompositeDef AdvancedCarbonGate turning_on_text]] "Waiting to be opened"),
		upgrade_label = "Gate",
		use_upgrade_dummy = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightYellowPX",
		BuildMenuIcon = "Trade/GalaxyWallLightYellow.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(667517941925, --[[ModItemBuildingCompositeDef GalacticWallLampYellow description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(682012426054, --[[ModItemBuildingCompositeDef GalacticWallLampYellow display_name]] "Galactic Wall Light"),
		display_name_pl = T(632993613395, --[[ModItemBuildingCompositeDef GalacticWallLampYellow display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(620435881725, --[[ModItemBuildingCompositeDef GalacticWallLampYellow display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampYellow",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightRedPX",
		BuildMenuIcon = "Trade/GalaxyWallLightRed.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(766521074270, --[[ModItemBuildingCompositeDef GalacticWallLampRed description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(373080040138, --[[ModItemBuildingCompositeDef GalacticWallLampRed display_name]] "Galactic Wall Light"),
		display_name_pl = T(123300110788, --[[ModItemBuildingCompositeDef GalacticWallLampRed display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(397559633461, --[[ModItemBuildingCompositeDef GalacticWallLampRed display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampRed",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_RanchingPX",
		BuildMenuIcon = "General/GalacticDryerRack.png",
		BuildMenuPos = 1,
		ClosedStorage = true,
		CustomMaterial = "ScrapMetal",
		Health = 1000000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticAnimalTaming",
			}),
		},
		MaxHealth = 1000000,
		ResourceTransformComponent = true,
		StorageDepotComponent = true,
		TransformDefinitions = {
			PlaceObj('ResTransform', {
				'InputResource', "RawMeat",
				'OutputResource', "DryMeat",
				'TransformTime', 960000,
			}),
			PlaceObj('ResTransform', {
				'InputResource', "LeatherRaw",
				'OutputResource', "LeatherDry",
				'TransformTime', 1920000,
			}),
			PlaceObj('ResTransform', {
				'InputResource', "SmokeleafRaw",
				'OutputResource', "SmokeleafDry",
				'TransformTime', 3840000,
			}),
		},
		TransformDisplayName = T(991987394585, --[[ModItemBuildingCompositeDef GalacticDryingRackL TransformDisplayName]] "Drying"),
		TransformMetaProp = "drying_progress",
		TreatStorageAsDevice = true,
		VisualStorageComponent = true,
		accepted_res = {
			"RawMeat",
			"LeatherRaw",
			"SmokeleafRaw",
		},
		access_range = 2400,
		affected_by_disasters = set(),
		attack_attraction = 40,
		can_disable_supply = true,
		construction_cost = PlaceObj('ConstructionCost', {
			ScrapElectronics = 1000,
			ScrapMetal = 50000,
		}),
		construction_points = 40000,
		description = T(867743842058, --[[ModItemBuildingCompositeDef GalacticDryingRackL description]] "Dries raw resources over time. Has built-in roof which slows down the drying process but allows products to be stored longer before spoiling. Is resistant to lightning weather conditions and has increased capacity, able to store much larger amounts of resources. Dries resources alot faster than the standard drying rack.\n\nTransforms <color TextEmphasis>Raw red meat</color><image 'UI/Icons/Resources/res_raw_meatt' 1100> into <color TextEmphasis>Dried meat</color><image 'UI/Icons/Resources/res_dry_meat' 1100>, and <color TextEmphasis>Hides</color><image 'UI/Icons/Resources/res_raw_leather' 1100> into <color TextEmphasis>Leather</color><image 'UI/Icons/Resources/res_dry_leather' 1100>."),
		display_name = T(887153776441, --[[ModItemBuildingCompositeDef GalacticDryingRackL display_name]] "Drying Rack"),
		display_name_pl = T(437768930507, --[[ModItemBuildingCompositeDef GalacticDryingRackL display_name_pl]] "Drying Rack"),
		distribute_allowed_res = false,
		entity = "Skin_Rag_04",
		group = "Devices",
		id = "GalacticDryingRackL",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-600, -1500, 0, 1500, 1500, 2800),
		object_class = "Building",
		res_entity_for_stack = true,
		show_grouped_stacks = false,
		stack_count = 500,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		upgrade_label = "DryingRackLarge",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AOEFilter = function (obj, self)
			return IsKindOf(obj, "UnitHealth") and obj.CombatGroup ~= self.CombatGroup
		end,
		AddUseTimeWhenActive = false,
		BuildMenuCategory = "sub_GalacticFortificationsTrapsPX",
		BuildMenuIcon = "Trade/TrapExplosive3.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		Health = 25000,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeTraps",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 25000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 96000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 9600000,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return obj:CanMove() and obj.CombatGroup ~= self.CombatGroup and obj.CombatGroup ~= "ScavengerBirds" and obj:IsOnGround()
		end,
		ProximitySwitchRange = 600,
		ProximitySwitchTargetSpot = "Foot",
		apply_res_reqs = false,
		attack_weapon = "PulseEnergyMine",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 15000,
			PowerCell = 1000,
		}),
		construction_points = 10000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 5000,
		}),
		description = T(265216338632, --[[ModItemBuildingCompositeDef PulseEnergyMine description]] "Simple pressure-activated pulse energy trap. Requires rearming after each use. Originally designed to be a riot deterrent, non-lethal stunning mine. With a few tweaks here and there, I made this thing abit more juicier. Its now designed to inflict blunt shock energy, a good deterrent to make anyone do a U-Turn. \n\nStats:\n<style TechSubtitleBlue>- 5 Meter Range.\n- Health Conditions (Concussions, Bruising, Pain, Fractures and Brain damage.)\n- 70% Chance to render unconscious.</style>\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(288182557124, --[[ModItemBuildingCompositeDef PulseEnergyMine display_name]] "Pulse Energy Mine"),
		display_name_pl = T(516871354353, --[[ModItemBuildingCompositeDef PulseEnergyMine display_name_pl]] "Pulse Energy Mine"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
			RoomsOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Trap_LandMine",
		forbid_clip_plane = true,
		group = "Defense",
		id = "PulseEnergyMine",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -450, 0, 450, 450, 0),
		lock_pass_box = box(-600, -600, 0, 600, 600, 700),
		max_depth = 200,
		max_elevate = 200,
		menu_display_name = T(603881941357, --[[ModItemBuildingCompositeDef PulseEnergyMine menu_display_name]] "Pulse Energy Mine"),
		menu_rollover_hint = T(396647672861, --[[ModItemBuildingCompositeDef PulseEnergyMine menu_rollover_hint]] "Pulse Energy Mine"),
		multi_placement = true,
		multi_placement_name = T(768125359024, --[[ModItemBuildingCompositeDef PulseEnergyMine multi_placement_name]] "mine"),
		multi_placement_name_pl = T(412062026657, --[[ModItemBuildingCompositeDef PulseEnergyMine multi_placement_name_pl]] "mines"),
		object_class = "SingleUseTrap",
		orient_to_terrain = true,
		progress = 2000,
		range_tags = {
			"combat",
		},
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 5000,
		}),
		require_surfaces = false,
		snap_to_passability = true,
		turn_off_anim = "standing_DropDown_Hands_Low",
		turn_off_description = T(724618145259, --[[ModItemBuildingCompositeDef PulseEnergyMine turn_off_description]] "Task the survivors to disarm this trap."),
		turn_off_icon = "UI/Icons/Infopanels/trap_disarm",
		turn_off_text = T(695195427855, --[[ModItemBuildingCompositeDef PulseEnergyMine turn_off_text |gender-variants]] "Disarm"),
		turn_on_anim = "standing_DropDown_Hands_Low",
		turn_on_description = T(511561998053, --[[ModItemBuildingCompositeDef PulseEnergyMine turn_on_description]] "Task the survivors to arm this trap."),
		turn_on_icon = "UI/Icons/Infopanels/trap_arm",
		turn_on_text = T(535025355583, --[[ModItemBuildingCompositeDef PulseEnergyMine turn_on_text |gender-variants]] "Arm"),
		turned_off_warning = "Disarmed",
		turning_off_text = T(320277116194, --[[ModItemBuildingCompositeDef PulseEnergyMine turning_off_text]] "Waiting to be disarmed"),
		turning_on_text = T(380941104369, --[[ModItemBuildingCompositeDef PulseEnergyMine turning_on_text]] "Waiting to be armed"),
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightYellowPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightYellow.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1000,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(867563727575, --[[ModItemBuildingCompositeDef GalacticCeilingLampYellow description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(540523221652, --[[ModItemBuildingCompositeDef GalacticCeilingLampYellow display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(662086919834, --[[ModItemBuildingCompositeDef GalacticCeilingLampYellow display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampYellow",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightWhitePX",
		BuildMenuIcon = "Trade/WhiteTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(813060582315, --[[ModItemBuildingCompositeDef WhiteFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(788070279917, --[[ModItemBuildingCompositeDef WhiteFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(870267521336, --[[ModItemBuildingCompositeDef WhiteFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "WhiteFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsGatesPX",
		BuildMenuIcon = "Trade/GalacticFortificationGate.png",
		BuildMenuPos = 40,
		CableClass = "EM",
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 400000,
		IgnoredObstacles = {
			"FortificationColumnElement",
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 400000,
		MinConstructionSkill = 5,
		PowerComponent = true,
		PowerConsumption = 1000,
		PowerSkipsStateChange = true,
		RoomPlacement = "outdoors",
		apply_res_reqs = false,
		attack_attraction = 0,
		can_be_moved = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 20000,
			Metal = 20000,
		}),
		construction_points = 35000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(668005029553, --[[ModItemBuildingCompositeDef GalacticLaserGate description]] "An impenetrable barrier powered by electricity that consumes more energy with each successive attack. Provides unrestricted access if kept open or when deactivated. People can pass through closed gates and lead animals through them. Has been upgraded using Galactic materials and military grade components which improve its efficiency, durability and armour plating."),
		display_name = T(666764063641, --[[ModItemBuildingCompositeDef GalacticLaserGate display_name]] "Galactic Laser Gate"),
		display_name_pl = T(362655332158, --[[ModItemBuildingCompositeDef GalacticLaserGate display_name_pl]] "Galactic Laser Gate"),
		display_name_short = T(702272768320, --[[ModItemBuildingCompositeDef GalacticLaserGate display_name_short]] "Gate"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		entity = "Fort_EM_Gate",
		group = "Defense_Gates",
		has_turned_off_warning = false,
		id = "GalacticLaserGate",
		invert_working_state = true,
		is_building = false,
		labels = {
			"Structures",
		},
		lock_block_box = box(0, -1800, 0, 0, 1800, 2100),
		lock_pass_box = box(-600, -1800, 0, 600, 1800, 2100),
		menu_display_name = T(263952228319, --[[ModItemBuildingCompositeDef GalacticLaserGate menu_display_name]] "Galactic Laser Gate"),
		object_class = "ForceFieldGate",
		turn_off_description = T(384528129837, --[[ModItemBuildingCompositeDef GalacticLaserGate turn_off_description]] "Task survivors to open this gate."),
		turn_off_icon = "UI/Icons/Infopanels/close_window",
		turn_off_text = T(577086148462, --[[ModItemBuildingCompositeDef GalacticLaserGate turn_off_text |gender-variants]] "Open"),
		turn_on_description = T(626746535261, --[[ModItemBuildingCompositeDef GalacticLaserGate turn_on_description]] "Task survivors to close this gate."),
		turn_on_icon = "UI/Icons/Infopanels/open_window",
		turn_on_text = T(767364704601, --[[ModItemBuildingCompositeDef GalacticLaserGate turn_on_text |gender-variants]] "Close"),
		turning_off_text = T(902297366950, --[[ModItemBuildingCompositeDef GalacticLaserGate turning_off_text]] "Waiting to be opened"),
		turning_on_text = T(184637801060, --[[ModItemBuildingCompositeDef GalacticLaserGate turning_on_text]] "Waiting to be closed"),
		update_interval = 10000,
		upgrade_label = "Gate",
		use_upgrade_dummy = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Fridges",
		BuildMenuIcon = "General/FridgeFreezer2.png",
		BuildMenuPos = 2,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		HasSmartConnection = true,
		Health = 400000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
			PlaceObj('CheckTech', {
				Tech = "Refrigeration",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 400000,
		MaxMalfunctionDamage = 25,
		MinMalfunctionDamage = 10,
		MinTimeToMalfunction = 28800000,
		PowerComponent = true,
		PowerConsumption = 18000,
		ResourceDismantlingComponent = true,
		StorageDemandPriority = 2,
		StorageDepotComponent = true,
		StorageTargetTemperature = 4000,
		TempChangeRateOff = 3000,
		TempChangeRateOn = 4000,
		accepted_res = {
			"FoodRaw",
			"FoodProcessed",
			"Food",
			"Drink",
			"AndroidFood",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 40000,
			ScrapElectronics = 3000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(764523607256, --[[ModItemBuildingCompositeDef GalacticFridgePX description]] "Stores a large amount of <color TextEmphasis>Raw food</color><image 'UI/Icons/Resources/res_raw_food' 1100> and <color TextEmphasis>Cooked meals</color><image 'UI/Icons/Resources/res_food' 1100> at low temperatures. Slows down resource decay."),
		display_name = T(119778674646, --[[ModItemBuildingCompositeDef GalacticFridgePX display_name]] "Galactic Large Fridge"),
		display_name_pl = T(936620878236, --[[ModItemBuildingCompositeDef GalacticFridgePX display_name_pl]] "Galactic Fridges"),
		display_name_short = T(836885402522, --[[ModItemBuildingCompositeDef GalacticFridgePX display_name_short]] "Galactic Fridge"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXFridgeFreezer1",
		group = "Storages",
		id = "GalacticFridgePX",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -600, 0, 600, 600, 2100),
		menu_description = "",
		menu_display_name = T(659958406161, --[[ModItemBuildingCompositeDef GalacticFridgePX menu_display_name]] "Galactic Fridge"),
		object_class = "Building",
		placement_spots = {
			"Resourceup",
			"Resourcemiddle1",
			"Resourcemiddle2",
			"Resourcedown",
		},
		show_amount_UI = true,
		stack_count = 200,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightGreenPX",
		BuildMenuIcon = "Trade/GalaxyWallLightGreen.png",
		BuildMenuPos = 2000,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(4096, 0, 0),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MovingAnimHigh = true,
		MovingOffsetZ = -1600,
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1800,
		apply_res_reqs = false,
		attached_to_wall = true,
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToWall', {
				'allow_switch_snap_side', true,
			}),
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(684894656754, --[[ModItemBuildingCompositeDef GalacticWallLampGreen description]] "Provides light while working. Requires a wall. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(922199415198, --[[ModItemBuildingCompositeDef GalacticWallLampGreen display_name]] "Galactic Wall Light"),
		display_name_pl = T(926060700363, --[[ModItemBuildingCompositeDef GalacticWallLampGreen display_name_pl]] "Galactic Wall Light"),
		display_name_short = T(126211269572, --[[ModItemBuildingCompositeDef GalacticWallLampGreen display_name_short]] "Galactic Wall Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "WallLamp_Electric",
		group = "Temperature",
		id = "GalacticWallLampGreen",
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(0, -300, 1400, 300, 300, 2100),
		lock_pass_box = box(300, -300, 1400, 600, 300, 2100),
		object_class = "Building",
		terrain_change = false,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_TerminalsPX",
		BuildMenuIcon = "Trade/GalacticResearchDesk.png",
		BuildMenuPos = 15,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		Health = 500000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticResearchDesk",
			}),
		},
		MaxHealth = 500000,
		PowerComponent = true,
		PowerConsumption = 24000,
		ResearchEfficiency = 200,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 5,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 3000,
			Metal = 30000,
			ScrapElectronics = 6000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 1000,
			ScrapElectronics = 2000,
			ScrapMetal = 10000,
		}),
		description = T(274943952506, --[[ModItemBuildingCompositeDef GalacticResearchDesk description]] "Dedicated space for experiments and researching of new things. The wide range of electronic tools boosts the efficiency of the researcher, speeding up the research progress. With Galactic tech it would greatly enhance the speed of our research."),
		display_name = T(484933599728, --[[ModItemBuildingCompositeDef GalacticResearchDesk display_name]] "Galactic Research Desk"),
		display_name_pl = T(443166237036, --[[ModItemBuildingCompositeDef GalacticResearchDesk display_name_pl]] "Galactic Research Desk"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "ResearchDesk_Advanced",
		group = "Science",
		id = "GalacticResearchDesk",
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -1800, 0, 600, 600, 1050),
		object_class = "ResearchTerminalBase",
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 2000,
		}),
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightGreenPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightGreen.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1000,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(349196535828, --[[ModItemBuildingCompositeDef GalacticCeilingLampGreen description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(490249692344, --[[ModItemBuildingCompositeDef GalacticCeilingLampGreen display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(279324849381, --[[ModItemBuildingCompositeDef GalacticCeilingLampGreen display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampGreen",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BrokenStateAt = 10,
		BuildMenuCategory = "sub_AlienTurretsPX",
		BuildMenuIcon = "CriminalActivity/AlienPlasmaTurret.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CombatDisengageCooldown = 1000,
		DamagedStateAt = 50,
		DistressCallRange = 50000,
		DistressCallRangeFirst = 75000,
		DistressEnrageChance = 100,
		DistressEnrageCount = 10,
		HasSmartConnection = true,
		Health = 1800000,
		HitNegationChance = {
			blunt = 50,
			energy = 50,
			gas = 50,
			pacify = 50,
			piercing = 50,
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienPlasmaTurret",
			}),
		},
		MaxHealth = 1800000,
		MaxMalfunctionDamage = 25,
		MaxTimeToMalfunction = 14400000,
		MinMalfunctionDamage = 10,
		OperationalIntegrity = 5,
		PowerConsumption = 50000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		SightRange = 250000,
		SwitchTargetChance = 100,
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 60,
		attack_pitch_min = -3007,
		attack_retarget = true,
		attack_retry = true,
		attack_weapon = "AlienPlasmaTurret",
		can_see_in_the_dark = true,
		can_turn_off = true,
		combat_rotate_speed = 12000,
		construction_cost = PlaceObj('ConstructionCost', {
			AlienCore = 1000,
			AlienCrystal = 5000,
			AlienElectronics = 5000,
			AlienProcessor = 3000,
		}),
		construction_points = 200000,
		damage_reduction = {
			blunt = 50,
			energy = 50,
			gas = 50,
			pacify = 50,
			piercing = 50,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			AlienCore = 1000,
			AlienCrystal = 5000,
			AlienElectronics = 2000,
			AlienProcessor = 1000,
		}),
		description = T(433897936767, --[[ModItemBuildingCompositeDef AlienPlasmaTurret description]] "<color TextPositive>Alien Plasma Turret</color>\nAlien Enhanced Automated defense station. Shoots at all targets in its range. Has increased damage, speed, efficiency, defense and range. Wireless turret. Its a technological breakthrough. A turret capable of destruction, but very expensive to maintain, let alone build. Fitted with heat seeking vision, capable of shooting tagets in the dark and incendiary plasma rounds, capable of inflicting <color red>burning</color> and <color TextPositive>alien</color> health conditions.\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextPositive>Piercing</color> | <color TextPositive>Energy</color> | <color TextNegative>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(511816783937, --[[ModItemBuildingCompositeDef AlienPlasmaTurret display_name]] "Alien Plasma Turret"),
		display_name_pl = T(485554227087, --[[ModItemBuildingCompositeDef AlienPlasmaTurret display_name_pl]] "Alien Plasma Turret"),
		display_name_short = T(148411613007, --[[ModItemBuildingCompositeDef AlienPlasmaTurret display_name_short]] "Turret"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Turret_Gun",
		group = "Defense_Turrets",
		hit_chance_bonus = 50,
		id = "AlienPlasmaTurret",
		irritation_radius = 70000,
		labels = {
			"CPUCoreDevice",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		lock_pass_box = box(-1200, -1200, 700, 1200, 1200, 2800),
		menu_display_name = T(666645757031, --[[ModItemBuildingCompositeDef AlienPlasmaTurret menu_display_name]] "Alien Plasma Turret"),
		object_class = "FortificationTurret",
		progress = 50000,
		res_consumed = "AlienCore",
		res_operate_time = 46080000,
		res_request_threshold = 20,
		res_start_fueled = true,
		res_stored = 1000,
		soil_form = "circle",
		terrain_change = "soil",
		track_flying_targets = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Fridges",
		BuildMenuIcon = "General/FridgeFreezer.png",
		BuildMenuPos = 3,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		HasSmartConnection = true,
		Health = 400000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
			PlaceObj('CheckTech', {
				Tech = "Freezers",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 400000,
		MaxMalfunctionDamage = 25,
		MinMalfunctionDamage = 10,
		MinTimeToMalfunction = 28800000,
		PowerComponent = true,
		PowerConsumption = 18000,
		ResourceDismantlingComponent = true,
		StorageDemandPriority = 2,
		StorageDepotComponent = true,
		StorageTargetTemperature = -18000,
		TempChangeRateOff = 3000,
		TempChangeRateOn = 4000,
		accepted_res = {
			"FoodRaw",
			"FoodProcessed",
			"Food",
			"Drink",
			"AndroidFood",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 60000,
			ScrapElectronics = 5000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapElectronics = 2000,
			ScrapMetal = 40000,
		}),
		description = T(420316511936, --[[ModItemBuildingCompositeDef GalacticFreezer description]] "Stores a large amount of <color TextEmphasis>Raw food</color><image 'UI/Icons/Resources/res_raw_food' 1100> and <color TextEmphasis>Cooked meals</color><image 'UI/Icons/Resources/res_food' 1100> at frozen state. Stops resource decay."),
		display_name = T(955146061362, --[[ModItemBuildingCompositeDef GalacticFreezer display_name]] "Large Galactic Freezer"),
		display_name_pl = T(589972738205, --[[ModItemBuildingCompositeDef GalacticFreezer display_name_pl]] "Galactic Freezers"),
		display_name_short = T(197735909752, --[[ModItemBuildingCompositeDef GalacticFreezer display_name_short]] "Galactic Freezer"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXFridgeFreezer1",
		group = "Storages",
		id = "GalacticFreezer",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -600, 0, 600, 600, 2100),
		menu_display_name = T(903386883218, --[[ModItemBuildingCompositeDef GalacticFreezer menu_display_name]] "Galactic Freezer"),
		object_class = "Building",
		placement_spots = {
			"Resourceup",
			"Resourcemiddle1",
			"Resourcemiddle2",
			"Resourcedown",
		},
		show_amount_UI = true,
		stack_count = 200,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Medical",
		BuildMenuIcon = "General/MEDKITPX.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		HasSmartConnection = true,
		Health = 500000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 500000,
		MaxMalfunctionDamage = 25,
		MinMalfunctionDamage = 10,
		MinTimeToMalfunction = 28800000,
		PowerConsumption = 25000,
		ResourceDismantlingComponent = true,
		RoomPlacement = "indoors",
		StorageDepotComponent = true,
		accepted_res = {
			"Medicine",
			"AndroidMedicine",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_steal_from = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 40000,
		}),
		description = T(991902121160, --[[ModItemBuildingCompositeDef MedicineStoragePX description]] "Stores a small amount of <color TextEmphasis>medicine</color> in a locked cabinet preventing them from being stolen from. Has increased durability."),
		display_name = T(880440003174, --[[ModItemBuildingCompositeDef MedicineStoragePX display_name]] "Small Medicine Storage"),
		display_name_pl = T(648390357544, --[[ModItemBuildingCompositeDef MedicineStoragePX display_name_pl]] "Small"),
		display_name_short = T(928691599704, --[[ModItemBuildingCompositeDef MedicineStoragePX display_name_short]] "Small"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXMedBoxContainer",
		group = "Storages",
		id = "MedicineStoragePX",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -600, 0, 0, 600, 2450),
		menu_display_name = T(415686705834, --[[ModItemBuildingCompositeDef MedicineStoragePX menu_display_name]] "Small"),
		object_class = "Building",
		placement_spots = {
			"Resourceup",
			"Resourcemiddle1",
			"Resourcemiddle2",
			"Resourcedown",
		},
		stack_count = 100,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_StoragePX_Medical",
		BuildMenuIcon = "General/MedicBoxLarge.png",
		BuildMenuPos = 2,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticStorage",
			}),
		},
		MaxHealth = 1000000,
		MaxMalfunctionDamage = 25,
		MinMalfunctionDamage = 10,
		MinTimeToMalfunction = 28800000,
		PowerConsumption = 25000,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"Medicine",
			"AndroidMedicine",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_steal_from = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 40000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 40000,
		}),
		description = T(706831948022, --[[ModItemBuildingCompositeDef MedicineStoragePX_Large description]] "Stores a large amount of <color TextEmphasis>medicine</color> in a locked cabinet preventing them from being stolen from. Has increased durability."),
		display_name = T(451028464228, --[[ModItemBuildingCompositeDef MedicineStoragePX_Large display_name]] "Large Medicine Storage"),
		display_name_pl = T(811664103275, --[[ModItemBuildingCompositeDef MedicineStoragePX_Large display_name_pl]] "Large"),
		display_name_short = T(726948791806, --[[ModItemBuildingCompositeDef MedicineStoragePX_Large display_name_short]] "Large"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "MedicBoxLargePX",
		group = "Storages",
		id = "MedicineStoragePX_Large",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-900, -1800, 0, 1200, 1800, 1750),
		menu_display_name = T(514557675091, --[[ModItemBuildingCompositeDef MedicineStoragePX_Large menu_display_name]] "Large"),
		object_class = "Building",
		placement_spots = {
			"Resourceup",
			"Resourcemiddle1",
			"Resourcemiddle2",
			"Resourcedown",
		},
		stack_count = 400,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightRedPX",
		BuildMenuIcon = "Trade/RedTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(306965155128, --[[ModItemBuildingCompositeDef RedFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(337610913033, --[[ModItemBuildingCompositeDef RedFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(216299947269, --[[ModItemBuildingCompositeDef RedFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "RedFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberPowerPX",
		BuildMenuIcon = "General/Battery1.png",
		BuildMenuPos = 9,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		FullWindSpeed = 60,
		HasSmartConnection = true,
		Health = 500000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCrystalGenerator",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		MaxMalfunctionDamage = 40,
		MinConstructionSkill = 8,
		MinMalfunctionDamage = 20,
		MinWindSpeed = 10,
		PowerComponent = true,
		Production = 1000000,
		ResConsumerDeviceComponent = true,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_groups = {
			"WindTurbine_Carbon",
		},
		composite_part_names = {
			"Base",
			"Propeller",
		},
		composite_part_parent = {
			Propeller = "Base",
		},
		composite_part_spots = {
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 100000,
			CyberCore = 2000,
			CyberCrystal = 5000,
			CyberProcessor = 1000,
		}),
		construction_points = 40000,
		description = T(117989478639, --[[ModItemBuildingCompositeDef CyberCrystalGenerator description]] "Generates <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> while depleting a Cyber Crystal. Has increased health duration and is more durable. However is prone to malfunction more frequently and requires regular maintainence."),
		display_name = T(125029991161, --[[ModItemBuildingCompositeDef CyberCrystalGenerator display_name]] "Cyber Crystal Generator"),
		display_name_pl = T(507521079622, --[[ModItemBuildingCompositeDef CyberCrystalGenerator display_name_pl]] "Cyber Crystal Generator"),
		display_name_short = T(418203061355, --[[ModItemBuildingCompositeDef CyberCrystalGenerator display_name_short]] "Cyber Generator"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXGenerator",
		group = "Power",
		id = "CyberCrystalGenerator",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -1800, 0, 600, 2100, 3850),
		menu_description = T(480183942540, --[[ModItemBuildingCompositeDef CyberCrystalGenerator menu_description]] "Electricity has been the true engine behind the Human race, excelling them into a Galactic threat. New methods have always been created in ways to produce more efficient energy production. The Cyber Crystal Generator was one that was tested and worked, exceptionally well infact. However due to the Galactic Laws restricting the usage of Cyber Crystals due to the potential risk of Human extinction if handled incorrect the generator design was scrapped. However i'm certain it may still be in a backed up blueprint somewhere... perhaps we can try again and do it right this time."),
		menu_display_name = T(457456156934, --[[ModItemBuildingCompositeDef CyberCrystalGenerator menu_display_name]] "Cyber Crystal Generator"),
		object_class = "Building",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 5000,
			Metal = 25000,
			ScrapElectronics = 5000,
		}),
		res_consumed = "CyberCrystal",
		res_operate_time = 40000000,
		res_request_threshold = 1,
		res_start_fueled = true,
		res_stored = 1000,
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 10000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightRedPX",
		BuildMenuIcon = "Trade/GalaxyCeilingLightRed.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1000,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(590443160121, --[[ModItemBuildingCompositeDef GalacticCeilingLampRed description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(649798251979, --[[ModItemBuildingCompositeDef GalacticCeilingLampRed display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(795743079697, --[[ModItemBuildingCompositeDef GalacticCeilingLampRed display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampRed",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticPowerPX",
		BuildMenuIcon = "General/GrapheneSolarCells.png",
		BuildMenuPos = 4,
		CanPlaceInShelter = false,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		FullWindSpeed = 60,
		Health = 150000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 150000,
		MaxTimeToMalfunction = 76800000,
		MinConstructionSkill = 6,
		MinTimeToMalfunction = 38400000,
		MinWindSpeed = 10,
		PowerComponent = true,
		PowerProductionStopsAtNight = true,
		Production = 150000,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set( "SolarFlare", "Thunderstorm" ),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_parent = {
			Arm = "Base",
			Panel = "Arm",
			Propeller = "Base",
		},
		composite_part_spots = {
			Arm = "Arm",
			Panel = "Panel",
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 100000,
			ScrapElectronics = 5000,
		}),
		construction_points = 100000,
		description = T(692220750934, --[[ModItemBuildingCompositeDef CarbonSolar description]] "Generates increased <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> during the day."),
		display_name = T(158250340088, --[[ModItemBuildingCompositeDef CarbonSolar display_name]] "Carbon Solar Panel"),
		display_name_pl = T(707363855505, --[[ModItemBuildingCompositeDef CarbonSolar display_name_pl]] "Carbon Solar Panel"),
		display_name_short = T(294070173390, --[[ModItemBuildingCompositeDef CarbonSolar display_name_short]] "Carbon Solar Panel"),
		entity = "GraphenSolarPanel",
		group = "Power",
		id = "CarbonSolar",
		labels = {
			"PowerSources",
			"SolarFlareShieldedTargets",
			"BerserkTargets",
		},
		lock_block_box = box(-600, -1800, 0, 1800, 600, 2100),
		menu_description = T(917104789625, --[[ModItemBuildingCompositeDef CarbonSolar menu_description]] "Carbon Solar Panel generates electricity during the day. Has increased output and capacity."),
		menu_display_name = T(582614099378, --[[ModItemBuildingCompositeDef CarbonSolar menu_display_name]] "Carbon Solar Panel"),
		object_class = "SolarPanelAutomated",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 20000,
		}),
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_TerminalsPX",
		BuildMenuIcon = "Biologist/LabDesk.png",
		BuildMenuPos = 8,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		IsPowerConsumer = true,
		LightRadius = 2000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "LabDesk",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxTimeToMalfunction = 28800000,
		MinTimeToMalfunction = 9600000,
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 5000,
		ProductionDeviceComponent = true,
		ProductionDeviceSkipsStateChange = true,
		accepted_res = {
			"Organs",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 2000,
			Metal = 30000,
			ScrapElectronics = 15000,
		}),
		construction_points = 20000,
		description = T(867629637729, --[[ModItemBuildingCompositeDef LabDesk description]] "Discover new recipes, materials and discoveries by researching bodily organisms."),
		display_name = T(343266196224, --[[ModItemBuildingCompositeDef LabDesk display_name]] "Dissectory"),
		display_name_pl = T(410755265779, --[[ModItemBuildingCompositeDef LabDesk display_name_pl]] "Dissectory"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXBiologyCNS",
		group = "Science",
		id = "LabDesk",
		interfaces = {
			"Biology",
		},
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-600, -300, 0, 600, 300, 1750),
		menu_description = T(635598676515, --[[ModItemBuildingCompositeDef LabDesk menu_description]] "Discover new recipes, materials and discoveries by researching bodily organisms."),
		menu_display_name = T(125814379646, --[[ModItemBuildingCompositeDef LabDesk menu_display_name]] "Dissectory"),
		object_class = "Building",
		off_when_idle = true,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 4000,
		}),
		stack_count = 10,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticDevicesPX",
		BuildMenuIcon = "General/GalacticFurnace02.png",
		BuildMenuPos = 5,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		HasSmartConnection = true,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticFurnace",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxTimeToMalfunction = 96000000,
		MinTimeToMalfunction = 38400000,
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 40000,
		ProductionDeviceComponent = true,
		ProductionDeviceSkipsStateChange = true,
		access_range = 2400,
		attack_attraction = 20,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 40000,
			Stone = 40000,
		}),
		construction_points = 30000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 30000,
			Stone = 30000,
		}),
		description = T(569129283251, --[[ModItemBuildingCompositeDef GalacticFurnace description]] "Melts raw resources over time. Has an increased capacity and speed than the traditional electric furnaces.\n\nTransforms <color TextEmphasis>Scrap metal</color><image 'UI/Icons/Resources/res_scrap_metal' 1100> and <color TextEmphasis>Ore</color><image 'UI/Icons/Resources/res_ore' 1100> into <color TextEmphasis>Metal alloys</color><image 'UI/Icons/Resources/res_metal_ingot' 1100>."),
		display_name = T(476122873819, --[[ModItemBuildingCompositeDef GalacticFurnace display_name]] "Galactic Furnace"),
		display_name_pl = T(491025443076, --[[ModItemBuildingCompositeDef GalacticFurnace display_name_pl]] "Galactic Furnace"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "GalacticFurnacePX",
		group = "Devices",
		id = "GalacticFurnace",
		initial_recipe = "AlloyMetalGalactic",
		interfaces = {
			"GalacticFurnace",
		},
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1500, -1500, 0, 1800, 1500, 2800),
		menu_description = T(428980503864, --[[ModItemBuildingCompositeDef GalacticFurnace menu_description]] "More efficient, more capacity, faster smelting time and burns brighter."),
		menu_display_name = T(867597900746, --[[ModItemBuildingCompositeDef GalacticFurnace menu_display_name]] "Galactic Furnace"),
		object_class = "Building",
		off_when_idle = true,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 10000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightBluePX",
		BuildMenuIcon = "Trade/GalaxyCeilingLight.png",
		BuildMenuPos = 2001,
		HasSmartConnection = true,
		IlluminateObjects = function (self)
			if self.active then self:IlluminateObjectsInRadius() end
		end,
		InvulnerableComponent = true,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 8000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		PowerComponent = true,
		PowerConsumption = 300,
		access_range = 1000,
		affected_by_disasters = set(),
		attack_attraction = 1,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 3000,
		}),
		construction_points = 4000,
		custom_constr_rules = {
			PlaceObj('ConstructionObjectSnapToCeiling', nil),
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 3000,
		}),
		description = T(381058495179, --[[ModItemBuildingCompositeDef GalacticCeilingLampBlue description]] "Provides light while working. Requires a ceiling. Due to an advancement in technology these light fixtures drain less electricity and have practically zero chance of malfunctioning. Has light indicators, enhanced range and color options."),
		display_name = T(854362118800, --[[ModItemBuildingCompositeDef GalacticCeilingLampBlue display_name]] "Galactic Ceiling Light"),
		display_name_pl = T(779766378483, --[[ModItemBuildingCompositeDef GalacticCeilingLampBlue display_name_pl]] "Galactic Ceiling Light"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "CeilingLamp_Electric",
		id = "GalacticCeilingLampBlue",
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-300, -300, -700, 300, 300, 0),
		object_class = "Building",
		supported_by_roof = true,
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticDevicesPX",
		BuildMenuIcon = "General/RefineryGalactic.png",
		BuildMenuPos = 13,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "ScrapMetal",
		HasSmartConnection = true,
		Health = 500000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticRefinery",
			}),
		},
		MaxHealth = 500000,
		OwnedComponent = true,
		PowerComponent = true,
		PowerConsumption = 25000,
		ProductionDeviceComponent = true,
		ProductionDeviceSkipsStateChange = true,
		ResearchEfficiency = 175,
		access_range = 2400,
		affected_by_disasters = set( "SolarFlare", "Thunderstorm" ),
		apply_res_reqs = false,
		attack_attraction = 5,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 30000,
			ScrapElectronics = 2000,
			Wood = 30000,
		}),
		construction_points = 3000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(546916004142, --[[ModItemBuildingCompositeDef GalacticRefinery description]] "Used for refining certain resources into other required materials."),
		display_name = T(353553507353, --[[ModItemBuildingCompositeDef GalacticRefinery display_name]] "Galactic Refinery"),
		display_name_pl = T(945816564703, --[[ModItemBuildingCompositeDef GalacticRefinery display_name_pl]] "Galactic Refinery"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXRefinary1",
		group = "Devices",
		id = "GalacticRefinery",
		initial_recipe = "RefinaryFuel",
		interfaces = {
			"RefineryInterface",
		},
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		load_anim_hands = "standing_PickUp_Hands_High",
		lock_block_box = box(-800, -2000, 0, 800, 2000, 1400),
		menu_display_name = T(975094153669, --[[ModItemBuildingCompositeDef GalacticRefinery menu_display_name]] "GalacticRefinery"),
		object_class = "Building",
		off_when_idle = true,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 10000,
			ScrapElectronics = 2000,
		}),
		unload_anim_hands = "standing_DropDown_Hands_High",
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_LightYellowPX",
		BuildMenuIcon = "Trade/YellowTallLight.png",
		BuildMenuPos = 199,
		HasSmartConnection = true,
		Health = 1000000,
		IsPowerConsumer = true,
		LightDirection = point(0, 0, -4096),
		LightFov = 10800,
		LightRadius = 40000,
		LightShowArea = true,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 2000,
		RoomPlacement = "outdoors",
		access_range = 1800,
		attack_attraction = 25,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 20000,
			ScrapElectronics = 1000,
		}),
		construction_points = 20000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 20000,
		}),
		description = T(956254134053, --[[ModItemBuildingCompositeDef YellowFloodLightPX description]] "Lights up a wide area around itself while working. Has extended range, does not malfunction, more durability and drains less electricity."),
		display_name = T(333098870788, --[[ModItemBuildingCompositeDef YellowFloodLightPX display_name]] "Floodlight"),
		display_name_pl = T(202257369171, --[[ModItemBuildingCompositeDef YellowFloodLightPX display_name_pl]] "Floodlights"),
		entity = "Floodlight_Electric",
		group = "Temperature",
		id = "YellowFloodLightPX",
		lock_block_box = box(-600, -600, 0, 600, 600, 6300),
		lock_flags = 124,
		object_class = "Building",
		soil_form = "circle",
		terrain_change = "soil",
		update_interval = 5000,
		working_during_construction = true,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_AlienPowerPX",
		BuildMenuIcon = "CriminalActivity/AlienSolarPanel.png",
		BuildMenuPos = 4,
		CanPlaceInShelter = false,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		FullWindSpeed = 60,
		Health = 1500000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienSolarPanel",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 1500000,
		MaxMalfunctionDamage = 0,
		MaxTimeToMalfunction = 960000000000000000,
		MinConstructionSkill = 6,
		MinMalfunctionDamage = 0,
		MinTimeToMalfunction = 96000000000000000,
		MinWindSpeed = 10,
		PowerComponent = true,
		PowerProductionStopsAtNight = true,
		Production = 1215000,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_parent = {
			Arm = "Base",
			Panel = "Arm",
			Propeller = "Base",
		},
		composite_part_spots = {
			Arm = "Arm",
			Panel = "Panel",
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			AlienCore = 1000,
			AlienProcessor = 2000,
			CarbonNanotubes = 100000,
		}),
		construction_points = 100000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(385302722940, --[[ModItemBuildingCompositeDef AlienSolar description]] "Generates increased <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> during the day. Cannot be effected by weather conditions, has increased efficiency, durability and energy output."),
		display_name = T(105687185357, --[[ModItemBuildingCompositeDef AlienSolar display_name]] "Alien Solar Panel"),
		display_name_pl = T(588568868631, --[[ModItemBuildingCompositeDef AlienSolar display_name_pl]] "Alien Solar Panel"),
		display_name_short = T(392021072937, --[[ModItemBuildingCompositeDef AlienSolar display_name_short]] "Alien Solar"),
		entity = "GraphenSolarPanel",
		group = "Power",
		id = "AlienSolar",
		labels = {
			"PowerSources",
			"ToxicAirPowerProductionAffected",
			"SolarFlarePowerProductionAffected",
			"DustStormPowerProductionAffected",
			"BerserkTargets",
		},
		lock_block_box = box(-600, -1800, 0, 1800, 600, 2100),
		menu_description = T(500260070761, --[[ModItemBuildingCompositeDef AlienSolar menu_description]] "Alien Solar Panel generates electricity during the day. Has increased output and capacity. Weather resistant."),
		menu_display_name = T(262280586965, --[[ModItemBuildingCompositeDef AlienSolar menu_display_name]] "Alien Solar Panel"),
		object_class = "SolarPanelAutomated",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 40000,
		}),
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_CyberPowerPX",
		BuildMenuIcon = "CriminalActivity/CyberLightningPole.png",
		BuildMenuPos = 1000,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal-Construction",
		HasSmartConnection = true,
		Health = 500000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberLightningPole",
			}),
		},
		MaxHealth = 500000,
		PowerCharge = 2000000,
		PowerComponent = true,
		RoomPlacement = "outdoors",
		ShieldArea = 40000,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 10,
		construction_cost = PlaceObj('ConstructionCost', {
			CyberProcessor = 1000,
			Metal = 20000,
			ScrapElectronics = 5000,
			ScrapMetal = 10000,
		}),
		construction_points = 15000,
		description = T(967844550601, --[[ModItemBuildingCompositeDef CyberLightningPole description]] "Catches nearby lightning strikes in a greater radius. Increases and Distributes the absorbed energy to all batteries in the grid."),
		display_name = T(468850894633, --[[ModItemBuildingCompositeDef CyberLightningPole display_name]] "Cyber Lightning Rod"),
		display_name_pl = T(720713646139, --[[ModItemBuildingCompositeDef CyberLightningPole display_name_pl]] "Cyber Lightning Rod"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "PXLightningRod",
		group = "Power",
		id = "CyberLightningPole",
		lock_block_box = box(-1200, -900, 0, 1200, 900, 23800),
		object_class = "LightningRodBuilding",
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsWallsPX",
		BuildMenuIcon = "Trade/GalacticFortification.png",
		BuildMenuPos = 40,
		CableClass = "EM",
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Metal-Construction",
		Health = 500000,
		IgnoredObstacles = {
			"FortificationElement",
			"FortificationColumnElement",
		},
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 500000,
		MinConstructionSkill = 5,
		NextTemplate = {
			"Gate_EM",
		},
		PowerComponent = true,
		PowerConsumption = 1000,
		RoomPlacement = "outdoors",
		apply_res_reqs = false,
		attack_attraction = 0,
		base_material = "",
		can_be_moved = false,
		can_work_deconstructing = true,
		column_freq = 5,
		column_priority = 10000,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 10000,
			Metal = 10000,
		}),
		construction_points = 4000,
		damage_reduction = {
			blunt = 20,
			energy = 20,
			gas = 20,
			pacify = 20,
			piercing = 20,
		},
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 10000,
		}),
		description = T(584459522630, --[[ModItemBuildingCompositeDef GalacticLaserBarrierWall description]] "An impenetrable barrier powered by electricity that consumes more energy with each successive attack. When not supplied with electricity, the barrier is deactivated and provides unrestricted access. Galactic technology had advanced the standard force field barrier to another level of design by making it drain less energy when taking damage, more durable posts and armored infastructure. "),
		display_name = T(886663238354, --[[ModItemBuildingCompositeDef GalacticLaserBarrierWall display_name]] "Galactic Laser Barrier"),
		display_name_pl = T(379004587909, --[[ModItemBuildingCompositeDef GalacticLaserBarrierWall display_name_pl]] "Galactic Laser Barrier"),
		display_name_short = T(869853165545, --[[ModItemBuildingCompositeDef GalacticLaserBarrierWall display_name_short]] "Galactic Laser Barrier"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		group = "Defense_Fortifications",
		id = "GalacticLaserBarrierWall",
		labels = {
			"Structures",
		},
		material = "EM",
		max_depth = 350,
		menu_display_name = T(923795210753, --[[ModItemBuildingCompositeDef GalacticLaserBarrierWall menu_display_name]] "Galactic Laser Barrier"),
		object_class = "ForceFieldWallPiece",
		range_tags = {
			"combat",
		},
		require_block_box_above_0 = false,
		update_interval = 10000,
		upgrade_label = "Wall",
		use_upgrade_dummy = false,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_StoragePX_Safes_Blueprints",
		BuildMenuIcon = "General/BPSafePX.png",
		BuildMenuPos = 1,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		CustomMaterial = "Metal",
		Health = 1200000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlueprintSafe",
			}),
		},
		MaxHealth = 1200000,
		MinConstructionSkill = 2,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"BlueprintsInfoPanel",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_disable_supply = true,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 50000,
		}),
		construction_points = 5000,
		description = T(573427105419, --[[ModItemBuildingCompositeDef BlueprintSafe description]] "Provides small storage space for \n<color TextEmphasis>Blueprints</color> and <color TextEmphasis>Trading Schematics</color>.\nCannot be stolen from."),
		display_name = T(867614151275, --[[ModItemBuildingCompositeDef BlueprintSafe display_name]] "Standard Blueprint Safe"),
		display_name_pl = T(673594004278, --[[ModItemBuildingCompositeDef BlueprintSafe display_name_pl]] "Standard"),
		display_name_short = T(357056483398, --[[ModItemBuildingCompositeDef BlueprintSafe display_name_short]] "Standard"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXBlueprintSafe",
		group = "Storages",
		id = "BlueprintSafe",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-500, -400, 0, 600, 400, 1750),
		menu_description = T(771357851161, --[[ModItemBuildingCompositeDef BlueprintSafe menu_description]] "A small safe specifically designed to store highly confidential and expensive blueprints. Also a location where the authorities wont discover them."),
		menu_display_name = T(101964564569, --[[ModItemBuildingCompositeDef BlueprintSafe menu_display_name]] "Standard"),
		object_class = "Building",
		show_amount_UI = true,
		stack_count = 20,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
		upgrade_label = "StorageChest",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_StoragePX_Safes_Blueprints",
		BuildMenuIcon = "General/SafeBoxPX.png",
		BuildMenuPos = 2,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ClosedStorage = true,
		CustomMaterial = "Metal",
		Health = 1200000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlueprintSafe",
			}),
		},
		MaxHealth = 1200000,
		MinConstructionSkill = 2,
		ResourceDismantlingComponent = true,
		StorageDepotComponent = true,
		accepted_res = {
			"BlueprintsInfoPanel",
		},
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_disable_supply = true,
		can_steal_from = false,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 100000,
		}),
		construction_points = 5000,
		description = T(879787115310, --[[ModItemBuildingCompositeDef BlueprintSafe_Large description]] "Provides large storage space for \n<color TextEmphasis>Blueprints</color> and <color TextEmphasis>Trading Schematics</color>.\nCannot be stolen from."),
		display_name = T(884916071795, --[[ModItemBuildingCompositeDef BlueprintSafe_Large display_name]] "Large Blueprint Safe"),
		display_name_pl = T(954422649093, --[[ModItemBuildingCompositeDef BlueprintSafe_Large display_name_pl]] "Large"),
		display_name_short = T(812619050494, --[[ModItemBuildingCompositeDef BlueprintSafe_Large display_name_short]] "Large"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "BlueprintSafePX",
		group = "Storages",
		id = "BlueprintSafe_Large",
		labels = {
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-900, -1800, 0, 900, 1800, 2100),
		menu_description = T(765950656820, --[[ModItemBuildingCompositeDef BlueprintSafe_Large menu_description]] "A large safe specifically designed to store highly confidential and expensive blueprints. Also a location where the authorities wont discover them."),
		menu_display_name = T(564613773215, --[[ModItemBuildingCompositeDef BlueprintSafe_Large menu_display_name]] "Large"),
		object_class = "Building",
		show_amount_UI = true,
		stack_count = 100,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 20000,
		upgrade_label = "StorageChest",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticPowerPX",
		BuildMenuIcon = "General/CarbonWindTurbines.png",
		BuildMenuPos = 7,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		FullWindSpeed = 60,
		Health = 150000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 150000,
		MaxMalfunctionDamage = 40,
		MaxTimeToMalfunction = 76800000,
		MinConstructionSkill = 6,
		MinMalfunctionDamage = 20,
		MinTimeToMalfunction = 28800000,
		MinWindSpeed = 0,
		PowerComponent = true,
		Production = 200000,
		RoomPlacement = "outdoors",
		RotationSounds = {
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM3",
				'Value', 800,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM2",
				'Value', 500,
			}),
			PlaceObj('SoundAtSpeed', {
				'Name', "windturbinecarbon_rotationRPM1",
			}),
		},
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 20,
		can_turn_off = true,
		composite_part_groups = {
			"WindTurbine_Carbon",
		},
		composite_part_names = {
			"Base",
			"Propeller",
		},
		composite_part_parent = {
			Propeller = "Base",
		},
		composite_part_spots = {
			Propeller = "Propeller",
		},
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 75000,
			ScrapElectronics = 3000,
		}),
		construction_points = 40000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 25000,
			ScrapElectronics = 1000,
		}),
		description = T(325677241256, --[[ModItemBuildingCompositeDef GalacticTurbine description]] "Generates <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> depending on wind speed. Has an increased production and efficiency than the standard turbines used across the Galaxy."),
		display_name = T(908755362646, --[[ModItemBuildingCompositeDef GalacticTurbine display_name]] "Galactic Turbine"),
		display_name_pl = T(511748385435, --[[ModItemBuildingCompositeDef GalacticTurbine display_name_pl]] "Galactic Wind Turbine"),
		entity = "WindTurbineCarbone",
		group = "Power",
		id = "GalacticTurbine",
		labels = {
			"PowerSources",
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 8400),
		menu_display_name = T(894851151182, --[[ModItemBuildingCompositeDef GalacticTurbine menu_display_name]] "Galactic Turbine"),
		object_class = "WindTurbineBuilding",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 20000,
		}),
		soil_border = 600,
		soil_form = "circle",
		terrain_change = "soil",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticFortificationsWallsPX",
		BuildMenuIcon = "Trade/AdvCarbonTower.png",
		BuildMenuPos = 3,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "Plastic",
		Health = 2000000,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeFortifications",
			}),
		},
		MaxHealth = 2000000,
		MinConstructionSkill = 5,
		RoomPlacement = "outdoors",
		access_range = 2400,
		affected_by_disasters = set(),
		apply_res_reqs = false,
		attack_attraction = 0,
		construction_cost = PlaceObj('ConstructionCost', {
			CarbonNanotubes = 100000,
		}),
		construction_points = 28000,
		damage_reduction = {
			blunt = 30,
			energy = 30,
			gas = 30,
			pacify = 30,
			piercing = 30,
		},
		description = T(752860172446, --[[ModItemBuildingCompositeDef AdvancedCarbonTower description]] "Elevated shooting platform. Drafted survivors could use it to shoot above fortifications and fences. Galactic materials used increase the Carbon's strength and durability by a large amount."),
		display_name = T(683406819250, --[[ModItemBuildingCompositeDef AdvancedCarbonTower display_name]] "Advanced Carbon Tower"),
		display_name_pl = T(773472322927, --[[ModItemBuildingCompositeDef AdvancedCarbonTower display_name_pl]] "Advanced Carbon Towers"),
		display_name_short = T(152333994415, --[[ModItemBuildingCompositeDef AdvancedCarbonTower display_name_short]] "Advanced Carbon Towers"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
		},
		entity = "CarbonTower",
		group = "Defense_Towers",
		id = "AdvancedCarbonTower",
		labels = {
			"Structures",
			"BerserkTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 2800),
		lock_flags = 12,
		lock_pass_box = box(-1800, -600, 0, -600, 600, 2100),
		max_depth = 250,
		max_elevate = 250,
		menu_display_name = T(188026592343, --[[ModItemBuildingCompositeDef AdvancedCarbonTower menu_display_name]] "Advanced Carbon Towers"),
		object_class = "FortificationTower",
		prefer_in_buildmenu = true,
		range_tags = {
			"combat",
		},
		soil_border = 600,
		upgrade_label = "Tower",
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AttackAttractionGetter = function (self)
			if not self.res_amounts:IsEmpty() then
				return self.attack_attraction * 3
			else
				return self.attack_attraction
			end
		end,
		BuildMenuCategory = "sub_GalacticDevicesPX",
		BuildMenuIcon = "Trade/HydroRack.png",
		BuildMenuPos = 100,
		CableClass = "Hydroponic",
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		CustomMaterial = "ScrapMetal",
		HasSmartConnection = true,
		Health = 300000,
		IsPowerConsumer = true,
		LightInterval = 3000,
		LightRadius = 4000,
		LightingComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvHydroRacks",
			}),
		},
		MaxHealth = 300000,
		PowerComponent = true,
		PowerConsumption = 100,
		access_range = 2400,
		apply_res_reqs = false,
		attack_attraction = 40,
		can_be_moved = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 15000,
		}),
		construction_points = 2250,
		custom_constr_rules = {
			PlaceObj('AlignToWallConstructionRule', nil),
		},
		description = T(477563927700, --[[ModItemBuildingCompositeDef AdvancedHydroRack description]] "Grows crops under artificial light using advanced equipment. With a few tweaks here and there we could rig up internal batteries that charge from the suns rays, by doing this it makes the hydroponic racks cost us practically any electricity to run, completely powered by the sun itself and the batteries supplied to hold enough to last throughout the night. Completely self sufficient! Except ofcourse the plants inside, we have to still care for them."),
		display_name = T(307025223453, --[[ModItemBuildingCompositeDef AdvancedHydroRack display_name]] "Advanced Hydroponic Racks"),
		display_name_pl = T(381397405266, --[[ModItemBuildingCompositeDef AdvancedHydroRack display_name_pl]] "Advanced Hydroponic Racks"),
		display_name_short = T(170117837152, --[[ModItemBuildingCompositeDef AdvancedHydroRack display_name_short]] "Advanced Hydroponic Racks"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "HydroponicRack_01",
		group = "Devices",
		id = "AdvancedHydroRack",
		labels = {
			"BerserkTargets",
			"SolarFlareShieldedTargets",
		},
		max_depth = 350,
		menu_display_name = T(928006549643, --[[ModItemBuildingCompositeDef AdvancedHydroRack menu_display_name]] "Adv Hydroponic Racks"),
		object_class = "HydroponicRackBuilding",
		require_surfaces = false,
		update_interval = 20000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		AOEFilter = function (obj, self)
			return IsKindOf(obj, "UnitHealth") and obj.CombatGroup ~= self.CombatGroup
		end,
		AddUseTimeWhenActive = false,
		BuildMenuCategory = "sub_GalacticFortificationsTrapsPX",
		BuildMenuIcon = "Trade/TrapExplosive2.png",
		BuildMenuPos = 30,
		ChangeOwnerIcon = "UI/Icons/Infopanels/assign_owner",
		ConstructIgnore = set( "Flooring" ),
		Health = 25000,
		InvulnerableComponent = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "TradeTraps",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 25000,
		MaxMalfunctionDamage = 100,
		MaxTimeToMalfunction = 96000000,
		MinMalfunctionDamage = 100,
		MinTimeToMalfunction = 9600000,
		ProximitySwitchComponent = true,
		ProximitySwitchFilter = function (self, obj)
			return obj:CanMove() and obj.CombatGroup ~= self.CombatGroup and obj.CombatGroup ~= "ScavengerBirds" and obj:IsOnGround()
		end,
		ProximitySwitchRange = 600,
		ProximitySwitchTargetSpot = "Foot",
		apply_res_reqs = false,
		attack_weapon = "GasMine",
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			GlutchGlands = 2000,
			LiquidFuel = 10000,
			Metal = 15000,
		}),
		construction_points = 10000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			ScrapMetal = 5000,
		}),
		description = T(462507207918, --[[ModItemBuildingCompositeDef GasMine description]] "Simple pressure-activated gas trap. Requires rearming after each use. Has been designed to release toxic chemicals into the air upon being triggered.\n\nStats:\n<style TechSubtitleBlue>- 3 Meter Range.\n- Health Conditions (Damaged Lungs, Shortness of Breath, Pain and Poisoning)\n- Moderate Poisoning - 80% Trigger Chance.\n- Severe Poisoning - 20% Trigger Chance.\n- Extreme Poisoning - 10% Trigger Chance.\n- Instant Death - 2%</style>\n\n<style red>Element:</style> \n<color TextNegative>Blunt</color> | <color TextNegative>Piercing</color> | <color TextNegative>Energy</color> | <color TextPositive>Gas</color> | <color TextNegative>Pacify</color>"),
		display_name = T(867159780902, --[[ModItemBuildingCompositeDef GasMine display_name]] "Gas Mine"),
		display_name_pl = T(455949651335, --[[ModItemBuildingCompositeDef GasMine display_name_pl]] "Gas Mine"),
		enable_overlay_on_placement = {
			RangeOverlay = true,
			RoomsOverlay = true,
		},
		enable_overlay_on_selection = {
			RangeOverlay = true,
		},
		entity = "Trap_LandMine",
		forbid_clip_plane = true,
		group = "Defense",
		id = "GasMine",
		load_anim_handsclose = "standing_PickUp_HandsClose_Low",
		lock_block_box = box(-450, -450, 0, 450, 450, 0),
		lock_pass_box = box(-600, -600, 0, 600, 600, 700),
		max_depth = 200,
		max_elevate = 200,
		menu_display_name = T(630392949715, --[[ModItemBuildingCompositeDef GasMine menu_display_name]] "Gas Mine"),
		menu_rollover_hint = T(621918044584, --[[ModItemBuildingCompositeDef GasMine menu_rollover_hint]] "Gas Mine"),
		multi_placement = true,
		multi_placement_name = T(972762241132, --[[ModItemBuildingCompositeDef GasMine multi_placement_name]] "mine"),
		multi_placement_name_pl = T(338029937513, --[[ModItemBuildingCompositeDef GasMine multi_placement_name_pl]] "mines"),
		object_class = "SingleUseTrap",
		orient_to_terrain = true,
		progress = 2000,
		range_tags = {
			"combat",
		},
		repair_cost = PlaceObj('ConstructionCost', {
			LiquidFuel = 1000,
			Metal = 5000,
		}),
		require_surfaces = false,
		snap_to_passability = true,
		turn_off_anim = "standing_DropDown_Hands_Low",
		turn_off_description = T(749668794417, --[[ModItemBuildingCompositeDef GasMine turn_off_description]] "Task the survivors to disarm this trap."),
		turn_off_icon = "UI/Icons/Infopanels/trap_disarm",
		turn_off_text = T(191982953411, --[[ModItemBuildingCompositeDef GasMine turn_off_text |gender-variants]] "Disarm"),
		turn_on_anim = "standing_DropDown_Hands_Low",
		turn_on_description = T(349767435293, --[[ModItemBuildingCompositeDef GasMine turn_on_description]] "Task the survivors to arm this trap."),
		turn_on_icon = "UI/Icons/Infopanels/trap_arm",
		turn_on_text = T(199787407894, --[[ModItemBuildingCompositeDef GasMine turn_on_text |gender-variants]] "Arm"),
		turned_off_warning = "Disarmed",
		turning_off_text = T(483263123318, --[[ModItemBuildingCompositeDef GasMine turning_off_text]] "Waiting to be disarmed"),
		turning_on_text = T(157643921463, --[[ModItemBuildingCompositeDef GasMine turning_on_text]] "Waiting to be armed"),
		unload_anim_handsclose = "standing_DropDown_HandsClose_Low",
		update_interval = 3000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/PXHoloProjector.png",
		BuildMenuPos = 30,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		SupportStrengthRequirement = "weak",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 40000,
			ScrapElectronics = 2000,
		}),
		construction_points = 40000,
		description = T(862382339663, --[[ModItemBuildingCompositeDef PXHoloProjector description]] "A hologram projector."),
		display_name = T(695262196598, --[[ModItemBuildingCompositeDef PXHoloProjector display_name]] "Holo-Projector"),
		display_name_pl = T(220563373662, --[[ModItemBuildingCompositeDef PXHoloProjector display_name_pl]] "Holo-Projector"),
		display_name_short = T(306803199078, --[[ModItemBuildingCompositeDef PXHoloProjector display_name_short]] "Holo-Projector"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXHologramDec",
		group = "Relaxatation",
		id = "PXHoloProjector",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-2400, -2700, 0, 2400, 2700, 3850),
		menu_display_name = T(578416733291, --[[ModItemBuildingCompositeDef PXHoloProjector menu_display_name]] "Holo-Projector"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/TreeDecorPX.png",
		BuildMenuPos = 33,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			EnergyCrystals = 5000,
			Stone = 25000,
			Wood = 50000,
		}),
		construction_points = 40000,
		description = T(519849317900, --[[ModItemBuildingCompositeDef PXTreeDecor description]] "A crystalized tree that provides comfort to survivors."),
		display_name = T(476665195901, --[[ModItemBuildingCompositeDef PXTreeDecor display_name]] "Crystal Tree"),
		display_name_pl = T(761127461876, --[[ModItemBuildingCompositeDef PXTreeDecor display_name_pl]] "Crystal Tree"),
		display_name_short = T(219977464861, --[[ModItemBuildingCompositeDef PXTreeDecor display_name_short]] "Crystal Tree"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXTreeDecoration",
		group = "Relaxatation",
		id = "PXTreeDecor",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-900, -1800, 0, 1800, 2400, 4900),
		menu_display_name = T(329013428302, --[[ModItemBuildingCompositeDef PXTreeDecor menu_display_name]] "Crystal Tree"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/AlienRockPXDecor.png",
		BuildMenuPos = 34,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			GlutchGlands = 5000,
			Stone = 50000,
		}),
		construction_points = 40000,
		description = T(426808256276, --[[ModItemBuildingCompositeDef PXAlienRockDecor description]] "A rock with some strange green substance... I mean, it cant be all that great can it?"),
		display_name = T(112726033662, --[[ModItemBuildingCompositeDef PXAlienRockDecor display_name]] "Alien Rock"),
		display_name_pl = T(750424554092, --[[ModItemBuildingCompositeDef PXAlienRockDecor display_name_pl]] "Alien Rock"),
		display_name_short = T(930855361673, --[[ModItemBuildingCompositeDef PXAlienRockDecor display_name_short]] "Alien Rock"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "AlienRockDecPX",
		group = "Relaxatation",
		id = "PXAlienRockDecor",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 1750),
		menu_display_name = T(597674169219, --[[ModItemBuildingCompositeDef PXAlienRockDecor menu_display_name]] "Alien Rock"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/PXEyesculpture.png",
		BuildMenuPos = 60,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 60000,
		}),
		construction_points = 40000,
		description = T(962404670122, --[[ModItemBuildingCompositeDef PXEyeSculpture description]] "A sculpture of a glowing eye."),
		display_name = T(296358168983, --[[ModItemBuildingCompositeDef PXEyeSculpture display_name]] "Eye Sculpture"),
		display_name_pl = T(125904486047, --[[ModItemBuildingCompositeDef PXEyeSculpture display_name_pl]] "Eye Sculpture"),
		display_name_short = T(318306945300, --[[ModItemBuildingCompositeDef PXEyeSculpture display_name_short]] "Eye Sculpture"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXEyeSculptures",
		group = "Relaxatation",
		id = "PXEyeSculpture",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-600, -1200, 0, 600, 1200, 1750),
		menu_display_name = T(517185047263, --[[ModItemBuildingCompositeDef PXEyeSculpture menu_display_name]] "Eye Sculpture"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/PXCar.png",
		BuildMenuPos = 50,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 100000,
			ScrapElectronics = 10000,
			ScrapMetal = 100000,
		}),
		construction_points = 40000,
		description = T(991954375041, --[[ModItemBuildingCompositeDef PXSciFiCar description]] "I wonder what this means? Could it be...."),
		display_name = T(691906815532, --[[ModItemBuildingCompositeDef PXSciFiCar display_name]] "Sci-Fi Car"),
		display_name_pl = T(406730173189, --[[ModItemBuildingCompositeDef PXSciFiCar display_name_pl]] "Sci-Fi Car"),
		display_name_short = T(142729337791, --[[ModItemBuildingCompositeDef PXSciFiCar display_name_short]] "Sci-Fi Car"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXSciFiCar",
		group = "Relaxatation",
		id = "PXSciFiCar",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-1800, -3600, 0, 1800, 3600, 2100),
		menu_display_name = T(550744284544, --[[ModItemBuildingCompositeDef PXSciFiCar menu_display_name]] "Sci-Fi Car"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/RingSculptureDecPX.png",
		BuildMenuPos = 37,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Metal = 25000,
			Stone = 50000,
		}),
		construction_points = 40000,
		description = T(295076187058, --[[ModItemBuildingCompositeDef PXRingSculpture description]] "Some strange ring on a rock formation."),
		display_name = T(574321499844, --[[ModItemBuildingCompositeDef PXRingSculpture display_name]] "Ring Sculpture"),
		display_name_pl = T(648842736073, --[[ModItemBuildingCompositeDef PXRingSculpture display_name_pl]] "Ring Sculpture"),
		display_name_short = T(341767191530, --[[ModItemBuildingCompositeDef PXRingSculpture display_name_short]] "Ring Sculpture"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXRingSculptureD",
		group = "Relaxatation",
		id = "PXRingSculpture",
		labels = {
			"BerserkTargets",
			"x_ansible",
		},
		lock_block_box = box(-1200, -2700, 0, 1500, 2700, 3850),
		menu_display_name = T(386186282018, --[[ModItemBuildingCompositeDef PXRingSculpture menu_display_name]] "Ring Sculpture"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/ObeliskDecorPX.png",
		BuildMenuPos = 34,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Stone = 50000,
		}),
		construction_points = 40000,
		description = T(388769973265, --[[ModItemBuildingCompositeDef PXObeliskDecor description]] "An ancient obelisk to admire."),
		display_name = T(173888609880, --[[ModItemBuildingCompositeDef PXObeliskDecor display_name]] "Obelisk"),
		display_name_pl = T(328540126102, --[[ModItemBuildingCompositeDef PXObeliskDecor display_name_pl]] "Obelisk"),
		display_name_short = T(480584832807, --[[ModItemBuildingCompositeDef PXObeliskDecor display_name_short]] "Obelisk"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXObeliskDec",
		group = "Relaxatation",
		id = "PXObeliskDecor",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 1750),
		menu_display_name = T(526930119010, --[[ModItemBuildingCompositeDef PXObeliskDecor menu_display_name]] "Obelisk"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/GlowPlantDecPX.png",
		BuildMenuPos = 35,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			Stone = 10000,
			Wood = 25000,
		}),
		construction_points = 40000,
		description = T(420480280228, --[[ModItemBuildingCompositeDef PXGlowPlantDec description]] "This is a plant... a plant that glows."),
		display_name = T(875611906968, --[[ModItemBuildingCompositeDef PXGlowPlantDec display_name]] "Glowing Plant"),
		display_name_pl = T(223272835742, --[[ModItemBuildingCompositeDef PXGlowPlantDec display_name_pl]] "Glowing Plant"),
		display_name_short = T(949437596088, --[[ModItemBuildingCompositeDef PXGlowPlantDec display_name_short]] "Glowing Plant"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "GlowingPlantDecPX",
		group = "Relaxatation",
		id = "PXGlowPlantDec",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-900, -900, 0, 900, 900, 1750),
		menu_display_name = T(321792737131, --[[ModItemBuildingCompositeDef PXGlowPlantDec menu_display_name]] "Glowing Plant"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_DecorPX",
		BuildMenuIcon = "General/FrostyShroomDecPX.png",
		BuildMenuPos = 36,
		DecorationComponent = true,
		Health = 300000,
		MaxHealth = 300000,
		OwnedComponent = true,
		RelaxationDeviceComponent = true,
		RoomPlacement = "outdoors",
		access_range = 2400,
		attack_attraction = 5,
		construction_cost = PlaceObj('ConstructionCost', {
			AlienShroom = 10000,
			Wood = 25000,
		}),
		construction_points = 40000,
		description = T(724451103784, --[[ModItemBuildingCompositeDef PXFrostyMushroom description]] "I wonder what happens if I touch it?"),
		display_name = T(168235357679, --[[ModItemBuildingCompositeDef PXFrostyMushroom display_name]] "Frosty Mushroom"),
		display_name_pl = T(890935968305, --[[ModItemBuildingCompositeDef PXFrostyMushroom display_name_pl]] "Frosty Mushroom"),
		display_name_short = T(852032311292, --[[ModItemBuildingCompositeDef PXFrostyMushroom display_name_short]] "Frosty Mushroom"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXDecorMushrooms",
		group = "Relaxatation",
		id = "PXFrostyMushroom",
		labels = {
			"BerserkTargets",
		},
		lock_block_box = box(-600, -600, 0, 600, 600, 1400),
		menu_display_name = T(816107322238, --[[ModItemBuildingCompositeDef PXFrostyMushroom menu_display_name]] "Frosty Mushroom"),
		object_class = "Building",
		ownership_class = "Chair",
		prefer_in_buildmenu = true,
		update_interval = 5000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildMenuCategory = "sub_GalacticPowerPX",
		BuildMenuIcon = "General/CarbonGen2.png",
		BuildMenuPos = 8,
		HasSmartConnection = true,
		Health = 500000,
		IsPowerGenerator = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticPower",
			}),
		},
		MalfunctionOverTimeComponent = true,
		MaxHealth = 500000,
		PowerComponent = true,
		Production = 225000,
		ResConsumerDeviceComponent = true,
		access_range = 2400,
		attack_attraction = 20,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			LiquidFuel = 50000,
			Metal = 50000,
			ScrapElectronics = 5000,
		}),
		construction_points = 40000,
		description = T(388243326025, --[[ModItemBuildingCompositeDef PXCarbonGen2 description]] "Generates a greater amount of <color TextEmphasis>Electricity</color><image 'UI/Icons/Resources/res_electricity' 1100> while burning fuel."),
		display_name = T(234050900027, --[[ModItemBuildingCompositeDef PXCarbonGen2 display_name]] "Carbon Generator"),
		display_name_pl = T(853907948034, --[[ModItemBuildingCompositeDef PXCarbonGen2 display_name_pl]] "Carbon Generator"),
		enable_overlay_on_placement = {
			RoomsOverlay = true,
		},
		entity = "PXCarbonGen2",
		group = "Power",
		id = "PXCarbonGen2",
		labels = {
			"PowerSources",
			"BerserkTargets",
		},
		load_anim_hands = "standing_PickUp_Hands",
		lock_block_box = box(-1200, -900, 0, 1200, 900, 1750),
		menu_display_name = T(559126440496, --[[ModItemBuildingCompositeDef PXCarbonGen2 menu_display_name]] "Carbon Generator"),
		object_class = "Building",
		realtime_working_anim = true,
		repair_cost = PlaceObj('ConstructionCost', {
			ScrapMetal = 30000,
		}),
		res_consumed = "LiquidFuel",
		res_operate_time = 4000000,
		res_start_fueled = true,
		res_stored = 50000,
		unload_anim_hands = "standing_DropDown_Hands",
		update_interval = 10000,
	}),
	PlaceObj('ModItemBuildingCompositeDef', {
		BuildActivityTool = "WeldingTool",
		BuildEndAnimation = "standing_Repair_Weld_End",
		BuildIdleAnimations = {
			"standing_Repair_Weld_Idle",
		},
		BuildMenuCategory = "Science",
		BuildMenuIcon = "UI/Icons/Build Menu/military_wonder",
		BuildMenuPos = 120,
		BuildStartAnimation = "standing_Repair_Weld_Start",
		CanPlaceInShelter = false,
		ConstructIgnore = set( "Flooring" ),
		CustomMaterial = "Metal",
		Dish = "Default",
		DishBase = "Default",
		EntityHeight = 4826,
		Health = 1000000,
		IsPowerConsumer = true,
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_start",
			}),
		},
		MaxHealth = 1000000,
		PowerComponent = true,
		PowerConsumption = 500000,
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_start",
			}),
		},
		RoomPlacement = "outdoors",
		SkirtSize = 68,
		affected_by_disasters = set(),
		can_be_copied = false,
		can_change_ownership = false,
		can_turn_off = true,
		construction_cost = PlaceObj('ConstructionCost', {
			CPUCore = 10000,
			CarbonNanotubes = 500000,
			Concrete = 500000,
			ScrapElectronics = 50000,
		}),
		construction_points = 400000,
		deconstruction_output = PlaceObj('ConstructionCost', {
			CPUCore = 2000,
			PowerCell = 1000,
			ScrapMetal = 100000,
			Wood = 25000,
		}),
		description = T(885724357379, --[[ModItemBuildingCompositeDef ProjectX_start description]] "PX-003 shall no longer be our gatekeeper to the universe! We can now be a truly independent colony by strengthening our signal to reach the Galactican Empire. \n<color red>This will attract attention, both from the planets denizens and the factions above us.</color>."),
		display_name = T(509337128918, --[[ModItemBuildingCompositeDef ProjectX_start display_name]] "Signal Relay"),
		display_name_pl = T(638447700314, --[[ModItemBuildingCompositeDef ProjectX_start display_name_pl]] "Signal Relay"),
		forbid_clip_plane = true,
		group = "Science",
		id = "ProjectX_start",
		labels = {
			"x_ansible",
		},
		lock_flags = 0,
		max_count = 5,
		object_class = "MilitaryWonderBuilding",
		progress = 3000000,
		repair_cost = PlaceObj('ConstructionCost', {
			Metal = 100000,
			Wood = 50000,
		}),
		snap_to_terrain = false,
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Character Related",
	'NameColor', RGBA(162, 148, 38, 255),
}, {
	PlaceObj('ModItemFolder', {
		'name', "Characters",
		'NameColor', RGBA(196, 175, 39, 255),
	}, {
		PlaceObj('ModItemCharacterDef', {
			Age = 42,
			Bio = T(655991249524, --[[ModItemCharacterDef XyraLee Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nXyra Lee is a Ghost Agent on the 301st infiltration squadron. Xyra's role is to infiltrate compounds, retrieve data and get out without raising suspicion. Armed with the most advanced tech lawfully allowed, Xyra will definitely cause havoc to anyone who steps in her way. But don't let the stealth part of her talents fool you, Xyra is capable of taking down multiple enemies without making a noise and is just as combat efficient as not all missions go as planned ofcourse.\n\nXyra's second role is to retrieve data, and that she is good at doing. Capable of hacking into some of the most complex facilities and as you can imagine, she is quick at doing it as the role depends on her speed of hacking to get in and get out as quickly as possible.\n\nPut Xyra in any of these roles and you will have a happy crew member who will be the enemies problem... Leave her to try assist elsewhere in the colony and she will probably become your problem. Depending on the mission you have in mind will determine if Xyra is the one you need.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Shoes_Carbon",
				"Armor_Hat_Carbon",
				"Armor_Pants_Carbon",
				"Armor_Jacket_Carbon",
				"Shirt_Heavy_Good",
				"ToxicSniperRifle",
				"Melee_LaserPike",
				"NightGoggles",
			},
			Eyes = "Eyes_Krista",
			FavoriteFood = {
				"ChefsSteak",
				"PieMeat",
			},
			FavoriteRelaxation = {
				"TargetPractice",
				"PunchingPole",
				"Praying",
				"Scouting",
			},
			FirstName = T(433531838073, --[[ModItemCharacterDef XyraLee FirstName]] "Xyra"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Hallucinating",
				"Crying",
				"Hiding",
			},
			Hair = "Hair_Krista",
			HairColor1 = 4280623650,
			HairColor2 = 4280623650,
			HairColor3 = 4280623650,
			Head = "Head_Krista",
			Headline = T(405931456234, --[[ModItemCharacterDef XyraLee Headline]] "Ghost Agent"),
			Height = 1850,
			IdealWeight = 68861,
			KnownTechs = {
				"RailgunSnipersImproved",
				"HackingDevice",
				"LandMines",
				"Electronics",
				"LaserBlasters",
				"LaserPikes",
				"BlackMarket",
			},
			LastName = T(565106417453, --[[ModItemCharacterDef XyraLee LastName]] "Lee"),
			NickName = T(639212717046, --[[ModItemCharacterDef XyraLee NickName]] "Xyra"),
			Payment = 200000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Xyra_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Xyra_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "LeonardoKexx",
					Opinion = -100,
					Relationship = "Exlover",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Cooking = "Forbidden",
				Crafting = "Forbidden",
				Farming = "Forbidden",
				Healing = "Indifferent",
				Intellectual = "Indifferent",
			},
			Skills = {
				Combat = 8,
				Hacking = 3,
				Intellectual = 3,
				Physical = 6,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(94, 81, 72, 255),
				'EditableColor2', RGBA(94, 81, 72, 255),
				'EditableColor3', RGBA(94, 81, 72, 255),
			}),
			Teeth = "Teeth_Krista",
			Traits = {
				"GhostInfiltrator",
				"Infiltrator",
				"HackerInstructor",
				"TargetPractice",
				"Assassin",
				"ArmoryDuty",
				"Bloodlust",
				"Implants",
				"DesertDweller",
				"CannotCook",
				"CannotCraft",
				"CannotFarm",
			},
			Weight = 68000,
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "XyraLee",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 43,
			Bio = T(689688668560, --[[ModItemCharacterDef Gizmo Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nGizmo is a born infestation, a virus that is capable of changing an entire persons existence forever. Life now is solely focused on technology to the extent our own person is apart of the space wide web. No matter how much protection is placed to try prevent hackers, it will never be enough to stop Gizmo. Due to his expertise in hacking, however he did not use his skills on crime or law breaking activities. This man worked with the galactic authorities and to date has closed 284 cyber attack cases. Where he lacks in the field he makes up for behind a device, some bits of technology and his brain.\n\nGizmo is not all that meets the eye however, we have our suspicious about him but based on his record he is a good candidate for keeping the technological devices free from any attacks and preventing device's from shutting down periodically from cyber attacks.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Gunshot - Torso - Treated\nBruise - Left Arm - Treated\nDrunk - Hungover During Assessment</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Jacket_Synthetic",
				"Armor_Pants_Synthetic",
				"Armor_Shoes_Synthetic",
				"Shirt_Heavy_Good",
				"GoodLuckCharm",
			},
			FavoriteFood = {
				"AlcoholBeer",
				"AlcoholBlueberryWine",
				"AlcoholMoonshine",
			},
			FavoriteRelaxation = {
				"DrinkingBeverage",
				"Drinking",
				"PlayingMusic",
			},
			FirstName = T(386007027033, --[[ModItemCharacterDef Gizmo FirstName]] "Gizmo"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Delano",
			HairColor1 = 4281215016,
			HairColor2 = 4281215016,
			HairColor3 = 4281215016,
			Head = "Head_Daniel",
			Headline = T(379399638094, --[[ModItemCharacterDef Gizmo Headline]] "Expert Hacker"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "HackersWit",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "Torso",
					BodyPartGroup = "UpperTorso",
					HealthCond = "Gunshot_Body_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmLeft",
					BodyPartGroup = "UpperTorso",
					HealthCond = "Bruise_Common",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					HealthCond = "Drunk_Hangover",
					HealthCondType = "Debuff",
				}),
			},
			Height = 2100,
			IdealWeight = 84000,
			KnownTechs = {
				"HackingDevice",
				"Electronics",
				"AdvancedResearchDesk",
				"CPUCores",
			},
			LastName = T(507406022837, --[[ModItemCharacterDef Gizmo LastName]] "Rassk"),
			NickName = T(807092057880, --[[ModItemCharacterDef Gizmo NickName]] "Gizzie"),
			Payment = 250000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Gizmo_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Gizmo_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Cooking = "Indifferent",
				Farming = "Indifferent",
				Hacking = "Interested",
				Healing = "Forbidden",
				Intellectual = "Indifferent",
			},
			Skills = {
				Crafting = 4,
				Hacking = 8,
				Intellectual = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(78, 78, 78, 255),
				'EditableColor2', RGBA(78, 78, 78, 255),
				'EditableColor3', RGBA(78, 78, 78, 255),
			}),
			Traits = {
				"HackerExpertise",
				"HackerInstructor",
				"HackersPleasure",
				"AdvGenius",
				"Agoraphobia",
				"Pacifist",
				"Hemophobia",
				"x_secret_trait",
			},
			Weight = 77000,
			group = "PROJECTX",
			id = "Gizmo",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 50,
			Bio = T(222965597978, --[[ModItemCharacterDef G7-B97 Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors and slightly awkward way they move and do tasks. Bumbles might be slow but never sleeping and never needing food gives them advantages for early colonies needing to conserve needed materials in hostile environments. Because of cost savings attempts they were not given the ability to adapt so default programs were pre-installed. Combat inhibitors were added to stop criminal uses of this model.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Light_Crude",
				"Pants_Light_Crude",
				"Shoes_Light",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(595635600202, --[[ModItemCharacterDef G7-B97 FirstName]] "G7-B97"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(843268853922, --[[ModItemCharacterDef G7-B97 Headline]] "Droid"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			LastName = "",
			NickName = T(612810294836, --[[ModItemCharacterDef G7-B97 NickName]] "Bumbles Droid"),
			Payment = 170000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/BumbleDroid2_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/BumbleDroids2_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Healing = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Construction = 2,
				Crafting = 2,
				Mining = 1,
				Physical = 5,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(247, 255, 0, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 227, 0, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 221, 0, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"px_droid_construct_feature",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Civilian",
			group = "PROJECTX",
			id = "G7-B97",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 26,
			Bio = T(197391365732, --[[ModItemCharacterDef TzukUnn Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nTzuk Unn is a technical engineer that has been tasked with one goal, to keep them arts and gadgets of yours going. Not one for the adventure but if you put anything technical infront of her, she will have it fixed, cleaned and looking like a new piece of technology quicker than you can make a cup of coffee, for her... ofcourse. If you really had a choice she would definitely not be the first to be picked among similar candidates. \n\nTzuk has a very unique personality, she is full of energy as if the walls were floors, probably because of all the caffeine she has, or them mushrooms; regardless she is what some would call crazy. Tzuk will drink your barrels dry of caffeine and gobble up the mushrooms you find just to check that they are edible... ofcourse, to protect you. Who am I kidding... Tzuk enjoys the high life, and will do anything to feel that buzz. Some even say that its her secret as to how she is so good with technology and without it she is nothing more than a junky. So i'd advise to keep her topped up if I was you. \n\nDon't let that discourage you though, Tzuk is a pleasure to be around, and sometimes in these circumstances you need that little bit of a firecracker to keep you going. She has a strange way of cheering others up as if she just enjoys mocking herself for others entertainment. Ofcourse when she isn't throwing spanners and screwdrivers in your direction... or pulling pranks on you. I don't know which is worse when it comes down to Tzuk, she can be very unpredictable. Some would suggest to put a punching bag infront of her and leave her in a locked room with it to burn away some of that energy. But you do what you want, this is just some friendly advice from... well the person writing her bio for the colonization's candidates. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Known Drug User\nHearing Aid Left Ear</style>\n\n____________________________________________\n\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Jacket_Spaceship",
				"Pants_Spaceship",
				"Shirt_Light_Crude",
				"Shoes_Normal",
				"Hat_Light_Straw",
				"DartGunPX",
				"SignalFlare",
			},
			Eyes = "Eyes_Sora",
			FavoriteFood = {
				"MushroomCroquettes",
				"Coffee",
			},
			FavoriteRelaxation = {
				"SnowFight",
				"SmokingJoint",
				"Smoking",
				"Daydreaming",
			},
			FirstName = T(728989462096, --[[ModItemCharacterDef TzukUnn FirstName]] "Tzuk"),
			ForbiddenBreakdowns = {
				"Hallucinating",
			},
			Hair = "Hair_Sora",
			HairColor1 = 4280097305,
			HairColor2 = 4278650116,
			HairMetallic = -28,
			HairParam3 = 127,
			Head = "Head_Sora",
			Headline = T(468980725032, --[[ModItemCharacterDef TzukUnn Headline]] "Whacky Technical Engineer"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarLeft",
					BodyPartGroup = "Ears",
					HealthCond = "HearingAid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "ConstantlyHigh",
					HealthCondType = "Buff",
				}),
			},
			Height = 1570,
			IdealWeight = 58438,
			KnownTechs = {
				"AlienShroomSeeding",
				"FieldBuzzshroom",
				"SmallMech",
				"ElectricBattery",
				"ElectricTurrets",
				"Electronics",
				"BlackMarket",
			},
			LastName = T(111302945606, --[[ModItemCharacterDef TzukUnn LastName]] "Unn"),
			NickName = T(914003570542, --[[ModItemCharacterDef TzukUnn NickName]] "Tzuk"),
			Payment = 200000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Tzuk_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Tzuk_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Interested",
				Crafting = "Interested",
				Healing = "Forbidden",
			},
			Skills = {
				Construction = 1,
				Crafting = 7,
				Hacking = 1,
				Intellectual = 4,
				Physical = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 148, 101, 255),
				'EditableColor2', RGBA(255, 75, 56, 255),
				'EditableColor3', RGBA(193, 131, 93, 255),
			}),
			Teeth = "Teeth_Sora",
			Traits = {
				"HighAsAKite",
				"WhackyEngineer",
				"HighFocused",
				"Mushrooms",
				"CannotHeal",
				"HighRisk",
				"x_secret_trait",
			},
			Weight = 59000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle4 = "standing_Idle_Free7_Female",
			anim_idle5 = "standing_Idle_Free_Sweat_Female",
			anim_idle6 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy10 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_idle_happy6 = "standing_Idle_Free6_Female",
			anim_idle_happy7 = "standing_Idle_Free7_Female",
			anim_idle_happy8 = "standing_Idle_Free_Sweat_Female",
			anim_run = "standing_Walk_Run_Female",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "TzukUnn",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 50,
			Bio = T(778437276016, --[[ModItemCharacterDef G7-B003 Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors and slightly awkward way they move and do tasks. Bumbles might be slow but never sleeping and never needing food gives them advantages for early colonies needing to conserve needed materials in hostile environments. Because of cost savings attempts they were not given the ability to adapt so default programs were pre-installed. Combat inhibitors were added to stop criminal uses of this model.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Light_Crude",
				"Pants_Light_Crude",
				"Shoes_Light",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(368243115043, --[[ModItemCharacterDef G7-B003 FirstName]] "G7-B003"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(286330253832, --[[ModItemCharacterDef G7-B003 Headline]] "Droid"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			LastName = "",
			NickName = T(879782657697, --[[ModItemCharacterDef G7-B003 NickName]] "Bumbles Droid"),
			Payment = 170000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/BumbleDroid_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/BumbleDroid_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Healing = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Construction = 2,
				Crafting = 2,
				Mining = 1,
				Physical = 5,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(0, 183, 255, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 183, 255, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(0, 183, 255, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"FarmOwner",
				"px_droid_craft_feature",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Civilian",
			group = "PROJECTX",
			id = "G7-B003",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale1",
			Age = 35,
			Beard = "Beard_Booker",
			Bio = T(572468446399, --[[ModItemCharacterDef TannerOzk Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nTanner is the very definition of a 'Genius'. This man has accomplished some grand feats in his short existence. Gifted at birth with pure intellect this man grew up within a wealthy household, which granted Tanner a head start in life. Such an upbringing granted Tanner the best health care around which gave Tanner immunity to many airborn viruses and cybernetic implants. Alongside this, Tanner was given the best education available. With so much handed on a plate to Tanner, he has had the perfect start to a rich, prosperous and healthy life. \n\nTanner has always shared ambitions of his desires to create new technology and advance research to a breakthrough level. This man is very rarely seen outdoors, instead he is most commonly seen indoors, beside a desk with his head buried deep in books. Tanner has keen interests in research, technological constructions and observing new species. Though due to this career choice, it has rendered Tanner useless in combat and he tries to avoid any conflict. Unlike his younger brother, Zackerie, who fell down a completely different career path. Tanner has always shared a special bond with his younger brother and although Tanner has never approved of Zackarie's life choices, he always stood by his younger brother and protected him. Tanner wears his heart on his sleeve and is a likeable character.\n\nDue to Tanner's creations and technological knowledge, he was swiftly hired and was granted a pass to board the Delta-3XT Shuttle as apart of the Advanced Scientist Observation team that focus on exploring the deep reaches of space to find new discoveries for the future of the Human race to expand upon. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Stimulant - Brain\nBionic Eye - Left\nVaccinated</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Shoes_Synthetic",
				"Shirt_Heavy_Good",
				"Jacket_Spaceship",
				"Pants_Spaceship",
			},
			FavoriteFood = {
				"ChefsSteak",
			},
			FavoriteRelaxation = {
				"AppreciatingDecoration",
				"Reading",
				"WriteShortStory",
			},
			FirstName = T(727960907629, --[[ModItemCharacterDef TannerOzk FirstName]] "Tanner"),
			ForbiddenBreakdowns = {
				"DrinkingBinge",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Greyson",
			HairColor1 = 4278847753,
			HairColor2 = 4278847753,
			HairColor3 = 4278847753,
			Head = "Head_Greyson",
			Headline = T(990124433997, --[[ModItemCharacterDef TannerOzk Headline]] "Technological Expert"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "Stimulant_Drugs",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeLeft",
					BodyPartGroup = "Eyes",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "AnimalFlu_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Pneumonia_Immunity",
					HealthCondType = "Buff",
				}),
			},
			Height = 1830,
			IdealWeight = 72000,
			KnownTechs = {
				"AdvancedResearchDesk",
				"GrapheneSolarPanels",
				"BasicElectricity",
				"LightningRods",
			},
			LastName = T(981776245172, --[[ModItemCharacterDef TannerOzk LastName]] "Ozk'euun"),
			NickName = T(590075895451, --[[ModItemCharacterDef TannerOzk NickName]] "Tanner"),
			Payment = 200000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Tanner_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Tanner_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "B2Droid",
					Opinion = 100,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "TayykJr",
					Opinion = 25,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "ZackarieOzk",
					Opinion = 100,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Construction = "Indifferent",
				Cooking = "Indifferent",
				Crafting = "Interested",
				Farming = "Forbidden",
				Intellectual = "Interested",
				Trade = "Indifferent",
			},
			Skills = {
				Crafting = 4,
				Hacking = 2,
				Intellectual = 8,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(95, 68, 68, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"TechNerd",
				"AdvGenius",
				"Implants",
				"BigBrain",
				"InstinctiveObserver",
				"Calming",
				"InspirationalWriter",
				"Pacifist",
				"CannotFarm",
				"x_secret_trait",
			},
			Weight = 77000,
			group = "PROJECTX",
			id = "TannerOzk",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 50,
			Bio = T(322793330441, --[[ModItemCharacterDef G7-B9028 Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors and slightly awkward way they move and do tasks. Bumbles might be slow but never sleeping and never needing food gives them advantages for early colonies needing to conserve needed materials in hostile environments. Because of cost savings attempts they were not given the ability to adapt so default programs were pre-installed. Combat inhibitors were added to stop criminal uses of this model.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Light_Crude",
				"Pants_Light_Crude",
				"Shoes_Light",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(714324503929, --[[ModItemCharacterDef G7-B9028 FirstName]] "G7-B9028"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(529652860280, --[[ModItemCharacterDef G7-B9028 Headline]] "Droid"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			LastName = "",
			NickName = T(453285382476, --[[ModItemCharacterDef G7-B9028 NickName]] "Bumbles Droid"),
			Payment = 170000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/BumbleDroid_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/BumbleDroid_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Healing = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Construction = 2,
				Crafting = 2,
				Mining = 1,
				Physical = 5,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(247, 255, 0, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 227, 0, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 221, 0, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"px_droid_explore_feature",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Civilian",
			group = "PROJECTX",
			id = "G7-B9028",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 39,
			Bio = T(414220862033, --[[ModItemCharacterDef XayahFayy Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nXayah Fayy is a registered criminal on Earth and has a chip implant that greatly reduces her abilities, this is a common practice back on Earth. It subdues the criminal so that if they re-offend they will be easily tracked and detained. The chip is fitted with the technology to paralyze the host if required. Alongside this it cannot be removed without potential death unless a specific tool is used that is not easy to come by. The chips tracking device can be scrambled, but once this is done the authorities are immediately aware, however they would need to find you first. Chip implants are very scarce on Earth and those fitted with one means they're not just your ordinary criminal, this is someone you do not want to mess with. \n\nXayah Fayy's personal documents are classified, only her alias is found of a scientist that goes by the name of Sarah Ozk'euun, where the original Sarah is... We don't know. Disguised as this person Xayah has managed to infiltrate the Project-X program and be put forward as a candidate to aid the colonization efforts. Her chip cannot be detected due to her genius abilities in technological devices that she has managed to scramble the chip temporarily.\n\nWhat is Xayah's true intention for being here? Only time will tell...\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Chip Implant - Brain - Criminal Status</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticBoots",
				"GalacticChest",
				"GalacticHelmet",
				"GalacticLegs",
				"Shirt_Heavy_Good",
				"ToxicSniperRifle",
				"NightGoggles",
			},
			Eyes = "Eyes_Krista",
			FavoriteRelaxation = {
				"Scouting",
				"SmokingJoint",
			},
			FirstName = T(278234220808, --[[ModItemCharacterDef XayahFayy FirstName]] "Xayah"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Hiding",
				"DrinkingBinge",
				"FoodBinge",
				"Crying",
				"Catatonia",
				"Hallucinating",
			},
			Hair = "Hair_Larisa",
			HairColor1 = 4282466099,
			HairColor2 = 4285952607,
			HairColor3 = 4282466099,
			Head = "Head_Katina",
			Headline = T(288212773513, --[[ModItemCharacterDef XayahFayy Headline]] "Skilled Sharpshooter"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "ChippedCriminal",
					HealthCondType = "Debuff",
				}),
			},
			Height = 1870,
			IdealWeight = 69605,
			KnownTechs = {
				"RailgunSnipers",
				"BasicWeaponry",
				"LandMines",
				"SleepTraining",
			},
			LastName = T(496087944503, --[[ModItemCharacterDef XayahFayy LastName]] "Fayy"),
			NickName = T(508709016992, --[[ModItemCharacterDef XayahFayy NickName]] "Xayah"),
			Payment = 250000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Xayah_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Xayah_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Hacking = "Forbidden",
			},
			Skills = {
				Combat = 7,
				Crafting = 2,
				Healing = 2,
				Intellectual = 4,
				Physical = 3,
				Trade = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(127, 104, 91, 255),
				'EditableColor2', RGBA(127, 104, 91, 255),
				'EditableColor3', RGBA(127, 104, 91, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"ChipImplant",
				"TechCriminal",
				"Sharpshooter",
				"Assassin",
				"Insanity",
				"ArmoryDuty",
				"EnhAwareness",
				"Thievery",
				"Intimidating",
				"Untrustworthy",
				"CannotHack",
			},
			Weight = 72000,
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "XayahFayy",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale1",
			Age = 18,
			Bio = T(272261461626, --[[ModItemCharacterDef ZackarieOzk Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nUnlike his brother, Zackarie did not have the same upbringing. Unfortunately his mother died at birth and the father figure was not present leaving Zackarie to be brought up by his older brother, Tanner Ozk'euun. Zackarie never really showed interest in computers or advanced artificial intelligence. He was alot more physical and active, getting himself in trouble with law enforcement due to his teenage behaviours. Zackarie did not attend a college, nor get chance to finish his education. He spent most of his time either at his brothers side in his workplace or outside skipping education and causing havoc. \n\nHowever don't let his childish ways fool you, afterall he is the brother of a genius, so he has his genes and mind. If you actually spent some time with Zackarie you would come to realize that he is actually very smart. There is so much potential there and at such a young age he is a fresh canvas for you to mold. Zackarie is only a candidate because Tanner Ozk'euun refused to leave him behind.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Shoes_Synthetic",
				"Shirt_Heavy_Good",
				"Jacket_Spaceship",
				"Pants_Spaceship",
				"RespiratorMask",
			},
			FavoriteFood = {
				"ChefsSteak",
				"Cake",
				"HaySausage",
				"PizzaVegetable",
			},
			FavoriteRelaxation = {
				"PlayingMusic",
				"PlayingWithAnimal",
				"SnowmanMaking",
				"Daydreaming",
				"SnowFight",
				"VisitAnimal",
			},
			FirstName = T(416207376177, --[[ModItemCharacterDef ZackarieOzk FirstName]] "Zackarie"),
			ForbiddenBreakdowns = {
				"DrinkingBinge",
				"Hallucinating",
				"Catatonia",
			},
			Gender = "Male",
			Hair = "Hair_Greyson",
			HairColor1 = 4278847753,
			HairColor2 = 4278847753,
			HairColor3 = 4278847753,
			Head = "Head_Krista",
			Headline = T(242581176624, --[[ModItemCharacterDef ZackarieOzk Headline]] "Teenager"),
			Height = 1400,
			IdealWeight = 56000,
			KnownTechs = {
				"FieldDog",
			},
			LastName = T(995621619939, --[[ModItemCharacterDef ZackarieOzk LastName]] "Ozk'euun"),
			NickName = T(424518156250, --[[ModItemCharacterDef ZackarieOzk NickName]] "Zack"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/Zackarie_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Zackarie_Large.png",
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "B2Droid",
					Opinion = 100,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "TannerOzk",
					Opinion = 100,
					Relationship = "Sibling",
				}),
			},
			SkillInclinations = {
				Combat = "Interested",
				Cooking = "Forbidden",
				Farming = "Indifferent",
				Hacking = "Interested",
				Trade = "Interested",
			},
			Skills = {
				Combat = 1,
				Construction = 1,
				Crafting = 1,
				Farming = 1,
				Hacking = 1,
				Healing = 1,
				Intellectual = 4,
				Physical = 4,
				Trade = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(95, 68, 68, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"50Speed",
				"TinyMan",
				"TradersWit",
				"FastLearner",
				"CannotCook",
				"FarmOwner",
				"x_secret_trait",
			},
			Weight = 47000,
			group = "PROJECTX",
			id = "ZackarieOzk",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanFemale",
			Age = 26,
			Bio = T(163186217115, --[[ModItemCharacterDef Shadow Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Not Found::</style>"),
			Equipment = {
				"CyberHelmet",
				"CyberChest",
				"CyberBoots",
				"CyberLegs",
				"CyberLaserPike",
				"MissileLauncher",
				"NightGoggles",
			},
			Eyes = "Eyes_Sora",
			FirstName = T(496981883568, --[[ModItemCharacterDef Shadow FirstName]] "Shadow"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Initial_Crying",
				"Stealing",
				"Hallucinating",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"SadWalk",
				"Stealing",
			},
			Hair = "HairFemale4",
			HairColor1 = 4287794289,
			HairColor2 = 4288978567,
			HairColor3 = 4287729538,
			HairParam3 = 0,
			HairParam7 = 128,
			HairRoughness = 2,
			Head = "Head_Nova",
			Headline = T(588946878164, --[[ModItemCharacterDef Shadow Headline]] "Unknown"),
			Height = 1560,
			IdealWeight = 57322,
			LastName = T(119882472216, --[[ModItemCharacterDef Shadow LastName]] " "),
			NickName = T(633078020614, --[[ModItemCharacterDef Shadow NickName]] "Shadow"),
			Payment = 0,
			PerceivedGender = "Female",
			Portrait = "Portraits/Shadow_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Shadow_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			Skills = {
				Combat = 2,
				Construction = 2,
				Cooking = 2,
				Crafting = 2,
				Farming = 2,
				Hacking = 2,
				Healing = 2,
				Intellectual = 2,
				Physical = 2,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(160, 150, 126, 255),
				'EditableRoughness1', 3,
				'EditableColor2', RGBA(131, 122, 101, 255),
				'EditableColor3', RGBA(116, 109, 91, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"AdvEngEfficiency",
				"AdvEngSpeed",
				"BioAdv",
				"TempTolerance",
				"Shadow",
				"FarmOwner",
			},
			Weight = 60000,
			anim_idle1 = "standing_Idle_Rifle",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "Shadow",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 31,
			Beard = "Beard_Russell",
			Bio = T(843092312509, --[[ModItemCharacterDef MarkErikson Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nMark Erikson has the honor of the person who has taken the colony test the most times at five attempts one success. While failure may lead many to give up and quit Mark saw it as a challenge to overcome and that would not stop him. His original failures were due to the fact he was interested in many fields he actually had little experience in them leaving him below the cut off of required skills for a settler. Focusing on mind and body he was able to get past the required minimum skills but upon moving to basic training he showed a amazing ability to adapt and learn new skills. The colony program plans to drop him as a Jack of All Trades to round out and fill in groups so that he may push his ability to learn new skills and adapt to whatever they need him to be. Marks one major flaw is that he is always thinking of something new so he tends to bounce between making him interested in much but slightly slower progress then a person focused on a single field. Warning however under no circumstance is he allowed to cook or perform medicine. Marks constant attempts at new things have led to several fires and somehow taping himself to something on no less then three occasions.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Heavy_Crude",
				"Jacket_Heavy_Crude",
				"Pants_Light_Good",
				"Shoes_Light",
				"Hat_Light_Straw",
				"Ranged_LaserBlaster",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"Coffee",
				"Tea",
				"StimulatingTea",
				"SoupVegetable",
				"Bread",
				"PizzaVegetable",
				"SmokeleafRaw",
				"SmokeleafDry",
				"SmokeleafPipe",
			},
			FavoriteRelaxation = {
				"SittingArmchair",
				"Sitting",
			},
			FirstName = T(465801205260, --[[ModItemCharacterDef MarkErikson FirstName]] "Mark"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Isaac",
			HairColor1 = 4279440147,
			HairColor2 = 4279440147,
			HairColor3 = 4279440147,
			HairRoughness = 2,
			Head = "Head_Edmund",
			Headline = T(985383791540, --[[ModItemCharacterDef MarkErikson Headline]] "Jack of all Trades"),
			Height = 1770,
			IdealWeight = 70800,
			KnownTechs = {
				"CoffeeFromGrain",
				"TeaFromSmokeleaf",
				"DieselGenerators",
				"WindTurbines",
				"BasicElectricity",
				"SmokeleafSeeding",
				"FieldGraincob",
				"FieldBushPalm",
				"FieldBushBroadleafBig",
				"FieldPurpleLeaf",
			},
			LastName = T(305098075360, --[[ModItemCharacterDef MarkErikson LastName]] "Erikson"),
			NickName = T(822529261113, --[[ModItemCharacterDef MarkErikson NickName]] "Mark"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/MarkErikson_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/MarkErikson_Large.png",
			SkillInclinations = {
				Combat = "Interested",
				Construction = "Interested",
				Cooking = "Forbidden",
				Crafting = "Interested",
				Farming = "Interested",
				Healing = "Forbidden",
				Intellectual = "Interested",
				Physical = "Interested",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 2,
				Crafting = 2,
				Hacking = 1,
				Intellectual = 3,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(95, 68, 68, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"50Speed",
				"ThousandIdeas",
				"CraftingInstructor",
				"x2ClothCraft",
				"AvidFarmer",
				"Calming",
				"CannotCook",
				"CannotHealNormal",
				"CannotTrade",
				"FarmOwner",
			},
			group = "PROJECTX",
			id = "MarkErikson",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 47,
			Beard = "Beard_Delano",
			Bio = T(857417506423, --[[ModItemCharacterDef KhanFredrick Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nKhan has quite a large build, muscular tone and capable of heavy lifting some mighty weights. This man only got to this status by doing what he does best on a daily basis, building. Khan has a fascination with construction, to the extent he will assess his own work for hours on end until perfection is achieved, and then admire it for years to pass. \n\nKhan has mastered the art of building structures in space, moons and foreign planets. His skills are focused in unique materials and components. Unlike common architecture work being solid wood or stone, this man focuses heavily on building strong and sturdy structures using Carbon, alongside this he focuses in energy usage most specifically in defense outposts that require a border of security. \n\nPlace this man anywhere else and he wont get much done, leave him doing what he loves and you'll wake up the next morning to find a house built inside a house built inside another house. Quick and crafty at his trade and someone who is very reliable at completing the job set. Perks of Khan is he has some good contacts for trading Carbon and that can be a real leap forward in architecture strength. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Heavy_Good",
				"Hat_Heavy_Good",
				"Pants_Heavy_Good",
				"Jacket_Heavy_Good",
				"Melee_LaserPike",
				"GalacticBoots",
			},
			Eyes = "Eyes_Delano",
			FavoriteFood = {
				"Tea",
				"StimulatingTea",
			},
			FavoriteRelaxation = {
				"Drinking",
				"DrinkingBeverage",
			},
			FirstName = T(237391497625, --[[ModItemCharacterDef KhanFredrick FirstName]] "Khan"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Crying",
				"Hiding",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Delano",
			HairColor1 = 4279308821,
			HairColor2 = 4278979082,
			HairMetallic = 21,
			HairParam1 = 16,
			HairParam2 = 39,
			HairParam3 = 126,
			HairRoughness = 102,
			Head = "Head_Delano",
			Headline = T(255869506351, --[[ModItemCharacterDef KhanFredrick Headline]] "Space Unique-Material Architect"),
			Height = 2100,
			IdealWeight = 84000,
			KnownTechs = {
				"BasicArchitecture",
				"ConstructionCarbon",
				"ConstructionBricks",
				"CarbonFortifications",
				"EMFortifications",
			},
			LastName = T(174322460178, --[[ModItemCharacterDef KhanFredrick LastName]] "Fredrick"),
			Moustache = "Moustache_Delano",
			NickName = T(597836405993, --[[ModItemCharacterDef KhanFredrick NickName]] "Khan"),
			Payment = 125000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Khan_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Khan_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Interested",
				Hacking = "Forbidden",
				Intellectual = "Forbidden",
				Trade = "Interested",
			},
			Skills = {
				Combat = 2,
				Construction = 8,
				Physical = 4,
				Trade = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(177, 68, 31, 255),
				'EditableRoughness1', -10,
				'EditableColor2', RGBA(200, 76, 43, 255),
				'EditableRoughness2', -20,
				'EditableColor3', RGBA(131, 69, 55, 255),
			}),
			Teeth = "Teeth_Delano",
			Traits = {
				"ArchitectureMastermind",
				"CareerPhysique",
				"YearsofExperience",
				"BigBoned",
				"ArchitectsSpeed",
				"CannotHack",
				"CannotResearch",
				"x_secret_trait",
			},
			Weight = 79000,
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "KhanFredrick",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 78,
			Bio = T(636827602442, --[[ModItemCharacterDef YannaFitch Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nYanna is a 78 year old women who has quite the insight into life. This women claims to be a seer, capable of seeing the future and past of ones soul. Yanna has a very strange aura about her, though she interests you with her stories and visions that draw you in with curiosity.\n\nYanna was a previous doctor before retiring, she then focused her time on helping others through grieve through her proclaimed visions. She picked up a hobby of tailoring in her spare time. With her history of being a doctor, the knowledge she gained was very useful to her, she is capable of harvesting the land to make home made remedies (Medication) to treat wounds and infections. Yanna became a women that believed that the Earth provides a cure for everything, and tries to stick to natural remedies.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Schizophrenia - Brain</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shoes_Normal",
				"Shirt_Light_Crude",
				"Pants_Light_Good",
				"Jacket_Spaceship",
				"GoodLuckCharm",
			},
			Eyes = "Eyes_Reiko",
			FavoriteFood = {
				"StewVegetable",
				"StewMeat",
			},
			FavoriteRelaxation = {
				"Sitting",
				"SittingArmchair",
				"Reading",
				"WriteShortStory",
			},
			FirstName = T(747894777461, --[[ModItemCharacterDef YannaFitch FirstName]] "Yanna"),
			ForbiddenBreakdowns = {
				"Crying",
				"Bullying",
				"FoodBinge",
				"DrinkingBinge",
				"Catatonia",
				"Hiding",
				"SadWalk",
				"Stealing",
			},
			Hair = "Hair_Reiko",
			HairColor1 = 4283914071,
			HairColor2 = 4278387459,
			HairParam2 = 23,
			HairParam3 = 127,
			HairParam5 = 180,
			Head = "Head_Yokko",
			Headline = T(321456378954, --[[ModItemCharacterDef YannaFitch Headline]] "Witch Doctor (Proclaimed Seer)"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "Schizophrenia",
				}),
			},
			Height = 1620,
			IdealWeight = 60000,
			KnownTechs = {
				"BasicTailoring",
				"Antibiotics",
				"MedKits",
				"FieldSmokeleaf",
				"FieldGlitterCap",
				"FieldJuiceleaf",
				"FieldCactusBig",
				"FieldCactusSmall",
				"LeatherArmors",
				"VeggieLeatherArmors",
				"FieldPurpleLeaf",
				"FieldTreeOasis",
			},
			LastName = T(706742134730, --[[ModItemCharacterDef YannaFitch LastName]] "Fitch"),
			NickName = T(919269122780, --[[ModItemCharacterDef YannaFitch NickName]] "Yanna"),
			Payment = 0,
			PerceivedGender = "Female",
			Portrait = "Portraits/Yanna_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Yanna_Large.png",
			SkillInclinations = {
				Combat = "Forbidden",
				Construction = "Forbidden",
				Crafting = "Interested",
				Hacking = "Forbidden",
				Healing = "Interested",
				Physical = "Indifferent",
				Trade = "Forbidden",
			},
			Skills = {
				Cooking = 2,
				Crafting = 5,
				Farming = 2,
				Healing = 5,
				Intellectual = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 148, 101, 255),
				'EditableColor2', RGBA(255, 75, 56, 255),
				'EditableColor3', RGBA(198, 119, 85, 255),
			}),
			Teeth = "Teeth_Reiko",
			Traits = {
				"Schizophrenia",
				"AvidTailor",
				"CraftingInstructor",
				"ImpeccableHealer",
				"NightOwl",
				"QuickSleeper",
				"BadMemory",
				"InspirationalWriter",
				"CannotConstruct",
				"CannotHack",
				"CannotTrade",
				"Pacifist",
				"FarmOwner",
			},
			Weight = 45000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle4 = "standing_Idle_Free7_Female",
			anim_idle5 = "standing_Idle_Free_Sweat_Female",
			anim_idle6 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy10 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_idle_happy6 = "standing_Idle_Free6_Female",
			anim_idle_happy7 = "standing_Idle_Free7_Female",
			anim_idle_happy8 = "standing_Idle_Free_Sweat_Female",
			anim_run = "standing_Walk_Run_Female",
			anim_walk = "standing_Walk_Free2_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "YannaFitch",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale1",
			Age = 22,
			Bio = T(607698355628, --[[ModItemCharacterDef GalenosYaskk Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nGalenos is an ambitious young man with charming looks, however don't let his appearance fool you. From birth this man has had to fight, steal and scavenge to survive. Born within the slums of planet Earth and abandoned shortly after being born. Galenos was an orphan that had no bright future, he quickly became affiliated with gangs and built a reputation on his charm and sleight of hand skills. Galenos was swift to leave the orphanage, easily manipulated by criminals he too became one, was raised by criminals and knew nothing but the life of crime. \n\nGalenos has spent most his life surviving in the slums, nothing but scrap from salvaging, haggling for coins to eat and sleep. Such a lifestyle has adapted Galenos' body to have a high metabolism, a sleek build and good endurance. Galenos has lived from scraps in bins and is quite pleased with a quick meat dish, able to make the calories go a long way. Galenos has built a strange nocturnal lifestyle, mostly working at night to steal he survives from little sleep, and is most comfortable during the night. \n\nAt the age of 22, Galenos would change his life forever. On regular intervals shuttles would transport wealthy civilians across planets. It was obvious that Planet Earth was dieing, and Galenos was not going to die with it. Sneaking upon a shuttle at night was his only option, and so his new journey begins... \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Jacket_Leather",
				"Armor_Shoes_Leather",
				"Armor_Pants_Leather",
				"GalacticPistol",
				"Shirt_Heavy_Good",
				"GalacticSpear",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Ember",
			FavoriteFood = {
				"Coffee",
				"StewMeat",
			},
			FavoriteRelaxation = {
				"Drinking",
				"Smoking",
				"Scouting",
				"SmokingJoint",
			},
			FirstName = T(719481363296, --[[ModItemCharacterDef GalenosYaskk FirstName]] "Galenos"),
			ForbiddenBreakdowns = {
				"FoodBinge",
				"Crying",
				"Initial_Crying",
				"Hiding",
				"Catatonia",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Greyson",
			HairColor1 = 4279373840,
			HairColor2 = 4279373840,
			HairColor3 = 4280097306,
			HairParam3 = 236,
			HairRoughness = 43,
			Head = "Head_Ember",
			Headline = T(401376636286, --[[ModItemCharacterDef GalenosYaskk Headline]] "Professional Thief"),
			Height = 1850,
			IdealWeight = 68861,
			KnownTechs = {
				"CounterfeitingPrint",
				"Deconstruction",
			},
			LastName = T(832120271282, --[[ModItemCharacterDef GalenosYaskk LastName]] "Yaskk"),
			NickName = T(843373401139, --[[ModItemCharacterDef GalenosYaskk NickName]] "Gal"),
			Payment = 250000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Galenos_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Galenos_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "FlokiLee",
					Opinion = 100,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Indifferent",
				Cooking = "Indifferent",
				Farming = "Indifferent",
				Physical = "Interested",
			},
			Skills = {
				Combat = 3,
				Construction = 1,
				Cooking = 1,
				Crafting = 3,
				Farming = 1,
				Hacking = 1,
				Healing = 1,
				Intellectual = 3,
				Physical = 8,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(102, 56, 56, 255),
				'EditableColor2', RGBA(102, 56, 56, 255),
				'EditableColor3', RGBA(102, 56, 56, 255),
			}),
			Traits = {
				"Thievery",
				"SwiftHands",
				"Jackpot",
				"NightOwl",
				"Infiltrator",
				"QuickSleeper",
				"Untrustworthy",
				"Inedia",
				"EnhAwareness",
				"x_secret_trait",
			},
			Weight = 66100,
			group = "PROJECTX",
			id = "GalenosYaskk",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 34,
			Bio = T(752180921585, --[[ModItemCharacterDef SyndraRayuk Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nSyndra is a firm and strict women who will not let anyone get in her way when it comes to leading an expedition. She has great leadership skills and awareness efficiency that she is capable of spotting some of the most hidden artifacts. Syndra was not assigned to be on the exploration unit, she was originally assigned as medic assistance. She shined in her role and swiftly became the lead of explorations and medical attention.\n\nShe has completed a total of 791 expeditions and discovered several alien artifacts that have been used in the advancement of Human technology. Though these expeditions have come at a cost and her body surely demonstrates that. But when it comes to saving a life, you can count in her as she will stand in the way to protect any of her crew members in an instant. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Cybernetic Left Arm\nMultiple Wounds and Fractures - Treated\nImpaired Hearing - Both Ears</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Hat_Synthetic",
				"Armor_Jacket_Synthetic",
				"Armor_Pants_Synthetic",
				"Armor_Shoes_Synthetic",
				"GalacticSpear",
				"GalacticPistol",
				"GoodLuckCharm",
			},
			Eyes = "Eyes_Larisa",
			FavoriteFood = {
				"PieMeat",
				"Tea",
				"StewVegetable",
			},
			FavoriteRelaxation = {
				"AppreciatingDecoration",
				"PleasureWalk",
				"Reading",
				"WriteShortStory",
			},
			FirstName = T(750249676120, --[[ModItemCharacterDef SyndraRayuk FirstName]] "Syndra"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
				"Crying",
				"Bullying",
				"Hiding",
			},
			Hair = "Hair_Larisa",
			HairColor1 = 4287573765,
			HairColor2 = 4282128642,
			HairMetallic = -36,
			HairParam8 = 383,
			HairRoughness = 21,
			Head = "Head_Laara",
			Headline = T(248163422571, --[[ModItemCharacterDef SyndraRayuk Headline]] "Lead Exploration Medic"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmLeft",
					BodyPartGroup = "Arms",
					HealthCond = "CyberneticArm",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Burn_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Fracture_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "TornOff_Skin_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "Torso",
					BodyPartGroup = "UpperTorso",
					HealthCond = "Wound_Scar",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarLeft",
					BodyPartGroup = "Ears",
					HealthCond = "ImpairedHearing",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarRight",
					BodyPartGroup = "Ears",
					HealthCond = "ImpairedHearing",
					HealthCondType = "Debuff",
				}),
			},
			Height = 1640,
			IdealWeight = 63000,
			KnownTechs = {
				"MedKits",
				"Antibiotics",
				"LongDistanceTravel",
				"EmergencyRations",
				"FieldCureplant",
				"FieldEnergyCrystals",
				"FieldJuiceleaf",
				"Stimulants",
			},
			LastName = T(166330081577, --[[ModItemCharacterDef SyndraRayuk LastName]] "Rayuk"),
			NickName = T(304868664889, --[[ModItemCharacterDef SyndraRayuk NickName]] "Syndra"),
			Payment = 125000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Syndra_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Syndra_large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Indifferent",
				Construction = "Forbidden",
				Farming = "Forbidden",
				Hacking = "Forbidden",
				Healing = "Interested",
				Intellectual = "Interested",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 3,
				Healing = 9,
				Intellectual = 5,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 159, 116, 255),
				'EditableColor2', RGBA(255, 86, 58, 255),
				'EditableColor3', RGBA(60, 10, 2, 255),
			}),
			Teeth = "Teeth_Larisa",
			Traits = {
				"AdvEngEfficiency",
				"AdvEngSpeed",
				"AdvFirstAid",
				"BioAdv",
				"Calming",
				"ExpeditionMedic",
				"CannotConstruct",
				"CannotFarm",
				"CannotHack",
				"CannotTrade",
			},
			Weight = 60000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle4 = "standing_Idle_Free7_Female",
			anim_idle5 = "standing_Idle_Free_Sweat_Female",
			anim_idle6 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy10 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_idle_happy6 = "standing_Idle_Free6_Female",
			anim_idle_happy7 = "standing_Idle_Free7_Female",
			anim_idle_happy8 = "standing_Idle_Free_Sweat_Female",
			anim_run = "standing_Walk_Run_Female",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "SyndraRayuk",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 22,
			Bio = T(653932385851, --[[ModItemCharacterDef KassandraInkk Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nKassandra, or as others like to call her, Kassy. She studied in one of the highest costing Universities, got the best teaching available and passed with flying colors in Animal Care, Animal Welfare and Zoology. She later went on to work for at scientist camps across the Galaxy that were performing experiments on alien foreign wildlife. Kassy just had a job of caring for the unfortunate wildlife inbetween tests. Though a job Kassy disliked due to her compassion towards the animals and feelings of pain she shared with them, it did not sway her from pursuing her career. \n\nKassy eventually worked her way up to a fantastic work portfolio that later got her accepted into the Tamer Guild as a proud member of the association. Kassandra used her position as a way to spread word of the disgusting scientific testing being used on alien wildlife all across the Galaxy and petitioned to have it stopped, wanting to spread nothing but care and love for the wildlife. \n\nKassandra has a caring and philosophical outlook to life, and has a strange way of somehow bonding with animals at an incredible speed. Perhaps they can really sense compassion and understand when they are trying to be helped. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticLegs",
				"Shirt_Heavy_Good",
				"GalacticBoots",
				"GalacticChest",
				"HarvestingTools",
			},
			Eyes = "Eyes_Ember",
			FavoriteFood = {
				"Slop",
				"PickledVegetables",
			},
			FavoriteRelaxation = {
				"WriteShortStory",
				"PlayingWithAnimal",
				"VisitAnimal",
			},
			FirstName = T(951513456005, --[[ModItemCharacterDef KassandraInkk FirstName]] "Kassandra"),
			ForbiddenBreakdowns = {
				"Stealing",
				"Berserk",
				"Bullying",
				"Hallucinating",
			},
			Hair = "HairFemale4",
			HairColor1 = 4279440147,
			HairColor2 = 4279440147,
			HairColor3 = 4279440147,
			HairRoughness = 2,
			Head = "Head_Laara",
			Headline = T(837723126981, --[[ModItemCharacterDef KassandraInkk Headline]] "Tamer Guild Member"),
			Height = 1590,
			IdealWeight = 63600,
			KnownTechs = {
				"AnimalTaming",
				"FieldJuno",
				"FieldShrieker",
				"FieldScissorhands",
				"FieldShriekerSpore",
				"FieldUlfen",
				"FieldDog",
				"FieldTecatli",
				"FieldGujo",
				"FieldGlutch",
				"FieldDraka",
			},
			LastName = T(888971329693, --[[ModItemCharacterDef KassandraInkk LastName]] "Inkk"),
			NickName = T(667243292050, --[[ModItemCharacterDef KassandraInkk NickName]] "Kassy"),
			Payment = 150000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Kassandra_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Kassandra_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Farming = "Interested",
				Intellectual = "Interested",
			},
			Skills = {
				Farming = 8,
				Intellectual = 5,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(138, 110, 110, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"ExpertTamer",
				"Calming",
				"Cheerful",
				"InspirationalWriter",
				"Pacifist",
				"AnimalHeaven",
				"x_secret_trait",
			},
			Weight = 60000,
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "KassandraInkk",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 26,
			Bio = T(246153541140, --[[ModItemCharacterDef FelixHanns Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nFelix's medical history is quite a graphic subject, as a child he was known for being problematic. He had no siblings and was very smothered in love. Practically the perfect upbringing, well you would expect anyway. It was when Felix began to bring back dead animals from the park that things took a chaotic turn. Felix would do this regularly, and had three different psychiatric assessments. Each one he passed with flying colours. His parents thought he was mad, but actually... Felix's ambition with the dead turned out to be his greatest skill, a skill he'd become well known for.\n\nFelix claims to be a 'Biologist Expert', what we do know is that Felix is a scientist, and he is good at what he does. Felix has many books written on organisms and the biology of thousands of species. You name a species, he has probably cut it open and examined every inch of organ within the corpse. Bonus of this is he can probably provide the Colony with valuable knowledge in local species of the planet. After all if we plan to live on the planet, we need to know what we are going to be living with. \n\nAn interesting study on the colony crew members up for selection is that Felix blood samples that came back from the lab actually showed a positive strain of DNA with Gale Senario, another crew member up for selection. This was brought up to Felix and he denied ever having or Brother. So just keep that in mind for your selection...\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Suspected Insanity</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticBoots",
				"GalacticLegs",
				"Jacket_Spaceship",
				"GalacticPistol",
				"Melee_HuntingKnife",
				"PacifierSniper",
			},
			Eyes = "Eyes_Isaac",
			FavoriteFood = {
				"ChefsSteak",
				"DryMeat",
			},
			FavoriteRelaxation = {
				"Reading",
				"SittingArmchair",
			},
			FirstName = T(589304524537, --[[ModItemCharacterDef FelixHanns FirstName]] "Felix"),
			Gender = "Male",
			Hair = "Hair_Isaac",
			HairColor1 = 4284570716,
			HairColor2 = 4279637012,
			HairMetallic = 72,
			HairParam2 = 29,
			HairParam3 = 127,
			HairRoughness = 20,
			Head = "Head_Simon",
			Headline = T(817890091965, --[[ModItemCharacterDef FelixHanns Headline]] "Biologist Expert"),
			Height = 1940,
			IdealWeight = 77600,
			KnownTechs = {
				"LabDesk",
				"LaboratoryFridge",
				"GalacticStorage",
				"Refrigeration",
				"Freezers",
				"AdvancedResearchDesk",
			},
			LastName = T(367773073556, --[[ModItemCharacterDef FelixHanns LastName]] "Hanns"),
			NickName = T(820851287827, --[[ModItemCharacterDef FelixHanns NickName]] "Felix"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/Felix_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Felix_Large.png",
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "GaleSenario",
					Relationship = "Halfsibling",
				}),
			},
			SkillInclinations = {
				Biology = "Interested",
				Construction = "Forbidden",
				Cooking = "Indifferent",
				Hacking = "Forbidden",
				Intellectual = "Interested",
			},
			Skills = {
				Biology = 5,
				Combat = 3,
				Healing = 3,
				Intellectual = 5,
				Physical = 3,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 138, 92, 255),
				'EditableColor2', RGBA(254, 109, 75, 255),
				'EditableColor3', RGBA(255, 138, 92, 255),
			}),
			Traits = {
				"BiologistDissect",
				"EfficientBiologist",
				"Insanity",
				"Neurotic",
				"FastWalker",
				"Bloodlust",
				"CannotConstruct",
				"CannotHack",
				"FarmOwner",
			},
			Weight = 72000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "FelixHanns",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 28,
			Bio = T(913947137643, --[[ModItemCharacterDef TayykJr Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nTayyk Junior, born on the planet of Earth and was a proud guardian of the planet, serving in the military as a combatant. Tayyk served for 6 years before facing an unfortunate injury that changed his life forever, Tayyk was declared missing in action by his military command. However this was not true, as the government were performing several experiments on Humans and required live volunteers to test the newest breakthrough in technology. Tayyk was initially doomed to die from his wounds but was rushed into an unknown facility where scientists and doctors performed life saving treatment in the form of experiments. At this time the Humans only used small bionic implants such as to restore vision and limbs, they have never gone to the extent they did with this subject. Tayyk became an experiment. Not knowing the outcome of combining such a large amount of bionic technology with the human biology, it was destined that Tayyk's fate without the experiment was obvious. \n\nTayyk was infused with nanites, partial limbs were replaced with robotic technology, his organs were imbued with nanites and his heart was fitted with advanced breakthrough technology to sustain a heartbeat, one far exceeding beyond a standard pacemaker. Tayyk's vision was replaced with bionic cybernetic eyes and his mind was completely wiped, unknown to be a side effect or intended. Tayyk survived the treatment and astonished scientists. Tayyk was the very epiphany of a new race. Tayyk was being transported to a new outpost on a classified planet to assist in the colonization efforts, it was at this moment where Tayyk's new life begins...\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Bionic Eyes - Both\nCybernetic Right Leg\nCybernetic Left Arm\nAdvanced Pacemaker - Torso</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticChest",
				"GalacticHelmet",
				"GalacticBoots",
				"GalacticLegs",
				"EMUmbrella",
			},
			FavoriteFood = {
				"Porridge",
			},
			FavoriteRelaxation = {
				"Reading",
			},
			FirstName = T(457102221700, --[[ModItemCharacterDef TayykJr FirstName]] "Tayyk"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Odette",
			HairColor1 = 4179434010,
			HairColor2 = 3859746318,
			HairColor3 = 4278452995,
			HairMetallic = -35,
			HairParam1 = 80,
			HairParam2 = 35,
			HairParam3 = 235,
			HairParam7 = 235,
			HairRoughness = 95,
			Head = "Head_Ember",
			Headline = T(601487813505, --[[ModItemCharacterDef TayykJr Headline]] "Bionic Experiment"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeLeft",
					BodyPartGroup = "WholeHead",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeRight",
					BodyPartGroup = "WholeHead",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "LegRight",
					BodyPartGroup = "Legs",
					HealthCond = "CyberneticLeg",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmLeft",
					BodyPartGroup = "Arms",
					HealthCond = "CyberneticArm",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "TorsoHeart",
					BodyPartGroup = "ChestOrgans",
					HealthCond = "AdvancedPacemaker",
					HealthCondType = "Buff",
				}),
			},
			Height = 1820,
			IdealWeight = 72800,
			LastName = T(429839958715, --[[ModItemCharacterDef TayykJr LastName]] "Junior"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/Tayyk_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Tayyk_Large.png",
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "TannerOzk",
					Opinion = 25,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "B2Droid",
					Opinion = 25,
				}),
			},
			SkillInclinations = {
				Cooking = "Forbidden",
				Crafting = "Forbidden",
				Farming = "Forbidden",
			},
			Skills = {
				Combat = 1,
				Construction = 1,
				Hacking = 1,
				Healing = 1,
				Intellectual = 1,
				Physical = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(233, 167, 128, 255),
				'EditableRoughness1', 20,
				'EditableMetallic1', -10,
				'EditableColor2', RGBA(201, 144, 111, 255),
				'EditableColor3', RGBA(151, 108, 83, 255),
				'EditableMetallic3', 1,
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"NaniteExperiment",
				"Implants",
				"AdvEngEfficiency",
				"BionicEyes",
				"AdvEngSpeed",
				"HalfMachineHalfMan",
				"OutdatedMaintenance",
				"BionicExperiment",
				"Intimidating",
				"BrightMind",
				"CannotCook",
				"CannotCraft",
				"CannotFarm",
				"FarmOwner",
			},
			UnitTags = set( "Android", "Human" ),
			Weight = 72600,
			anim_run = "standing_Walk_Run",
			group = "PROJECTX",
			id = "TayykJr",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 6,
			Bio = T(188914110629, --[[ModItemCharacterDef B2Droid Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nThe epiphany of artificial intelligence, B2-Version-9 is the 9th Generation of Artificial Intelligence within the B series. This version of droid was designed by Scientist Tanner Ozk and was the next line of advanced technology to be developed. This droid was built solely to assist its Master and aid in the advancement of Human research. B2-V9 was programmed to be the engineer of the transport, capable of fixing mechanical issues three times the speed of a Human, the droid would assist Tanner and his crew on expeditions. B2-V9 would eventually become the best technological breakthrough the Human race has ever accomplished as it began to develop its own thoughts and dreams. Research HQ, a team of scientists and technological advancements that Scientist Tanner Ozk was contracted to were astonished by the droids developed conscience and had instructed Tanner Ozk to deconstruct the Droid over fears that it will bring an end to the Human race. \n\nUpon one final expedition the Droid was queued to be deconstructed, however that expedition didn't exactly go as planned as the transport had crash landed on an unknown planet due to 'Technical Difficulties'. Will B2-V9 continue to follow the programming his Master set, or will he become a new race to be feared. Regardless of your concerns, B2-V9 is a strong aid in any situation.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>None</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Pants_Synthetic",
				"Armor_Jacket_Synthetic",
				"Armor_Shoes_Synthetic",
				"Jacket_Spaceship",
				"GalacticPistol",
				"NightGoggles",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(113954084881, --[[ModItemCharacterDef B2Droid FirstName]] "B2-V9"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Laara",
			Headline = T(471993870215, --[[ModItemCharacterDef B2Droid Headline]] "Advanced Artificial Intelligence "),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBodyWithOrgans",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			KnownTechs = {
				"BasicElectricity",
				"Electronics",
				"CPUCores",
				"PowerCells",
			},
			LastName = T(333616639566, --[[ModItemCharacterDef B2Droid LastName]] "Droid"),
			NickName = T(741069412809, --[[ModItemCharacterDef B2Droid NickName]] "Bee-Two"),
			Payment = 700000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/BeeTwo_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/BeeTwo_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "TannerOzk",
					Opinion = 100,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "TayykJr",
					Opinion = 25,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "CodeX",
					Opinion = 100,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 1,
				Construction = 1,
				Cooking = 1,
				Crafting = 1,
				Farming = 1,
				Hacking = 1,
				Healing = 1,
				Intellectual = 5,
				Mining = 1,
				Physical = 1,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 255, 255, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"AdvEngSpeed",
				"AdvEngEfficiency",
				"ElectronicsSpecialist",
				"ExpeditionHacker",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Special (Need to give black market back)",
			group = "PROJECTX",
			id = "B2Droid",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 38,
			Beard = "Beard_Isaac",
			Bio = T(252249643464, --[[ModItemCharacterDef DavidKincaid Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nFormer Combat Engineer tasked with cleaning up old wrecks in space to clear potential navigation hazards. During a break down of a pirate vessel debris impacts set off munitions onboard severely injuring him in the process. Extensive biomechanical augmentation and prosthetics was required to save David's life and was discharged for fear his augmentations might trigger defense mechanisms onboard derelict ships. Upon retiring opted to join up to help with colony development and is a excellent candidate for first drops having basic combat skills as well as construction abilities and as such has been approved. His personality is friendly and agreeable however his augmentation can be unsettling to some people and can often intimidate them by accident. Knowledge of breaking down wrecks has given him a ability to find more salvage and bypass security systems. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Bionic Eyes - Both</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Ranged_PulseRifle",
				"Shirt_Heavy_Good",
				"Armor_Jacket_Synthetic",
				"Pants_Spaceship",
				"Shoes_Heavy",
				"RespiratorMask",
			},
			Eyes = "Eyes_Isaac",
			FavoriteFood = {
				"PieMeat",
				"SoupMeat",
				"EmergencyRation",
				"EmergencyRation_Heated",
			},
			FavoriteRelaxation = {
				"Smoking",
			},
			FirstName = T(800784556859, --[[ModItemCharacterDef DavidKincaid FirstName]] "David"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Isaac",
			HairColor1 = 4284570716,
			HairColor2 = 4279637012,
			HairMetallic = 72,
			HairParam2 = 29,
			HairParam3 = 127,
			HairRoughness = 20,
			Head = "Head_Simon",
			Headline = T(795278691990, --[[ModItemCharacterDef DavidKincaid Headline]] "Combat Engineer"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeLeft",
					BodyPartGroup = "Eyes",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeRight",
					BodyPartGroup = "Eyes",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmRight",
					BodyPartGroup = "Arms",
					HealthCond = "CyberneticArm",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "LegRight",
					BodyPartGroup = "Legs",
					HealthCond = "CyberneticLeg",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "FootLeft",
					BodyPartGroup = "Legs",
					HealthCond = "CyberneticLeg",
					HealthCondType = "Buff",
				}),
			},
			Height = 1680,
			IdealWeight = 67200,
			KnownTechs = {
				"BasicArchitecture",
				"ConstructionConcrete",
				"WoodenFortifications",
				"ConcreteFortifications",
				"GalacticStorage",
			},
			LastName = T(633644082391, --[[ModItemCharacterDef DavidKincaid LastName]] "Kincaid"),
			NickName = T(997302578988, --[[ModItemCharacterDef DavidKincaid NickName]] "David"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/DavidKincaid_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/DavidKincaid_Large.png",
			SkillInclinations = {
				Combat = "Interested",
				Construction = "Interested",
				Farming = "Indifferent",
				Healing = "Forbidden",
				Physical = "Interested",
			},
			Skills = {
				Combat = 4,
				Construction = 4,
				Crafting = 2,
				Hacking = 2,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 138, 92, 255),
				'EditableColor2', RGBA(254, 109, 75, 255),
				'EditableColor3', RGBA(255, 138, 92, 255),
			}),
			Traits = {
				"MasterBuilder",
				"ScavengerDavid",
				"ArmoryDutyV2",
				"ArmoryDuty",
				"BionicEyes",
				"CombatInstructor",
				"Intimidating",
				"Cheerful",
				"FarmOwner",
				"CannotHealNormal",
				"x_secret_trait",
			},
			Weight = 66000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "DavidKincaid",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 26,
			Bio = T(537729941957, --[[ModItemCharacterDef WillianAllen Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nWillian Allen brought up on a homestead on a recently colonized world was taught to be self sufficient if not proficient.  Deciding to join the colony program to help settle new lands and teach what he was by his friends and family. Learning from a early age he is adept in bows and able to fire faster and with greater precision then other colonist making him valued in defense and for hunting. Basic knowledge of medicine, crafting, and many other skills were instilled to him at early ages by parents and neighbors since he never knew when someone might become sick on his home world with no one near to help. Naturally inclined to animals he also has a talent for taming alien species for use in domestication and training. Having come from a homestead colony he also brings a lot of knowledge on how to stretch local resources and wild life to help cloth and feed the colonist providing much to the colony growth efforts.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Jacket_Leather",
				"Armor_Pants_Leather",
				"Armor_Shoes_Leather",
				"Armor_Hat_Leather",
				"Shirt_Light_Crude",
				"PoisonBowPX",
				"SurvivalBackpack",
			},
			FavoriteFood = {
				"Bread",
				"SoupMeat",
			},
			FavoriteRelaxation = {
				"VisitAnimal",
				"PlayingWithAnimal",
				"Scouting",
			},
			FirstName = T(544281473767, --[[ModItemCharacterDef WillianAllen FirstName]] "Willian"),
			Gender = "Male",
			Hair = "Hair_Russell",
			HairColor1 = 4281670934,
			HairColor2 = 4279702547,
			HairParam3 = 127,
			Head = "Head_Zander",
			Headline = T(257320192014, --[[ModItemCharacterDef WillianAllen Headline]] "Hunter"),
			Height = 1620,
			IdealWeight = 64800,
			KnownTechs = {
				"AnimalTaming",
				"BasicWeaponry",
				"AdvancedWeaponry",
				"ConstructionBricks",
				"CottonSeeding",
				"FieldCureplant",
				"HayCloth",
				"HaySausage",
				"FieldGiantGrass",
				"FieldGujo",
				"FieldNoth",
				"FieldShogu",
			},
			LastName = T(333671255903, --[[ModItemCharacterDef WillianAllen LastName]] "Allen"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/WillianAllen_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/WillianAllen_Large.png",
			SkillInclinations = {
				Combat = "Interested",
				Cooking = "Indifferent",
				Farming = "Interested",
				Intellectual = "Indifferent",
			},
			Skills = {
				Combat = 5,
				Construction = 2,
				Cooking = 2,
				Crafting = 2,
				Farming = 2,
				Healing = 2,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 132, 94, 255),
				'EditableColor2', RGBA(176, 125, 100, 255),
				'EditableColor3', RGBA(176, 125, 100, 255),
			}),
			Traits = {
				"OneWithNature",
				"DeadlyAim",
				"OneWithNature",
				"ExpertTamer",
				"ExpertTamer",
				"4xButcher",
				"4xButcher",
				"4xButcher",
				"ArmoryDutyV2",
				"ArmoryDutyV2",
				"x_secret_trait",
			},
			Weight = 62000,
			anim_run = "standing_Walk_Run",
			group = "PROJECTX",
			id = "WillianAllen",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 41,
			Bio = T(908573427688, --[[ModItemCharacterDef ToddMasco Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nTodd Masco, the colonization teams architecture expert. A man who aids in the colonization of other planets and adapts constructions suitable for the gravity and environmental conditions of the alien planets visited. Though he initially began in this role, he has seen himself on the frontline of some brutal attacks by alien wildlife through efforts of attempting to colonize. Though this man seemed to gain a thrill from the adrenaline rush. He has a keen interest in combat, and with his tall masculine figure he seems rather confident he can hold his own.\n\nRegardless this man was never timid to get his hands dirty in the yard, lifting and aiding workers in construction he always preferred to be in the field to make certain his creations are done to perfection. Construction has always been Todd's interest, and he perfected his craft. Able to not only construct some of the most difficult structures possible in the strangest of environments, but also capable of finding the fastest method to complete a deadline on time. Such a role required knowledge on the very foundation your structure is built on, so Todd's experience does not just halt at Architecture, capable of also excavating certain rocks and materials to find the perfect spot has granted Todd the knowledge of specific ores and rocks in his time. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Cut - Head - Treated\nBurn - Torso - Treated\nMissing Finger - Left Hand - Treated.</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::</style>"),
			Equipment = {
				"Shirt_Heavy_Good",
				"Hat_Heavy_Good",
				"Pants_Heavy_Good",
				"Jacket_Heavy_Good",
				"GalacticSpear",
				"CyberSniperRifle",
			},
			Eyes = "Eyes_Vicente",
			FavoriteFood = {
				"AlcoholBeer",
				"AlcoholMoonshine",
			},
			FavoriteRelaxation = {
				"Drinking",
				"DrinkingBeverage",
			},
			FirstName = T(190533741171, --[[ModItemCharacterDef ToddMasco FirstName]] "Todd"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Crying",
				"Hiding",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Carter",
			HairColor1 = 4279045390,
			HairColor2 = 4280031770,
			HairMetallic = 64,
			HairParam1 = 16,
			HairParam2 = 39,
			HairRoughness = 102,
			Head = "Head_Vicente",
			Headline = T(105364948252, --[[ModItemCharacterDef ToddMasco Headline]] "Colony Architecture & Excavator Expert"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeFace",
					HealthCond = "Cut_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "Torso",
					BodyPartGroup = "UpperTorso",
					HealthCond = "Burn_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmLeft",
					BodyPartGroup = "Arms",
					HealthCond = "TornOff_Fingers_Scar",
					HealthCondType = "Debuff",
				}),
			},
			Height = 2100,
			IdealWeight = 84000,
			KnownTechs = {
				"BasicArchitecture",
				"ConstructionBricks",
				"ConstructionConcrete",
				"FieldOreDeposit",
				"FieldSiliconDeposit",
				"WoodenFortifications",
				"ConcreteFortifications",
			},
			LastName = T(556430512760, --[[ModItemCharacterDef ToddMasco LastName]] "Masco"),
			NickName = T(705617691059, --[[ModItemCharacterDef ToddMasco NickName]] "Todd"),
			Payment = 150000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Todd_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Todd_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Construction = "Interested",
				Hacking = "Forbidden",
				Intellectual = "Forbidden",
				Physical = "Interested",
			},
			Skills = {
				Combat = 4,
				Construction = 8,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(175, 79, 42, 255),
				'EditableColor2', RGBA(148, 65, 37, 255),
				'EditableColor3', RGBA(75, 55, 45, 255),
			}),
			Teeth = "Teeth_Vicente",
			Traits = {
				"ArchitectureExpert",
				"StubbornAttitude",
				"BasicExcavator",
				"BigBoned",
				"ConstructionInstructor",
				"Idiot",
				"Neurotic",
				"CannotHack",
				"CannotResearch",
				"x_secret_trait",
			},
			Weight = 77000,
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "ToddMasco",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale2",
			Age = 30,
			Beard = "Beard_Booker",
			Bio = T(204787418276, --[[ModItemCharacterDef GaleSenario Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nGale is not one you would typically expect to find on a random planet aiding in colony efforts... not unless there was ofcourse other plans in mind. Gale is a swift, dodgy and clever man. His whole personality spreads an aura of deception. His trade is a recognized smuggler, and by recognize, he is genuinely acknowledged by authorities as a smuggler. Though he should be rotting inside a jail cell for his lengthy number of crimes, ranging from sneaking slaves through borders, contraband goods across the Galactic territories and even smuggling himself into very restricted facilities. Nobody actually knows how he managed half of the feats he has succeeded in, but one thing is for certain, Gale is a mastermind genius in the art of stealth and finds pleasure in beating restrictions put in place before him so the Galactic Authorities got fed up of attempting to keep this man detained and locked up, instead they decided to do the best thing possible and that was to use him as an ally instead of a foe. \n\nGale is criminally chipped and under watchful eyes of the Galactic Authorities, he's been put forward as a -subject- for the colony efforts merely because of two reasons. One being what better prison is an entire planet, and two, if there is any found facilities or alien presence, he will surely find out. \n\nNot much is known about Gale's childhood, but one thing is for certain. I would rather have him as an ally, than a foe and I do not hold anything against the authorities for doing the same. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Schizophrenia - Brain</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"FruitsFlambe",
			},
			FavoriteRelaxation = {
				"Scouting",
				"Daydreaming",
			},
			FirstName = T(878321546509, --[[ModItemCharacterDef GaleSenario FirstName]] "Gale"),
			ForbiddenBreakdowns = {
				"Initial_Crying",
				"Catatonia",
				"Crying",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4279045390,
			HairColor2 = 4280031770,
			HairMetallic = 64,
			HairParam1 = 16,
			HairParam2 = 39,
			HairRoughness = 102,
			Head = "Head_Greyson",
			Headline = T(296707983853, --[[ModItemCharacterDef GaleSenario Headline]] "Smuggler"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "Schizophrenia",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "ChippedCriminal",
					HealthCondType = "Debuff",
				}),
			},
			Height = 1750,
			LastName = T(881326613805, --[[ModItemCharacterDef GaleSenario LastName]] "Senario"),
			NickName = T(393377762616, --[[ModItemCharacterDef GaleSenario NickName]] "Gale"),
			Payment = 250000000,
			PerceivedGender = "Male",
			Portrait = "Mod/ucCehPy/Portraits/Gale_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Mod/ucCehPy/Portraits/Gale_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "TommyTucker",
					Opinion = 100,
					Relationship = "ParentInLaw",
				}),
				PlaceObj('CharacterRelationship', {
					Character = "FelixHanns",
					Relationship = "Halfsibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Construction = "Interested",
				Hacking = "Forbidden",
				Intellectual = "Forbidden",
				Physical = "Interested",
			},
			Skills = {
				Combat = 4,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(100, 90, 90, 255),
				'EditableColor2', RGBA(100, 90, 90, 255),
				'EditableColor3', RGBA(100, 90, 90, 255),
			}),
			Traits = {
				"x_secret_trait",
				"ChipImplant",
				"FastWalker",
				"DissociativeDisorder",
				"NightOwl",
				"Explorer",
				"ExperiencedScavenger",
				"Untrustworthy",
			},
			Weight = 67000,
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "GaleSenario",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 29,
			Beard = "Beard",
			Bio = T(811005454628, --[[ModItemCharacterDef ZanderPogaa Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nCorrupted File.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Corrupted File</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticLegs",
				"Shirt_Heavy_Good",
				"GalacticBoots",
				"GalacticSpear",
				"DartGunPX",
			},
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"PiePumpkin",
				"Pumpkin",
			},
			FavoriteRelaxation = {
				"DrinkingBeverage",
				"Drinking",
				"PlayingWithAnimal",
				"VisitAnimal",
			},
			FirstName = T(653213553007, --[[ModItemCharacterDef ZanderPogaa FirstName]] "Zander"),
			ForbiddenBreakdowns = {
				"Crying",
				"Hiding",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Delano",
			HairColor1 = 4287729538,
			HairColor2 = 4288122760,
			HairColor3 = 4286741086,
			HairRoughness = 2,
			Head = "Head_Edmund",
			Headline = T(115432278531, --[[ModItemCharacterDef ZanderPogaa Headline]] "Animal Biologist"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeLeft",
					BodyPartGroup = "Eyes",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeRight",
					BodyPartGroup = "Eyes",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
			},
			Height = 1970,
			IdealWeight = 78800,
			KnownTechs = {
				"AnimalTaming",
				"FieldJuno",
				"FieldShrieker",
				"FieldScissorhands",
				"FieldShriekerSpore",
				"FieldUlfen",
				"FieldDog",
				"FieldTecatli",
				"FieldGujo",
				"FieldGlutch",
				"FieldDraka",
			},
			LastName = T(371971528240, --[[ModItemCharacterDef ZanderPogaa LastName]] "Pogaa"),
			Moustache = "Moustache",
			NickName = T(766845337176, --[[ModItemCharacterDef ZanderPogaa NickName]] "Zander"),
			Payment = 200000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Zander_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Zander_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Biology = "Interested",
				Cooking = "Indifferent",
				Farming = "Interested",
				Hacking = "Forbidden",
			},
			Skills = {
				Biology = 6,
				Combat = 3,
				Farming = 6,
				Physical = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(120, 95, 95, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"ExpertTamer",
				"EfficientBiologist",
				"BiologistDissect",
				"TamerSpeed",
				"SwiftHands",
				"Madness",
				"TempTolerance",
				"CannotHack",
				"x_secret_trait",
			},
			Weight = 76000,
			group = "PROJECTX",
			id = "ZanderPogaa",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 30,
			Bio = T(848135181105, --[[ModItemCharacterDef G8-L49 Bio]] '<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nGen 8 Security drone designed for close combat to keep alien creatures at bay for colonist. Retrofitted to use in close weapons the designation "Lancer" was chosen. Early thought on possible accidental friendly fire between droids or colonist and possible lawsuits resulting from damages made them remove its long range abilities. Lancers are designed to be high speed tanks able to keep enemies at bay while colonist and turrets lay into them from a safe distance. With reinforced housing and armor they can keep enemies at bay to buy time for others.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::'),
			Equipment = {
				"GalacticBoots",
				"GalacticChest",
				"GalacticHelmet",
				"GalacticLegs",
				"GalacticSpear",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(722133255728, --[[ModItemCharacterDef G8-L49 FirstName]] "G8-L49"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(707533748107, --[[ModItemCharacterDef G8-L49 Headline]] "Lancer Droid"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			LastName = "",
			NickName = T(454025294096, --[[ModItemCharacterDef G8-L49 NickName]] "Lancer Droid"),
			Payment = 500000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/SecurityDroid_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/SecurityDroid_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Farming = "Forbidden",
				Healing = "Forbidden",
				Intellectual = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 6,
				Mining = 1,
				Physical = 4,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(134, 134, 134, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(134, 134, 134, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(134, 134, 134, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"DroidLancer",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Military",
			group = "PROJECTX",
			id = "G8-L49",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 27,
			Bio = T(334223388120, --[[ModItemCharacterDef CodeX Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nCode-X was manufactured by the Galactic Authorities, designed originally to scout discovered planets and gather intelligence. The droid was possibly the best creation of its era, fitted with the best technology the Galactic Authorities had held of at the time. The actual components of the droid were never disclosed and remained classified, some believed that alien technology was used in this droid and at one point in time Code-X was highly <style red>-wanted-</style> by pirates due to its potential worth. \n\nThis was when the Galactic Authorities decided to change the configuration of Code-X from a scout droid and fit the droid so that it was suited for combat. It was and still is potentially the worst thing to have done. Humans do not know the full potential of AI, nor the full potential of alien technology, and if this droid was fitted with alien technology it could be a ticking time bomb waiting to happen. \n\nThe first two deployments of planet recon by Code-X went smoothly, and the AI was responsive to every command issued without concern. Until the 3rd deployment when the crew started to notice some strange behaviours from Code-X that they never had seen before. However the Galactic Authorities In AI Inspection team did not find any issues or reason to decommission the droid as it had reacted within normal AI protocol during the assessment. Code-X next mission is Project-X...\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>None</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticBoots",
				"DartGunBleedPX",
				"GalacticChest",
				"GalacticHelmet",
				"GalacticLegs",
				"NightGoggles",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
				"SittingArmchair",
				"Reading",
				"Daydreaming",
			},
			FirstName = T(191737746349, --[[ModItemCharacterDef CodeX FirstName]] "Code-X"),
			ForbiddenBreakdowns = {
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Laara",
			Headline = T(801896924527, --[[ModItemCharacterDef CodeX Headline]] "Advanced Artificial Intelligence "),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBodyWithOrgans",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "AnimalFlu_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Pneumonia_Immunity",
					HealthCondType = "Buff",
				}),
			},
			KnownTechs = {
				"BasicWeaponry",
				"BasicElectricity",
				"CPUCores",
				"PowerCells",
				"BlackMarket",
			},
			LastName = T(109261882163, --[[ModItemCharacterDef CodeX LastName]] "Droid"),
			NickName = T(255062616833, --[[ModItemCharacterDef CodeX NickName]] "Code-X"),
			Payment = 900000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/CodeX_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/CodeX_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "TannerOzk",
					Opinion = 100,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "TayykJr",
					Opinion = 25,
				}),
				PlaceObj('CharacterRelationship', {
					Character = "B2Droid",
					Opinion = 100,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Cooking = "Forbidden",
				Crafting = "Forbidden",
				Farming = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 4,
				Construction = 4,
				Hacking = 4,
				Healing = 4,
				Intellectual = 4,
				Mining = 1,
				Physical = 4,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 255, 255, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"ThoughtnDreams",
				"Intimidating",
				"EmoUnstable",
				"AlienTech",
				"ExpeditionHacker",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Zancer Augmented",
			group = "PROJECTX",
			id = "CodeX",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 31,
			Bio = T(398408317144, --[[ModItemCharacterDef TarraStones Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nTarra is the typical geek you would find behind a desk with a clipboard taking notes and dedicating every minute of her life on her career. Tarra is a perfectionist, she will not let a single strand of hair fall without being noticed. Probably the perfect candidate for a architect when you want the building to be tip top condition without a single flaw. Tarra will definitely make certain that the stress on a buildings structure is bare minimal. Though as much of a pro it is to be very controlling of her environment, its also a con as this means alot of her projects take longer to complete. But I guess in her words... you cannot rush perfection. \n\nTarra does struggle with social environments as she struggles to grasp ''banter'' and ''sarcasm''. However that put aside she is innocently adorably quiet. The kind've friend you would want to protect from every mean person in the Galaxy. When Tarra is not assisting in architecture work, she is usually found baking cakes and comfort foods. She has a hidden art in cooking which you would surely appreciate more than the typical ration packs i'm certain.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Pants_Spaceship",
				"Jacket_Spaceship",
				"GalacticBoots",
				"Shirt_Heavy_Good",
				"GoodLuckCharm",
			},
			Eyes = "Eyes_Allegra",
			FavoriteFood = {
				"Cake",
			},
			FavoriteRelaxation = {
				"PlayingMusic",
				"Reading",
				"WriteShortStory",
			},
			FirstName = T(252228436752, --[[ModItemCharacterDef TarraStones FirstName]] "Tarra"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Berserk",
				"Bullying",
			},
			Hair = "Hair_Allegra",
			HairColor1 = 4278716167,
			HairColor2 = 4278979080,
			HairParam3 = 127,
			Head = "Head_Nova",
			Headline = T(993450328241, --[[ModItemCharacterDef TarraStones Headline]] "Architecture Perfectionist"),
			Height = 1660,
			IdealWeight = 62000,
			KnownTechs = {
				"BasicArchitecture",
				"ConstructionCarbon",
			},
			LastName = T(888045390610, --[[ModItemCharacterDef TarraStones LastName]] "Stones"),
			NickName = T(290450461740, --[[ModItemCharacterDef TarraStones NickName]] "Tarra"),
			Payment = 150000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Tarra_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Tarra_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Construction = "Interested",
				Cooking = "Interested",
				Hacking = "Forbidden",
			},
			Skills = {
				Construction = 7,
				Cooking = 5,
				Intellectual = 2,
				Physical = 3,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 148, 101, 255),
				'EditableColor2', RGBA(254, 113, 75, 255),
				'EditableColor3', RGBA(198, 119, 85, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"ExcquisiteCook",
				"ArchitectureExpert",
				"ChefSinger",
				"TempTolerance",
				"NightOwl",
				"CannotHack",
				"Pacifist",
				"x_secret_trait",
			},
			Weight = 55000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle4 = "standing_Idle_Free7_Female",
			anim_idle5 = "standing_Idle_Free_Sweat_Female",
			anim_idle6 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy10 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_idle_happy6 = "standing_Idle_Free6_Female",
			anim_idle_happy7 = "standing_Idle_Free7_Female",
			anim_idle_happy8 = "standing_Idle_Free_Sweat_Female",
			anim_run = "standing_Walk_Run_Female",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "TarraStones",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 51,
			Beard = "Beard_Booker",
			Bio = T(399098838595, --[[ModItemCharacterDef RexLennard Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nCaptain Rex of the Military Legion. The military legion is one of the largest mercenary guilds in the Galaxy. They do a wide range of jobs from escorting, security, hit contracts and even illegal activity. If money is involved, you can count they will be there. Issue is, money is the only loyalty these men know, so trusting them is not easy. \n\nRex has seen combat and only knows of combat, he wakes in the morning with blood on his mind and sleep at night with blood in his dreams. This man lives for the thrill of killing, he has trained relentless in the art of warfare and is quite capable of holding his own. Rex has earned quite a few medals within his time for participating in Military missions, one time being pinned down as the only survivor of his squad, he managed to hold of 8 men from a flanking position for 27 hours before reinforcements arrived. \n\nWithout a doubt you can see why we have enlisted Rex as a candidate for the mission. He will protect the Colony, have relentless tolerance for danger and be an amazing war captain for your crew members. However the downside is he is still a Mercenary at the end of the day, and you can't be so trusting as the loyalty of this man is down to the pay cheque. So watch your back at all times.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Implant (Brain)\nBionic Eye (Right)\nImpaired Hearing (Both Ears)</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Hat_Carbon",
				"Armor_Jacket_Carbon",
				"Armor_Pants_Carbon",
				"Armor_Shoes_Carbon",
				"MissileLauncher",
				"GalacticSpear",
				"EMUmbrella",
			},
			Eyes = "Eyes_Booker",
			FavoriteFood = {
				"AlcoholBeer",
				"AlcoholBlueberryWine",
				"AlcoholMoonshine",
			},
			FavoriteRelaxation = {
				"Drinking",
				"Scouting",
				"PunchingPole",
				"TargetPractice",
			},
			FirstName = T(964855059386, --[[ModItemCharacterDef RexLennard FirstName]] "Rex"),
			ForbiddenBreakdowns = {
				"Crying",
				"Initial_Crying",
				"FoodBinge",
				"Hallucinating",
				"Hiding",
				"SadWalk",
				"Catatonia",
			},
			Gender = "Male",
			Hair = "Hair_Atticus",
			HairColor1 = 4287717424,
			HairColor2 = 4282066447,
			HairMetallic = -128,
			HairParam3 = 127,
			HairRoughness = 31,
			Head = "Head_Connor",
			Headline = T(193665779608, --[[ModItemCharacterDef RexLennard Headline]] "Mercenary Captain"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "MercsImplant",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeRight",
					BodyPartGroup = "WholeHead",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarLeft",
					BodyPartGroup = "Ears",
					HealthCond = "ImpairedHearing",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarRight",
					BodyPartGroup = "Ears",
					HealthCond = "ImpairedHearing",
					HealthCondType = "Debuff",
				}),
			},
			Height = 2100,
			IdealWeight = 84000,
			LastName = T(415488480446, --[[ModItemCharacterDef RexLennard LastName]] "Lennard"),
			NickName = T(791034523260, --[[ModItemCharacterDef RexLennard NickName]] "Cpt.Rex"),
			Payment = 300000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Rex_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Rex_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Farming = "Forbidden",
				Hacking = "Forbidden",
				Trade = "Interested",
			},
			Skills = {
				Combat = 8,
				Physical = 5,
				Trade = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 138, 92, 255),
				'EditableColor2', RGBA(254, 109, 75, 255),
				'EditableColor3', RGBA(255, 138, 92, 255),
			}),
			Teeth = "Teeth_Booker",
			Traits = {
				"PercentageAccuracy",
				"CombatFit",
				"SkilledCombat",
				"CombatInstructor",
				"Sharpshooter",
				"SliceNDice",
				"MercsImplant",
				"Untrustworthy",
				"OneWithNature",
				"Intimidating",
				"CannotHack",
				"CannotFarm",
			},
			Weight = 80000,
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "RexLennard",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 58,
			Bio = T(512817377014, --[[ModItemCharacterDef DrSwain Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nDr Swain driven by tales of his Grandfathers stories of surveying planets was one of the first to apply when he saw opening for frontier medical staff on a new world. Having been a Emergency Room Doctor for years on a core world is well respected as a talented surgeon. Known for his skill by coworkers and good natured by his patients always with a good joke to cheer them to recovery. Dr Swain is also know for having a head as hard as concrete by anyone who got in his way on how things should be done. Spending his down time in a small garden he enjoyed growing a few plants and making herbal remedies. While he discovered he had no talent for plants, he did learn alot about there healing properties. Dr Swain is a excellent selection for a drop team or additional staff able to round out both the emotional and physical health of any colonist\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Surprisingly Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Heavy_Good",
				"GalacticLegs",
				"GalacticChest",
				"GalacticBoots",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Atticus",
			FavoriteFood = {
				"Bread",
			},
			FavoriteRelaxation = {
				"Drinking",
			},
			FirstName = T(535264598049, --[[ModItemCharacterDef DrSwain FirstName]] "Dr.Swain"),
			ForbiddenBreakdowns = {
				"Stealing",
				"Berserk",
			},
			Gender = "Male",
			Hair = "Hair_Isaac",
			HairColor1 = 4285822068,
			HairColor2 = 4285822068,
			HairColor3 = 4285822068,
			HairMetallic = 64,
			HairParam1 = 16,
			HairParam2 = 39,
			HairRoughness = 102,
			Head = "Head_Carter",
			Headline = T(125662989168, --[[ModItemCharacterDef DrSwain Headline]] "Scientific Doctor"),
			Height = 1750,
			IdealWeight = 80000,
			KnownTechs = {
				"MedKits",
				"Antibiotics",
				"FieldCureplant",
				"Stimulants",
				"FieldBuzzshroom",
				"FieldGlitterCap",
			},
			LastName = T(723580149098, --[[ModItemCharacterDef DrSwain LastName]] " "),
			NickName = T(427557611477, --[[ModItemCharacterDef DrSwain NickName]] "Doctor S"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/DoctorSwain_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/DoctorSwain_Large.png",
			SkillInclinations = {
				Biology = "Interested",
				Combat = "Indifferent",
				Hacking = "Forbidden",
				Healing = "Interested",
				Trade = "Interested",
			},
			Skills = {
				Biology = 4,
				Construction = 2,
				Cooking = 2,
				Crafting = 1,
				Farming = 1,
				Healing = 8,
				Intellectual = 2,
				Trade = 3,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(175, 79, 42, 255),
				'EditableColor2', RGBA(148, 65, 37, 255),
				'EditableColor3', RGBA(75, 55, 45, 255),
			}),
			Traits = {
				"ImpeccableHealer",
				"ExpeditionMedic",
				"AdvFirstAid",
				"ArtisticSurgeon",
				"Attentive",
				"StubbornAttitude",
				"CannotHack",
				"FarmOwner",
			},
			Weight = 92000,
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "DrSwain",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanFemale",
			Age = 30,
			Bio = T(435763258802, --[[ModItemCharacterDef QuraDunn Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Not Found::</style>"),
			Equipment = {
				"Armor_Jacket_Leather",
				"Armor_Pants_Leather",
				"Armor_Shoes_Leather",
				"Shirt_Light_Crude",
				"ToxicSniperRifle",
				"Grenades",
			},
			Eyes = "Eyes_Larisa",
			FavoriteFood = {
				"PieMeat",
				"StewVegetable",
			},
			FavoriteRelaxation = {
				"AppreciatingDecoration",
				"PleasureWalk",
			},
			FirstName = T(857515184957, --[[ModItemCharacterDef QuraDunn FirstName]] "Qura"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Crying",
				"Bullying",
				"Hiding",
			},
			Hair = "Hair_Thalia",
			HairColor1 = 4287573765,
			HairColor2 = 4282128642,
			HairMetallic = -36,
			HairParam8 = 383,
			HairRoughness = 21,
			Head = "Head_Laara",
			Headline = T(820018912507, --[[ModItemCharacterDef QuraDunn Headline]] "The Accountant"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmLeft",
					BodyPartGroup = "Arms",
					HealthCond = "CyberneticArm",
					HealthCondType = "Buff",
				}),
			},
			Height = 1640,
			IdealWeight = 63000,
			KnownTechs = {
				"GalacticStorage",
				"StorageSafes",
				"BlueprintSafe",
				"Refrigeration",
				"Freezers",
			},
			LastName = T(272105435962, --[[ModItemCharacterDef QuraDunn LastName]] "Dunn"),
			NickName = T(197172001132, --[[ModItemCharacterDef QuraDunn NickName]] "Qura"),
			Payment = 300000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Qura_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Qura_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Interested",
				Healing = "Indifferent",
				Intellectual = "Interested",
				Trade = "Interested",
			},
			Skills = {
				Construction = 3,
				Crafting = 6,
				Hacking = 1,
				Intellectual = 1,
				Physical = 2,
				Trade = 3,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 159, 116, 255),
				'EditableColor2', RGBA(255, 86, 58, 255),
				'EditableColor3', RGBA(60, 10, 2, 255),
			}),
			Teeth = "Teeth_Larisa",
			Traits = {
				"AdvEngEfficiency",
				"AvidTailor",
				"ArmoryDuty",
				"ArmoryDutyV2",
				"CraftingInstructor",
				"Healthy",
				"AccountantsDream",
				"x_secret_trait",
			},
			Weight = 60000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle4 = "standing_Idle_Free7_Female",
			anim_idle5 = "standing_Idle_Free_Sweat_Female",
			anim_idle6 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy10 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_idle_happy6 = "standing_Idle_Free6_Female",
			anim_idle_happy7 = "standing_Idle_Free7_Female",
			anim_idle_happy8 = "standing_Idle_Free_Sweat_Female",
			anim_run = "standing_Walk_Run_Female",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "QuraDunn",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanFemale",
			Age = 37,
			Bio = T(816727220357, --[[ModItemCharacterDef DianaVoss Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nThere is not much interest in Diana's childhood, she had an average experience to life, grew up with both parents present and kept a clean lifestyle. At the age of 18 she enlisted into the military and has only known the life of a soldier for the remaining years. Diana was trained within the 901st Royal Protection Regiment where she protected high profile personal. Such tasks involved planning ahead of the unseen enemy, providing tight and mastermind security. The role required heightened awareness and observation skills. \n\nAs years went by, Diana observed many soldiers serve there minimun contractual years and leave. But Diana remained, loyal to the military she had no desire to change career. Some years later we come to now... Diana being a Chief of Security it was her job to ensure that transports entering and leaving the homeworld are not a threat. Quite a relaxing armchair position, however it did come with a twist, as comfy as the homeworld is, newly found planets require an initial security sweep before being observed by a research team, and that is where Diana Voss steps in.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Mild Asthma</style>\n\n____________________________________________\n\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Jacket_Synthetic",
				"Armor_Pants_Synthetic",
				"Armor_Shoes_Synthetic",
				"Shirt_Heavy_Good",
				"CryoFreezeRifle",
				"CyberLaserPike",
				"SignalFlare",
			},
			Eyes = "Eyes_Krista",
			FavoriteRelaxation = {
				"TargetPractice",
				"SittingArmchair",
				"Scouting",
			},
			FirstName = T(175095343390, --[[ModItemCharacterDef DianaVoss FirstName]] "Diana"),
			ForbiddenBreakdowns = {
				"Hiding",
				"Crying",
				"Initial_Crying",
				"Stealing",
				"Hallucinating",
			},
			Hair = "Hair_Allegra",
			HairColor1 = 4278847753,
			HairColor2 = 4278847753,
			HairColor3 = 4278847753,
			HairMetallic = 15,
			HairParam3 = 202,
			HairParam6 = 290,
			HairParam8 = 190,
			Head = "Head_Emelin",
			Headline = T(346772162908, --[[ModItemCharacterDef DianaVoss Headline]] "Chief of Security"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "TorsoLungs",
					BodyPartGroup = "Organs",
					HealthCond = "Asthma_1_Mild",
				}),
			},
			Height = 1730,
			IdealWeight = 64394,
			KnownTechs = {
				"LaserPikes",
				"BasicWeaponry",
				"EMFortifications",
				"SyntheticArmors",
			},
			LastName = T(947473823843, --[[ModItemCharacterDef DianaVoss LastName]] "Voss"),
			NickName = T(412478178762, --[[ModItemCharacterDef DianaVoss NickName]] "Diana"),
			Payment = 200000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Diana_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Diana_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Construction = "Indifferent",
				Cooking = "Forbidden",
				Farming = "Indifferent",
				Hacking = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 9,
				Healing = 3,
				Intellectual = 3,
				Physical = 5,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(72, 62, 53, 255),
				'EditableRoughness1', -11,
				'EditableMetallic1', 21,
				'EditableColor2', RGBA(72, 62, 53, 255),
				'EditableColor3', RGBA(72, 62, 53, 255),
			}),
			Traits = {
				"Commander",
				"ArmoryDuty",
				"KillingSpree",
				"SpecOps",
				"TargetPractice",
				"SkilledCombat",
				"EnhAwareness",
				"CannotTrade",
				"CannotHack",
				"CannotCook",
				"x_secret_trait",
			},
			Weight = 64000,
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "DianaVoss",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale1",
			Age = 32,
			Bio = T(625898267779, --[[ModItemCharacterDef BrunoRainer Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nThe man, the myth, the legend. Bruno Rainer is an exceptionally talented construction expert. Capable of deploying structures suitable for all environments, and with some speed aswell. Bruno has been a number one pick for expeditions and planet deployments for a few years now and is highly respected, hence the start of his biography. Capable of getting walls up, a roof and defense stations in place is the number one priority when it comes to planet deployment, hence why many squadron leaders highly seek the man. \n\nBruno started his career with the Galactic Authorities Exploration Team at the age of 18 and has been in the career ever since. Due to this he has picked up years of experience on deployments all across space. He is a man who loves his job and is very happy when left to do what he does best.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Jacket_Leather",
				"Armor_Shoes_Leather",
				"Armor_Pants_Leather",
				"GalacticPistol",
				"Shirt_Heavy_Good",
				"GalacticSpear",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Ember",
			FavoriteFood = {
				"Coffee",
				"StewMeat",
			},
			FavoriteRelaxation = {
				"Drinking",
				"Smoking",
			},
			FirstName = T(320708155620, --[[ModItemCharacterDef BrunoRainer FirstName]] "Bruno"),
			ForbiddenBreakdowns = {
				"FoodBinge",
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Greyson",
			HairColor1 = 4279373840,
			HairColor2 = 4279373840,
			HairColor3 = 4280097306,
			HairParam3 = 236,
			HairRoughness = 43,
			Head = "Head_Ember",
			Headline = T(790153821224, --[[ModItemCharacterDef BrunoRainer Headline]] "Construction Expert"),
			Height = 1850,
			IdealWeight = 68861,
			KnownTechs = {
				"BasicArchitecture",
				"ConstructionBricks",
				"ConstructionConcrete",
				"ConcreteFortifications",
				"SearchLights",
				"WoodenFortifications",
			},
			LastName = T(793776988211, --[[ModItemCharacterDef BrunoRainer LastName]] "Rainer"),
			Moustache = "Moustache",
			NickName = T(505775256242, --[[ModItemCharacterDef BrunoRainer NickName]] "Bruno"),
			Payment = 150000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Bruno_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Bruno_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Interested",
				Crafting = "Indifferent",
				Farming = "Indifferent",
				Hacking = "Forbidden",
				Healing = "Forbidden",
				Physical = "Interested",
			},
			Skills = {
				Combat = 2,
				Construction = 7,
				Intellectual = 3,
				Physical = 6,
				Trade = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(102, 56, 56, 255),
				'EditableColor2', RGBA(102, 56, 56, 255),
				'EditableColor3', RGBA(102, 56, 56, 255),
			}),
			Traits = {
				"ArchitectureExpert",
				"Engineer",
				"SwiftHands",
				"QuickSleeper",
				"Inedia",
				"Attentive",
				"Cheerful",
				"Hemophobia",
				"CannotHack",
				"x_secret_trait",
			},
			Weight = 66100,
			group = "PROJECTX",
			id = "BrunoRainer",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 52,
			Beard = "Beard_Vicente",
			Bio = T(334747912425, --[[ModItemCharacterDef DrakeJames Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nBorn to a family of scientist and doctors as a sickly child Drake had little to do but read books on all the creatures found on earth. With medicine and gene therapy he was able to get over his illness. His body now fit as his mind he never lost his thirst for knowledge. Leading him to explore the world around him. Exploring books when the weather was to bad to be outside. Going to school for biology and anatomy he learned of the species of Earth. Drakes continuing education led him to classes of alien creatures and world. Drake in his spare time often read up on animals that originally were folklore but later discovered by written off by science as fantasy. Stories of the local people talking of horses with a neck so long it could eat leaves in trees, a creature of myth till discovered as the Giraffe.  Who knows though what animals might have been or maybe were not even of this world Drake thought. Applying to the Colony project to go to new worlds to see if any creatures of Earths fantasy path were simply alien creatures that had crashed to Earth like stories of space ship survivors on forgotten worlds. For on those worlds who knows what he may find that leads us to the past we thought of as fantasy.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Ranged_RailgunSniper",
				"Armor_Jacket_Leather",
				"Shirt_Light_Crude",
				"Pants_Spaceship",
				"Shoes_Heavy",
				"Hat_Light_Good",
				"RespiratorMask",
			},
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"PieMeat",
				"AlcoholBlueberryWine",
				"Tea",
				"StimulatingTea",
			},
			FavoriteRelaxation = {
				"Daydreaming",
				"PleasureWalk",
				"Reading",
			},
			FirstName = T(264441812208, --[[ModItemCharacterDef DrakeJames FirstName]] "Drake"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Atticus",
			HairColor1 = 4287794289,
			HairColor2 = 4288978567,
			HairColor3 = 4287729538,
			HairParam3 = 0,
			HairParam7 = 128,
			HairRoughness = 2,
			Head = "Head_Jack",
			Headline = T(458612372870, --[[ModItemCharacterDef DrakeJames Headline]] "Cryptid Hunter / Scout"),
			Height = 1920,
			IdealWeight = 76800,
			KnownTechs = {
				"Deconstruction",
				"HotairBalloonOptimization",
				"LongDistanceTravel",
				"FieldChewroot",
				"LiquidFuelFromInsectMeat",
				"LiquidFuelCrafting",
				"LabDesk",
				"LaboratoryFridge",
			},
			LastName = T(761948742101, --[[ModItemCharacterDef DrakeJames LastName]] "James"),
			NickName = T(662931911363, --[[ModItemCharacterDef DrakeJames NickName]] "Drake"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/DrakeJames_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/DrakeJames_Large.png",
			SkillInclinations = {
				Biology = "Interested",
				Construction = "Indifferent",
				Farming = "Indifferent",
				Intellectual = "Interested",
			},
			Skills = {
				Biology = 4,
				Combat = 3,
				Crafting = 2,
				Healing = 2,
				Intellectual = 4,
				Physical = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(143, 119, 104, 255),
				'EditableRoughness1', 3,
				'EditableColor2', RGBA(143, 119, 104, 255),
				'EditableColor3', RGBA(143, 119, 104, 255),
			}),
			Traits = {
				"BiologistDissect",
				"Calming",
				"InspirationalWriter",
				"Explorer",
				"ExperiencedScavenger",
				"NaturalCuriosity",
				"PhysicallyFit",
				"FastWalker",
				"FarmOwner",
			},
			Weight = 72000,
			anim_idle1 = "standing_Idle_Rifle",
			group = "PROJECTX",
			id = "DrakeJames",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 30,
			Beard = "Beard",
			Bio = T(148417294478, --[[ModItemCharacterDef FlokiLee Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nFloki Lee is known for his rogue acts and obsession with breaking boundaries set by law enforcement. Floki never has been convicted, but he has been close. The man has used animals tamed to perform crimes such as theft and assault. But due to not being the one actually performing the crime, he could never be convicted. You have probably guessed it by now but yes, he got animals to perform the crimes for him. Probably seen as a genius to some.\n\nFloki has an incredible skill that has proven to be valuable to the Galactic Authorities, the ability to tame almost every animal that has come into contact with a Human. The man has been labelled as stupid, but it is his bravery that has made him so successful in becoming one of the most renowned taming experts today. \n\nRegistered under the Tamer's Guild with licensed credentials, Floki Lee has got an extensive knowledge of foreign alien wildlife, and has been known to be able to tame some of the most dangerous, deadliest and obscene alien-creatures you could ever imagine. He is definitely not the first, nor will he ever be the last. Taming animals across the Galaxy is quite a popular thing nowadays, hence why a Tamer's Guild even exists. But we have to give credit where credit is due, Floki is a very reliable Tamer who will keep your colony safe, without even using a weapon.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Cybernetic Left Leg</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticLegs",
				"Shirt_Heavy_Good",
				"GalacticBoots",
				"GalacticChest",
				"GalacticSpear",
				"PacifierSniper",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"PizzaVegetable",
				"PieMeat",
			},
			FavoriteRelaxation = {
				"PlayingMusic",
				"PlayingWithAnimal",
				"VisitAnimal",
				"Scouting",
			},
			FirstName = T(998279764296, --[[ModItemCharacterDef FlokiLee FirstName]] "Floki"),
			ForbiddenBreakdowns = {
				"Crying",
				"Hiding",
				"Initial_Crying",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Delano",
			HairColor1 = 4279440147,
			HairColor2 = 4279440147,
			HairColor3 = 4279440147,
			HairRoughness = 2,
			Head = "Head_Edmund",
			Headline = T(711766902415, --[[ModItemCharacterDef FlokiLee Headline]] "Foreign Animal Expert"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "LegLeft",
					BodyPartGroup = "Legs",
					HealthCond = "CyberneticLeg",
					HealthCondType = "Buff",
				}),
			},
			Height = 1770,
			IdealWeight = 70800,
			KnownTechs = {
				"AnimalTaming",
				"FieldJuno",
				"FieldShrieker",
				"FieldScissorhands",
				"FieldShriekerSpore",
				"FieldUlfen",
				"FieldDog",
				"FieldTecatli",
				"FieldGujo",
				"FieldGlutch",
				"FieldDraka",
				"FieldNoth",
				"FieldShogu",
			},
			LastName = T(661054789097, --[[ModItemCharacterDef FlokiLee LastName]] "Lee"),
			Moustache = "Moustache",
			NickName = T(325258418980, --[[ModItemCharacterDef FlokiLee NickName]] "Floki"),
			Payment = 200000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Floki_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Floki_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "GalenosYaskk",
					Opinion = 100,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Farming = "Interested",
			},
			Skills = {
				Biology = 3,
				Combat = 3,
				Farming = 8,
				Hacking = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(95, 68, 68, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"ExpertTamer",
				"CareerPhysique",
				"TamerSpeed",
				"Euthanasia",
				"SwiftHands",
				"TempTolerance",
				"OneWithNature",
				"x_secret_trait",
			},
			group = "PROJECTX",
			id = "FlokiLee",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 33,
			Beard = "Beard_Vicente",
			Bio = T(262525132377, --[[ModItemCharacterDef PogoDainer Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nFile Corrupted.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Unknown</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"CyberBoots",
				"CarbonHatPX",
				"Shirt_Heavy_Good",
				"CyberChest",
				"CyberLegs",
				"CyberLaserPike",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"PizzaVegetable",
			},
			FavoriteRelaxation = {
				"PlayingMusic",
				"TargetPractice",
				"WriteShortStory",
			},
			FirstName = T(175495754381, --[[ModItemCharacterDef PogoDainer FirstName]] "Pogo"),
			ForbiddenBreakdowns = {
				"Crying",
				"Hiding",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Greyson",
			HairColor1 = 4280294942,
			HairColor2 = 4280294942,
			HairColor3 = 4280294942,
			Head = "Head_Edmund",
			Headline = T(269007746549, --[[ModItemCharacterDef PogoDainer Headline]] "Blackmarket Organ Trader"),
			Height = 2030,
			IdealWeight = 81200,
			KnownTechs = {
				"BlackMarketAlienTech",
				"BlackMarketCyberTech",
				"BlackMarketTraps",
				"BlackMarketWeaponry",
				"BiologyTrade",
				"LabDesk",
				"LaboratoryFridge",
			},
			LastName = T(642409825760, --[[ModItemCharacterDef PogoDainer LastName]] "Dainer"),
			Moustache = "Moustache",
			NickName = T(176904280375, --[[ModItemCharacterDef PogoDainer NickName]] "Pogz"),
			Payment = 300000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Pogo_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Pogo_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Biology = "Interested",
				Cooking = "Forbidden",
				Crafting = "Forbidden",
				Farming = "Forbidden",
				Healing = "Indifferent",
				Trade = "Interested",
			},
			Skills = {
				Biology = 7,
				Trade = 7,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(95, 68, 68, 255),
				'EditableColor2', RGBA(95, 68, 68, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"BiologistDissect",
				"EfficientBiologist",
				"TradersWit",
				"TradersDelight",
				"x_secret_trait",
				"CannotCook",
				"CannotCraft",
				"CannotFarm",
			},
			Weight = 78000,
			group = "PROJECTX",
			id = "PogoDainer",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanFemale",
			Age = 19,
			Bio = T(495480845020, --[[ModItemCharacterDef RayyPasker Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nRayy Pasker, the twin sister to Luna Pasker. Just as much of a lovable personality as her sibling, with a very caring and positive touch to those around her. Literally, she held a positive touch as this women managed wonders when it came to medical treatment. After all her sister needed someone to patch her up when those animal taming attempts went horribly wrong. Rayy grew up falling in love with nature just like her sister, however she was not the most keen when it came to actually approaching animals, instead she preferred to observe from a distance and enjoy the view. Rayy believed in nothing but putting the world back together again, after all with the entire Human race so set on tearing eachother apart how wrong is it for this young women to want to put a little piece of it back together. Due to this mindset, Rayy did not believe in violence and would not participate in conflict. She would simply mop up behind others. \n\nBut don't take that for granted, she is good at what she does, being able to patch up nearly every wound and provide some of the most complex life saving treatments that you can imagine. Rayy is loved by her peers, she always remained positive when around others, keeping a smile on her face even if she struggles beneath. \n\nHer pasttime hobbies include crafting, she was always one to be interested in creating and crafting from fabrics, if she isn't saving a life, she can be found beside a crafting table attending to her clothes as she took much pride in her image. She is a much needed asset on any team and at such a young age, she has so much more potential.\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Jacket_Spaceship",
				"Pants_Spaceship",
				"Shirt_Heavy_Good",
				"Shoes_Normal",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Sora",
			FavoriteFood = {
				"HoneyBites",
			},
			FavoriteRelaxation = {
				"SittingArmchair",
				"Reading",
			},
			FirstName = T(668876074529, --[[ModItemCharacterDef RayyPasker FirstName]] "Rayy"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Initial_Crying",
				"Stealing",
				"Hallucinating",
			},
			Hair = "HairFemale4",
			HairColor1 = 4287794289,
			HairColor2 = 4288978567,
			HairColor3 = 4287729538,
			HairParam3 = 0,
			HairParam7 = 128,
			HairRoughness = 2,
			Head = "Head_Nova",
			Headline = T(566341739907, --[[ModItemCharacterDef RayyPasker Headline]] "Expedition Medic"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "AnimalFlu_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Pneumonia_Immunity",
					HealthCondType = "Buff",
				}),
			},
			Height = 1560,
			IdealWeight = 57322,
			LastName = T(496228101361, --[[ModItemCharacterDef RayyPasker LastName]] "Pasker"),
			NickName = T(675372505092, --[[ModItemCharacterDef RayyPasker NickName]] "Rayy"),
			Payment = 150000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Rayy_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Rayy_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "LunariaPasker",
					Opinion = 70,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Construction = "Indifferent",
				Cooking = "Indifferent",
				Hacking = "Forbidden",
				Healing = "Interested",
			},
			Skills = {
				Crafting = 4,
				Healing = 9,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(236, 224, 186, 255),
				'EditableRoughness1', 3,
				'EditableColor2', RGBA(255, 244, 194, 255),
				'EditableColor3', RGBA(255, 244, 194, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"ExpeditionMedic",
				"AdvFirstAid",
				"SanitaryConditions",
				"Euthanasia",
				"Calming",
				"Attentive",
				"AvidTailor",
				"Vegetarian",
				"CannotHack",
				"Pacifist",
				"x_secret_trait",
			},
			Weight = 60000,
			anim_idle1 = "standing_Idle_Rifle",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "RayyPasker",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 48,
			Bio = T(867187196471, --[[ModItemCharacterDef LeonardoKexx Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nLeonardo Kexx, known as just being a trader. Well that's what he told the Galactican Colonial Corps. There was a bunch of lies he told about how much he did. \n\nRather than read his lies, \"I\" will tell you don't pick this person. I, not the GCC, but his ex wife. I'm pretty good at hacking as you can see. Leonardo is an ex for a reason, he is ignorant and acts as if his life is one big classified important file. I lived with the man, trust me... If an ex wife is willing to hack into a government secure database just to make certain her ex lover does not get accepted into some random money fortune mission, then you have probably guessed they have a good enough reason to not pick this person. \n\nBut if by some miracle after reading this ever so insightful biography that you do want to pick this person, then best of luck to you! Because I barely survived a year with this man. Also if you did... pick them, then you deserve to be dumped with such a poor example of a man due to your stupidity.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Advanced Pacemaker - Torso\nMild Asthma</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Heavy_Good",
				"PacifierSniper",
				"Pants_Spaceship",
				"Jacket_Spaceship",
				"Shoes_Light",
				"Hat_Light_Good",
				"SurvivalBackpack",
			},
			FavoriteFood = {
				"PizzaVegetable",
				"Coffee",
			},
			FavoriteRelaxation = {
				"PlayingDarts",
				"PleasureWalk",
				"Sitting",
			},
			FirstName = T(154444773409, --[[ModItemCharacterDef LeonardoKexx FirstName]] "Leonardo"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair",
			HairColor1 = 4281670934,
			HairColor2 = 4279702547,
			HairParam3 = 127,
			Head = "Head_Zander",
			Headline = T(630994100977, --[[ModItemCharacterDef LeonardoKexx Headline]] "Trader"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "TorsoHeart",
					BodyPartGroup = "ChestOrgans",
					HealthCond = "AdvancedPacemaker",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "TorsoLungs",
					BodyPartGroup = "ChestOrgans",
					HealthCond = "Asthma_1_Mild",
				}),
			},
			KnownTechs = {
				"FieldGlitterCap",
				"FieldBuzzshroom",
				"FieldSmokeleaf",
				"EnergyCrystalSupply",
			},
			LastName = T(765147249342, --[[ModItemCharacterDef LeonardoKexx LastName]] "Kexx"),
			NickName = T(782630603242, --[[ModItemCharacterDef LeonardoKexx NickName]] "Leo"),
			Payment = 200000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Leonardo_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Leonardo_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "XyraLee",
					Opinion = -100,
					Relationship = "Exlover",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Indifferent",
				Cooking = "Forbidden",
				Crafting = "Indifferent",
				Hacking = "Interested",
				Trade = "Interested",
			},
			Skills = {
				Combat = 3,
				Farming = 2,
				Hacking = 3,
				Intellectual = 3,
				Physical = 3,
				Trade = 5,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 132, 94, 255),
				'EditableColor2', RGBA(254, 109, 75, 255),
				'EditableColor3', RGBA(176, 125, 100, 255),
			}),
			Traits = {
				"TradersWit",
				"HackerExpertise",
				"HackersPleasure",
				"AdvEngEfficiency",
				"HighAsAKite",
				"HighRisk",
				"CannotCook",
				"x_secret_trait",
			},
			anim_run = "standing_Walk_Run",
			group = "PROJECTX",
			id = "LeonardoKexx",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanFemale",
			Age = 19,
			Bio = T(413983573714, --[[ModItemCharacterDef LunariaPasker Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nLunaria Pasker, in short, Luna. Twin sister to Rayy Pasker. A lovable personality, with a very caring and positive touch to those around her. Luna has always been one with nature, spending many of her days outdoors with the wildlife and examining every detail of a creature. Luna became fascinated with wildlife at a young age and aspired to become apart of the global research team to try and learn everything about alien wildlife, but also... to be one of the first to potentially tame an alien species.\n\nLuna began her first adventure with a foreign agency team on observation and intelligence gathering expeditions to local planets. The agency was small, nothing major and was merely a foot through the door for bigger oppertunities.\n\nIt was however on one of these expeditions that changed Luna's life completely. All she ever wanted was to be the first to tame alien wildlife, to learn and understand them beyond just aliens, or beasts. Luna got what she wished for, but she got more than she possibly wanted. Becoming stranded on an alien planet was never a plan, however this could be a great opportunity for her. This is where her story truly begins at such a young age, she has little experience in survival, but if her knowledge on alien wildlife is accurate, she could become the most valuable member on the team.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Jacket_Spaceship",
				"Pants_Spaceship",
				"Shirt_Heavy_Good",
				"Shoes_Normal",
				"PacifierSniper",
				"HarvestingTools",
			},
			Eyes = "Eyes_Sora",
			FavoriteFood = {
				"Cake",
				"Tea",
			},
			FavoriteRelaxation = {
				"AppreciatingDecoration",
				"PlayingWithAnimal",
				"VisitAnimal",
				"Daydreaming",
			},
			FirstName = T(156075089652, --[[ModItemCharacterDef LunariaPasker FirstName]] "Lunaria"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Stealing",
				"Hallucinating",
			},
			Hair = "HairFemale4",
			HairColor1 = 4287729538,
			HairColor2 = 4288122760,
			HairColor3 = 4286741086,
			HairParam3 = 0,
			HairParam7 = 128,
			HairRoughness = 2,
			Head = "Head_Nova",
			Headline = T(222354536244, --[[ModItemCharacterDef LunariaPasker Headline]] "Animal Whisperer"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "AnimalFlu_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Pneumonia_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Stimulant_Tea",
					HealthCondType = "Buff",
				}),
			},
			Height = 1540,
			IdealWeight = 57322,
			KnownTechs = {
				"AnimalTaming",
				"FieldDog",
				"FieldDraka",
				"FieldCamel",
				"FieldDactyl",
				"FieldHummingfly",
				"FieldGlutch",
				"FieldGujo",
				"FieldJuno",
				"FieldScissorhands",
				"FieldShrieker",
				"FieldSkarabei",
				"FieldUlfen",
				"FieldVulture",
				"FieldTecatli",
				"FieldShogu",
				"FieldNoth",
				"Pacifiers",
			},
			LastName = T(425730259299, --[[ModItemCharacterDef LunariaPasker LastName]] "Pasker"),
			NickName = T(580679646965, --[[ModItemCharacterDef LunariaPasker NickName]] "Luna"),
			Payment = 150000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Lunaria_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Lunaria_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "RayyPasker",
					Opinion = 70,
					Relationship = "Sibling",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Indifferent",
				Crafting = "Interested",
				Farming = "Interested",
				Hacking = "Forbidden",
			},
			Skills = {
				Cooking = 4,
				Crafting = 4,
				Farming = 7,
				Intellectual = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(143, 119, 104, 255),
				'EditableColor2', RGBA(143, 119, 104, 255),
				'EditableColor3', RGBA(143, 119, 104, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"AnimalWhisperer",
				"Euthanasia",
				"PhysicallyFit",
				"Calming",
				"Attentive",
				"Cheerful",
				"Vegetarian",
				"AnimalHeaven",
				"CannotHack",
				"x_secret_trait",
			},
			Weight = 54000,
			anim_idle1 = "standing_Idle_Rifle",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "LunariaPasker",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale1",
			Age = 18,
			Bio = T(455397822869, --[[ModItemCharacterDef TommyTucker Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nTommy Tucker is Experiment Number 2232, born on the Space Station S-800 from a test tube in an attempt to create a new generation of Human evolution that was able to withstand the environments of planet delta. However due to failures of colonization on the planet delta and thus the planet was deemed not suitable for Human existence, Tommy was an experiment that was no longer required, and thus his existence was also void. Tommy could not be allowed to continue living knowing that he could reproduce the gene that was no longer required. Instead the Galactic Authorities began producing new experiments, modifying the gene to suit planet Project-X. \n\nTommy was scheduled to be terminated, however due to a very unlikely bond that formed with a smuggler known as Gale Senario, it was this very bond that kept Tommy alive. Gale smuggled Tommy from the space program and onto Project-X. Disguised as a candidate the crew would know no better than Tommy just being apart of the team established for the colony efforts. \n\nTommy doesn't exactly come packed as -just- a useless child either. He has some unique talents that could be quite useful for the colony. This would be Tommy's second chance at live... or I guess in some aspect, his first chance in actually living a normal life. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Bionic Eye Left</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Jacket_Spaceship",
				"Armor_Shoes_Leather",
				"Pants_Spaceship",
				"Shirt_Heavy_Good",
				"RespiratorMask",
			},
			Eyes = "Eyes_Ember",
			FavoriteFood = {
				"Cake",
				"StewMeat",
			},
			FavoriteRelaxation = {
				"PlayingWithAnimal",
				"PlayingMusic",
				"SnowFight",
				"SnowmanMaking",
				"Daydreaming",
			},
			FirstName = T(310913580691, --[[ModItemCharacterDef TommyTucker FirstName]] "Tommy"),
			ForbiddenBreakdowns = {
				"DrinkingBinge",
				"Catatonia",
			},
			Gender = "Male",
			Hair = "Hair_Atticus",
			HairColor1 = 4287794289,
			HairColor2 = 4288978567,
			HairColor3 = 4287729538,
			HairParam3 = 236,
			HairRoughness = 43,
			Head = "Head_Ember",
			Headline = T(742429335668, --[[ModItemCharacterDef TommyTucker Headline]] "Experiment Number 2232"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeLeft",
					BodyPartGroup = "WholeHead",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
			},
			Height = 1850,
			IdealWeight = 68861,
			KnownTechs = {
				"SleepTraining",
			},
			LastName = T(921177499830, --[[ModItemCharacterDef TommyTucker LastName]] "Tucker"),
			NickName = T(342897110349, --[[ModItemCharacterDef TommyTucker NickName]] "Tom"),
			Payment = 200000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/Tommy_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Tommy_Large.png",
			RandomPick = false,
			Relationships = {
				PlaceObj('CharacterRelationship', {
					Character = "GaleSenario",
					Opinion = 100,
					Relationship = "ChildInLaw",
				}),
			},
			SelectableOnNewGame = false,
			SkillInclinations = {
				Cooking = "Forbidden",
				Hacking = "Forbidden",
				Physical = "Interested",
			},
			Skills = {
				Combat = 1,
				Construction = 1,
				Cooking = 1,
				Crafting = 1,
				Farming = 1,
				Hacking = 1,
				Healing = 1,
				Intellectual = 3,
				Physical = 3,
				Trade = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 148, 101, 255),
				'EditableColor2', RGBA(254, 113, 75, 255),
				'EditableColor3', RGBA(198, 119, 85, 255),
			}),
			Traits = {
				"ChildProdigy",
				"SwiftHands",
				"TinyMan",
				"BionicEyes",
				"Hallucinations",
				"Gloomy",
				"CannotHack",
				"CannotCook",
			},
			Weight = 66100,
			group = "PROJECTX",
			id = "TommyTucker",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanFemale",
			Age = 22,
			Bio = T(454194717558, --[[ModItemCharacterDef EonLouise Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nEon Louise, a experienced agriculturist and chef, expert in both fields. Eon was born on the planet of Earth, grew up with her parents who were farmers. Its initially where Eon got her passion for agriculture from. However she wanted to apply it to a far greater spectrum than just a field... -space-. Eon's chef instinct came from her mother, she always enjoyed growing food then creating a masterpiece from your very own creation.\n\nEon entered the Project-X program on a whim. She went through the trials and stunned the agriculturist team. Surprisingly to herself she had passed and was selected as a candidate for the colonization efforts. Eon has a very basic backstory and is not an exceptional case. She was just a farmer who inspired to be more.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Hearing Aids - Both Ears</style>\n\n____________________________________________\n\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticChest",
				"Pants_Spaceship",
				"Shirt_Heavy_Good",
				"GalacticBoots",
				"GalacticPistol",
				"DartGunPX",
				"HarvestingTools",
			},
			Eyes = "Eyes_Sora",
			FavoriteFood = {
				"ChefsSteak",
				"Tea",
				"PiePumpkin",
			},
			FavoriteRelaxation = {
				"PleasureWalk",
				"AppreciatingDecoration",
				"VisitAnimal",
			},
			FirstName = T(872755581293, --[[ModItemCharacterDef EonLouise FirstName]] "Eon"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Stealing",
				"Hallucinating",
			},
			Hair = "HairFemale4",
			HairColor1 = 4287729538,
			HairColor2 = 4288122760,
			HairColor3 = 4286741086,
			HairParam3 = 0,
			HairParam7 = 128,
			HairRoughness = 2,
			Head = "Head_Nova",
			Headline = T(906263492614, --[[ModItemCharacterDef EonLouise Headline]] "Agriculturist Chef"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "AnimalFlu_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Pneumonia_Immunity",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarLeft",
					BodyPartGroup = "Ears",
					HealthCond = "HearingAid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarRight",
					BodyPartGroup = "Ears",
					HealthCond = "HearingAid",
					HealthCondType = "Buff",
				}),
			},
			Height = 1540,
			IdealWeight = 57322,
			KnownTechs = {
				"FieldButtermelon",
				"FieldBuzzshroom",
				"FieldEnergyCrystals",
				"FieldCureplant",
				"FieldClothblossom",
				"FieldGlitterCap",
				"FieldGraincob",
				"FieldCactusBig",
				"FieldSiliconleaf",
				"FieldMulchtube",
			},
			LastName = T(784466024988, --[[ModItemCharacterDef EonLouise LastName]] "Louise"),
			NickName = T(284093633241, --[[ModItemCharacterDef EonLouise NickName]] "Eon"),
			Payment = 150000000,
			PerceivedGender = "Female",
			Portrait = "Portraits/Eon_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Eon_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Construction = "Indifferent",
				Cooking = "Interested",
				Farming = "Interested",
				Hacking = "Forbidden",
			},
			Skills = {
				Cooking = 5,
				Farming = 8,
				Intellectual = 2,
				Physical = 3,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(143, 119, 104, 255),
				'EditableColor2', RGBA(143, 119, 104, 255),
				'EditableColor3', RGBA(143, 119, 104, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"Agriculturalist",
				"ChefsHands",
				"ExcquisiteCook",
				"PhysicallyFit",
				"Gloomy",
				"ChefsHeat",
				"CannotHack",
				"x_secret_trait",
			},
			Weight = 54000,
			anim_idle1 = "standing_Idle_Rifle",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "EonLouise",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 35,
			Beard = "Beard_Isaac",
			Bio = T(781037854161, --[[ModItemCharacterDef ChazRelioo Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Not Found::</style>"),
			Equipment = {
				"GalacticChest",
				"GalacticBoots",
				"GalacticLegs",
				"Shirt_Light_Crude",
				"GalacticSpear",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Isaac",
			FavoriteFood = {
				"PieMeat",
			},
			FavoriteRelaxation = {
				"Smoking",
			},
			FirstName = T(618367343739, --[[ModItemCharacterDef ChazRelioo FirstName]] "Chaz"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Isaac",
			HairColor1 = 4284570716,
			HairColor2 = 4279637012,
			HairMetallic = 72,
			HairParam2 = 29,
			HairParam3 = 127,
			HairRoughness = 20,
			Head = "Head_Simon",
			Headline = T(237316298218, --[[ModItemCharacterDef ChazRelioo Headline]] "Unknown"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "GeneticNanites",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					HealthCond = "Stimulant_Drugs",
					HealthCondType = "Buff",
				}),
			},
			Height = 1680,
			IdealWeight = 67200,
			LastName = T(728720019118, --[[ModItemCharacterDef ChazRelioo LastName]] "Relioo"),
			NickName = T(410183311175, --[[ModItemCharacterDef ChazRelioo NickName]] "Chaz"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/Chaz_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Chaz_Large.png",
			Skills = {
				Combat = 2,
				Construction = 1,
				Cooking = 2,
				Crafting = 2,
				Farming = 1,
				Hacking = 2,
				Intellectual = 2,
				Physical = 1,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 138, 92, 255),
				'EditableColor2', RGBA(254, 109, 75, 255),
				'EditableColor3', RGBA(255, 138, 92, 255),
			}),
			Traits = {
				"TradersWit",
				"MasterOfCoin",
				"MathematicallyCorrect",
				"TradersDelight",
				"FarmOwner",
				"x_secret_trait",
			},
			Weight = 66000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "ChazRelioo",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 32,
			Bio = T(690764985313, --[[ModItemCharacterDef FioraJasmin Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nFiora has been renowned for her knowledge of the trade market ever since she started working with the Galactic Authorities. Her main role was securing contracts and supplies for the government body, aiding in construction materials for outpost sites and logging stock counts on every item she processes. Fiora was no ordinary trade specialist who sat behind a desk and watched numbers appear on a holographic display, infact she preferred getting on the floor and putting her cybernetic arm to good use. Heavy lifting, physical activities and staff monitoring. She was the very definition of a leader, leading by example. Due to her practical nature she picked up quite a few tips and tricks regarding construction.\n\nFiora developed very strong and crucial trade contacts throughout her time. She has many links into different areas of trade, ranging from defensive machinary to galactic printers, right the way down to the smallest resource of stone. Regardless you can definitely count on her to secure you a deal or two for much desperately needed resources. If he persuasive talk doesn't do the trick, she knows a thing or two about flattery which tends to work perfectly fine.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Cybernetic Right Arm</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"GalacticLegs",
				"GalacticChest",
				"GalacticBoots",
				"GalacticPistol",
				"GalacticSpear",
				"NightGoggles",
			},
			Eyes = "Eyes_Krista",
			FavoriteFood = {
				"SoupMeat",
				"ChefsSteak",
			},
			FavoriteRelaxation = {
				"Smoking",
				"Reading",
				"SittingArmchair",
			},
			FirstName = T(574326153183, --[[ModItemCharacterDef FioraJasmin FirstName]] "Fiora"),
			ForbiddenBreakdowns = {
				"Hallucinating",
			},
			Hair = "HairFemale1",
			HairColor1 = 4285289539,
			HairColor2 = 4282130446,
			HairMetallic = -128,
			HairParam3 = 133,
			HairParam5 = 191,
			HairRoughness = 26,
			Head = "Head_Katina",
			Headline = T(389566604547, --[[ModItemCharacterDef FioraJasmin Headline]] "Trade Specialist"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmRight",
					BodyPartGroup = "Arms",
					HealthCond = "CyberneticArm",
					HealthCondType = "Buff",
				}),
			},
			Height = 1720,
			IdealWeight = 65000,
			LastName = T(662290873820, --[[ModItemCharacterDef FioraJasmin LastName]] "Jasmin"),
			NickName = T(468650471066, --[[ModItemCharacterDef FioraJasmin NickName]] "Fiora"),
			Payment = 0,
			PerceivedGender = "Female",
			Portrait = "Portraits/Fiora_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Fiora_Large.png",
			SkillInclinations = {
				Farming = "Indifferent",
				Hacking = "Forbidden",
				Healing = "Forbidden",
				Physical = "Interested",
				Trade = "Interested",
			},
			Skills = {
				Construction = 2,
				Intellectual = 2,
				Physical = 2,
				Trade = 7,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 145, 106, 255),
				'EditableColor2', RGBA(255, 107, 72, 255),
				'EditableColor3', RGBA(255, 145, 106, 255),
			}),
			Teeth = "DefaultTeeth_Female",
			Traits = {
				"CannotHack",
				"CannotHeal",
				"FarmOwner",
				"x_secret_trait",
			},
			Weight = 62000,
			anim_idle2 = "standing_Idle_Free2_Female",
			anim_idle3 = "standing_Idle_Free3_Female",
			anim_idle4 = "standing_Idle_Free7_Female",
			anim_idle5 = "standing_Idle_Free_Sweat_Female",
			anim_idle6 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy10 = "standing_Idle_Free_CleanShoe_Female",
			anim_idle_happy2 = "standing_Idle_Free2_Female",
			anim_idle_happy3 = "standing_Idle_Free3_Female",
			anim_idle_happy4 = "standing_Idle_Free4_Female",
			anim_idle_happy5 = "standing_Idle_Free5_Female",
			anim_idle_happy6 = "standing_Idle_Free6_Female",
			anim_idle_happy7 = "standing_Idle_Free7_Female",
			anim_idle_happy8 = "standing_Idle_Free_Sweat_Female",
			anim_run = "standing_Walk_Run_Female",
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "FioraJasmin",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 18,
			Bio = T(595159683262, --[[ModItemCharacterDef SarahGospal Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nSarah Gospal was born on the Galactic S-800 Space Station. She knew nothing about the life of living on a planet, her entire existence has been inside a metallic box and nothing but darkness on the outside, known as space. Sarah was apart of the Gene program to create a new generation of experiment on Human evolution. The purpose of this experiment was to try and change the Humans biology to adapt to longevity space living as it has been discovered the current Human's body cannot exist in space for longer than 30-50 years without beginning to go into organ failure. Ofcourse, Human's enjoy playing the hand of a creator. Sarah was genetically modified in a lab and tube. She was one of the first successful tube babies to be produced, marking the beginning of a new evolution of Human race. \n\nSarah was brought up by scientists and was merely a guinea pig. Ofcourse, it makes sense for Sarah to be sent on the Project-X mission. They want results, and the best result to check if a child could survive the elements of the new planet was to send there guinea pig with the crew. Sarah is oblivious to the life on a planet, however she does not come unequipped. Due to being on a space station her entire existence, she has gained skills in some rather unique areas that could be quite useful for the colony. \n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Genetic Nanites - Brain</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Jacket_Spaceship",
				"Pants_Spaceship",
				"Shirt_Light_Crude",
				"Shoes_Normal",
				"GoodLuckCharm",
			},
			Eyes = "Eyes_Krista",
			FavoriteFood = {
				"SoupVegetable",
				"StewVegetable",
				"StewMeat",
			},
			FavoriteRelaxation = {
				"PlayingMusic",
				"AppreciatingDecoration",
				"SnowFight",
				"SnowmanMaking",
				"VisitAnimal",
			},
			FirstName = T(419513977589, --[[ModItemCharacterDef SarahGospal FirstName]] "Sarah"),
			ForbiddenBreakdowns = {
				"Hallucinating",
			},
			Hair = "Hair_Krista",
			HairColor1 = 4280623650,
			HairColor2 = 4280623650,
			HairColor3 = 4280623650,
			Head = "Head_Krista",
			Headline = T(780353265158, --[[ModItemCharacterDef SarahGospal Headline]] "Teenager"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "GeneticNanites",
					HealthCondType = "Buff",
				}),
			},
			Height = 1400,
			IdealWeight = 52111,
			KnownTechs = {
				"GalacticStorage",
				"HydroponicRacks",
				"FieldButtermelon",
				"FieldEnergyCrystals",
				"FieldGraincob",
				"FieldSkinbark",
				"FieldChewroot",
			},
			LastName = T(894209866533, --[[ModItemCharacterDef SarahGospal LastName]] "Gospal"),
			NickName = T(576179825531, --[[ModItemCharacterDef SarahGospal NickName]] "Sarah"),
			Payment = 0,
			PerceivedGender = "Female",
			Portrait = "Portraits/Sarah_Small.png",
			PortraitInventory = "Portraits/female_inventory.png",
			PortraitLarge = "Portraits/Sarah_Large.png",
			SkillInclinations = {
				Combat = "Indifferent",
				Construction = "Interested",
				Farming = "Interested",
				Hacking = "Forbidden",
				Healing = "Forbidden",
			},
			Skills = {
				Construction = 2,
				Cooking = 2,
				Crafting = 2,
				Farming = 4,
				Physical = 3,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(94, 81, 72, 255),
				'EditableColor2', RGBA(94, 81, 72, 255),
				'EditableColor3', RGBA(94, 81, 72, 255),
			}),
			Teeth = "Teeth_Krista",
			Traits = {
				"GeneticNanites",
				"AdvEngEfficiency",
				"GeneticallyModified",
				"ChildProdigy",
				"StubbornAttitude",
				"Explorer",
				"Cheerful",
				"CannotHack",
				"CannotHealNormal",
				"FarmOwner",
			},
			Weight = 48000,
			anim_walk = "standing_Walk_Free_Female",
			anim_walk_distress = "standing_Walk_Distress_Female",
			anim_walk_haste = "standing_Walk_Haste_Female",
			group = "PROJECTX",
			id = "SarahGospal",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale1",
			Age = 35,
			Beard = "Beard",
			Bio = T(573468702117, --[[ModItemCharacterDef KarlTheMiner Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nKarl was found in a escape pod from a derelict ship in suspended animation. Upon revival was found to have partial amnesia remembering only his first name is Karl and he used to work at a mining operation with 4 others gathering minerals from a broken planet. Has opted to help colony development as a miner and resource manager for the colony in hopes he will remember more about his former life or possibly run into someone who knows him. Karl has excellent physical condition and tires slowly working mining quickly but is also a able negotiator and while looking for his past has made friends in many mining communities.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Armor_Jacket_Leather",
				"Armor_Shoes_Leather",
				"Shirt_Heavy_Crude",
				"Pants_Spaceship",
				"Ranged_LaserBlaster",
				"Hat_Light_Good",
				"SurvivalBackpack",
			},
			Eyes = "Eyes_Ember",
			FavoriteFood = {
				"AlcoholBeer",
				"AlcoholMoonshine",
			},
			FavoriteRelaxation = {
				"PlayingMusic",
				"Drinking",
			},
			FirstName = T(803187434989, --[[ModItemCharacterDef KarlTheMiner FirstName]] "Karl"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Isaac",
			HairColor1 = 4279373840,
			HairColor2 = 4279373840,
			HairColor3 = 4280097306,
			HairParam3 = 236,
			HairRoughness = 43,
			Head = "Head_Ember",
			Headline = T(287741550028, --[[ModItemCharacterDef KarlTheMiner Headline]] "Miner"),
			Height = 1850,
			IdealWeight = 68861,
			KnownTechs = {
				"MetalAlloys",
				"ElectricSmelting",
				"OreProspecting",
				"Distillation",
				"MusicalInstruments",
				"Beer",
			},
			LastName = "",
			Moustache = "Moustache",
			NickName = T(632195007058, --[[ModItemCharacterDef KarlTheMiner NickName]] "Karl"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/KarlPX_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/KarlPX_Large.png",
			SkillInclinations = {
				Cooking = "Indifferent",
				Farming = "Indifferent",
				Physical = "Interested",
				Trade = "Interested",
			},
			Skills = {
				Combat = 3,
				Crafting = 2,
				Physical = 5,
				Trade = 3,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(102, 56, 56, 255),
				'EditableColor2', RGBA(102, 56, 56, 255),
				'EditableColor3', RGBA(102, 56, 56, 255),
			}),
			Traits = {
				"RocksNStone",
				"MinersPhysique",
				"ExpertExcavator",
				"DelightedTrader",
				"CheerfulMiner",
				"FarmOwner",
				"x_secret_trait",
			},
			Weight = 66100,
			group = "PROJECTX",
			id = "KarlTheMiner",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 30,
			Bio = T(144486556015, --[[ModItemCharacterDef G8-L33 Bio]] '<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nGen 8 Security drone designed for close combat to keep alien creatures at bay for colonist. Retrofitted to use in close weapons the designation "Lancer" was chosen. Early thought on possible accidental friendly fire between droids or colonist and possible lawsuits resulting from damages made them remove its long range abilities. Lancers are designed to be high speed tanks able to keep enemies at bay while colonist and turrets lay into them from a safe distance. With reinforced housing and armor they can keep enemies at bay to buy time for others.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::'),
			Equipment = {
				"GalacticBoots",
				"GalacticChest",
				"GalacticHelmet",
				"GalacticLegs",
				"GalacticSpear",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(388219037691, --[[ModItemCharacterDef G8-L33 FirstName]] "G8-L33"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(367876155121, --[[ModItemCharacterDef G8-L33 Headline]] "Lancer Droid"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			LastName = "",
			NickName = T(953373768953, --[[ModItemCharacterDef G8-L33 NickName]] "Lancer Droid"),
			Payment = 500000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/SecurityDroid_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/SecurityDroid_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Interested",
				Farming = "Forbidden",
				Healing = "Forbidden",
				Intellectual = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 6,
				Mining = 1,
				Physical = 4,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(134, 134, 134, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(134, 134, 134, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(134, 134, 134, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"DroidLancer",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Military",
			group = "PROJECTX",
			id = "G8-L33",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 48,
			Bio = T(131915725781, --[[ModItemCharacterDef DaynRheo Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nDayn retired 2 years ago. Young... yes, but so successful that he had the money to do so. This man dedicated his craft on the Biology of species all around the Galaxy. His sole purpose was expeditions to discover new species, learn foreign organisms and advance the Humans technology. Believe it or not this man hated Animals, so why he chose such a profession we will never know, then again... I suppose if you hated them that much you would enjoy tearing there organs out. \n\nWe've specifically brought Dayn out of retirement, under a special contract just for Project-X. We felt that for such a large operation as this and with so much at stake, literally a planet at stake... We need as much knowledge as we can gather from the environment and the biology of wildlife on this planet. Hopefully Dayn has not forgotten what he knows and becomes a useful asset for your crew.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Hearing Aid (Left Ear)\nHearing Aid (Right Ear)\nPacemaker Fitted</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Pants_Spaceship",
				"Shirt_Heavy_Good",
				"GalacticBoots",
				"Jacket_Spaceship",
				"Hat_Light_Straw",
				"GalacticSpear",
			},
			FavoriteFood = {
				"Coffee",
				"HaySausage",
			},
			FavoriteRelaxation = {
				"AppreciatingDecoration",
				"PlayingDarts",
			},
			FirstName = T(149177817972, --[[ModItemCharacterDef DaynRheo FirstName]] "Dayn"),
			ForbiddenBreakdowns = {
				"Hallucinating",
				"Initial_Crying",
			},
			Gender = "Male",
			Hair = "Hair_Omar",
			HairColor1 = 4279045389,
			HairColor2 = 4279045389,
			HairColor3 = 4279045389,
			HairParam3 = 127,
			Head = "Head_Umayr",
			Headline = T(545086525259, --[[ModItemCharacterDef DaynRheo Headline]] "Animal Biologist Scientist"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarLeft",
					BodyPartGroup = "Ears",
					HealthCond = "HearingAid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEarRight",
					BodyPartGroup = "Ears",
					HealthCond = "HearingAid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "TorsoHeart",
					BodyPartGroup = "ChestOrgans",
					HealthCond = "AdvancedPacemaker",
					HealthCondType = "Buff",
				}),
			},
			KnownTechs = {
				"AdvancedResearchDesk",
				"GalacticResearchDesk",
				"LabDesk",
				"GalacticStorage",
				"Refrigeration",
				"Freezers",
				"LaboratoryFridge",
			},
			LastName = T(644505858212, --[[ModItemCharacterDef DaynRheo LastName]] "Rheo"),
			NickName = T(674232882773, --[[ModItemCharacterDef DaynRheo NickName]] "Dayn"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/Dayn_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Dayn_Large.png",
			SkillInclinations = {
				Biology = "Interested",
				Cooking = "Interested",
				Hacking = "Forbidden",
			},
			Skills = {
				Biology = 6,
				Cooking = 5,
				Intellectual = 4,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(103, 40, 21, 255),
				'EditableColor2', RGBA(151, 75, 42, 255),
				'EditableColor3', RGBA(75, 55, 45, 255),
			}),
			Traits = {
				"BiologistDissect",
				"EfficientBiologist",
				"Calming",
				"MasterChef",
				"TempTolerance",
				"CannotHack",
				"FarmOwner",
			},
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "DaynRheo",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 50,
			Bio = T(264089059812, --[[ModItemCharacterDef G7-B223 Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors and slightly awkward way they move and do tasks. Bumbles might be slow but never sleeping and never needing food gives them advantages for early colonies needing to conserve needed materials in hostile environments. Because of cost savings attempts they were not given the ability to adapt so default programs were pre-installed. Combat inhibitors were added to stop criminal uses of this model.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Light_Crude",
				"Pants_Light_Crude",
				"Shoes_Light",
			},
			Eyes = "Eyes_Allegra",
			FavoriteRelaxation = {
				"Sitting",
			},
			FirstName = T(700959578731, --[[ModItemCharacterDef G7-B223 FirstName]] "G7-B223"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(741487226800, --[[ModItemCharacterDef G7-B223 Headline]] "Droid"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			LastName = "",
			NickName = T(515939302797, --[[ModItemCharacterDef G7-B223 NickName]] "Bumbles Droid"),
			Payment = 170000000,
			PerceivedGender = "Male",
			Portrait = "Portraits/BumbleDroid2_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/BumbleDroids2_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Combat = "Forbidden",
				Healing = "Forbidden",
				Trade = "Forbidden",
			},
			Skills = {
				Construction = 2,
				Crafting = 2,
				Mining = 1,
				Physical = 5,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 155, 0, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 155, 0, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 155, 0, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"px_droid_teaching_feature",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = "Droid - Civilian",
			group = "PROJECTX",
			id = "G7-B223",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "Human",
			Age = 50,
			Bio = T(797612338799, --[[ModItemCharacterDef G8Helper Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nG8 Helpers have been donated to the resettlement program as a test for a new general purpose artificial colonist. Given basic learning skills and the ability to defend itself and fellow colonist while working any job the colony needs. Based off of a early security droid model left over from the war because of ease of purchase and being a well known model people were familiar with. With a reinforced body that can take significant damage before being destroyed as well as basic ability for self defense it was the perfect test bed platform. With the idea of helping colonist in all ways its been loaded with a list of moral boosting platitudes and jokes to help calm and improve the spirits of the colonist to think of it less as a droid but simply as a Helper.\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Droid</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Light_Crude",
				"Pants_Spaceship",
				"Armor_Jacket_Synthetic",
				"Shoes_Light",
				"Ranged_LaserBlaster_Improved",
			},
			Eyes = "Eyes_Allegra",
			FirstName = T(972511500234, --[[ModItemCharacterDef G8Helper FirstName]] "G8-Helper"),
			ForbiddenBreakdowns = {
				"Berserk",
				"Bullying",
				"Catatonia",
				"Crying",
				"DrinkingBinge",
				"FoodBinge",
				"Hiding",
				"Initial_Crying",
				"SadWalk",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			HairColor1 = 4278716167,
			HairColor2 = 4278716167,
			HairColor3 = 4278716167,
			Head = "Head_Ember",
			Headline = T(811630178710, --[[ModItemCharacterDef G8Helper Headline]] "Helper"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticAndroid",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPartGroup = "WholeBody",
					HealthCond = "CyberneticImmunity",
					HealthCondType = "Buff",
				}),
			},
			KnownTechs = {
				"ElectricBattery",
				"SolarPanels",
				"BasicWeaponry",
				"BasicTailoring",
				"LandMines",
				"OilAnimalFromInsectMeat",
				"LiquidFuelCrafting",
				"LiquidFuelFromInsectMeat",
				"FieldGraincob",
				"FieldClothblossom",
				"SupportSupplyDrop",
			},
			LastName = "",
			NickName = T(717228193081, --[[ModItemCharacterDef G8Helper NickName]] "Helper Droid"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/B8Helper_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/B8Helper_Large.png",
			RandomPick = false,
			SelectableOnNewGame = false,
			SkillInclinations = {
				Biology = "Forbidden",
				Cooking = "Indifferent",
				Healing = "Indifferent",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 2,
				Construction = 2,
				Crafting = 2,
				Farming = 2,
				Hacking = 2,
				Healing = 2,
				Intellectual = 2,
				Mining = 1,
				Physical = 4,
				SK_Excavate = 1,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(57, 57, 57, 255),
				'EditableRoughness1', -128,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(65, 65, 65, 255),
				'EditableRoughness2', -128,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(63, 63, 63, 255),
				'EditableRoughness3', -128,
				'EditableMetallic3', 127,
			}),
			Traits = {
				"baseDroid",
				"G8Helper",
				"FarmOwner",
			},
			UnitTags = set( "Robot" ),
			comment = 'Droid - "Worst"',
			group = "PROJECTX",
			id = "G8Helper",
		}),
		PlaceObj('ModItemCharacterDef', {
			ActorFXClass = "HumanMale",
			Age = 64,
			Beard = "Beard",
			Bio = T(877005685763, --[[ModItemCharacterDef OldManJohn Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nOldman John, not the most pleasant to be around, probably why he is labelled an Oldman in his nickname. Nobody actually knows his family name, either because they didnt stay around the old man long enough to find out due to his uneasy personality, or because nobody cared. John is arrogant, he is stuck in his ways and does not change a thought for anyone. John has spent years of his life perfecting his career as an agriculturist, he has studied and discovered new methods of growing plants. One thing that people come quick to understand about John, is that the farm is his home, and you will be well fed when he runs it. Don't get in his way, let the man be and he will provide you with the wealth of nutrients in such a dire crisis as being stranded. But don't let his age fool you, he will still put up a fight, especially if his crops are at risk.\n\nBut who knows... maybe there is more to this man than what meets the eye, perhaps it might just take a particular person to really open this old 'Tin' up and actually find out if he is soft within. Surely being stranded will do the job, or perhaps it may turn the man senile, he is old... after all....\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Fracture - Left Leg - Treated\nDementia - Brain</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Light_Crude",
				"Shoes_Normal",
				"Pants_Spaceship",
				"Jacket_Spaceship",
				"Melee_HuntingKnife",
				"HarvestingTools",
			},
			Eyes = "Eyes_Atticus",
			FavoriteFood = {
				"Coffee",
			},
			FavoriteRelaxation = {
				"SittingArmchair",
				"Daydreaming",
				"Drinking",
				"Smoking",
			},
			FirstName = T(765517604163, --[[ModItemCharacterDef OldManJohn FirstName]] "Old John"),
			ForbiddenBreakdowns = {
				"Crying",
				"Initial_Crying",
				"Hiding",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Krista",
			HairColor1 = 4287729538,
			HairColor2 = 4288979870,
			HairColor3 = 4287729538,
			HairParam3 = 0,
			HairParam6 = 197,
			HairParam7 = 128,
			Head = "Head_Carter",
			Headline = T(954141957914, --[[ModItemCharacterDef OldManJohn Headline]] "Retired Agricultural Expert"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "LegLeft",
					BodyPartGroup = "Legs",
					HealthCond = "Fracture_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadBrain",
					BodyPartGroup = "WholeHead",
					HealthCond = "Dementia_1_Mild",
				}),
			},
			Height = 1720,
			IdealWeight = 68800,
			KnownTechs = {
				"CornSeeding",
				"BlueberrySeeding",
				"CactiSeeding",
				"CornSeeding",
				"CottonSeeding",
				"FieldBerryBush",
				"FieldButtermelon",
				"FieldGraincob",
				"FieldCureplant",
				"FieldBuzzshroom",
				"FieldGlitterCap",
				"FieldJuiceleaf",
				"FieldTreeTropicalBig",
				"FieldTreeOasis",
				"HeptagoniaSeeding",
				"FieldPurpleLeaf",
				"FieldTreeDandelion",
			},
			LastName = "",
			Moustache = "Moustache",
			NickName = T(636330368674, --[[ModItemCharacterDef OldManJohn NickName]] "Oldman John"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/OldJohn_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/OldJohn_Large.png",
			SkillInclinations = {
				Construction = "Forbidden",
				Cooking = "Interested",
				Farming = "Interested",
				Hacking = "Forbidden",
				Healing = "Forbidden",
			},
			Skills = {
				Combat = 4,
				Cooking = 4,
				Farming = 10,
				Intellectual = 4,
				Physical = 4,
				Trade = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(226, 217, 209, 255),
				'EditableColor2', RGBA(213, 182, 155, 255),
				'EditableColor3', RGBA(213, 182, 155, 255),
			}),
			Teeth = "Teeth_Atticus",
			Traits = {
				"Agriculturalist",
				"FarmingInstructor",
				"TempTolerance",
				"ShortTermMemory",
				"Clumsy",
				"Sleepy",
				"FarmOwner",
				"Intimidating",
				"CannotConstruct",
				"CannotHeal",
				"CannotHack",
				"x_secret_trait",
			},
			Weight = 91000,
			group = "PROJECTX",
			id = "OldManJohn",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 42,
			Bio = T(570837605236, --[[ModItemCharacterDef OrlandoJunior Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nOrlando was one of the most renowned Chef's back on Earth. Orlando was keen on his ambitions to become one of the very best Chef's to grace a kitchen, not only for his cooking, but also for his musical prowess. Though born with an eye deformity, this did not phase him and he continued with partial blindness hoping to one day afford treatment for full vision. Throughout his career he learnt from some of the best Chef's around the planet. He learnt fast, and raised to fame quickly during his early twenties. Capable of turning a simple dish into a masterpiece. Yet his success did not come without scars,facing cuts and burns. Orlando learnt to embrace the pain as apart of his success. A small splash of burning oil or slice of a knife did not deter him.\n\nUpon reaching such great success he used his much earned profit on treatment to treat his partial blindness. He enjoyed the life of a young wealthy man for a good several years. Though with age his success and popularity faded and in time his name. Orlando lost his passion for cooking due to the fame, he also gained weight and went on drinking binges often. After some time living on the streets, Orlando saw a leaflet that was hiring for experienced Chef's, it was to become a crew's chef and aid in providing food to the research teams that were being transported across space. Orlando knew his history would almost almost certainly grant him this job role. Perhaps this is a second chance for Orlando...\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Bionic Right Eye.\nBurn - Left Arm - Treated\nBurn - Right Arm - Treated\nPacemaker - Torso</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Jacket_Spaceship",
				"Shirt_Light_Crude",
				"Armor_Shoes_Synthetic",
				"Pants_Light_Good",
				"Melee_HuntingKnife",
				"GoodLuckCharm",
			},
			Eyes = "Eyes_Booker",
			FavoriteFood = {
				"MushroomCroquettes",
				"Cake",
			},
			FavoriteRelaxation = {
				"PlayingDarts",
				"Praying",
				"PlayingMusic",
			},
			FirstName = T(706536359074, --[[ModItemCharacterDef OrlandoJunior FirstName]] "Orlando"),
			ForbiddenBreakdowns = {
				"Crying",
				"Initial_Crying",
				"DrinkingBinge",
				"Stealing",
				"Hallucinating",
			},
			Gender = "Male",
			Hair = "Hair_Thalia",
			HairColor1 = 4279308304,
			HairColor2 = 4279308304,
			HairColor3 = 4279308304,
			HairMetallic = -128,
			HairParam3 = 127,
			HairRoughness = 31,
			Head = "Head_Connor",
			Headline = T(219565490863, --[[ModItemCharacterDef OrlandoJunior Headline]] "Crew Head Chef"),
			HealthConds = {
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "HeadEyeRight",
					BodyPartGroup = "Eyes",
					HealthCond = "BionicEye",
					HealthCondType = "Buff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmLeft",
					BodyPartGroup = "Arms",
					HealthCond = "Burn_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "ArmRight",
					BodyPartGroup = "Arms",
					HealthCond = "Burn_Treated",
					HealthCondType = "Debuff",
				}),
				PlaceObj('HealthConditionOnBodyPart', {
					BodyPart = "TorsoHeart",
					BodyPartGroup = "Organs",
					HealthCond = "Pacemaker",
					HealthCondType = "Debuff",
				}),
			},
			Height = 1900,
			IdealWeight = 76000,
			KnownTechs = {
				"CoffeeFromGrain",
				"EmergencyRations",
				"Freezers",
				"OilAnimalFromInsectMeat",
				"VegetableOil",
				"FoodPreservation",
				"Refrigeration",
			},
			LastName = T(732310987692, --[[ModItemCharacterDef OrlandoJunior LastName]] "Junior"),
			NickName = T(564503886828, --[[ModItemCharacterDef OrlandoJunior NickName]] "Orlando"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/Orlando_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/Orlando_Large.png",
			SkillInclinations = {
				Combat = "Interested",
				Cooking = "Interested",
				Farming = "Indifferent",
				Hacking = "Forbidden",
				Intellectual = "Forbidden",
				Physical = "Indifferent",
				Trade = "Forbidden",
			},
			Skills = {
				Combat = 3,
				Cooking = 8,
				Healing = 3,
				Physical = 2,
				Trade = 3,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(255, 138, 92, 255),
				'EditableColor2', RGBA(254, 109, 75, 255),
				'EditableColor3', RGBA(255, 138, 92, 255),
			}),
			Teeth = "Teeth_Booker",
			Traits = {
				"MasterChef",
				"ChefsHeat",
				"ChefsHands",
				"Overweight",
				"ShortAttentionSpan",
				"ChefSinger",
				"ChefsMachete",
				"BigBoned",
				"CannotHack",
				"CannotTrade",
				"CannotResearch",
				"FarmOwner",
				"x_secret_trait",
			},
			Weight = 134000,
			anim_run = "standing_Walk_Run",
			anim_walk = "standing_Walk_Free2",
			group = "PROJECTX",
			id = "OrlandoJunior",
		}),
		PlaceObj('ModItemCharacterDef', {
			Age = 29,
			Beard = "Beard",
			Bio = T(562676898780, --[[ModItemCharacterDef SamuelJonesPX Bio]] "<center><style TechSubtitleBlue>::Opening Candidates Biography::\n::Candidate Biography Opened::</style>\n\n____________________________________________\n\nSamuel grew up in a mid sized colony located in the jungle of a new located planet. Colonist did well and discovered while lush the forest hosted few predators but still trained the colonist incase of herd migrations or other unexpected events. Teaching the children of the colony to explore their surroundings as well as how to plant and grow food from the native soil. For Sam it was a good childhood peaceful and content if a bit boring. Ten years into the colony began insects came out of ground swarming about like a cross between alien locust and mosquito. While easy to repel the colonist bitten by them quickly fell ill including Sams mother. After watching her nearly die from fever before help from another colony came and rescued the colonist from the illness. Sam from that day on learned everything they could on medicine so that he would never be helpless to sickness again. He knew if his colony ever needed it again he could be the one to save them and if anyone else needed he would return the kiddness he saw as a child. Joining the colony list upon finding a new jungle world was easy decision in hopes to be able to help provide as a bulwark against the nature turning on the colonist and thus hopefully inspiring others to take up the mantle of medic\n\n<style red>Medical Report:</style>\n<style TechSubtitleBlue>Healthy</style>\n\n____________________________________________\n<style TechSubtitleBlue>::Closing Candidates Biography::\n::Candidate Biography Disconnected::</style>\n\n<style red>::Initiating Further Information::\n::Standby::\n::Loading Successful::"),
			Equipment = {
				"Shirt_Heavy_Good",
				"Pants_Spaceship",
				"Armor_Jacket_Leather",
				"Shoes_Heavy",
				"Ranged_PulseRifle",
				"Hat_Light_Good",
			},
			Eyes = "Eyes_Greyson",
			FavoriteFood = {
				"SoupMeat",
				"SoupVegetable",
				"Cake",
				"FruitsFlambe",
			},
			FavoriteRelaxation = {
				"PlayingDarts",
				"SittingArmchair",
				"AppreciatingDecoration",
			},
			FirstName = T(458765336626, --[[ModItemCharacterDef SamuelJonesPX FirstName]] "Samuel"),
			ForbiddenBreakdowns = {
				"Bullying",
				"Stealing",
				"Berserk",
			},
			Gender = "Male",
			Hair = "Hair_Delano",
			HairColor1 = 4279440147,
			HairColor2 = 4279440147,
			HairColor3 = 4279440147,
			HairRoughness = 2,
			Head = "Head_Edmund",
			Headline = T(422650907540, --[[ModItemCharacterDef SamuelJonesPX Headline]] "Field Medic"),
			Height = 2100,
			IdealWeight = 78000,
			KnownTechs = {
				"FieldCureplant",
				"MedicalSupplyDrop",
				"Antibiotics",
				"MedKits",
				"EmergencyRations",
				"SolarPanels",
				"ElectricBattery",
			},
			LastName = T(530890506139, --[[ModItemCharacterDef SamuelJonesPX LastName]] "Jones"),
			Moustache = "Moustache",
			NickName = T(473020794398, --[[ModItemCharacterDef SamuelJonesPX NickName]] "Sam"),
			Payment = 0,
			PerceivedGender = "Male",
			Portrait = "Portraits/SamJones_Small.png",
			PortraitInventory = "Portraits/Male_Inventory.png",
			PortraitLarge = "Portraits/SamJones_Large.png",
			RandomPick = false,
			SkillInclinations = {
				Construction = "Indifferent",
				Crafting = "Indifferent",
				Healing = "Interested",
				Physical = "Indifferent",
			},
			Skills = {
				Biology = 2,
				Combat = 4,
				Cooking = 4,
				Crafting = 2,
				Farming = 4,
				Healing = 4,
				Intellectual = 2,
			},
			SkinColor = PlaceObj('ColorizationPropSet', {
				'EditableColor1', RGBA(134, 115, 107, 255),
				'EditableColor2', RGBA(134, 115, 107, 255),
				'EditableColor3', RGBA(95, 68, 68, 255),
			}),
			Traits = {
				"PhysicallyFit",
				"MedicInstructor",
				"SwiftHands",
				"Calming",
				"Explorer",
				"AvidFarmer",
			},
			Weight = 74000,
			group = "PROJECTX",
			id = "SamuelJonesPX",
		}),
		}),
	}),
PlaceObj('ModItemFolder', {
	'name', "3d Stuff",
}, {
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticHelmetMalePX",
		'Target', "Human",
		'Parts', set( "Hairstyle", "Hat" ),
		'CustomMatch', true,
		'Entity', "GalacticHelmetPX",
		'Scale', range(11, 11),
		'AttachOffset', point(30, 0, -180),
		'AttachAngle', 10800,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberTorsoMalePX",
		'Target', "Human",
		'Parts', set( "Arms", "Shoulders", "Torso" ),
		'CustomMatch', true,
		'Entity', "Jacket_Armor_M_01_Slim",
		'ZOrder', 1,
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', 127,
				'EditableMetallic1', -128,
				'EditableColor2', RGBA(74, 74, 74, 255),
				'EditableRoughness2', -33,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', 127,
				'EditableMetallic3', -128,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CarbonHatPX",
		'Target', "Human",
		'Parts', set( "Hat" ),
		'CustomMatch', true,
		'Entity', "Hat_Straw_01",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(12, 12, 12, 255),
				'EditableRoughness1', -54,
				'EditableMetallic1', 63,
				'EditableColor2', RGBA(0, 189, 255, 255),
				'EditableRoughness2', -51,
				'EditableMetallic2', 68,
				'EditableColor3', RGBA(12, 12, 12, 255),
				'EditableRoughness3', -58,
				'EditableMetallic3', 79,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "CyberMissileTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Mech_M1_MisslePod",
		'ZOrder', -1,
		'FxActor', "TurretMisslePod",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "CyberMissileTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 171, 255, 255),
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 171, 255, 255),
				'EditableMetallic2', 127,
				'Weight', 999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienTorsoMalePX",
		'Target', "Human",
		'Parts', set( "Arms", "Shoulders", "Torso" ),
		'CustomMatch', true,
		'Entity', "Jacket_Armor_M_01_Slim",
		'ZOrder', 1,
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(161, 161, 161, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 35, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(149, 149, 149, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienHelmetFemalePX",
		'Target', "Human",
		'Parts', set( "Hairstyle", "Hat" ),
		'CustomMatch', true,
		'Entity', "PXAlienHelmet1",
		'Scale', range(20, 20),
		'AttachOffset', point(20, 0, -220),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticTorsoFemalePX",
		'Target', "Human",
		'Parts', set( "Arms", "Shoulders", "Torso" ),
		'CustomMatch', true,
		'Entity', "Jacket_Armor_F_01_Slim",
		'ZOrder', 1,
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(99, 99, 99, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 45,
				'EditableColor2', RGBA(169, 0, 255, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 36,
				'EditableColor3', RGBA(99, 99, 99, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 46,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberPantsMalePX",
		'Target', "Human",
		'Parts', set( "Pelvis", "Thighs" ),
		'CustomMatch', true,
		'Entity', "Pants_Armor_M_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', 127,
				'EditableMetallic1', -128,
				'EditableColor2', RGBA(74, 74, 74, 255),
				'EditableRoughness2', -33,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', 127,
				'EditableMetallic3', -128,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberHelmetFemalePX",
		'Target', "Human",
		'Parts', set( "Hairstyle", "Hat" ),
		'CustomMatch', true,
		'Entity', "CyberHelmetoPX03",
		'Scale', range(20, 20),
		'AttachOffset', point(55, 0, -180),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienPantsMalePX",
		'Target', "Human",
		'Parts', set( "Pelvis", "Thighs" ),
		'CustomMatch', true,
		'Entity', "Pants_Armor_M_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(161, 161, 161, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 35, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(149, 149, 149, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticHelmetFemalePX",
		'Target', "Human",
		'Parts', set( "Hairstyle", "Hat" ),
		'CustomMatch', true,
		'Entity', "GalacticHelmetPX",
		'Scale', range(11, 11),
		'AttachOffset', point(30, 0, -180),
		'AttachAngle', 10800,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "GalacticToxicTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Turret_Gun",
		'ZOrder', -1,
		'FxActor', "TurretMinigun",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "GalacticToxicTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 0, 239, 255),
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 0, 239, 255),
				'EditableMetallic2', 127,
				'Weight', 999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberTorsoFemalePX",
		'Target', "Human",
		'Parts', set( "Arms", "Shoulders", "Torso" ),
		'CustomMatch', true,
		'Entity', "Jacket_Armor_F_01_Slim",
		'ZOrder', 1,
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', 127,
				'EditableMetallic1', -128,
				'EditableColor2', RGBA(74, 74, 74, 255),
				'EditableRoughness2', -33,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', 127,
				'EditableMetallic3', -128,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberPantsFemalePX",
		'Target', "Human",
		'Parts', set( "Pelvis", "Thighs" ),
		'CustomMatch', true,
		'Entity', "Pants_Armor_F_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', 127,
				'EditableMetallic1', -128,
				'EditableColor2', RGBA(74, 74, 74, 255),
				'EditableRoughness2', -33,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', 127,
				'EditableMetallic3', -128,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "CyberBlasterTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Turret_Gun",
		'ZOrder', -1,
		'FxActor', "PulseRifle",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "CyberBlasterTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 171, 255, 255),
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 171, 255, 255),
				'EditableMetallic2', 127,
				'Weight', 999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Tecatli",
		'Id', "AlphaRaptorPX",
		'Target', "AlphaRaptorPX",
		'Parts', set( "Body" ),
		'Entity', "Tecatli",
		'Scale', range(200, 210),
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 55, 57, 255),
				'EditableRoughness1', 104,
				'EditableMetallic1', 34,
				'EditableColor2', RGBA(7, 9, 6, 255),
				'EditableRoughness2', 127,
				'EditableMetallic2', 45,
				'EditableColor3', RGBA(22, 16, 15, 255),
				'EditableRoughness3', 104,
				'EditableMetallic3', 39,
			}),
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(35, 37, 0, 255),
				'EditableRoughness1', 104,
				'EditableMetallic1', 34,
				'EditableColor2', RGBA(7, 9, 6, 255),
				'EditableRoughness2', 127,
				'EditableMetallic2', 45,
				'EditableColor3', RGBA(22, 16, 15, 255),
				'EditableRoughness3', 104,
				'EditableMetallic3', 39,
			}),
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 57, 0, 255),
				'EditableRoughness1', 104,
				'EditableMetallic1', 34,
				'EditableColor2', RGBA(7, 9, 6, 255),
				'EditableRoughness2', 127,
				'EditableMetallic2', 45,
				'EditableColor3', RGBA(22, 16, 15, 255),
				'EditableRoughness3', 104,
				'EditableMetallic3', 39,
			}),
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(57, 0, 0, 255),
				'EditableRoughness1', 104,
				'EditableMetallic1', 34,
				'EditableColor2', RGBA(7, 9, 6, 255),
				'EditableRoughness2', 127,
				'EditableMetallic2', 45,
				'EditableColor3', RGBA(22, 16, 15, 255),
				'EditableRoughness3', 104,
				'EditableMetallic3', 39,
			}),
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(35, 0, 37, 255),
				'EditableRoughness1', 104,
				'EditableMetallic1', 34,
				'EditableColor2', RGBA(7, 9, 6, 255),
				'EditableRoughness2', 127,
				'EditableMetallic2', 45,
				'EditableColor3', RGBA(22, 16, 15, 255),
				'EditableRoughness3', 104,
				'EditableMetallic3', 39,
			}),
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 26, 28, 255),
				'EditableRoughness1', 104,
				'EditableMetallic1', 34,
				'EditableColor2', RGBA(7, 9, 6, 255),
				'EditableRoughness2', 127,
				'EditableMetallic2', 45,
				'EditableColor3', RGBA(22, 16, 15, 255),
				'EditableRoughness3', 104,
				'EditableMetallic3', 39,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "GalacticLaserTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "LaserTurret",
		'ZOrder', -1,
		'FxActor', "LaserTurret",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "GalacticLaserTurret",
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticTorsoMalePX",
		'Target', "Human",
		'Parts', set( "Arms", "Shoulders", "Torso" ),
		'CustomMatch', true,
		'Entity', "Jacket_Armor_M_01_Slim",
		'ZOrder', 1,
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(99, 99, 99, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 45,
				'EditableColor2', RGBA(169, 0, 255, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 36,
				'EditableColor3', RGBA(99, 99, 99, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 46,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberBootsMalePX",
		'Target', "Human",
		'Parts', set( "Feet" ),
		'CustomMatch', true,
		'Entity', "Shoes_Armor_M_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', 127,
				'EditableMetallic1', -128,
				'EditableColor2', RGBA(74, 74, 74, 255),
				'EditableRoughness2', -33,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', 127,
				'EditableMetallic3', -128,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticPantsFemalePX",
		'Target', "Human",
		'Parts', set( "Pelvis", "Thighs" ),
		'CustomMatch', true,
		'Entity', "Pants_Armor_F_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(99, 99, 99, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 45,
				'EditableColor2', RGBA(169, 0, 255, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 36,
				'EditableColor3', RGBA(99, 99, 99, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 46,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "AlienPlasmaTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Turret_Gun",
		'ZOrder', -1,
		'FxActor', "PulseRifle",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "AlienPlasmaTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 255, 21, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(1, 255, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienBootsFemalePX",
		'Target', "Human",
		'Parts', set( "Feet" ),
		'CustomMatch', true,
		'Entity', "Shoes_Armor_F_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(161, 161, 161, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 35, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(149, 149, 149, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienPantsFemalePX",
		'Target', "Human",
		'Parts', set( "Pelvis", "Thighs" ),
		'CustomMatch', true,
		'Entity', "Pants_Armor_F_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(161, 161, 161, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 35, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(149, 149, 149, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberBootsFemalePX",
		'Target', "Human",
		'Parts', set( "Feet" ),
		'CustomMatch', true,
		'Entity', "Shoes_Armor_F_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 255, 255, 255),
				'EditableRoughness1', 127,
				'EditableMetallic1', -128,
				'EditableColor2', RGBA(74, 74, 74, 255),
				'EditableRoughness2', -33,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(255, 255, 255, 255),
				'EditableRoughness3', 127,
				'EditableMetallic3', -128,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticBootsFemalePX",
		'Target', "Human",
		'Parts', set( "Feet" ),
		'CustomMatch', true,
		'Entity', "Shoes_Armor_F_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(99, 99, 99, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 45,
				'EditableColor2', RGBA(169, 0, 255, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 36,
				'EditableColor3', RGBA(99, 99, 99, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 46,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienBootsMalePX",
		'Target', "Human",
		'Parts', set( "Feet" ),
		'CustomMatch', true,
		'Entity', "Shoes_Armor_M_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(161, 161, 161, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 35, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(149, 149, 149, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticPantsMalePX",
		'Target', "Human",
		'Parts', set( "Pelvis", "Thighs" ),
		'CustomMatch', true,
		'Entity', "Pants_Armor_M_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(99, 99, 99, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 45,
				'EditableColor2', RGBA(169, 0, 255, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 36,
				'EditableColor3', RGBA(99, 99, 99, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 46,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "CyberHelmetMalePX",
		'Target', "Human",
		'Parts', set( "Hairstyle", "Hat" ),
		'CustomMatch', true,
		'Entity', "CyberHelmetoPX03",
		'Scale', range(20, 20),
		'AttachOffset', point(55, 0, -180),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienTorsoFemalePX",
		'Target', "Human",
		'Parts', set( "Arms", "Shoulders", "Torso" ),
		'CustomMatch', true,
		'Entity', "Jacket_Armor_F_01_Slim",
		'ZOrder', 1,
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(161, 161, 161, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 35, 0, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 127,
				'EditableColor3', RGBA(149, 149, 149, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 127,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "AlienHelmetMalePX",
		'Target', "Human",
		'Parts', set( "Hairstyle", "Hat" ),
		'CustomMatch', true,
		'Entity', "PXAlienHelmet1",
		'Scale', range(20, 20),
		'AttachOffset', point(20, 0, -220),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "GalacticIncindiaryTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Mech_M1_MisslePod",
		'ZOrder', -1,
		'FxActor', "TurretMisslePod",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "GalacticIncendiaryTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 0, 239, 255),
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 0, 239, 255),
				'EditableMetallic2', 127,
				'Weight', 999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "GalacticPacifierTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Turret_Gun",
		'ZOrder', -1,
		'FxActor', "TurretMinigun",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "GalacticPacifierTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(255, 0, 239, 255),
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(255, 0, 239, 255),
				'EditableMetallic2', 127,
				'Weight', 999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "Turret",
		'Id', "CyberPulseTurret",
		'Target', "Turret",
		'Parts', set( "Weapon" ),
		'Entity', "Turret_Gun",
		'ZOrder', -1,
		'FxActor', "PulseRifle",
		'Filters', {
			PlaceObj('CompositeBodyPresetFilter', {
				'Name', "attack_weapon",
				'Value', "CyberPulseTurret",
			}),
		},
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(0, 171, 255, 255),
				'EditableMetallic1', 127,
				'EditableColor2', RGBA(0, 171, 255, 255),
				'EditableMetallic2', 127,
				'Weight', 999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanEquipment",
		'Id', "GalacticBootsMalePX",
		'Target', "Human",
		'Parts', set( "Feet" ),
		'CustomMatch', true,
		'Entity', "Shoes_Armor_M_01_Slim",
		'Colors', {
			PlaceObj('CompositeBodyPresetColor', {
				'EditableColor1', RGBA(99, 99, 99, 255),
				'EditableRoughness1', -22,
				'EditableMetallic1', 45,
				'EditableColor2', RGBA(169, 0, 255, 255),
				'EditableRoughness2', -34,
				'EditableMetallic2', 36,
				'EditableColor3', RGBA(99, 99, 99, 255),
				'EditableRoughness3', -27,
				'EditableMetallic3', 46,
				'Weight', 9999999999990,
			}),
		},
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXAlienPlasmaRifle",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXAlienPlasmaRifle1",
		'FxActor', "PulseRifle",
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "AlienSniperRiflePX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXAlienSniperRifle",
		'Scale', range(120, 120),
		'FxActor', "RailgunSniper",
		'AttachAngle', -5400,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "CyberSniperPX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "CyberSniperv2PX",
		'Scale', range(70, 70),
		'FxActor', "RailgunSniper",
		'AttachOffset', point(-50, 0, 20),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "CyberPulseRiflePX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "CyberPulseRiflePX",
		'Scale', range(80, 80),
		'FxActor', "PulseRifle",
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "GalacticRiflePX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "GalacticRiflePX",
		'FxActor', "PulseRifle",
		'AttachAngle', -10800,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "GalacticPistolPX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "GalacticPistolPX",
		'Scale', range(70, 70),
		'FxActor', "LaserBlaster",
		'AttachAngle', 5400,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "ToxicSniperRiflePX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "ToxicSniperPX",
		'Scale', range(70, 70),
		'FxActor', "LaserBlaster",
		'AttachOffset', point(0, 0, 50),
		'AttachAngle', 5400,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXMissileLauncher",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXMissileLauncher",
		'Scale', range(130, 130),
		'FxActor', "LaserBlaster",
		'AttachAngle', -10800,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXPacifierSniper",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXCyberSniper",
		'Scale', range(50, 50),
		'FxActor', "RailgunSniper",
		'AttachOffset', point(-10, 0, 50),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXCryoRifle",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXCryoRifle",
		'Scale', range(80, 80),
		'FxActor', "LaserBlaster",
		'AttachOffset', point(-60, 0, 20),
		'AttachAngle', 5400,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXShockRifle",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXShockRifle1",
		'Scale', range(60, 60),
		'FxActor', "PulseRifle",
		'AttachOffset', point(0, 0, 90),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "CompoundBowPX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXCompoundBow",
		'AttachSpot', "Bow",
		'FxActor', "ShortBow",
		'AttachOffset', point(-80, 60, -20),
		'AttachAngle', -5400,
		'ApplyAnim', "standing_Pickup_ShortBow",
		'UnapplyAnim', "standing_Return_ShortBow",
		'AnimTestEntity', "HumanMale",
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXDartGun",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXDartGuns",
		'Scale', range(70, 70),
		'FxActor', "LaserBlaster",
		'AttachAngle', 5400,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "AnnihilatorPX",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXNanoTechGun",
		'Scale', range(140, 140),
		'FxActor', "TurretMisslePod",
		'AttachOffset', point(-220, 150, 130),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXNaniteBlade",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXNanoBlade",
		'FxActor', "HuntingKnife",
		'AttachOffset', point(0, 0, -100),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXNaniteKhopesh",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXNanoKhopesh2",
		'Scale', range(75, 75),
		'FxActor', "HuntingKnife",
		'AttachOffset', point(45, 0, -300),
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXNaniteSwarmer",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXNanoSwarmer",
		'Scale', range(80, 80),
		'FxActor', "PulseRifle",
		'AttachAngle', 10800,
	}),
	PlaceObj('ModItemCompositeBodyPreset', {
		'Group', "HumanWeapons",
		'Id', "PXNanitePhantom",
		'Target', "Human",
		'Parts', set( "Tool" ),
		'CustomMatch', true,
		'Entity', "PXNanoPhantom",
		'FxActor', "Blaster_Pistol_Improved_Projectile",
	}),
	PlaceObj('ModItemEntity', {
		'name', "AlienRockDecPX",
		'class_parent', "Decal",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Decal",
		},
		'entity_name', "AlienRockDecPX",
		'material_type', "Rock",
	}),
	PlaceObj('ModItemEntity', {
		'name', "BlueprintSafePX",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "BlueprintSafePX",
		'material_type', "Metal-Box",
	}),
	PlaceObj('ModItemEntity', {
		'name', "CarbonGeneratorPX",
		'comment', "Carbon Gen",
		'fade_category', "Auto 400%",
		'entity_name', "CarbonGeneratorPX",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "CyberHelmetoPX03",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "CyberHelmetoPX03",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "CyberPulseRiflePX",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "CyberPulseRiflePX",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "CyberSniperv2PX",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "CyberSniperv2PX",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "GalacticFurnacePX",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "GalacticFurnacePX",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "GalacticHelmetPX",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "GalacticHelmetPX",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "GalacticPistolPX",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "GalacticPistolPX",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "GalacticRiflePX",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "GalacticRiflePX",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "GalacticoinSafePX",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "GalacticoinSafePX",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "GlowingPlantDecPX",
		'class_parent', "Decal",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Decal",
		},
		'entity_name', "GlowingPlantDecPX",
		'material_type', "Plant",
	}),
	PlaceObj('ModItemEntity', {
		'name', "LCraftingCratePX",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "LCraftingCratePX",
		'material_type', "Metal-Box",
	}),
	PlaceObj('ModItemEntity', {
		'name', "MedicBoxLargePX",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "MedicBoxLargePX",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXAlienBattery03",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXAlienBattery03",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXAlienHelmet1",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXAlienHelmet1",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXAlienPlasmaRifle1",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXAlienPlasmaRifle1",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXAlienSniperRifle",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXAlienSniperRifle",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXBatteryGen",
		'fade_category', "Auto 400%",
		'entity_name', "PXBatteryGen",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXBiologyCNS",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXBiologyCNS",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXBlueprintSafe",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXBlueprintSafe",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCarbonBatteryNew",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXCarbonBatteryNew",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCarbonGen2",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXCarbonGen2",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCompoundBow",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXCompoundBow",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXConstructionSmall",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXConstructionSmall",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXContainer0101",
		'comment', "Armory Locker",
		'fade_category', "Auto 400%",
		'entity_name', "PXContainer0101",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCraftStorage1",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXCraftStorage1",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCrate01",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXCrate01",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCrate2",
		'comment', "Gal Storage (Construction Storage)",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXCrate2",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCryoRifle",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXCryoRifle",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCyberBattery02",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXCyberBattery02",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXCyberSniper",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXCyberSniper",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXDartGuns",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXDartGuns",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXDecorMushrooms",
		'class_parent', "Decal",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Decal",
		},
		'entity_name', "PXDecorMushrooms",
		'material_type', "Mushroom",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXEyeSculptures",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXEyeSculptures",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXFabricatorGalac",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXFabricatorGalac",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXFreezerEntity01",
		'comment', "Organ Fridge",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXFreezerEntity01",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXFridgeFreezer1",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXFridgeFreezer1",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXFridgeSciFi",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXFridgeSciFi",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXGalFoodStorage",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXGalFoodStorage",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXGalacticCrate",
		'comment', "Galactic Storage (General Entity)",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXGalacticCrate",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXGenerator",
		'class_parent', "Deposition",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Deposition",
		},
		'entity_name', "PXGenerator",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXHackingCNS",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXHackingCNS",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXHologramDec",
		'class_parent', "Decal",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Decal",
		},
		'entity_name', "PXHologramDec",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXLightningRod",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Max",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXLightningRod",
		'material_type', "Metal",
		'on_collision_with_camera', "become transparent",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXLureTower",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXLureTower",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXMedBoxContainer",
		'comment', "Med Box",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXMedBoxContainer",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXMissileLauncher",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXMissileLauncher",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXNanoBlade",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXNanoBlade",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXNanoKhopesh2",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXNanoKhopesh2",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXNanoPhantom",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXNanoPhantom",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXNanoSwarmer",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXNanoSwarmer",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXNanoTechGun",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXNanoTechGun",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXObeliskDec",
		'class_parent', "Decal",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Decal",
		},
		'entity_name', "PXObeliskDec",
		'material_type', "Stone",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXRecycleBox",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXRecycleBox",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXRefinary1",
		'comment', "Refinery",
		'fade_category', "Auto 400%",
		'entity_name', "PXRefinary1",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXRepairBayCNS",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXRepairBayCNS",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXRingSculptureD",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXRingSculptureD",
		'material_type', "Stone",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXSciFiCar",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXSciFiCar",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXSensorTower",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXSensorTower",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXShockRifle1",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "PXShockRifle1",
		'material_type', "Weapon",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXSiren",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Max",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXSiren",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXTechCrate01",
		'class_parent', "ResourcePileEntityClass",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"ResourcePileEntityClass",
		},
		'entity_name', "PXTechCrate01",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXTradingCNS",
		'class_parent', "FloorAlignedObj",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"FloorAlignedObj",
		},
		'entity_name', "PXTradingCNS",
		'material_type', "Metal",
	}),
	PlaceObj('ModItemEntity', {
		'name', "PXTreeDecoration",
		'class_parent', "Decal",
		'fade_category', "Auto 400%",
		'ClassParents', {
			"Decal",
		},
		'entity_name', "PXTreeDecoration",
	}),
	PlaceObj('ModItemEntity', {
		'name', "ToxicSniperPX",
		'class_parent', "AutoAttachObject",
		'fade_category', "Max",
		'ClassParents', {
			"AutoAttachObject",
		},
		'entity_name', "ToxicSniperPX",
		'material_type', "Weapon",
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Gear",
}, {
	PlaceObj('ModItemEquipResource', {
		DecayRateOutside = 174,
		DecayTimeOutside = 23040000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
		},
		EquipSlot = "Tool",
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifySkill', {
				Id = "autoid_ucCehPy_cY7aVj",
				Level = 3,
				Skill = "Hacking",
			}),
		},
		PerItemHealth = false,
		ProductionTech = "HackingDevice",
		SortKey = 912,
		UnlockHint = T(565455020471, --[[ModItemEquipResource HackingDevice UnlockHint]] "Assemble <color TextEmphasis>Hacking Device</color> on a <color TextEmphasis>Soldering bench</color>"),
		alt_icon = "CriminalActivity/HackingTool.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_entity = "ResourceBulk_CPUCore",
		carry_rotation = 5400,
		carry_scale = 150,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279573539,
		consumption_type = "Medicine",
		description = T(543447717648, --[[ModItemEquipResource HackingDevice description]] "Quite a common tool in the blackmarket, I wonder what we can do with it..."),
		display_name = T(574220426142, --[[ModItemEquipResource HackingDevice display_name]] "Hacking Device"),
		group = "ElectronicComponents",
		icon = "CriminalActivity/HackingToolMedium.png",
		id = "HackingDevice",
		in_groups = {
			"ElectronicComponents",
			"Construction",
		},
		item_metas = {},
		money_value = 30000000,
		progress = 50000,
		resource_entities = {
			"ResourceBulk_CPUCore",
		},
		stack_idle_state_count = 2,
		stack_scale = 150,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyMale = "CarbonHatPX",
		DecayRateOutside = 469,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 10000,
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Hat",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 10,
			}),
		},
		LockState = "hidden",
		MaxHealth = 540000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_EBavTd",
				add = 8000,
				prop = "TemperatureHigh",
			}),
		},
		SelfCleaningRate = 20000,
		SortKey = 406,
		alt_icon = "General/CarbonHat.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Hat",
		carry_scale = 90,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(648434068952, --[[ModItemEquipResource CarbonHatPX description]] "A high-end helm made of carbon nanotubes. Extremely resistant to heat, blast waves, blunt or piercing hits. "),
		display_name = T(310070204672, --[[ModItemEquipResource CarbonHatPX display_name]] "Carbon Hat"),
		display_name_pl = T(910384967400, --[[ModItemEquipResource CarbonHatPX display_name_pl]] "Carbon Hats"),
		group = "Equipment",
		icon = "General/CarbonHatSmall.png",
		id = "CarbonHatPX",
		in_groups = {
			"Apparel_Hats",
		},
		money_value = 23000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Hat",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 20,
		BodyFemale = "GalacticBootsFemalePX",
		BodyMale = "GalacticBootsMalePX",
		DecayRateOutside = 608,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Shoes",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 9,
			}),
		},
		LockState = "hidden",
		MaxHealth = 700000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				add = -15000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_ofOz3vr",
				add = 15000,
				prop = "TemperatureHigh",
			}),
		},
		ProductionTech = "GalacticArmour",
		SelfCleaningRate = 20000,
		SortKey = 6101,
		alt_icon = "Trade/GalacticBoots.png",
		alt_icon_outlined = "Trade/GalacticBoots.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Shoes",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(983941248894, --[[ModItemEquipResource GalacticBoots description]] "Footwear of the Civilian Levy Uniform. The best legal armor on the market, and meant to assist life on deathworlds like ours. <em>Generally better stats than any base armor</em>"),
		display_name = T(228835084084, --[[ModItemEquipResource GalacticBoots display_name]] "Galactic Boots"),
		display_name_pl = T(946270061830, --[[ModItemEquipResource GalacticBoots display_name_pl]] "Galactic Boots"),
		group = "Equipment",
		icon = "Trade/GalacticBootsSmall.png",
		id = "GalacticBoots",
		in_groups = {
			"Apparel_Shoes",
		},
		money_value = 200000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Shoes",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "GalacticTorsoFemalePX",
		BodyMale = "GalacticTorsoMalePX",
		DecayRateOutside = 955,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Jacket",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 30,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 30,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 30,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 18,
			}),
		},
		LockState = "hidden",
		MaxHealth = 1100000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_hFV4Tcq",
				add = -15000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 15000,
				prop = "TemperatureHigh",
			}),
		},
		ProductionTech = "GalacticArmour",
		SelfCleaningRate = 20000,
		SortKey = 6104,
		alt_icon = "Trade/GalacticChest.png",
		alt_icon_outlined = "Trade/GalacticChest.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Apparel",
		carry_scale = 80,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(486636862824, --[[ModItemEquipResource GalacticChest description]] "Chestpiece of the Civilian Levy Uniform. The best legal armor on the market, and meant to assist life on deathworlds like ours. <em>Generally better stats than any base armor</em>"),
		display_name = T(337581503183, --[[ModItemEquipResource GalacticChest display_name]] "Galactic Chestpiece"),
		display_name_pl = T(494435551765, --[[ModItemEquipResource GalacticChest display_name_pl]] "Galactic Chestpiece"),
		group = "Equipment",
		icon = "Trade/GalacticChestSmall.png",
		id = "GalacticChest",
		in_groups = {
			"Apparel_Chest",
		},
		money_value = 170000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Apparel",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "AlienTorsoFemalePX",
		BodyMale = "AlienTorsoMalePX",
		DecayRateOutside = 1736,
		DecayTimeOutside = 46080000,
		DirtinessMultiplier = 0,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 200000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 5000,
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Jacket",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 50,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 5,
			}),
		},
		LockState = "hidden",
		MaxHealth = 2000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				add = -3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				add = 3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_DG4kR5E",
				add = 75000,
				prop = "MaxHealth",
			}),
		},
		ProductionTech = "AlienArmour",
		SelfCleaningRate = 100000,
		SortKey = 6803,
		alt_icon = "CriminalActivity/AlienChest.png",
		alt_icon_outlined = "CriminalActivity/AlienChest.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Apparel",
		carry_scale = 80,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(383407194404, --[[ModItemEquipResource AlienChest description]] "An unholy fusion of metal and meat! Due to the Megdeb growing around the carbon nanotube frame, this is extremely durable against <color TextButton>Blunt</color> damage. The Megdeb also provides another layer of health to the wielder."),
		display_name = T(410167122246, --[[ModItemEquipResource AlienChest display_name]] "Blast-proof Cage"),
		display_name_pl = T(335885066363, --[[ModItemEquipResource AlienChest display_name_pl]] "Alien Chestpiece"),
		group = "Equipment",
		icon = "CriminalActivity/AlienChestSmall.png",
		id = "AlienChest",
		in_groups = {
			"Apparel_Chest",
		},
		money_value = 6720000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Apparel",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "CyberBootsFemalePX",
		BodyMale = "CyberBootsMalePX",
		DecayRateOutside = 868,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Shoes",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 17,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 17,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 10,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 6,
			}),
		},
		LockState = "hidden",
		MaxHealth = 1000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_KcaNqyC",
				add = -3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = -10000,
				prop = "Movement",
			}),
		},
		ProductionTech = "CyberArmour",
		SelfCleaningRate = 20000,
		SortKey = 6802,
		alt_icon = "CriminalActivity/CyberBoots.png",
		alt_icon_outlined = "CriminalActivity/CyberBoots.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Shoes",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(490204748811, --[[ModItemEquipResource CyberBoots description]] "Cyber Crystals fused with Carbon Nanotubes, shaped for human feet. Illegal to create, own, and distribute. <em>Difficult to wear</em> as they are meant for Galactican Super Soldiers. Strong <color TextButton>Blunt</color> and <color TechSubtitleBlue>Pierce</color> Defense"),
		display_name = T(732208171823, --[[ModItemEquipResource CyberBoots display_name]] "Cyber Boots"),
		display_name_pl = T(997733192145, --[[ModItemEquipResource CyberBoots display_name_pl]] "Cyber Boots"),
		group = "Equipment",
		icon = "CriminalActivity/CyberBootsSmall.png",
		id = "CyberBoots",
		in_groups = {
			"Apparel_Shoes",
		},
		money_value = 2300000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Shoes",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		DecayRateOutside = 174,
		DecayTimeOutside = 23040000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 2000,
			}),
		},
		FuelDescription = T(824272098180, --[[ModItemEquipResource ChipDevice FuelDescription]] "This device uses <color TextEmphasis>Power cells</color><image 'UI/Icons/Resources/res_power_cell' 1100> to work. Power cells can be obtained from scavenging spaceship debris. After research, they can be crafted from Energy crystals and Electronics on a Soldering workbench."),
		LockState = "hidden",
		MinStorageCondition = 2,
		PerItemHealth = false,
		ProductionTech = "ChipDevice",
		SortKey = 909,
		UnlockHint = T(448925729636, --[[ModItemEquipResource ChipDevice UnlockHint]] "Assemble <color TextEmphasis>Chip Extraction Devices</color> on a <color TextEmphasis>Soldering bench</color>"),
		alt_icon = "CriminalActivity/ChipReplacement.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_entity = "ResourceBulk_PowerCell",
		carry_rotation = 5400,
		carry_scale = 150,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279573539,
		consumption_type = "Medicine",
		description = T(396156218519, --[[ModItemEquipResource ChipDevice description]] "Complex illegal device used to extract chip devices from criminals."),
		display_name = T(262314733964, --[[ModItemEquipResource ChipDevice display_name]] "Chip Extraction Device"),
		group = "Medicine",
		icon = "CriminalActivity/ChipReplacementMedium.png",
		id = "ChipDevice",
		in_groups = {
			"Medicine",
			"ElectronicComponents",
			"Construction",
		},
		item_metas = {},
		money_value = 50000000,
		progress = 50000,
		resource_entities = {
			"ResourceBulk_PowerCell",
		},
		stack_entity = "ResourceBulk_PowerCell",
		stack_idle_state_count = 2,
		stack_scale = 150,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 15,
		BodyFemale = "GalacticPantsFemalePX",
		BodyMale = "GalacticPantsMalePX",
		DecayRateOutside = 694,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Pants",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 9,
			}),
		},
		LockState = "hidden",
		MaxHealth = 800000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_gEpHY7Y",
				add = -15000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 15000,
				prop = "TemperatureHigh",
			}),
		},
		ProductionTech = "GalacticArmour",
		SelfCleaningRate = 20000,
		SortKey = 6102,
		alt_icon = "Trade/GalacticLegs.png",
		alt_icon_outlined = "Trade/GalacticLegs.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Apparel",
		carry_scale = 80,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(117523610110, --[[ModItemEquipResource GalacticLegs description]] "Girdle-able robes of the Civilian Levy Uniform. The best legal armor on the market, and meant to assist life on deathworlds like ours. <em>Generally better stats than any base armor</em>"),
		display_name = T(885198528883, --[[ModItemEquipResource GalacticLegs display_name]] "Galactic Leggings"),
		display_name_pl = T(633973430250, --[[ModItemEquipResource GalacticLegs display_name_pl]] "Galactic Leggings"),
		group = "Equipment",
		icon = "Trade/GalacticLegsSmall.png",
		id = "GalacticLegs",
		in_groups = {
			"Apparel_Pants",
		},
		money_value = 225000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Apparel",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "CyberPantsFemalePX",
		BodyMale = "CyberPantsMalePX",
		DecayRateOutside = 955,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Pants",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 17,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 17,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 10,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 6,
			}),
		},
		LockState = "hidden",
		MaxHealth = 1100000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_PDRXUR7",
				add = -3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = -10000,
				prop = "Movement",
			}),
		},
		ProductionTech = "CyberArmour",
		SelfCleaningRate = 20000,
		SortKey = 4053,
		alt_icon = "CriminalActivity/CyberLegs.png",
		alt_icon_outlined = "CriminalActivity/CyberLegs.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Apparel",
		carry_scale = 80,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(879798239917, --[[ModItemEquipResource CyberLegs description]] "Cyber Crystals fused with Carbon Nanotubes, shaped for human legs. Illegal to create, own, and distribute. <em>Difficult to wear</em> as they are meant for Galactican Super Soldiers. Strong <color TextButton>Blunt</color> and <color TechSubtitleBlue>Pierce</color> Defense"),
		display_name = T(333373419777, --[[ModItemEquipResource CyberLegs display_name]] "Cyber Legpiece"),
		display_name_pl = T(663009124507, --[[ModItemEquipResource CyberLegs display_name_pl]] "Cyber Legpiece"),
		group = "Equipment",
		icon = "CriminalActivity/CyberLegsSmall.png",
		id = "CyberLegs",
		in_groups = {
			"Apparel_Pants",
		},
		money_value = 2325000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Apparel",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "CyberTorsoFemalePX",
		BodyMale = "CyberTorsoMalePX",
		DecayRateOutside = 955,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 40000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Jacket",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 34,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 34,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 20,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 12,
			}),
		},
		LockState = "hidden",
		MaxHealth = 1100000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_LHabAd4",
				add = -3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = -10000,
				prop = "Movement",
			}),
		},
		ProductionTech = "CyberArmour",
		SelfCleaningRate = 20000,
		SortKey = 4052,
		alt_icon = "CriminalActivity/CyberChest.png",
		alt_icon_outlined = "CriminalActivity/CyberChest.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Apparel",
		carry_scale = 80,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(461986247511, --[[ModItemEquipResource CyberChest description]] "Cyber Crystals fused with Carbon Nanotubes, shaped for human torsos. Illegal to create, own, and distribute. <em>Difficult to wear</em> as they are meant for Galactican Super Soldiers. Strong <color TextButton>Blunt</color> and <color TechSubtitleBlue>Pierce</color> Defense"),
		display_name = T(312442081841, --[[ModItemEquipResource CyberChest display_name]] "Cyber Chestpiece"),
		display_name_pl = T(451134222509, --[[ModItemEquipResource CyberChest display_name_pl]] "Cyber Chestpiece"),
		group = "Equipment",
		icon = "CriminalActivity/CyberChestSmall.png",
		id = "CyberChest",
		in_groups = {
			"Apparel_Chest",
		},
		money_value = 2320000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Apparel",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "AlienBootsFemalePX",
		BodyMale = "AlienBootsMalePX",
		DecayRateOutside = 1736,
		DecayTimeOutside = 46080000,
		DirtinessMultiplier = 0,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 200000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 5000,
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Shoes",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 50,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 5,
			}),
		},
		LockState = "hidden",
		MaxHealth = 2000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				add = -3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_ofOz3vr",
				add = 3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_CNvSRjt",
				add = 75000,
				prop = "Movement",
			}),
		},
		ProductionTech = "AlienArmour",
		SelfCleaningRate = 100000,
		SortKey = 6801,
		alt_icon = "CriminalActivity/AlienBoots.png",
		alt_icon_outlined = "CriminalActivity/AlienBoots.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Shoes",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(327361621192, --[[ModItemEquipResource AlienBoots description]] "An unholy fusion of metal and meat! Due to the Sintis growing around the carbon nanotube frame, this is extremely durable against <color TextButton>Pierce</color> damage. Also gives movement speed due to the spikes poking out the bottom of the boot."),
		display_name = T(190958351626, --[[ModItemEquipResource AlienBoots display_name]] "Living Cleats"),
		display_name_pl = T(924570978379, --[[ModItemEquipResource AlienBoots display_name_pl]] "Living Cleats"),
		group = "Equipment",
		icon = "CriminalActivity/AlienBootsSmall.png",
		id = "AlienBoots",
		in_groups = {
			"Apparel_Shoes",
		},
		money_value = 6700000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Shoes",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		BodyFemale = "AlienHelmetFemalePX",
		BodyMale = "AlienHelmetMalePX",
		DecayRateOutside = 1736,
		DecayTimeOutside = 46080000,
		DirtinessMultiplier = 0,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 200000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 5000,
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Hat",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 40,
			}),
		},
		LockState = "hidden",
		MaxHealth = 2000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				add = -3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_hkldXec",
				add = 3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_MaQpoHk",
				add = -50000,
				prop = "Pain",
			}),
		},
		ProductionTech = "AlienArmour",
		SelfCleaningRate = 100000,
		SortKey = 6800,
		alt_icon = "CriminalActivity/AlienHelmet.png",
		alt_icon_outlined = "CriminalActivity/AlienHelmet.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "PXAlienHelmet1",
		carry_scale = 20,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(383760078975, --[[ModItemEquipResource AlienHelmet description]] "An unholy fusion of metal and meat! Due to the Toco growing around the carbon nanotube frame, this is extremely durable against <color TextPositive>Gas</color> damage. The Toco also produces gaseous opiates to increase the wielders pain tolerance."),
		display_name = T(561438022469, --[[ModItemEquipResource AlienHelmet display_name]] "Inoculated Helm"),
		display_name_pl = T(515450141759, --[[ModItemEquipResource AlienHelmet display_name_pl]] "Inoculated Helms"),
		group = "Equipment",
		icon = "CriminalActivity/AlienHelmSmall.png",
		id = "AlienHelmet",
		in_groups = {
			"Apparel_Hats",
		},
		money_value = 6700000000,
		progress = 50000,
		quality = 50,
		stack_entity = "PXAlienHelmet1",
		stack_scale = 20,
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 10,
		BodyFemale = "AlienPantsFemalePX",
		BodyMale = "AlienPantsMalePX",
		DecayRateOutside = 1736,
		DecayTimeOutside = 46080000,
		DirtinessMultiplier = 0,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 200000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 5000,
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Pants",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 5,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 50,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 5,
			}),
		},
		LockState = "hidden",
		MaxHealth = 2000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				add = -40000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_nbqhAEB",
				add = 30000,
				prop = "TemperatureHigh",
			}),
		},
		ProductionTech = "AlienArmour",
		SelfCleaningRate = 100000,
		SortKey = 6802,
		alt_icon = "CriminalActivity/AlienLegs.png",
		alt_icon_outlined = "CriminalActivity/AlienLegs.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "ResourceBulk_Apparel",
		carry_scale = 80,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(871915540832, --[[ModItemEquipResource AlienLegs description]] "An unholy fusion of metal and meat! Due to the Bitherm growing around the carbon nanotube frame, this is extremely durable against <color TextNegative>Energy</color> damage. The Bitherm also makes the wielder near immune to changes in temperatures."),
		display_name = T(811962913533, --[[ModItemEquipResource AlienLegs display_name]] "Mega-Insulated Pants"),
		display_name_pl = T(888574727881, --[[ModItemEquipResource AlienLegs display_name_pl]] "Mega-Insulated Pants"),
		group = "Equipment",
		icon = "CriminalActivity/AlienLegsSmall.png",
		id = "AlienLegs",
		in_groups = {
			"Apparel_Pants",
		},
		money_value = 6725000000,
		progress = 50000,
		quality = 50,
		stack_entity = "ResourceBulk_Apparel",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 5,
		BodyFemale = "CyberHelmetFemalePX",
		BodyMale = "CyberHelmetMalePX",
		DecayRateOutside = 868,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Hat",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 17,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 17,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 10,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 6,
			}),
		},
		LockState = "hidden",
		MaxHealth = 1000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_s5xAjqD",
				add = 3000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = -3000,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_hnrNneK",
				add = -10000,
				prop = "Movement",
			}),
		},
		ProductionTech = "CyberArmour",
		SelfCleaningRate = 20000,
		SortKey = 4051,
		alt_icon = "CriminalActivity/CyberHelmet.png",
		alt_icon_outlined = "CriminalActivity/CyberHelmet.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "CyberHelmetoPX03",
		carry_scale = 20,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(886022028185, --[[ModItemEquipResource CyberHelmet description]] "Cyber Crystals fused with Carbon Nanotubes, shaped for human heads. Illegal to create, own, and distribute. <em>Difficult to wear</em> as they are meant for Galactican Super Soldiers. Strong <color TextButton>Blunt</color> and <color TechSubtitleBlue>Pierce</color> Defense"),
		display_name = T(474376540417, --[[ModItemEquipResource CyberHelmet display_name]] "Cyber Helmet"),
		display_name_pl = T(694291246010, --[[ModItemEquipResource CyberHelmet display_name_pl]] "Cyber Helmet"),
		group = "Equipment",
		icon = "CriminalActivity/CyberHelmSmall.png",
		id = "CyberHelmet",
		in_groups = {
			"Apparel_Hats",
		},
		money_value = 2300000000,
		progress = 50000,
		quality = 50,
		stack_entity = "CyberHelmetoPX03",
		stack_scale = 20,
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemEquipResource', {
		AvailableOnStart = 5,
		BodyFemale = "GalacticHelmetFemalePX",
		BodyMale = "GalacticHelmetMalePX",
		DecayRateOutside = 868,
		DecayTimeOutside = 46080000,
		DismantleResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		DismantleVisualRes = "Apparel",
		EquipSlot = "Hat",
		HitNegation = {
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "blunt",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "piercing",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "energy",
				'NegationChance', 15,
			}),
			PlaceObj('EquipResourceHitNegation', {
				'DamageType', "gas",
				'NegationChance', 9,
			}),
		},
		LockState = "hidden",
		MaxHealth = 1000000,
		MinStorageCondition = 2,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_ucCehPy_QgSgbkQ",
				add = -15000,
				prop = "TemperatureLow",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 15000,
				prop = "TemperatureHigh",
			}),
		},
		ProductionTech = "GalacticArmour",
		SelfCleaningRate = 20000,
		SortKey = 6103,
		alt_icon = "Trade/GalacticHelmet.png",
		alt_icon_outlined = "Trade/GalacticHelmet.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 2000,
		carry_entity = "GalacticHelmetPX",
		carry_scale = 13,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		color = 4279703319,
		description = T(113986958548, --[[ModItemEquipResource GalacticHelmet description]] "Helm of the Civilian Levy Uniform. The best legal armor on the market, and meant to assist life on deathworlds like ours. <em>Generally better stats than any base armor</em>"),
		display_name = T(118928344987, --[[ModItemEquipResource GalacticHelmet display_name]] "Galactic Helmet"),
		display_name_pl = T(225946975147, --[[ModItemEquipResource GalacticHelmet display_name_pl]] "Galactic Helmet"),
		group = "Equipment",
		icon = "Trade/GalacticHelmSmall.png",
		id = "GalacticHelmet",
		in_groups = {
			"Apparel_Hats",
		},
		money_value = 160000000,
		progress = 50000,
		quality = 50,
		stack_entity = "GalacticHelmetPX",
		stack_scale = 13,
		stack_size = 1000,
		visible = false,
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Loot Defs",
	'NameColor', RGBA(188, 89, 11, 255),
}, {
	PlaceObj('ModItemLootDef', {
		group = "Initial",
		id = "ProjectX_StartingLoot_Hard",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MinAmount = 60000,
			Resource = "ScrapMetal",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 30000,
			Resource = "Metal",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 60000,
			Resource = "EmergencyRation",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 15000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticPistol",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 30000000,
			Resource = "Money",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 100000,
			Resource = "LiquidFuel",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Scavenging",
		id = "ScavengeCargo_Resources",
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 30000,
			Resource = "Synthetics",
			weight = 40000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "CyberCrystal",
			weight = 4000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienCrystal",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "CyberProcessor",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "CyberCore",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			Resource = "TradingSchematic",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			Resource = "CyberBlueprint",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "AlienBlueprint",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 25000,
			Resource = "Blueprint",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000000,
			MinAmount = 100000,
			Resource = "Money",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "EmergencyRation",
			weight = 30000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 120000,
			MinAmount = 60000,
			Resource = "LiquidFuel",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "MedKit",
			weight = 10000,
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ScavengeCPUPower",
			weight = 30000,
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Initial",
		id = "ProjectX_StartingLoot_Medium",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 120000,
			MinAmount = 120000,
			Resource = "ScrapMetal",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 60000,
			Resource = "Metal",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 90000,
			Resource = "EmergencyRation",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 15000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 2000,
			MinAmount = 2000,
			Resource = "GalacticPistol",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticSpear",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 60000000,
			Resource = "Money",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 200000,
			Resource = "LiquidFuel",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "TradeShip",
		loot = "all",
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "TradeShip_Other",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "Smuggler_Other",
		PlaceObj('LootEntryResource', {
			MaxAmount = 100000,
			MinAmount = 10000,
			Resource = "Blueprint",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 10000,
			Resource = "CyberBlueprint",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 30000,
			MinAmount = 10000,
			Resource = "AlienBlueprint",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 500000,
			MinAmount = 100000,
			Resource = "Metal",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 500000,
			MinAmount = 100000,
			Resource = "CarbonNanotubes",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 500000,
			MinAmount = 100000,
			Resource = "RawMeatInsect",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 250000,
			MinAmount = 50000,
			Resource = "RawMeatHuman",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 20000,
			Resource = "EmergencyRation",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 200000,
			MinAmount = 50000,
			Resource = "Cotton",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 200000,
			MinAmount = 50000,
			Resource = "Synthetics",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "ScrapElectronics",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 5000,
			Resource = "CPUCore",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 5000,
			Resource = "PowerCell",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 500000,
			MinAmount = 100000,
			Resource = "LiquidFuel",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 25000,
			MinAmount = 5000,
			Resource = "MedKit",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 10000,
			Resource = "AlcoholBeer",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 10000,
			Resource = "AlcoholBlueberryWine",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 10000,
			Resource = "AlcoholMoonshine",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 10000,
			Resource = "Coffee",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 10000,
			Resource = "Tea",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			MinAmount = 5000,
			Resource = "ShortStory",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			MinAmount = 5000,
			Resource = "SmokeleafPipe",
			weight = 5000,
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Scavenging",
		id = "ScavengeCargo_Items",
		PlaceObj('LootEntryResource', {
			Resource = "GalacticSpear",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "HarvestingTools",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "SurvivalBackpack",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GoodLuckCharm",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "EMUmbrella",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "RespiratorMask",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "NightGoggles",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "SignalFlare",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "Grenades",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "AncientTalisman",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticBoots",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechAnnihilator",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechSwarmer",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechBlade",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechKhopesh",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "PhantomRiflePX",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticLegs",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticHelmet",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticChest",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticPistol",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Armor_Hat_Synthetic",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Armor_Jacket_Synthetic",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Armor_Pants_Synthetic",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Armor_Shoes_Synthetic",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Ranged_LaserBlaster",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Ranged_PulseRifle",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Ranged_RailgunSniper",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Melee_LaserPike",
			weight = 10000,
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "Smuggler_Armory",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Melee_LaserPike",
			weight = 25000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "HarvestingTools",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "EMUmbrella",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "GoodLuckCharm",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "SurvivalBackpack",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "RespiratorMask",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "NightGoggles",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "SignalFlare",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Grenades",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "AncientTalisman",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Ranged_LaserBlaster",
			weight = 25000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Ranged_PulseRifle",
			weight = 25000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Ranged_RailgunSniper",
			weight = 25000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Ranged_LaserBlaster_Improved",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Ranged_PulseRifle_Improved",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Ranged_RailgunSniper_Improved",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			Resource = "Armor_Hat_Synthetic",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			Resource = "Armor_Jacket_Synthetic",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			Resource = "Armor_Pants_Synthetic",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			Resource = "Armor_Shoes_Synthetic",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			Resource = "Armor_Hat_Carbon",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			Resource = "Armor_Jacket_Carbon",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			Resource = "Armor_Pants_Carbon",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			Resource = "Armor_Shoes_Carbon",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberBoots",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienLegs",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienBoots",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienChest",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienHelmet",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienLaserPike",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienSniperRifle",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "AlienPlasmaRifle",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberLegs",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberChest",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberHelmet",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberSniperRifle",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberLaserPike",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CyberPlasmaRifle",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "MissileLauncher",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "CryoFreezeRifle",
			weight = 7000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "ToxicSniperRifle",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "ShockRifle",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "PacifierSniper",
			weight = 7000,
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Initial",
		id = "ProjectX_StartingLoot_Easy",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MinAmount = 150000,
			Resource = "ScrapMetal",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 75000,
			Resource = "Metal",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 100000,
			Resource = "EmergencyRation",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 40000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticBoots",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticLegs",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticHelmet",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "GalacticChest",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechKhopesh",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 2000,
			MinAmount = 2000,
			Resource = "GalacticPistol",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 100000000,
			Resource = "Money",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 300000,
			Resource = "LiquidFuel",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "ColonyShip",
		loot = "all",
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_RawFood",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "ColonyShip_Other",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "Battleship",
		loot = "all",
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Battleship_Other",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Initial",
		id = "ProjectX_StartingLoot_Insane",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MinAmount = 10000,
			Resource = "EmergencyRation",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 7500000,
			Resource = "Money",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 50000,
			Resource = "LiquidFuel",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropStandard",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 30000,
			Resource = "EmergencyRation",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 15000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 30000,
			Resource = "MedBandages",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 200000,
			Resource = "Wood",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 5000,
			Resource = "CPUCore",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "PowerCell",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 30000,
			Resource = "ScrapElectronics",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 500000,
			Resource = "LiquidFuel",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropMoney",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 300000000,
			Resource = "Money",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "ColonyShip_Other",
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "Brick",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 200000,
			MinAmount = 10000,
			Resource = "TradingSchematic",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "Wood",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 500000,
			MinAmount = 100000,
			Resource = "CarbonNanotubes",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "Stone",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "Concrete",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "Metal",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "CarbonNanotubes",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "LeatherRaw",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "PayahBark",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Feathers",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Cotton",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Synthetics",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "LeatherDry",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "VeggieLeather",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Ore",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Silicon",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "SmokeleafRaw",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "SmokeleafDry",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "CactusSlime",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "Smuggler",
		loot = "all",
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Armory",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
		PlaceObj('LootEntryLootDef', {
			loot_def = "Smuggler_Other",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropContraband",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 10000,
			Resource = "CyberCrystal",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 4000,
			Resource = "CyberProcessor",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "CyberCore",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 2000,
			Resource = "AlienCrystal",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "AlienProcessor",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "AlienCore",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropSupport",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 50000,
			Resource = "MedBandages",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 50000,
			Resource = "MedAntibiotics",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 20000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 4000,
			Resource = "HarvestingTools",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 2000,
			Resource = "RespiratorMask",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 2000,
			Resource = "SignalFlare",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 2000,
			Resource = "SurvivalBackpack",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropMedical",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 200000,
			Resource = "MedBandages",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 200000,
			Resource = "MedAntibiotics",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 50000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 100000,
			Resource = "EmergencyRation",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Initial",
		id = "ProjectX_StartingLoot_VeryHard",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MinAmount = 30000,
			Resource = "EmergencyRation",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 10000,
			Resource = "MedKit",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 15000000,
			Resource = "Money",
		}),
		PlaceObj('LootEntryResource', {
			MinAmount = 75000,
			Resource = "LiquidFuel",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Initial",
		id = "ProjectX_StartingLoot",
		loot = "all",
		PlaceObj('LootEntryLootDef', {
			condition = "Difficulty Easy",
			loot_def = "ProjectX_StartingLoot_Easy",
		}),
		PlaceObj('LootEntryLootDef', {
			condition = "Difficulty Medium",
			loot_def = "ProjectX_StartingLoot_Medium",
		}),
		PlaceObj('LootEntryLootDef', {
			condition = "Difficulty Hard",
			loot_def = "ProjectX_StartingLoot_Hard",
		}),
		PlaceObj('LootEntryLootDef', {
			condition = "Difficulty VeryHard",
			loot_def = "ProjectX_StartingLoot_VeryHard",
		}),
		PlaceObj('LootEntryLootDef', {
			condition = "Difficulty Insane",
			loot_def = "ProjectX_StartingLoot_Insane",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropExcavator",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 2000000,
			Resource = "Stone",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 750000,
			Resource = "Ore",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			MinAmount = 500000,
			Resource = "Silicon",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "Battleship_Other",
		PlaceObj('LootEntryResource', {
			MaxAmount = 1000000,
			MinAmount = 250000,
			Resource = "LiquidFuel",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 500000,
			MinAmount = 100000,
			Resource = "EmergencyRation",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 250000,
			MinAmount = 50000,
			Resource = "MedKit",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 100000,
			MinAmount = 50000,
			Resource = "Jacket_Spaceship",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 100000,
			MinAmount = 50000,
			Resource = "Pants_Spaceship",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "TradeShip_Other",
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 1000000,
			Resource = "CarbonNanotubes",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 100000,
			MinAmount = 10000,
			Resource = "TradingSchematic",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 2500000,
			MinAmount = 500000,
			Resource = "EmergencyRation",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 250000,
			Resource = "ScrapElectronics",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 250000,
			Resource = "CPUCore",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000000,
			MinAmount = 250000,
			Resource = "PowerCell",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "LiquidFuel",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 2500000,
			MinAmount = 500000,
			Resource = "MedKit",
			weight = 2000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 1000000,
			MinAmount = 100000,
			Resource = "ShortStory",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "AlcoholBeer",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "AlcoholBlueberryWine",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "AlcoholMoonshine",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Coffee",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Tea",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "ShortStory",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "ShortStory",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "SmokeleafPipe",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			Resource = "OrganBox",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "SupplyDropGalacticOfficial",
		loot = "all",
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "GalacticRifle",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "GalacticSpear",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "GalacticBoots",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "GalacticLegs",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "GalacticChest",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 0,
			Resource = "GalacticHelmet",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "ColonyShip_RawFood",
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "DryMeat",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Tomato",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Pumpkin",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Agave",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "CactusFruit",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "AlienShroom",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "PickledVegetables",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Berry",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Teaballs",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "OilVegetable",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "OilAnimal",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "SweetSyrup",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "DistastefulFlowers",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Slop",
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000000,
			MinAmount = 1000000,
			Resource = "Grain",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "TradeShips",
		id = "Battleship_Armory",
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Melee_LaserPike",
			weight = 100000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "HarvestingTools",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "SurvivalBackpack",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "GoodLuckCharm",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "EMUmbrella",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "RespiratorMask",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "NightGoggles",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "SignalFlare",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 5000,
			Resource = "Grenades",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Ranged_LaserBlaster",
			weight = 100000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Ranged_PulseRifle",
			weight = 100000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Ranged_RailgunSniper",
			weight = 100000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 5000,
			Resource = "Ranged_LaserBlaster_Improved",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 5000,
			Resource = "Ranged_PulseRifle_Improved",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 5000,
			Resource = "Ranged_RailgunSniper_Improved",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Armor_Hat_Synthetic",
			weight = 30000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Armor_Jacket_Synthetic",
			weight = 30000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Armor_Pants_Synthetic",
			weight = 30000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 10000,
			Resource = "Armor_Shoes_Synthetic",
			weight = 30000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 5000,
			Resource = "Armor_Hat_Carbon",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 5000,
			Resource = "Armor_Jacket_Carbon",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 5000,
			Resource = "CarbonHatPX",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 5000,
			Resource = "Armor_Pants_Carbon",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 20000,
			MinAmount = 5000,
			Resource = "Armor_Shoes_Carbon",
			weight = 20000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "MechCore",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticSpear",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticRifle",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticPistol",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticBoots",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticLegs",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticHelmet",
			weight = 15000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 3000,
			Resource = "GalacticChest",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechAnnihilator",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechSwarmer",
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechBlade",
			weight = 5000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "NanoTechKhopesh",
			weight = 3000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "PhantomRiflePX",
		}),
	}),
	PlaceObj('ModItemLootDef', {
		group = "Orbital",
		id = "x_inspired_loot",
		PlaceObj('LootEntryResource', {
			MaxAmount = 1003000,
			MinAmount = 456000,
			Resource = "ScrapMetal",
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			MaxAmount = 58000,
			MinAmount = 36000,
			Resource = "EmergencyRation",
			weight = 8000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "Ranged_CarbonCrossbow",
			weight = 4000,
		}),
	}),
	PlaceObj('ModItemFolder', {
		'name', "Overrides",
	}, {
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeGenericDebris",
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeScrapMetalResource",
				weight = 140000,
			}),
			PlaceObj('LootEntryLootDef', {
				condition = "Difficulty Easy",
				loot_def = "ScavengeCargo_Items",
				weight = 35000,
			}),
			PlaceObj('LootEntryLootDef', {
				condition = "Difficulty Medium",
				loot_def = "ScavengeCargo_Items",
				weight = 35000,
			}),
			PlaceObj('LootEntryLootDef', {
				condition = "Difficulty Hard",
				loot_def = "ScavengeCargo_Items",
				weight = 25000,
			}),
			PlaceObj('LootEntryLootDef', {
				condition = "Difficulty VeryHard",
				loot_def = "ScavengeCargo_Items",
				weight = 20000,
			}),
			PlaceObj('LootEntryLootDef', {
				condition = "Difficulty Insane",
				loot_def = "ScavengeCargo_Items",
				weight = 20000,
			}),
			PlaceObj('LootEntryLootDef', {
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				loot_def = "ScavengeCargo_Items",
				weight = 20000,
			}),
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeMetalAlloysResources",
				weight = 18000,
			}),
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeMedKitResources",
				weight = 25000,
			}),
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeFuelResource",
				weight = 25000,
			}),
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeRationsResources",
				weight = 10000,
			}),
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeSyntheticTextilesResources",
				weight = 22000,
			}),
			PlaceObj('LootEntryLootDef', {
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				loot_def = "ScavengeCargo_Items",
				weight = 5000,
			}),
			PlaceObj('LootEntryLootDef', {
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				loot_def = "ScavengeCargo_Items",
				weight = 5000,
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeCargo",
			PlaceObj('LootEntryLootDef', {
				loot_def = "ScavengeScrapMetalResource",
				weight = 50000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 2000000,
				condition = "Difficulty Easy",
				loot_def = "ScavengeCargo_Resources",
				weight = 60000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1800000,
				condition = "Difficulty Medium",
				loot_def = "ScavengeCargo_Resources",
				weight = 55000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1600000,
				condition = "Difficulty Hard",
				loot_def = "ScavengeCargo_Resources",
				weight = 45000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1400000,
				condition = "Difficulty VeryHard",
				loot_def = "ScavengeCargo_Resources",
				weight = 40000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1200000,
				condition = "Difficulty Insane",
				loot_def = "ScavengeCargo_Resources",
				weight = 30000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 2000000,
				condition = "Difficulty Easy",
				loot_def = "ScavengeCargo_Items",
				weight = 50000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1800000,
				condition = "Difficulty Medium",
				loot_def = "ScavengeCargo_Items",
				weight = 40000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1500000,
				condition = "Difficulty Hard",
				loot_def = "ScavengeCargo_Items",
				weight = 35000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 1300000,
				condition = "Difficulty VeryHard",
				loot_def = "ScavengeCargo_Items",
				weight = 25000,
			}),
			PlaceObj('LootEntryLootDef', {
				condition = "Difficulty Insane",
				loot_def = "ScavengeCargo_Items",
				weight = 20000,
			}),
			PlaceObj('LootEntryLootDef', {
				amount_modifier = 800000,
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				loot_def = "ScavengeCargo_Items",
				weight = 20000,
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeClothResources",
			PlaceObj('LootEntryResource', {
				MaxAmount = 120000,
				MinAmount = 60000,
				Resource = "Cotton",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 100000,
				MinAmount = 50000,
				Resource = "Cotton",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 80000,
				MinAmount = 40000,
				Resource = "Cotton",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 40000,
				MinAmount = 20000,
				Resource = "Cotton",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 10000,
				Resource = "Cotton",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 5000,
				Resource = "Cotton",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 5000,
				Resource = "Cotton",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 5000,
				Resource = "Cotton",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeElectronicsResource",
			loot = "first",
			PlaceObj('LootEntryResource', {
				MaxAmount = 12000,
				MinAmount = 6000,
				Resource = "ScrapElectronics",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 5000,
				Resource = "ScrapElectronics",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 9000,
				MinAmount = 4000,
				Resource = "ScrapElectronics",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 8000,
				MinAmount = 4000,
				Resource = "ScrapElectronics",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 6000,
				MinAmount = 3000,
				Resource = "ScrapElectronics",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 4000,
				MinAmount = 2000,
				Resource = "ScrapElectronics",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 4000,
				Resource = "ScrapElectronics",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 4000,
				Resource = "ScrapElectronics",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeFuelResource",
			PlaceObj('LootEntryResource', {
				MaxAmount = 140000,
				MinAmount = 80000,
				Resource = "LiquidFuel",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 120000,
				MinAmount = 70000,
				Resource = "LiquidFuel",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 90000,
				MinAmount = 50000,
				Resource = "LiquidFuel",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 80000,
				MinAmount = 40000,
				Resource = "LiquidFuel",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 70000,
				MinAmount = 30000,
				Resource = "LiquidFuel",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 60000,
				MinAmount = 20000,
				Resource = "LiquidFuel",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 50000,
				MinAmount = 20000,
				Resource = "LiquidFuel",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 50000,
				MinAmount = 20000,
				Resource = "LiquidFuel",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeMedKitResources",
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "MedKit",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 10000,
				Resource = "MedKit",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 10000,
				Resource = "MedKit",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 5000,
				Resource = "MedKit",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 8000,
				MinAmount = 3000,
				Resource = "MedKit",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 6000,
				Resource = "MedKit",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 4000,
				Resource = "MedKit",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 4000,
				Resource = "MedKit",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeMetalAlloysResources",
			PlaceObj('LootEntryResource', {
				MaxAmount = 35000,
				MinAmount = 25000,
				Resource = "Metal",
				condition = "Difficulty Easy",
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "Metal",
				condition = "Difficulty Medium",
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 15000,
				Resource = "Metal",
				condition = "Difficulty Hard",
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 10000,
				Resource = "Metal",
				condition = "Difficulty VeryHard",
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 10000,
				Resource = "Metal",
				condition = "Difficulty Insane",
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 7000,
				Resource = "Metal",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 5000,
				Resource = "Metal",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				weight = 100000,
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 5000,
				Resource = "Metal",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
				weight = 100000,
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeRationsResources",
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "EmergencyRation",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 10000,
				Resource = "EmergencyRation",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 10000,
				Resource = "EmergencyRation",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 10000,
				Resource = "EmergencyRation",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 6000,
				Resource = "EmergencyRation",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 6000,
				MinAmount = 4000,
				Resource = "EmergencyRation",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 6000,
				Resource = "EmergencyRation",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 10000,
				MinAmount = 6000,
				Resource = "EmergencyRation",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeScrapMetalResource",
			loot = "first",
			PlaceObj('LootEntryResource', {
				MaxAmount = 70000,
				MinAmount = 35000,
				Resource = "ScrapMetal",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 60000,
				MinAmount = 30000,
				Resource = "ScrapMetal",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 50000,
				MinAmount = 25000,
				Resource = "ScrapMetal",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 40000,
				MinAmount = 25000,
				Resource = "ScrapMetal",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "ScrapMetal",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 20000,
				MinAmount = 10000,
				Resource = "ScrapMetal",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 10000,
				Resource = "ScrapMetal",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 10000,
				Resource = "ScrapMetal",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		PlaceObj('ModItemLootDef', {
			group = "Scavenging",
			id = "ScavengeSyntheticTextilesResources",
			PlaceObj('LootEntryResource', {
				MaxAmount = 70000,
				MinAmount = 50000,
				Resource = "Synthetics",
				condition = "Difficulty Easy",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 50000,
				MinAmount = 30000,
				Resource = "Synthetics",
				condition = "Difficulty Medium",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 40000,
				MinAmount = 20000,
				Resource = "Synthetics",
				condition = "Difficulty Hard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "Synthetics",
				condition = "Difficulty VeryHard",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "Synthetics",
				condition = "Difficulty Insane",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 30000,
				MinAmount = 20000,
				Resource = "Synthetics",
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 10000,
				Resource = "Synthetics",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
			PlaceObj('LootEntryResource', {
				MaxAmount = 15000,
				MinAmount = 10000,
				Resource = "Synthetics",
				game_conditions = {
					PlaceObj('CheckDifficulty', {
						Difficulty = "Easy",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Hard",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Insane",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "Medium",
						Negate = true,
					}),
					PlaceObj('CheckDifficulty', {
						Difficulty = "VeryHard",
						Negate = true,
					}),
				},
			}),
		}),
		}),
	}),
PlaceObj('ModItemPlantDef', {
	AcceptableTemperatureMin = -30,
	CameraMakesTransparent = false,
	CanFarm = true,
	ChangeClay = 5,
	ChangeSand = 5,
	ChangeSilt = 5,
	ChangeSoil = true,
	ChangeSoilRange = 2400,
	ChangeSoilTiles = 15,
	ColSpan = 2,
	ColorDecay = 4281802517,
	ColorEarlyFall = 4278237183,
	ColorFruits = 4278252543,
	ColorGrowth = 4278252543,
	ColorLateFall = 4278237183,
	ColorMature = 4278252543,
	ColorSpring = 4278237183,
	ColorSummer = 4278237183,
	ColorWinter = 4278237183,
	DecayTime = 4800000,
	Description = T(522139059598, --[[ModItemPlantDef CyberCrystals Description]] "Grow a single Cyber Crystal. These crystals are found in the center of a alien plant. Grows best in sand soil while gradually turning the sand into loam. They are the main ingredient of cyber technology and is classed as contraband by the Galactic Authorities."),
	DisplayName = T(990459151628, --[[ModItemPlantDef CyberCrystals DisplayName]] "Cyber Crystals"),
	DisplayNamePl = T(760671687095, --[[ModItemPlantDef CyberCrystals DisplayNamePl]] "Cyber Crystals"),
	FertilizeResource = "EnergyCrystals",
	FertilizerDuration = 14400000,
	FertilizerGrowth = 80,
	FieldMaxSizeX = 40,
	FieldMaxSizeY = 40,
	GrowthEntity1 = "SynthPlant_01",
	GrowthEntity2 = "SynthPlant_01",
	GrowthThreshold1 = 50,
	GrowthTime = 46080000,
	HarvestFailureChance = 50,
	HarvestMaxSkillLevel = 7,
	HarvestMinSkillLevel = 5,
	HarvestResources = {
		PlaceObj('ResAmount', {
			'resource', "CyberCrystal",
		}),
	},
	HydroponicGrowth = 100,
	InfopanelIcon = "CriminalActivity/CyberCrystalFarm.png",
	LifeTime = 230400000,
	MatureEntity = "SynthPlant_Fruits_01",
	MaxHydroponicScale = 30,
	ObservationDistanceMax = 1500,
	ObservationDistanceMin = 500,
	PatchHarvestTime = 20000,
	PatchPlantTime = 4000,
	PlantFailureChance = 50,
	PlantMaxSkillLevel = 8,
	PlantMinSkillLevel = 6,
	RespawnTime = 15360000,
	RowSpan = 2,
	SeedTime = 83520000,
	SelectionRadius = 1250,
	SoilFitClay = 75,
	SoilFitLoam = 40,
	SoilFitSand = 100,
	SoilFitSilt = 50,
	SoilRange = 1600,
	TimeToCut = 20000,
	TimeToFruits = 7680000,
	TimeWithFruits = 11520000,
	UseRadialApproach = false,
	group = "FarmCropsOther",
	id = "CyberCrystals",
}),
PlaceObj('ModItemFolder', {
	'name', "Crafting",
}, {
	PlaceObj('ModItemDeviceInterface', {
		id = "GalacticFurnace",
		prg_name = "MeltMetal",
		spot_name = "Electricfurnaceinterface",
	}),
	PlaceObj('ModItemDeviceInterface', {
		SortKey = 1020,
		id = "Hacking",
		prg_name = "BasicSoldering",
		spot_name = "Basicsolderinginterface",
	}),
	PlaceObj('ModItemDeviceInterface', {
		SortKey = 1022,
		id = "Biology",
		prg_name = "BasicSoldering",
		spot_name = "Basicsolderinginterface",
	}),
	PlaceObj('ModItemDeviceInterface', {
		SortKey = 5000,
		id = "RefineryInterface",
		prg_name = "Distillation",
		spot_name = "Distilleryinterface",
	}),
	PlaceObj('ModItemDeviceInterface', {
		SortKey = 2000,
		id = "GalacticPrinter",
		prg_name = "BasicCrafting",
		spot_name = "Basiccraftinginterface",
	}),
	PlaceObj('ModItemDeviceInterface', {
		SortKey = 1021,
		id = "Trading",
		prg_name = "BasicSoldering",
		spot_name = "Basicsolderinginterface",
	}),
	PlaceObj('ModItemDeviceInterface', {
		SortKey = 90089,
		id = "RepairPX",
		prg_name = "BasicSoldering",
		spot_name = "Basicsolderinginterface",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(377103037556, --[[ModItemRecipe Sell_Biology_components_BM Description]] "Sell some Organs for Basic Components with the Rebellion."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(412693939635, --[[ModItemRecipe Sell_Biology_components_BM DisplayName]] "Electronic Components Box <color px_purple>++Black Market</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/MatterResearch.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 10000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 40000,
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "MatterGenerator",
				'amount', 3000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 14,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_components_BM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 280000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(165675881185, --[[ModItemRecipe TradeMechCoreBM Description]] "Use the trading shuttle to trade 'Blueprints' for a 'Mech Core'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(991186968591, --[[ModItemRecipe TradeMechCoreBM DisplayName]] "Mech Core"),
		GuaranteedSuccessLevel = 10,
		Icon = "UI/Icons/Items/mech_core",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 40000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvancedFurniture",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "MechCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Workbench",
		id = "TradeMechCoreBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity_2",
		Description = T(355527212324, --[[ModItemRecipe MissileLauncher Description]] "Sell some 'Box of Glutch Organs' for a 'Missile Launcher'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(142937296773, --[[ModItemRecipe MissileLauncher DisplayName]] "Missile Launcher"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/MissileLauncher.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 45000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "MissileLauncher",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 17,
		Unfinished = true,
		group = "Workbench",
		id = "MissileLauncher",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "SewBoots",
		Description = T(671173534380, --[[ModItemRecipe AlienBoots Description]] "Sintis grown over a Carbon frame, buffered by Alien Tech. Extremely <color TechSubtitleBlue>Pierce</color> resistant."),
		DestroyOnFail = false,
		DisplayName = T(842338757088, --[[ModItemRecipe AlienBoots DisplayName]] "Living Cleats"),
		DisplayNameMenu = T(739568162581, --[[ModItemRecipe AlienBoots DisplayNameMenu]] "Living Cleats"),
		FailChance = 40,
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienBoots.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 500000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Sintis",
				'amount', 50000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBoots",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 6803,
		Unfinished = true,
		group = "Clothing",
		id = "AlienBoots",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(769311517408, --[[ModItemRecipe Sell_Biology_Ration_Colony Description]] "Sell some Organs for Rations with another Colony"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(905217575599, --[[ModItemRecipe Sell_Biology_Ration_Colony DisplayName]] "Ration Crate <color px_purple>++Galactican Empire</color>"),
		GuaranteedSuccessLevel = 2,
		HasIntermediateResult = false,
		Icon = "Biologist/ScarabBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "EmergencyRation",
				'amount', 30000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade_gal",
			}),
		},
		ProficiencyLevel = 2,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_Ration_Colony",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 400000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Fuse",
		Description = T(840172078215, --[[ModItemRecipe AlienCrystals Description]] "<style red>40% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(823561057980, --[[ModItemRecipe AlienCrystals DisplayName]] "Alien Crystal (Cyber Base)"),
		DisplayNameMenu = T(188961546701, --[[ModItemRecipe AlienCrystals DisplayNameMenu]] "Alien Crystal (Cyber Base)"),
		FailChance = 40,
		GuaranteedSuccessLevel = 8,
		Icon = "CriminalActivity/AlienCrystal.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "livingMetal",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCrystals",
			}),
			PlaceObj('CheckTech', {
				Tech = "CyberCore",
			}),
			PlaceObj('CheckTech', {
				Tech = "PowerCells",
			}),
			PlaceObj('CheckTech', {
				Tech = "CPUCores",
			}),
			PlaceObj('CheckTech', {
				Tech = "CarbonPrinting",
			}),
			PlaceObj('CheckTech', {
				Tech = "AlienCrystal",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 1006,
		Unfinished = true,
		group = "Workbench",
		id = "AlienCrystals",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 400000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Fuse",
		Description = T(436861781944, --[[ModItemRecipe AlienCrystals_organs Description]] "<style red>40% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(364783291773, --[[ModItemRecipe AlienCrystals_organs DisplayName]] "Alien Crystal"),
		DisplayNameMenu = T(675028458308, --[[ModItemRecipe AlienCrystals_organs DisplayNameMenu]] "Alien Crystal"),
		FailChance = 40,
		GuaranteedSuccessLevel = 8,
		Icon = "CriminalActivity/AlienCrystal.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "livingMetal",
				'amount', 75000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "PowerCells",
			}),
			PlaceObj('CheckTech', {
				Tech = "CPUCores",
			}),
			PlaceObj('CheckTech', {
				Tech = "CarbonPrinting",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 1006,
		Unfinished = true,
		group = "Workbench",
		id = "AlienCrystals_organs",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "illegalComponents",
		Description = T(482669502548, --[[ModItemRecipe HackingDevice Description]] "<style red>30% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure. Not necessarily illegal to own or create.... but VERY close to being illegal."),
		DestroyOnFail = false,
		DisplayName = T(986279040015, --[[ModItemRecipe HackingDevice DisplayName]] "Hacking Device"),
		DisplayNameMenu = T(819760128966, --[[ModItemRecipe HackingDevice DisplayNameMenu]] "Hacking Device"),
		FailChance = 30,
		GuaranteedSuccessLevel = 7,
		Icon = "CriminalActivity/HackingTool.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "HackingDevice",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "HackingDevice",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 912,
		Unfinished = true,
		group = "Workbench",
		id = "HackingDevice",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "BlackMarket",
		Description = T(108883458079, --[[ModItemRecipe TradeAlienCrystalBM Description]] "Use the trading shuttle to trade 'Top Secret Fragments' for 'Alien Crystals'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(433363259706, --[[ModItemRecipe TradeAlienCrystalBM DisplayName]] "Alien Crystals"),
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienCrystal.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 50000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketAlienTech",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 7,
		Unfinished = true,
		group = "Workbench",
		id = "TradeAlienCrystalBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ApplyResRequirements = false,
		BuildCategory = "CraftWeapons",
		Description = T(576751538219, --[[ModItemRecipe CyberPlasmaRifle Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 80000,
		DisplayName = T(506788149451, --[[ModItemRecipe CyberPlasmaRifle DisplayName]] "Cyber Plasma Rifle"),
		DisplayNameMenu = T(314438132957, --[[ModItemRecipe CyberPlasmaRifle DisplayNameMenu]] "Cyber Plasma Rifle"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberPlasmaRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "HackingDevice",
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 80000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberPlasmaRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1023,
		Unfinished = true,
		group = "Workbench",
		id = "CyberPlasmaRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "BlackMarket",
		Description = T(714297835313, --[[ModItemRecipe TradePacifierSniperRifle Description]] "0 Damage, Harmless to animals, has a 60-80% chance to inflict a Pacify effect on target."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(841208654069, --[[ModItemRecipe TradePacifierSniperRifle DisplayName]] "Pacifier Sniper Rifle"),
		DisplayNameMenu = T(468044081632, --[[ModItemRecipe TradePacifierSniperRifle DisplayNameMenu]] "Pacifier Sniper Rifle"),
		GuaranteedSuccessLevel = 6,
		Icon = "Trade/PacifierSniper.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 30000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PacifierSniper",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketWeaponry",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 2445,
		Unfinished = true,
		group = "Workbench",
		id = "TradePacifierSniperRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(662288721209, --[[ModItemRecipe TradeGalacticPistol Description]] "Use the trading shuttle to trade resources for a 'Galactic Pistol'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(447089038861, --[[ModItemRecipe TradeGalacticPistol DisplayName]] "Galactic Pistol"),
		GuaranteedSuccessLevel = 7,
		Icon = "Trade/GalacticPistol.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
			PlaceObj('ResAmount', {
				'resource', "Ranged_LaserBlaster",
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 30000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticPistol",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticWeaponry",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Workbench",
		id = "TradeGalacticPistol",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(773159976486, --[[ModItemRecipe Sell_Biology_GalWeap_empire Description]] "Sell some Organs for Galactic Weapons with Galactic Research Teams"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(736089382072, --[[ModItemRecipe Sell_Biology_GalWeap_empire DisplayName]] "Galactic Weapons <color px_purple>++Galactican Empire</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/GalacticSpearResearch.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticPistol",
			}),
			PlaceObj('ResAmount', {
				'resource', "GalacticRifle",
			}),
			PlaceObj('ResAmount', {
				'resource', "GalacticSpear",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade_gal",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 14,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_GalWeap_empire",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(880999093691, --[[ModItemRecipe Sell_Biology_PaciSnipe_Empire Description]] "Sell some Organs for Pacifier Sniper Rifle with Galactican Research Teams"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(215577979295, --[[ModItemRecipe Sell_Biology_PaciSnipe_Empire DisplayName]] "Pacifier Sniper Rifle <color px_purple>++Galactican Empire</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/PacifierSniper.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 25000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PacifierSniper",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade_gal",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 19,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_PaciSnipe_Empire",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterComponents",
		Description = T(625076590426, --[[ModItemRecipe PrintElectronicsPX Description]] "Print scrap electronics"),
		DeviceWorkTime = 40000,
		DisplayName = T(908635765961, --[[ModItemRecipe PrintElectronicsPX DisplayName]] "Scrap Electronics"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/electronic_components",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Silicon",
				'amount', 8000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 8000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Printer",
		id = "PrintElectronicsPX",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Refinery",
		Description = T(110777248187, --[[ModItemRecipe RefinarySynthetics Description]] "Create 'Synthetics' from 'Insect Meat'."),
		DeviceWorkTime = 80000,
		DisplayName = T(820975096922, --[[ModItemRecipe RefinarySynthetics DisplayName]] "Insect Meat -> Synthetics"),
		DisplayNameMenu = T(178628552450, --[[ModItemRecipe RefinarySynthetics DisplayNameMenu]] "Insect Meat -> Synthetics"),
		HasIntermediateResult = false,
		Icon = "General/ChitinSynthetics.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeatInsect",
				'amount', 30000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Synthetics",
				'amount', 10000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RefineryInterface",
		},
		SortKey = 4,
		group = "Industrial_Generator",
		id = "RefinarySynthetics",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Boxing",
		Description = T(368806149728, --[[ModItemRecipe OrganBox Description]] "<style red>25% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 0,
		DisplayName = T(618090313699, --[[ModItemRecipe OrganBox DisplayName]] "Box of Organs"),
		FailChance = 25,
		GuaranteedSuccessLevel = 8,
		Icon = "Biologist/SmallBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RaptorHeart",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "RaptorLung",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScissorhandsLungs",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "JunoHeart",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScarabHeart",
			}),
			PlaceObj('ResAmount', {
				'resource', "ShriekersStomach",
				'amount', 3000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Workbench",
		id = "OrganBox",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Boxing",
		Description = T(990521268741, --[[ModItemRecipe OrganBox_temp Description]] "Create a self-sustaining storage unit, and fill it with organs."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(673295090019, --[[ModItemRecipe OrganBox_temp DisplayName]] "Box of Organs"),
		FailChance = 10,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/SmallBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "base_organs",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Workbench",
		id = "OrganBox_temp",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Boxing",
		Description = T(749755851386, --[[ModItemRecipe OrganBox_bio Description]] "I heard you like organs. So now you can use your organs to hold your organs!"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(317672477107, --[[ModItemRecipe OrganBox_bio DisplayName]] "BioBox of Organs"),
		FailChance = 10,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/SmallBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "base_organs",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Megdeb",
			}),
			PlaceObj('ResAmount', {
				'resource', "Bitherm",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Workbench",
		id = "OrganBox_bio",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Boxing",
		Description = T(946358076279, --[[ModItemRecipe OrganBox_mix Description]] "Using Carbon Nanotubes, we can use less overall organs. As long as one of them is Megdeb to grow around the tubes."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(296849107763, --[[ModItemRecipe OrganBox_mix DisplayName]] "Nanotube Box of Organs"),
		FailChance = 10,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/SmallBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "base_organs",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Megdeb",
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 2000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CarbonFortifications",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Workbench",
		id = "OrganBox_mix",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterMaterials",
		Description = T(949096258103, --[[ModItemRecipe PrintSiliconPX Description]] "Generate silicon."),
		DeviceWorkTime = 480000,
		DisplayName = T(188431947245, --[[ModItemRecipe PrintSiliconPX DisplayName]] "Silicon"),
		Icon = "UI/Icons/Items/silicon",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Silicon",
				'amount', 60000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Printer",
		id = "PrintSiliconPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ApplyResRequirements = false,
		BuildCategory = "CraftWeapons",
		Description = T(419177252267, --[[ModItemRecipe CyberSniperRifle Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 80000,
		DisplayName = T(999037539594, --[[ModItemRecipe CyberSniperRifle DisplayName]] "Cyber Sniper Rifle"),
		DisplayNameMenu = T(441819249399, --[[ModItemRecipe CyberSniperRifle DisplayNameMenu]] "Cyber Sniper Rifle"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberSniperRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 80000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "HackingDevice",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberSniperRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1023,
		Unfinished = true,
		group = "Workbench",
		id = "CyberSniperRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 280000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(233392587946, --[[ModItemRecipe TradeBricks Description]] "Use the trading shuttle to collect bricks from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(249556867421, --[[ModItemRecipe TradeBricks DisplayName]] "Bricks"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/brick",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Brick",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BrickSupply",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 21,
		Unfinished = true,
		group = "Supply",
		id = "TradeBricks",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(919333891870, --[[ModItemRecipe TradeBricks_fast Description]] "Use the trading shuttle to collect bricks from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(115035163786, --[[ModItemRecipe TradeBricks_fast DisplayName]] "Bricks+"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/brick",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Brick",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BrickSupply",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 11,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeBricks_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 360000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(959701327503, --[[ModItemRecipe TradeCPUCore Description]] "Use the trading shuttle to trade 'Ore & Sillicon' for 'CPU cores'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(164133471568, --[[ModItemRecipe TradeCPUCore DisplayName]] "CPU Cores"),
		GuaranteedSuccessLevel = 10,
		Icon = "UI/Icons/Items/cpu_cores",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Silicon",
				'amount', 12000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_cheapEle",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCPUCore",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 360000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(519871391725, --[[ModItemRecipe TradeMechCore Description]] "Use the trading shuttle to trade for a 'Mech Core'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(626959293665, --[[ModItemRecipe TradeMechCore DisplayName]] "Mech Core"),
		GuaranteedSuccessLevel = 10,
		Icon = "UI/Icons/Items/mech_core",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 2000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "MechCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_cheapEle",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Workbench",
		id = "TradeMechCore",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterFoods",
		Description = T(277969772557, --[[ModItemRecipe PrintHumanMeatPX Description]] "Use carbon-dense liquid fuel to print human meat."),
		DeviceWorkTime = 40000,
		DisplayName = T(299508969877, --[[ModItemRecipe PrintHumanMeatPX DisplayName]] "Raw Human Meat"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/raw_meat_human",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeatHuman",
				'amount', 30000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Printer",
		id = "PrintHumanMeatPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(689963937715, --[[ModItemRecipe TradeOre Description]] "Use the trading shuttle to collect ore from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(246389465243, --[[ModItemRecipe TradeOre DisplayName]] "Ore"),
		FailChance = 40,
		GuaranteedSuccessLevel = 6,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/ore",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ore",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 14,
		Unfinished = true,
		group = "Supply",
		id = "TradeOre",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(451764902841, --[[ModItemRecipe TradeOre_fast Description]] "Use the trading shuttle to collect ore from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(432206832361, --[[ModItemRecipe TradeOre_fast DisplayName]] "Ore+"),
		FailChance = 40,
		GuaranteedSuccessLevel = 6,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/ore",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ore",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeOre_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		BuildCategory = "CraftWeapons",
		Description = T(855388811841, --[[ModItemRecipe PoisonBowPX Description]] "Craft a crude poison bow with sticks, organs and fabric tendon."),
		DestroyOnFail = false,
		DisplayName = T(765041172371, --[[ModItemRecipe PoisonBowPX DisplayName]] "Poison Bow"),
		FailChance = 25,
		GuaranteedSuccessLevel = 4,
		Icon = "General/PoisonBow.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Sticks",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Cotton",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "FuelManure",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PoisonBowPX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvancedWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 101,
		Unfinished = true,
		group = "Weapons",
		id = "PoisonBowPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		BuildCategory = "CraftWeapons",
		Description = T(255417531703, --[[ModItemRecipe PoisonSpear Description]] "Craft a crude poison bow with sticks, organs and fabric tendon."),
		DestroyOnFail = false,
		DisplayName = T(148916858239, --[[ModItemRecipe PoisonSpear DisplayName]] "Poison Bow"),
		FailChance = 25,
		GuaranteedSuccessLevel = 4,
		Icon = "General/PoisonBow.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Wood",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "FuelManure",
				'amount', 5000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PoisonBowPX",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 101,
		Unfinished = true,
		group = "Weapons",
		id = "PoisonSpear",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "illegalComponents",
		Description = T(605712874275, --[[ModItemRecipe CyberCrystal Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(452357935403, --[[ModItemRecipe CyberCrystal DisplayName]] "Cyber Crystal"),
		DisplayNameMenu = T(666820891409, --[[ModItemRecipe CyberCrystal DisplayNameMenu]] "Cyber Crystal"),
		FailChance = 20,
		GuaranteedSuccessLevel = 7,
		Icon = "CriminalActivity/CyberCrystal.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCrystals",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1001,
		Unfinished = true,
		group = "Workbench",
		id = "CyberCrystal",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(336960301491, --[[ModItemRecipe TradeCyberCrystals Description]] "Use Gale's contact to collect Cyber Crystals from an 'Unknown' source."),
		DeviceWorkTime = 0,
		DisplayName = T(614774910340, --[[ModItemRecipe TradeCyberCrystals DisplayName]] "Cyber Crystals"),
		DisplayNameMenu = T(963037631156, --[[ModItemRecipe TradeCyberCrystals DisplayNameMenu]] "Cyber Crystals"),
		FailChance = 33,
		GuaranteedSuccessLevel = 10,
		HasIntermediateResult = false,
		Icon = "CriminalActivity/CyberCrystal.png",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCrystalSupply",
			}),
		},
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCyberCrystals",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "illegalComponents",
		Description = T(492679002642, --[[ModItemRecipe CyberProcessor Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 80000,
		DisplayName = T(521869174848, --[[ModItemRecipe CyberProcessor DisplayName]] "Cyber Processor"),
		DisplayNameMenu = T(803163739737, --[[ModItemRecipe CyberProcessor DisplayNameMenu]] "Cyber Processor"),
		FailChance = 20,
		GuaranteedSuccessLevel = 7,
		Icon = "CriminalActivity/CyberProcessor.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberProcessor",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberProcessor",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1002,
		Unfinished = true,
		group = "Workbench",
		id = "CyberProcessor",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "BakeInFurnace",
		Description = T(118286088104, --[[ModItemRecipe BricksGalacticFurnace Description]] "Bake hay and clay-rich soil into bricks."),
		DeviceWorkTime = 240000,
		DisplayName = T(291908238100, --[[ModItemRecipe BricksGalacticFurnace DisplayName]] "Bricks"),
		Icon = "UI/Icons/Items/brick",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Hay",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Brick",
				'amount', 40000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticFurnace",
		},
		id = "BricksGalacticFurnace",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Sell",
		Description = T(339536965946, --[[ModItemRecipe SELLTradingSchematicMeat Description]] "Use the trading shuttle to sell ''Meat'' for ''Trading Schematics''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(196707504992, --[[ModItemRecipe SELLTradingSchematicMeat DisplayName]] "Meats"),
		GuaranteedSuccessLevel = 8,
		Icon = "UI/Icons/Items/raw_meat",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeats",
				'amount', 100000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradingSchematic",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 6,
		Unfinished = true,
		group = "Sell",
		id = "SELLTradingSchematicMeat",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Sell",
		Description = T(762040425589, --[[ModItemRecipe SELLTradingSchematicMeat_fast Description]] "Use the trading shuttle to sell ''Meat'' for ''Trading Schematics''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(105881098426, --[[ModItemRecipe SELLTradingSchematicMeat_fast DisplayName]] "Meats+"),
		GuaranteedSuccessLevel = 8,
		Icon = "UI/Icons/Items/raw_meat",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeats",
				'amount', 100000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradingSchematic",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 6,
		Unfinished = true,
		group = "Sell_fast",
		id = "SELLTradingSchematicMeat_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Pills",
		Description = T(460309590606, --[[ModItemRecipe Adricon_Shot Description]] "Eating nearly pure crushed Adricon gives attack and movement speed. For all your killing needs."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(139461277771, --[[ModItemRecipe Adricon_Shot DisplayName]] "Juno Adrenaline Shot"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/JunoAdrenaline.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Adricon",
				'amount', 20000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NaniteShot",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Workbench",
		id = "Adricon_Shot",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Cyber",
		Description = T(135712037311, --[[ModItemRecipe TradeCyberCoreBM Description]] "Use the trading shuttle to trade 'Top Secret Fragments' for a 'Cyber Core'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(586302648865, --[[ModItemRecipe TradeCyberCoreBM DisplayName]] "Cyber Core"),
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/CyberCore.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 45000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketCyberTech",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 6,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCyberCoreBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 480000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "illegalComponents",
		Description = T(981144590637, --[[ModItemRecipe CyberCore Description]] "<style red>30% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 80000,
		DisplayName = T(868938130656, --[[ModItemRecipe CyberCore DisplayName]] "Cyber Core"),
		DisplayNameMenu = T(212938705172, --[[ModItemRecipe CyberCore DisplayNameMenu]] "Cyber Core"),
		FailChance = 30,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberCore.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberProcessor",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 100000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCore",
			}),
		},
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1003,
		Unfinished = true,
		group = "Workbench",
		id = "CyberCore",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterComponents",
		Description = T(165224154637, --[[ModItemRecipe PrintMechCore Description]] "Print mech cores from power cells."),
		DeviceWorkTime = 480000,
		DisplayName = T(377393516081, --[[ModItemRecipe PrintMechCore DisplayName]] "Mech Core"),
		FailChance = 15,
		Icon = "UI/Icons/Items/mech_core",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 5000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "MechCorePrint",
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "MechCore",
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Printer",
		id = "PrintMechCore",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(235546635432, --[[ModItemRecipe Sell_Biology_ToxicSniper_BM Description]] "Sell some un-packaged Organs for a 'Toxic Sniper Rifle' with an independent Scientist"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(770704897062, --[[ModItemRecipe Sell_Biology_ToxicSniper_BM DisplayName]] "Toxic Sniper Rifle <color px_purple>++Black Market</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/BMSniper.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "livingMetal",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
				'amount', 35000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper",
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ToxicSniperRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 18,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_ToxicSniper_BM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 480000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "Cyber",
		Description = T(891285472231, --[[ModItemRecipe CyberHelmet Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DisplayName = T(986409782491, --[[ModItemRecipe CyberHelmet DisplayName]] "Cyber Helmet"),
		DisplayNameMenu = T(538863741809, --[[ModItemRecipe CyberHelmet DisplayNameMenu]] "Cyber Helmet"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberHelmet.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 40000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberHelmet",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberArmour",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 4000,
		Unfinished = true,
		group = "Clothing",
		id = "CyberHelmet",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(885791471062, --[[ModItemRecipe TradeStone Description]] "Use the trading shuttle to collect stone from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(129966130035, --[[ModItemRecipe TradeStone DisplayName]] "Stone"),
		FailChance = 20,
		GuaranteedSuccessLevel = 4,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/stone_slab",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Stone",
				'amount', 20000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 0,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Supply",
		id = "TradeStone",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(133256069473, --[[ModItemRecipe TradeStone_fast Description]] "Use the trading shuttle to collect stone from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(432652754943, --[[ModItemRecipe TradeStone_fast DisplayName]] "Stone+"),
		FailChance = 20,
		GuaranteedSuccessLevel = 4,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/stone_slab",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Stone",
				'amount', 20000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 0,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeStone_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(230865148600, --[[ModItemRecipe TradeGalacticRifle Description]] "Use the trading shuttle to trade resources for a 'Galactic Rifle'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(771445161246, --[[ModItemRecipe TradeGalacticRifle DisplayName]] "Galactic Rifle"),
		GuaranteedSuccessLevel = 7,
		Icon = "Trade/GalacticRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticWeaponry",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Workbench",
		id = "TradeGalacticRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity_2",
		Description = T(137659648487, --[[ModItemRecipe TradeToxicSniperBM Description]] "6 Second Reload Speed, medium damage and high accuracy. High chance to inflict 'Poison' and spread into a 1 meter range of target."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(995432099436, --[[ModItemRecipe TradeToxicSniperBM DisplayName]] "Toxic Sniper Rifle"),
		DisplayNameMenu = T(120431910889, --[[ModItemRecipe TradeToxicSniperBM DisplayNameMenu]] "Toxic Sniper Rifle"),
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/BMSniper.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 75000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ToxicSniperRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketWeaponry",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 2446,
		Unfinished = true,
		group = "Workbench",
		id = "TradeToxicSniperBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Hacking",
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity",
		Description = T(703412045737, --[[ModItemRecipe Blueprint Description]] "Record secrets by hacking into government software and confidential cryptic files. Use the blueprints to research better technology. <style red>(30% Fail Chance)</style>"),
		DeviceWorkTime = 0,
		DisplayName = T(999201763722, --[[ModItemRecipe Blueprint DisplayName]] "Steal Government Secrets"),
		DisplayNameMenu = T(466023903113, --[[ModItemRecipe Blueprint DisplayNameMenu]] "Steal Government Secrets"),
		FailChance = 30,
		GuaranteedSuccessLevel = 7,
		HasIntermediateResult = false,
		Icon = "CriminalActivity/Blueprint.png",
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "HackingTerminal",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 1020,
		Unfinished = true,
		group = "Workbench",
		id = "Blueprint",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "SewPants",
		Description = T(649020611476, --[[ModItemRecipe AlienLegs Description]] "Bitherm grown over a Carbon frame, buffered by Alien Tech. Extremely <color TextPositive>Energy</color> resistant."),
		DestroyOnFail = false,
		DisplayName = T(106943173637, --[[ModItemRecipe AlienLegs DisplayName]] "Mega-Insulated Pants"),
		DisplayNameMenu = T(725867143658, --[[ModItemRecipe AlienLegs DisplayNameMenu]] "Mega-Insulated Pants"),
		FailChance = 40,
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienLegs.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 500000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Bitherm",
				'amount', 50000,
			}),
		},
		MakeUntilMultiplier = 8,
		ManualWork = true,
		MinSkillLevel = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienLegs",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 6802,
		Unfinished = true,
		group = "Clothing",
		id = "AlienLegs",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterComponents",
		Description = T(207783177879, --[[ModItemRecipe PrintCPUCorePX Description]] "Print CPU Cores from Silicon and metal alloys."),
		DeviceWorkTime = 160000,
		DisplayName = T(801380581096, --[[ModItemRecipe PrintCPUCorePX DisplayName]] "CPU Cores"),
		Icon = "UI/Icons/Items/cpu_cores",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Silicon",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Printer",
		id = "PrintCPUCorePX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 280000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(641984493324, --[[ModItemRecipe TradeCPUCoreBM Description]] "Use the trading shuttle to trade 'Blueprints' for a 'CPU Core'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(377638346796, --[[ModItemRecipe TradeCPUCoreBM DisplayName]] "CPU Core"),
		GuaranteedSuccessLevel = 10,
		Icon = "UI/Icons/Items/cpu_cores",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCPUCoreBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity_2",
		Description = T(629809156562, --[[ModItemRecipe TradeCryoRifleBM Description]] "9 Second Reload Speed, low damage and accuracy. 10 degree cone, high chance to freeze enemies."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(746796049526, --[[ModItemRecipe TradeCryoRifleBM DisplayName]] "Cryo-Freeze Rifle"),
		DisplayNameMenu = T(506812249670, --[[ModItemRecipe TradeCryoRifleBM DisplayNameMenu]] "Cryo-Freeze Rifle"),
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/BMCryoRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 75000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CryoFreezeRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketWeaponry",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 2444,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCryoRifleBM",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Smelt",
		Description = T(901669719553, --[[ModItemRecipe AlloyMetalGalactic Description]] "Smelt scrap metals into refined metal alloys."),
		DeviceWorkTime = 160000,
		DisplayName = T(611555537134, --[[ModItemRecipe AlloyMetalGalactic DisplayName]] "Metal Alloys from Scrap"),
		DisplayNameMenu = T(494144392818, --[[ModItemRecipe AlloyMetalGalactic DisplayNameMenu]] "Scrap metals"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/scrap_metal",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 80000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 100000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticFurnace",
		},
		id = "AlloyMetalGalactic",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Pills",
		Description = T(808844115389, --[[ModItemRecipe NumbNervesPill Description]] "Eating crushed Megdeb, Bither, & Adricon makes your body physically more resistant. Handle more pain!"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(961488020185, --[[ModItemRecipe NumbNervesPill DisplayName]] "Numb Nerves Pill"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/TempPill.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Adricon",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Megdeb",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Bitherm",
				'amount', 5000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NumbedNerves",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Workbench",
		id = "NumbNervesPill",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 520000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "Cyber",
		Description = T(543805780824, --[[ModItemRecipe CyberLegs Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DisplayName = T(596680991481, --[[ModItemRecipe CyberLegs DisplayName]] "Cyber Leggings"),
		DisplayNameMenu = T(426662634620, --[[ModItemRecipe CyberLegs DisplayNameMenu]] "Cyber Leggings"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberLegs.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 60000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberLegs",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberArmour",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 4002,
		Unfinished = true,
		group = "Clothing",
		id = "CyberLegs",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 240000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(432896590976, --[[ModItemRecipe TradeEnergyCrystals Description]] "Use the trading shuttle to collect energy crystals from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(856100515429, --[[ModItemRecipe TradeEnergyCrystals DisplayName]] "Energy Crystals"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/energy_crystals",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 20000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "EnergyCrystalSupply",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 19,
		Unfinished = true,
		group = "Supply",
		id = "TradeEnergyCrystals",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(826292519652, --[[ModItemRecipe TradeEnergyCrystals_fast Description]] "Use the trading shuttle to collect energy crystals from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(825344308545, --[[ModItemRecipe TradeEnergyCrystals_fast DisplayName]] "Energy Crystals+"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/energy_crystals",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 20000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "EnergyCrystalSupply",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 9,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeEnergyCrystals_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 800000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "Cyber",
		Description = T(926464868444, --[[ModItemRecipe CyberChest Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DisplayName = T(513240036175, --[[ModItemRecipe CyberChest DisplayName]] "Cyber Chestpiece"),
		DisplayNameMenu = T(487012487301, --[[ModItemRecipe CyberChest DisplayNameMenu]] "Cyber Chestpiece"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberChest.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 80000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberChest",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberArmour",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 4001,
		Unfinished = true,
		group = "Clothing",
		id = "CyberChest",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "BakeInFurnace",
		Description = T(317917530992, --[[ModItemRecipe ConcreteGalacticFurnace Description]] "Bake stone into cement."),
		DeviceWorkTime = 240000,
		DisplayName = T(947915737007, --[[ModItemRecipe ConcreteGalacticFurnace DisplayName]] "Concrete"),
		Icon = "UI/Icons/Items/concrete",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Stone",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Concrete",
				'amount', 60000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticFurnace",
		},
		id = "ConcreteGalacticFurnace",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(187574362935, --[[ModItemRecipe TradeVegetables Description]] "Use the trading shuttle to collect vegetables from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(399993346766, --[[ModItemRecipe TradeVegetables DisplayName]] "Vegetables"),
		FailChance = 30,
		GuaranteedSuccessLevel = 5,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/vegetables",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Pumpkin",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "VegetableSupply",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Supply",
		id = "TradeVegetables",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(289366440482, --[[ModItemRecipe TradeVegetables_fast Description]] "Use the trading shuttle to collect vegetables from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(555424339086, --[[ModItemRecipe TradeVegetables_fast DisplayName]] "Vegetables+"),
		FailChance = 30,
		GuaranteedSuccessLevel = 5,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/vegetables",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Pumpkin",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "VegetableSupply",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeVegetables_fast",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Refinery",
		Description = T(398625073932, --[[ModItemRecipe RefinaryCloth Description]] "Create 'Cloth' from 'Hay'."),
		DeviceWorkTime = 80000,
		DisplayName = T(289457508418, --[[ModItemRecipe RefinaryCloth DisplayName]] "Hay -> Cloth"),
		DisplayNameMenu = T(999939643562, --[[ModItemRecipe RefinaryCloth DisplayNameMenu]] "Hay -> Cloth"),
		HasIntermediateResult = false,
		Icon = "General/HayCloth.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Hay",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Cotton",
				'amount', 10000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RefineryInterface",
		},
		SortKey = 3,
		group = "Industrial_Generator",
		id = "RefinaryCloth",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "SewHats",
		Description = T(452851626948, --[[ModItemRecipe AlienHelmet Description]] "Toco grown over a Carbon frame, buffered by Alien Tech. Extremely <color TextPositive>Gas</color> resistant."),
		DestroyOnFail = false,
		DisplayName = T(640288738283, --[[ModItemRecipe AlienHelmet DisplayName]] "Inoculated Helm"),
		DisplayNameMenu = T(519041201346, --[[ModItemRecipe AlienHelmet DisplayNameMenu]] "Inoculated Helm"),
		FailChance = 40,
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienHelmet.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 500000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
				'amount', 50000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienHelmet",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 6800,
		Unfinished = true,
		group = "Clothing",
		id = "AlienHelmet",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		BuildCategory = "CraftWeapons",
		Description = T(341426039998, --[[ModItemRecipe FireLongBowPX Description]] "Craft a crude fire longbow with sticks and fabric tendon."),
		DestroyOnFail = false,
		DisplayName = T(633093177105, --[[ModItemRecipe FireLongBowPX DisplayName]] "Fire LongBow"),
		FailChance = 25,
		GuaranteedSuccessLevel = 4,
		Icon = "General/FireBow.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Sticks",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "FabricsAllPlusRaw",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Oil",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "FireLongBowPX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvancedWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 100,
		Unfinished = true,
		group = "Weapons",
		id = "FireLongBowPX",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterMaterials",
		Description = T(619984982553, --[[ModItemRecipe PrintMetalAlloyPX Description]] "Generate metal alloys."),
		DeviceWorkTime = 480000,
		DisplayName = T(882591185973, --[[ModItemRecipe PrintMetalAlloyPX DisplayName]] "Metal Alloys"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/metal_ingot",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 60000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Printer",
		id = "PrintMetalAlloyPX",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterFoods",
		Description = T(511168153337, --[[ModItemRecipe PrintMeatPX Description]] "Use carbon-dense liquid fuel to print red meat tissues."),
		DeviceWorkTime = 40000,
		DisplayName = T(707663033108, --[[ModItemRecipe PrintMeatPX DisplayName]] "Raw Meat"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/raw_meat",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeat",
				'amount', 30000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Printer",
		id = "PrintMeatPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Pills",
		Description = T(440758587937, --[[ModItemRecipe NaniteShot Description]] "Eating crushed Nuedo and Adricon increases consciousness and manipulation. "),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(296971551322, --[[ModItemRecipe NaniteShot DisplayName]] "Combat Awareness"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/NaniteShot.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Adricon",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Nuedo",
				'amount', 10000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NaniteShot",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Workbench",
		id = "NaniteShot",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 160000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(449216731259, --[[ModItemRecipe TradeSilicon Description]] "Use the trading shuttle to collect silicon from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(387112497466, --[[ModItemRecipe TradeSilicon DisplayName]] "Silicon"),
		FailChance = 60,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/silicon",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Silicon",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 14,
		Unfinished = true,
		group = "Supply",
		id = "TradeSilicon",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 40000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(752305251941, --[[ModItemRecipe TradeSilicon_fast Description]] "Use the trading shuttle to collect silicon from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(128385138054, --[[ModItemRecipe TradeSilicon_fast DisplayName]] "Silicon+"),
		FailChance = 60,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/silicon",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Silicon",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeSilicon_fast",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Refinery",
		Description = T(869211305048, --[[ModItemRecipe RefinaryOil Description]] "Create 'Vegetable Oil' from 'Chewroot'."),
		DeviceWorkTime = 80000,
		DisplayName = T(221373576612, --[[ModItemRecipe RefinaryOil DisplayName]] "Chewroot -> Vegetable Oil"),
		DisplayNameMenu = T(300173488284, --[[ModItemRecipe RefinaryOil DisplayNameMenu]] "Chewroot -> Vegetable Oil"),
		HasIntermediateResult = false,
		Icon = "Trade/VegOil.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Potato",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "OilVegetable",
				'amount', 10000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RefineryInterface",
		},
		SortKey = 6,
		group = "Industrial_Generator",
		id = "RefinaryOil",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 200000,
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(901174602780, --[[ModItemRecipe TradeElectronics Description]] "Use the trading shuttle to trade 'Scrap Metal' for 'Scrap Electronics'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(814805398998, --[[ModItemRecipe TradeElectronics DisplayName]] "Scrap Electronics"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/scrap_electronics",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_cheapEle",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Workbench",
		id = "TradeElectronics",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(719127669067, --[[ModItemRecipe TradeEmgRations Description]] "Use the trading shuttle to collect emergency rations from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(654182913808, --[[ModItemRecipe TradeEmgRations DisplayName]] "Emergency Rations"),
		FailChance = 65,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/emergency_rations",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "EmergencyRation",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 15,
		Unfinished = true,
		group = "Workbench",
		id = "TradeEmgRations",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 20000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(676302087234, --[[ModItemRecipe TradeEmgRations_fast Description]] "Use the trading shuttle to collect emergency rations from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(324272998167, --[[ModItemRecipe TradeEmgRations_fast DisplayName]] "Emergency Rations+"),
		FailChance = 65,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/emergency_rations",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "EmergencyRation",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Workbench",
		id = "TradeEmgRations_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity_2",
		Description = T(833630638745, --[[ModItemRecipe TradeShockRifleBM Description]] "14 Second Reload Speed, high damage and normal accuracy. High chance to chain lightning enemies."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(398173895902, --[[ModItemRecipe TradeShockRifleBM DisplayName]] "Shock Rifle"),
		DisplayNameMenu = T(723044496476, --[[ModItemRecipe TradeShockRifleBM DisplayNameMenu]] "Shock Rifle"),
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/BMShockRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 75000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ShockRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketWeaponry",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 2445,
		Unfinished = true,
		group = "Workbench",
		id = "TradeShockRifleBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(643736809685, --[[ModItemRecipe TradeMetal Description]] "Use the trading shuttle to collect scrap metal from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(758734089143, --[[ModItemRecipe TradeMetal DisplayName]] "Scrap Metal"),
		FailChance = 40,
		GuaranteedSuccessLevel = 6,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/scrap_metal",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Supply",
		id = "TradeMetal",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(924467746096, --[[ModItemRecipe TradeMetal_fast Description]] "Use the trading shuttle to collect scrap metal from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(186343294257, --[[ModItemRecipe TradeMetal_fast DisplayName]] "Scrap Metal+"),
		FailChance = 40,
		GuaranteedSuccessLevel = 6,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/scrap_metal",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeMetal_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(653868531440, --[[ModItemRecipe Sell_Biology_GalArm_empire Description]] "Sell some 'Organs' for a 'Galactic Set'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(849127023368, --[[ModItemRecipe Sell_Biology_GalArm_empire DisplayName]] "Galactic Armor Set <color px_purple>++Galactican Empire</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/GalacticArmourRsearch.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScissorhandsBox",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticBoots",
			}),
			PlaceObj('ResAmount', {
				'resource', "GalacticChest",
			}),
			PlaceObj('ResAmount', {
				'resource', "GalacticHelmet",
			}),
			PlaceObj('ResAmount', {
				'resource', "GalacticLegs",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade_gal",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 15,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_GalArm_empire",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterFoods",
		Description = T(588029142631, --[[ModItemRecipe PrintInsectMeatPX Description]] "Use carbon-dense liquid fuel to print insect meat."),
		DeviceWorkTime = 40000,
		DisplayName = T(657761319624, --[[ModItemRecipe PrintInsectMeatPX DisplayName]] "Raw Insect Meat"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/raw_meat_insect",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeatInsect",
				'amount', 30000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Printer",
		id = "PrintInsectMeatPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Hacking",
		ActivityDuration = 160000,
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity",
		Description = T(427894404417, --[[ModItemRecipe CyberBlueprint Description]] "Hack into the most secure research facilities of the Galactical Empire! The security goes so far that the information is segmented, and requires rebuilding."),
		DeviceWorkTime = 0,
		DisplayName = T(786566276718, --[[ModItemRecipe CyberBlueprint DisplayName]] "Top Secret Research"),
		DisplayNameMenu = T(916314200273, --[[ModItemRecipe CyberBlueprint DisplayNameMenu]] "Top Secret Fragment"),
		FailChance = 30,
		GuaranteedSuccessLevel = 9,
		HasIntermediateResult = false,
		Icon = "CriminalActivity/CyberBlueprint.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 3000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "HackingTerminal",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 1021,
		Unfinished = true,
		group = "Workbench",
		id = "CyberBlueprint",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterMaterials",
		Description = T(391788685044, --[[ModItemRecipe PrintStonePX Description]] "Generate stone."),
		DeviceWorkTime = 280000,
		DisplayName = T(523658571721, --[[ModItemRecipe PrintStonePX DisplayName]] "Stone"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/stone_slab",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Stone",
				'amount', 60000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Printer",
		id = "PrintStonePX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 480000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "BlackMarket",
		Description = T(918283235825, --[[ModItemRecipe TradeAlienCoreBM Description]] "Use the trading shuttle to trade 'Alien Blueprints' for 'Alien Cores'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(846028020253, --[[ModItemRecipe TradeAlienCoreBM DisplayName]] "Alien Core"),
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienCore.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBlueprint",
				'amount', 50000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketAlienTech",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 9,
		Unfinished = true,
		group = "Workbench",
		id = "TradeAlienCoreBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1840000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "CraftWeapons",
		Description = T(320074663508, --[[ModItemRecipe AlienSniperRifle Description]] "<style red>40% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(100204446495, --[[ModItemRecipe AlienSniperRifle DisplayName]] "BioNade Launcher"),
		DisplayNameMenu = T(730420686884, --[[ModItemRecipe AlienSniperRifle DisplayNameMenu]] "Alien Sniper Rifle"),
		FailChance = 40,
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienSniperRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienProcessor",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "Megdeb",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Adricon",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienSniperRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienWeaponry",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1032,
		Unfinished = true,
		group = "Workbench",
		id = "AlienSniperRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "SewJacket",
		Description = T(297225793252, --[[ModItemRecipe AlienChest Description]] "Sintis grown over a Carbon frame, buffered by Alien Tech. Extremely <color TextButton>Blunt</color> resistant."),
		DestroyOnFail = false,
		DisplayName = T(779025208765, --[[ModItemRecipe AlienChest DisplayName]] "Blast-Resistant Chest Armor"),
		DisplayNameMenu = T(533856692357, --[[ModItemRecipe AlienChest DisplayNameMenu]] "Blast-Resistant Chest Armor"),
		FailChance = 40,
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienChest.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 500000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienChest",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 6801,
		Unfinished = true,
		group = "Clothing",
		id = "AlienChest",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Tailoring",
		ActivityDuration = 480000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "Cyber",
		Description = T(360841108443, --[[ModItemRecipe CyberBoots Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DisplayName = T(565247804858, --[[ModItemRecipe CyberBoots DisplayName]] "Cyber Boots"),
		DisplayNameMenu = T(237846387295, --[[ModItemRecipe CyberBoots DisplayNameMenu]] "Cyber Boots"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberBoots.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 40000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBoots",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberArmour",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicTailoringInterface",
		},
		SortKey = 4002,
		Unfinished = true,
		group = "Clothing",
		id = "CyberBoots",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 440000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(154633156642, --[[ModItemRecipe GalacticBoots Description]] "Use the trading shuttle to trade resources for a ''Galactic Boots''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(768390939774, --[[ModItemRecipe GalacticBoots DisplayName]] "Galactic Boots"),
		FailDecayPercent = 60,
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/GalacticBoots.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
			PlaceObj('ResAmount', {
				'resource', "Armor_Shoes_Leather",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticBoots",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 23,
		Unfinished = true,
		group = "Workbench",
		id = "GalacticBoots",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Hacking",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "CriminalActivity",
		Description = T(596371250358, --[[ModItemRecipe AlienBlueprint Description]] "A rare blueprint that has been deciphered and contains schematics of a alien technology. Has a (50%) chance of failure. Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 0,
		DisplayName = T(174855177487, --[[ModItemRecipe AlienBlueprint DisplayName]] "Alien Blueprint"),
		DisplayNameMenu = T(759235033149, --[[ModItemRecipe AlienBlueprint DisplayNameMenu]] "Alien Blueprint"),
		FailChance = 50,
		GuaranteedSuccessLevel = 10,
		HasIntermediateResult = false,
		Icon = "CriminalActivity/AlienBlueprint.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBlueprint",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 1022,
		Unfinished = true,
		group = "Workbench",
		id = "AlienBlueprint",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(545382975038, --[[ModItemRecipe Sell_Biology_Money_BM Description]] "Sell Organs for Money with Empire Oligarchs"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(700178768880, --[[ModItemRecipe Sell_Biology_Money_BM DisplayName]] "Galacticoins <color px_purple>++Black Market</color>"),
		GuaranteedSuccessLevel = 8,
		Icon = "UI/Icons/Items/money",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Money",
				'amount', 100000000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_Money_BM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(474206111539, --[[ModItemRecipe TradePowerCell Description]] "Use the trading shuttle to trade 'Energy Crystals' for 'Power Cells'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(280462706120, --[[ModItemRecipe TradePowerCell DisplayName]] "Power Cells"),
		GuaranteedSuccessLevel = 10,
		Icon = "UI/Icons/Items/power_cell",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_cheapEle",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Workbench",
		id = "TradePowerCell",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(162157546029, --[[ModItemRecipe Sell_Biology_CyberComp_BM Description]] "Sell some Organs for Cyber Components with ParaMilitary groups"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(934663937725, --[[ModItemRecipe Sell_Biology_CyberComp_BM DisplayName]] "Cyber Contraband <color px_purple>++Black Market</color>"),
		GuaranteedSuccessLevel = 7,
		Icon = "CriminalActivity/AlienCore.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 10000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
			PlaceObj('CheckTech', {
				Tech = "HackingTerminal",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberProcessor",
				'amount', 4000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCore",
				'amount', 2000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 25,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_CyberComp_BM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 440000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(924306656944, --[[ModItemRecipe GalacticChest Description]] "Use the trading shuttle to trade resources for a ''Galactic Chestpiece''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(629085083224, --[[ModItemRecipe GalacticChest DisplayName]] "Galactic Chestpiece"),
		FailDecayPercent = 60,
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/GalacticChest.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Armor_Jacket_Leather",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticChest",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 21,
		Unfinished = true,
		group = "Workbench",
		id = "GalacticChest",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Cyber",
		Description = T(866174129919, --[[ModItemRecipe TradeCyberProcessorBM Description]] "Use the trading shuttle to trade 'Cyber Blueprints' for a 'Cyber Processor's'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(203547453150, --[[ModItemRecipe TradeCyberProcessorBM DisplayName]] "Cyber Processor"),
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/CyberProcessor.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 35000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberProcessor",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketCyberTech",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCyberProcessorBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Pills",
		Description = T(992452792927, --[[ModItemRecipe MedicalGelStudy Description]] "Eating crushed Toco and Adricon makes a non-combat awareness and energy effect!"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(494903560491, --[[ModItemRecipe MedicalGelStudy DisplayName]] "Boost Gel"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "Biologist/MedicalGel.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Adricon",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
				'amount', 10000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "BoostGel",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Workbench",
		id = "MedicalGelStudy",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(369529294362, --[[ModItemRecipe Sell_Biology_CyberCrys_BM Description]] "Sell a 'Box of Organs' for 'Cyber Crystals'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(662648836491, --[[ModItemRecipe Sell_Biology_CyberCrys_BM DisplayName]] "Cyber Crystals <color px_purple>++Black Market</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "CriminalActivity/CyberCrystal.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				State = "hidden",
				Tech = "CyberCrystals",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 19,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_CyberCrys_BM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 440000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(918713853987, --[[ModItemRecipe GalacticLegs Description]] "Use the trading shuttle to trade resources for a ''Galactic Leggings''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(438115481954, --[[ModItemRecipe GalacticLegs DisplayName]] "Galactic Leggings"),
		FailDecayPercent = 60,
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/GalacticLegs.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 3000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Armor_Pants_Leather",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticLegs",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 22,
		Unfinished = true,
		group = "Workbench",
		id = "GalacticLegs",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 400000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Fuse",
		Description = T(507173739343, --[[ModItemRecipe AlienProcessor Description]] "Fuse organs with CPU cores!"),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(124782067744, --[[ModItemRecipe AlienProcessor DisplayName]] "Alien Processor"),
		DisplayNameMenu = T(336815989832, --[[ModItemRecipe AlienProcessor DisplayNameMenu]] "Alien Processor"),
		FailChance = 5,
		GuaranteedSuccessLevel = 6,
		Icon = "CriminalActivity/AlienProcessor.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "Nuedo",
				'amount', 4000,
			}),
			PlaceObj('ResAmount', {
				'resource', "livingMetal",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienProcessor",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienProcessor",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 1008,
		Unfinished = true,
		group = "Workbench",
		id = "AlienProcessor",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(891146776202, --[[ModItemRecipe TradeCarbon Description]] "Use the trading shuttle to collect carbon nanotubes from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(850824022787, --[[ModItemRecipe TradeCarbon DisplayName]] "Carbon"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/carbon_nanotubes",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
			PlaceObj('CheckTech', {
				Tech = "CarbonSupply",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Supply",
		id = "TradeCarbon",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 160000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(950225813226, --[[ModItemRecipe TradeCarbon_fast Description]] "Use the trading shuttle to collect carbon nanotubes from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(431125771237, --[[ModItemRecipe TradeCarbon_fast DisplayName]] "Carbon+"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/carbon_nanotubes",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CarbonSupply",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeCarbon_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(153029711125, --[[ModItemRecipe Sell_Biology_CryoRifle_BM Description]] "Sell some Organs for a Cryo and Cyber Rifle from a disgruntled Empire Scientist"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(211742952129, --[[ModItemRecipe Sell_Biology_CryoRifle_BM DisplayName]] "CryoRifle <color px_purple>++Black Market</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "Trade/BMShockRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 30000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CryoFreezeRifle",
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberPlasmaRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 16,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_CryoRifle_BM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 480000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "illegalComponents",
		Description = T(451155038342, --[[ModItemRecipe ChipDevice Description]] "<style red>25% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure. Great pains are taken to ensure the Galactican Empire does not know how many of these we have or have produced."),
		DeviceWorkTime = 80000,
		DisplayName = T(941112509247, --[[ModItemRecipe ChipDevice DisplayName]] "Chip Extraction Device"),
		DisplayNameMenu = T(136222824952, --[[ModItemRecipe ChipDevice DisplayNameMenu]] "Chip Extraction Device"),
		FailChance = 25,
		Icon = "CriminalActivity/ChipReplacement.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
				'amount', 2000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ChipDevice",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "ChipDevice",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 909,
		Unfinished = true,
		group = "Workbench",
		id = "ChipDevice",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Sell",
		Description = T(167379500077, --[[ModItemRecipe SELLTradingSchematicMaterials Description]] "Use the trading shuttle to sell ''Materials'' for ''Trading Schematics''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(284864131467, --[[ModItemRecipe SELLTradingSchematicMaterials DisplayName]] "Materials"),
		GuaranteedSuccessLevel = 8,
		Icon = "UI/Icons/Items/construction_materials",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ConstructionResources",
				'amount', 150000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradingSchematic",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Sell",
		id = "SELLTradingSchematicMaterials",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Sell",
		Description = T(127691110057, --[[ModItemRecipe SELLTradingSchematicMaterials_fast Description]] "Use the trading shuttle to sell ''Materials'' for ''Trading Schematics''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(597624318946, --[[ModItemRecipe SELLTradingSchematicMaterials_fast DisplayName]] "Materials+"),
		GuaranteedSuccessLevel = 8,
		Icon = "UI/Icons/Items/construction_materials",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ConstructionResources",
				'amount', 150000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradingSchematic",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Sell_fast",
		id = "SELLTradingSchematicMaterials_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 440000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(174982560602, --[[ModItemRecipe GalacticHelmet Description]] "Use the trading shuttle to trade resources for a ''Galactic Helmet''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(256799303170, --[[ModItemRecipe GalacticHelmet DisplayName]] "Galactic Helmet"),
		FailDecayPercent = 60,
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/GalacticHelmet.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Armor_Hat_Leather",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticHelmet",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticArmour",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Workbench",
		id = "GalacticHelmet",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		BuildCategory = "CraftWeapons",
		Description = T(529193516726, --[[ModItemRecipe DartGunParalyzePX Description]] "Toco-created Neurotransmitter inhibitors concentrated into a dart gun!"),
		DestroyOnFail = false,
		DisplayName = T(427977796946, --[[ModItemRecipe DartGunParalyzePX DisplayName]] "Dart Gun - Paralyze"),
		FailChance = 25,
		GuaranteedSuccessLevel = 4,
		Icon = "General/Dartgun2.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
				'amount', 30000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvancedWeaponry",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "DartGunPX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvancedWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 102,
		Unfinished = true,
		group = "Weapons",
		id = "DartGunParalyzePX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 440000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "BlackMarket",
		Description = T(455693603649, --[[ModItemRecipe TradeAlienProcessorBM Description]] "Use the trading shuttle to trade 'Alien Blueprints' for 'Alien Processors'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(408855384315, --[[ModItemRecipe TradeAlienProcessorBM DisplayName]] "Alien Processor"),
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienProcessor.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBlueprint",
				'amount', 35000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienProcessor",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketAlienTech",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 8,
		Unfinished = true,
		group = "Workbench",
		id = "TradeAlienProcessorBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(667182395943, --[[ModItemRecipe Sell_Biology_CryoRifle_Planet Description]] "Diffuse and dispose of Organs to be granted powerful armor"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(953188304483, --[[ModItemRecipe Sell_Biology_CryoRifle_Planet DisplayName]] "Alien Armor <color px_purple>++Planet</color>"),
		GuaranteedSuccessLevel = 8,
		Icon = "CriminalActivity/AlienArmour.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 300000,
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBoots",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienChest",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienLegs",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienHelmet",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj) return false end,
			}),
		},
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 21,
		Unfinished = true,
		comment = "TBD",
		group = "Workbench",
		id = "Sell_Biology_CryoRifle_Planet",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Smelt",
		Description = T(381557820262, --[[ModItemRecipe OreMetalGalacticFurnace Description]] "Smelt ore into refined metal alloys."),
		DeviceWorkTime = 160000,
		DisplayName = T(486195603679, --[[ModItemRecipe OreMetalGalacticFurnace DisplayName]] "Metal Alloys from Ore"),
		DisplayNameMenu = T(649835469530, --[[ModItemRecipe OreMetalGalacticFurnace DisplayNameMenu]] "Ore"),
		Icon = "UI/Icons/Items/ore",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ore",
				'amount', 80000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 100000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticFurnace",
		},
		id = "OreMetalGalacticFurnace",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 520000,
		ApplyResRequirements = false,
		BuildCategory = "CraftWeapons",
		Description = T(732206785167, --[[ModItemRecipe CyberLaserPike Description]] "<style red>20% Failure Chance</style>, Resources <style red>DESTROYED</style> on failure."),
		DeviceWorkTime = 80000,
		DisplayName = T(232359446372, --[[ModItemRecipe CyberLaserPike DisplayName]] "Cyber Laser Pike"),
		DisplayNameMenu = T(714087872580, --[[ModItemRecipe CyberLaserPike DisplayNameMenu]] "Cyber Laser Pike"),
		FailChance = 20,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/CyberLaserPike.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Melee_LaserPike",
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 15000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 7000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberLaserPike",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1023,
		Unfinished = true,
		group = "Workbench",
		id = "CyberLaserPike",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1840000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "CraftWeapons",
		Description = T(144903625614, --[[ModItemRecipe AlienPlasmaRifle Description]] "<style red>40% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(788046191487, --[[ModItemRecipe AlienPlasmaRifle DisplayName]] "Spiker"),
		DisplayNameMenu = T(291207474042, --[[ModItemRecipe AlienPlasmaRifle DisplayNameMenu]] "Alien Rifle"),
		FailChance = 40,
		GuaranteedSuccessLevel = 10,
		Icon = "CriminalActivity/AlienPlasmaRifle.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "Bitherm",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Sintis",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienProcessor",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienPlasmaRifle",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienWeaponry",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1031,
		Unfinished = true,
		group = "Workbench",
		id = "AlienPlasmaRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(649800504122, --[[ModItemRecipe TradeCakes Description]] "Use the trading shuttle to collect cakes from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(903085500551, --[[ModItemRecipe TradeCakes DisplayName]] "Cakes"),
		FailChance = 30,
		GuaranteedSuccessLevel = 6,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/food",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Cake",
				'amount', 3000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CakeSupply",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 3,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 22,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCakes",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(116466895798, --[[ModItemRecipe TradeCakes_fast Description]] "Use the trading shuttle to collect cakes from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(784688202272, --[[ModItemRecipe TradeCakes_fast DisplayName]] "Cakes+"),
		FailChance = 30,
		GuaranteedSuccessLevel = 6,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/food",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Cake",
				'amount', 3000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CakeSupply",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 3,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCakes_fast",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Refinery",
		Description = T(651830032044, --[[ModItemRecipe RefinaryFuel Description]] "Create 'Fuel' from 'Grain'."),
		DeviceWorkTime = 240000,
		DisplayName = T(102761044685, --[[ModItemRecipe RefinaryFuel DisplayName]] "Grain -> Fuel"),
		DisplayNameMenu = T(103593498957, --[[ModItemRecipe RefinaryFuel DisplayNameMenu]] "Grain -> Fuel"),
		HasIntermediateResult = false,
		Icon = "Trade/Fuel.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Grain",
				'amount', 100000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 50000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RefineryInterface",
		},
		SortKey = 1,
		group = "Industrial_Generator",
		id = "RefinaryFuel",
	}),
	PlaceObj('ModItemRecipe', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		BuildCategory = "CraftInPrinter",
		Description = T(872705381503, --[[ModItemRecipe Money_Printer Description]] "Print money from Synthetic textiles."),
		DeviceWorkTime = 120000,
		DisplayName = T(668625883779, --[[ModItemRecipe Money_Printer DisplayName]] "Galacticoins"),
		Icon = "UI/Icons/Items/money",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Synthetics",
				'amount', 20000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CounterfeitingPrint",
			}),
		},
		MakeUntilMultiplier = 100,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Money",
				'amount', 5000000,
			}),
		},
		RequiredDeviceInterfaces = {
			"Printer3DInterface",
		},
		SortKey = 44,
		Unfinished = true,
		group = "Printer",
		id = "Money_Printer",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		BuildCategory = "CraftWeapons",
		Description = T(275499526582, --[[ModItemRecipe DartGunBleedPX Description]] "Who doesn't love injecting rapidly growing micro-organisms into other creatures? <em>Ethics</em>? Never heard of it"),
		DestroyOnFail = false,
		DisplayName = T(321672490481, --[[ModItemRecipe DartGunBleedPX DisplayName]] "Dart Gun - Heavy Bleed"),
		FailChance = 25,
		GuaranteedSuccessLevel = 4,
		Icon = "General/Dartgun.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 30000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Sintis",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AdvancedWeaponry",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "DartGunBleedPX",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 103,
		Unfinished = true,
		group = "Weapons",
		id = "DartGunBleedPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "GalacticarGearTrade",
		Description = T(574602619203, --[[ModItemRecipe TradeGalacticSpear Description]] "Use the trading shuttle to trade resources for a 'Galactic Spear'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(262924120273, --[[ModItemRecipe TradeGalacticSpear DisplayName]] "Galactic Spear"),
		GuaranteedSuccessLevel = 7,
		Icon = "Trade/GalacticSpear.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
			PlaceObj('ResAmount', {
				'resource', "Melee_LaserPike",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OnOutputResourceCompleted = function (self, device, unit, res, amount, res_info)
			local new 
			new = const.Gameplay.x_galactican_rapport +2
			const.Gameplay.x_galactican_rapport= new
		end,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticSpear",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticWeaponry",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 11,
		Unfinished = true,
		group = "Workbench",
		id = "TradeGalacticSpear",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "Refinery",
		Description = T(878786406721, --[[ModItemRecipe RefinaryManure Description]] "Create 'Fuel' from 'Manure'."),
		DeviceWorkTime = 160000,
		DisplayName = T(122042232974, --[[ModItemRecipe RefinaryManure DisplayName]] "Manure -> Fuel"),
		DisplayNameMenu = T(153567858588, --[[ModItemRecipe RefinaryManure DisplayNameMenu]] "Manure -> Fuel"),
		HasIntermediateResult = false,
		Icon = "Trade/FuelRefinery2.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "FuelManure",
				'amount', 90000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 30000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RefineryInterface",
		},
		SortKey = 2,
		group = "Industrial_Generator",
		id = "RefinaryManure",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 40000,
		ActivityXPGrade = "Crafting_Low",
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		BuildCategory = "CraftResources",
		Description = T(967481293024, --[[ModItemRecipe TradeGoods Description]] "Craft trade goods from various raw resources."),
		DisplayName = T(886432370291, --[[ModItemRecipe TradeGoods DisplayName]] "Trade Goods"),
		Icon = "UI/Icons/Items/trade_goods",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradeGoodsMaterials",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradeGoods",
				'amount', 20000,
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicCraftingInterface",
		},
		SortKey = 18,
		Unfinished = true,
		group = "Workbench",
		id = "TradeGoods",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterFoods",
		Description = T(375522691003, --[[ModItemRecipe PrintPoultryPX Description]] "Use carbon-dense liquid fuel to print white meat tissues."),
		DeviceWorkTime = 40000,
		DisplayName = T(114244921242, --[[ModItemRecipe PrintPoultryPX DisplayName]] "Raw Poultry"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/raw_meat_poultry",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RawMeatPoultry",
				'amount', 30000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Printer",
		id = "PrintPoultryPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(402123308291, --[[ModItemRecipe TradeWood Description]] "Use the trading shuttle to collect wood from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(421233804256, --[[ModItemRecipe TradeWood DisplayName]] "Wood"),
		FailChance = 20,
		GuaranteedSuccessLevel = 4,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/wood_trunk",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Wood",
				'amount', 20000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 0,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Supply",
		id = "TradeWood",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 40000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(557199251655, --[[ModItemRecipe TradeWood_fast Description]] "Use the trading shuttle to collect wood from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(336967131655, --[[ModItemRecipe TradeWood_fast DisplayName]] "Wood+"),
		FailChance = 20,
		GuaranteedSuccessLevel = 4,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/wood_trunk",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Wood",
				'amount', 20000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 0,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Supply_fast",
		id = "TradeWood_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Sell",
		Description = T(500032979292, --[[ModItemRecipe SELLTradingSchematicVegetables Description]] "Use the trading shuttle to sell ''Vegetables'' for ''Trading Schematics''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(148269176009, --[[ModItemRecipe SELLTradingSchematicVegetables DisplayName]] "Vegetables"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/vegetables",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "VegetablesRaw",
				'amount', 100000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradingSchematic",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 7,
		Unfinished = true,
		group = "Sell",
		id = "SELLTradingSchematicVegetables",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 40000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "Sell",
		Description = T(141099738464, --[[ModItemRecipe SELLTradingSchematicVegetables_fast Description]] "Use the trading shuttle to sell ''Vegetables'' for ''Trading Schematics''."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(399696579744, --[[ModItemRecipe SELLTradingSchematicVegetables_fast DisplayName]] "Vegetables+"),
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/vegetables",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "VegetablesRaw",
				'amount', 100000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TradingSchematic",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 7,
		Unfinished = true,
		group = "Sell_fast",
		id = "SELLTradingSchematicVegetables_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 320000,
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(333759523337, --[[ModItemRecipe Sell_Biology_CyberArm_empire Description]] "Sell some Organs for officially sanctioned Cyber Armor!"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(778744261439, --[[ModItemRecipe Sell_Biology_CyberArm_empire DisplayName]] "Cyber Armor <color px_purple>++Galactican Empire</color>"),
		GuaranteedSuccessLevel = 4,
		Icon = "CriminalActivity/CyberArmour.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 30000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade",
			}),
		},
		LockState = "hidden",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBoots",
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberChest",
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberLegs",
			}),
			PlaceObj('ResAmount', {
				'resource', "CyberHelmet",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
			PlaceObj('CheckExpression', {
				Expression = function (self, obj) return false end,
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 17,
		Unfinished = true,
		comment = "Hidden until Galactican Empire faction states implemented",
		group = "Workbench",
		id = "Sell_Biology_CyberArm_empire",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		ApplyResRequirements = false,
		BuildCategory = "organ_sell",
		Description = T(584087463895, --[[ModItemRecipe Sell_Biology_Weap_Empire Description]] "Sell some Organs for standard weapons with the Galactican Empire"),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(126138431301, --[[ModItemRecipe Sell_Biology_Weap_Empire DisplayName]] "Basic Weapons <color px_purple>++Galactican Empire</color>"),
		GuaranteedSuccessLevel = 2,
		Icon = "Biologist/ShriekerBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "OrganBox",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_LaserBlaster",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper",
				'amount', 2000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BiologyTrade_gal",
			}),
		},
		ProficiencyLevel = 2,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Workbench",
		id = "Sell_Biology_Weap_Empire",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterMaterials",
		Description = T(566824597281, --[[ModItemRecipe PrintWoodPX Description]] "Generate wood."),
		DeviceWorkTime = 480000,
		DisplayName = T(790999597716, --[[ModItemRecipe PrintWoodPX DisplayName]] "Wood"),
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/wood_trunk",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "LiquidFuel",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Wood",
				'amount', 60000,
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Printer",
		id = "PrintWoodPX",
	}),
	PlaceObj('ModItemRecipe', {
		BuildCategory = "GalacticPrinterComponents",
		Description = T(759768620498, --[[ModItemRecipe PrintPowercellsPX Description]] "Print Power cells from energy crystals and electronics."),
		DeviceWorkTime = 160000,
		DisplayName = T(768820568039, --[[ModItemRecipe PrintPowercellsPX DisplayName]] "Power Cells"),
		FailChance = 15,
		Icon = "UI/Icons/Items/power_cell",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 25000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 2000,
			}),
		},
		MakeUntilMultiplier = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
		},
		RequiredDeviceInterfaces = {
			"GalacticPrinter",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Printer",
		id = "PrintPowercellsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Cyber",
		Description = T(526309555000, --[[ModItemRecipe TradeCyberCrystalBM Description]] "Use the trading shuttle to trade 'Top Secret Fragment' for a 'Cyber Crystal'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(140778765630, --[[ModItemRecipe TradeCyberCrystalBM DisplayName]] "Cyber Crystals"),
		GuaranteedSuccessLevel = 10,
		HasIntermediateResult = false,
		Icon = "CriminalActivity/CyberCrystal.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarketCyberTech",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Workbench",
		id = "TradeCyberCrystalBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 320000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "BlackMarket",
		Description = T(923097947599, --[[ModItemRecipe TradeMissileLauncher Description]] "20 Second Reload Speed, massive damage and blast radius."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(168039510509, --[[ModItemRecipe TradeMissileLauncher DisplayName]] "Missile Launcher"),
		DisplayNameMenu = T(384470749133, --[[ModItemRecipe TradeMissileLauncher DisplayNameMenu]] "Missile Launcher"),
		GuaranteedSuccessLevel = 10,
		Icon = "Trade/MissileLauncher.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBlueprint",
				'amount', 25000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 50000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "MissileLauncher",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "MissileLauncher",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 2445,
		Unfinished = true,
		group = "Workbench",
		id = "TradeMissileLauncher",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 280000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Trade",
		Description = T(127993297918, --[[ModItemRecipe TradePowerCellBM Description]] "Use the trading shuttle to trade 'Government Secrets' for a 'Power Cell'."),
		DestroyOnFail = false,
		DeviceWorkTime = 0,
		DisplayName = T(886840561684, --[[ModItemRecipe TradePowerCellBM DisplayName]] "Power Cell"),
		GuaranteedSuccessLevel = 10,
		Icon = "UI/Icons/Items/power_cell",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Blueprint",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PowerCell",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"Hacking",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Workbench",
		id = "TradePowerCellBM",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Biologist",
		ActivityDuration = 400000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Fuse",
		Description = T(143456141160, --[[ModItemRecipe AlienElectronics Description]] "Fuse organs with normal electronics to supercharge them!"),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(163109515555, --[[ModItemRecipe AlienElectronics DisplayName]] "Alien Electronics"),
		DisplayNameMenu = T(101857426045, --[[ModItemRecipe AlienElectronics DisplayNameMenu]] "Alien Electronics"),
		FailChance = 5,
		GuaranteedSuccessLevel = 6,
		Icon = "CriminalActivity/AlienElectronics.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
			PlaceObj('ResAmount', {
				'resource', "livingMetal",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Toco",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Bitherm",
				'amount', 2000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienElectronics",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienElectronics",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Biology",
		},
		SortKey = 1007,
		Unfinished = true,
		group = "Workbench",
		id = "AlienElectronics",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Assembling",
		ActivityDuration = 560000,
		ActivityXPGrade = "Crafting_High",
		ApplyResRequirements = false,
		BuildCategory = "Assemble",
		Description = T(740745991529, --[[ModItemRecipe AlienCore Description]] "<style red>40% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(898900588422, --[[ModItemRecipe AlienCore DisplayName]] "Alien Core"),
		FailChance = 40,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/AlienCore.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienElectronics",
				'amount', 5000,
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienProcessor",
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 100000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 8,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienCore",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienCore",
			}),
		},
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1009,
		Unfinished = true,
		group = "Workbench",
		id = "AlienCore",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 520000,
		ApplyResRequirements = false,
		BuildCategory = "CraftWeapons",
		Description = T(724896062726, --[[ModItemRecipe AlienLaserPike Description]] "<style red>40% Failure Chance</style>, Resources <style red>NOT</style> destroyed on failure."),
		DestroyOnFail = false,
		DeviceWorkTime = 80000,
		DisplayName = T(815594416193, --[[ModItemRecipe AlienLaserPike DisplayName]] "Scythe Blade Arms"),
		DisplayNameMenu = T(561171635296, --[[ModItemRecipe AlienLaserPike DisplayNameMenu]] "Alien Laser Pike"),
		FailChance = 40,
		GuaranteedSuccessLevel = 9,
		Icon = "CriminalActivity/AlienLaserPike.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Melee_LaserPike",
			}),
			PlaceObj('ResAmount', {
				'resource', "AlienCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "Sintis",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Megdeb",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienLaserPike",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "AlienWeaponry",
			}),
		},
		RequiredDeviceInterfaces = {
			"AdvancedCraftingInterface",
		},
		SortKey = 1030,
		Unfinished = true,
		group = "Workbench",
		id = "AlienLaserPike",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 280000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(773973590807, --[[ModItemRecipe TradeConcrete Description]] "Use the trading shuttle to collect concrete from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(529501907801, --[[ModItemRecipe TradeConcrete DisplayName]] "Concrete"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/concrete",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Concrete",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "ConcreteSupply",
			}),
			PlaceObj('CheckTech', {
				Negate = true,
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 22,
		Unfinished = true,
		group = "Workbench",
		id = "TradeConcrete",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Trade",
		ActivityDuration = 120000,
		ApplyResRequirements = false,
		BuildCategory = "Supply",
		Description = T(970225963650, --[[ModItemRecipe TradeConcrete_fast Description]] "Use the trading shuttle to collect concrete from suppliers aiding the colonization efforts."),
		DeviceWorkTime = 0,
		DisplayName = T(574178562658, --[[ModItemRecipe TradeConcrete_fast DisplayName]] "Concrete+"),
		FailChance = 30,
		GuaranteedSuccessLevel = 8,
		HasIntermediateResult = false,
		Icon = "UI/Icons/Items/concrete",
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Concrete",
				'amount', 10000,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "ConcreteSupply",
			}),
			PlaceObj('CheckTech', {
				Tech = "xr_g0_resource_fast",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"Trading",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Workbench",
		id = "TradeConcrete_fast",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		BuildCategory = "CraftTools",
		Description = T(606000874611, --[[ModItemRecipe BiologistKnife Description]] "Craft a set of biologist knifes to increase butchering speed."),
		DestroyOnFail = false,
		DisplayName = T(399567034271, --[[ModItemRecipe BiologistKnife DisplayName]] "Biologist Knife"),
		FailChance = 10,
		GuaranteedSuccessLevel = 3,
		Icon = "UI/Icons/Resources/res_hunting_knife",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 70000,
			}),
		},
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "BiologistKnife",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 20,
		Unfinished = true,
		group = "Tools",
		id = "BiologistKnife",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 40000,
		BuildCategory = "CraftTools",
		Description = T(494409049696, --[[ModItemRecipe PXCyberPendant Description]] "Craft a cyber pendant that makes its carrier happy and increases movement speed."),
		DestroyOnFail = false,
		DisplayName = T(479430872034, --[[ModItemRecipe PXCyberPendant DisplayName]] "Cyber Pendant"),
		FailChance = 20,
		GuaranteedSuccessLevel = 6,
		Icon = "General/CyberPendant.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberCrystal",
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Ore",
				'amount', 10000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberPendant",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 25,
		Unfinished = true,
		group = "Tools",
		id = "PXCyberPendant",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 40000,
		BuildCategory = "CraftTools",
		Description = T(629546308236, --[[ModItemRecipe PXInfoTablet Description]] "Craft a info tablet that makes its carrier happy and increases skill learning speed."),
		DestroyOnFail = false,
		DisplayName = T(935258678022, --[[ModItemRecipe PXInfoTablet DisplayName]] "Info Tablet"),
		FailChance = 10,
		GuaranteedSuccessLevel = 4,
		Icon = "General/InfoTablet.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 10000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PXInfoTablet",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 25,
		Unfinished = true,
		group = "Tools",
		id = "PXInfoTablet",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 40000,
		BuildCategory = "CraftTools",
		Description = T(767589255364, --[[ModItemRecipe PXTacticalMask Description]] "Craft a tactical mask that can prevent inhaling toxic airborn chemicals which are also equipped with night vision."),
		DestroyOnFail = false,
		DisplayName = T(986820164945, --[[ModItemRecipe PXTacticalMask DisplayName]] "Tactical Mask"),
		FailChance = 10,
		GuaranteedSuccessLevel = 4,
		Icon = "General/TacticalMaskPX.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RespiratorMask",
			}),
			PlaceObj('ResAmount', {
				'resource', "NightGoggles",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "TacticalMaskPX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 25,
		Unfinished = true,
		group = "Tools",
		id = "PXTacticalMask",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 40000,
		BuildCategory = "CraftTools",
		Description = T(517535766475, --[[ModItemRecipe PXScope Description]] "Craft a scope that can be used to increase accuracy by 10% and combat level by 2."),
		DestroyOnFail = false,
		DisplayName = T(391610137604, --[[ModItemRecipe PXScope DisplayName]] "Scope"),
		FailChance = 10,
		GuaranteedSuccessLevel = 4,
		Icon = "General/PXScope.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 20000,
			}),
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScopePX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 25,
		Unfinished = true,
		group = "Tools",
		id = "PXScope",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		BuildCategory = "CraftTools",
		Description = T(532211181028, --[[ModItemRecipe PXMedicKit Description]] "Used to increase medical treatment speed and healing level by 2. "),
		DestroyOnFail = false,
		DisplayName = T(539885092231, --[[ModItemRecipe PXMedicKit DisplayName]] "Medical Kit"),
		FailChance = 10,
		GuaranteedSuccessLevel = 3,
		Icon = "General/PXMedicBox.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Cotton",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "MedKit",
				'amount', 5000,
			}),
		},
		LockState = "hidden",
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PXMedicKit",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Tools",
		id = "PXMedicKit",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		BuildCategory = "CraftTools",
		Description = T(168135590707, --[[ModItemRecipe PXBuildersToolBox Description]] "Used to increase construction speed efficiency and level by 2. "),
		DestroyOnFail = false,
		DisplayName = T(966251902454, --[[ModItemRecipe PXBuildersToolBox DisplayName]] "Builders Toolbox"),
		FailChance = 10,
		GuaranteedSuccessLevel = 3,
		Icon = "General/BuildersBoxPX.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ScrapMetal",
				'amount', 50000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Wood",
				'amount', 10000,
			}),
		},
		LockState = "hidden",
		ManualWork = true,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "BuildersToolboxPX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "xr_g0_tools",
			}),
		},
		RequiredDeviceInterfaces = {
			"BasicSmithInterface",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Tools",
		id = "PXBuildersToolBox",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "CraftWeapons",
		Description = T(279394623239, --[[ModItemRecipe AnnihilatorPX Description]] "Craft the Nano-Tech Annihilator."),
		DestroyOnFail = false,
		DisplayName = T(997819997722, --[[ModItemRecipe AnnihilatorPX DisplayName]] "Annihilator"),
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 7,
		Icon = "NanoTech/PXAnnihilator.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "MechCore",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 100000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 150000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechAnnihilator",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechAnnihilator",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechAnnihilator",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"AdvancedSmithInterface",
		},
		SortKey = 999999,
		Unfinished = true,
		group = "Weapons",
		id = "AnnihilatorPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "CraftWeapons",
		Description = T(625337401259, --[[ModItemRecipe NaniteSwarmerPX Description]] "Craft the Nano-Tech Swarmer."),
		DestroyOnFail = false,
		DisplayName = T(767529539047, --[[ModItemRecipe NaniteSwarmerPX DisplayName]] "Nanite Swarmer"),
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 7,
		Icon = "NanoTech/PXSwarmer.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "MechCore",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 100000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 150000,
			}),
			PlaceObj('ResAmount', {
				'resource', "RaptorClawPX",
				'amount', 6000,
			}),
			PlaceObj('ResAmount', {
				'resource', "ShriekerBruteScales",
				'amount', 10000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechAnnihilator",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechSwarmer",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechAnnihilator",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"AdvancedSmithInterface",
		},
		SortKey = 999999999,
		Unfinished = true,
		group = "Weapons",
		id = "NaniteSwarmerPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 240000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "CraftWeapons",
		Description = T(269380973437, --[[ModItemRecipe NanitePhantomPX Description]] "Craft the Phantom Rifle."),
		DestroyOnFail = false,
		DisplayName = T(883493563852, --[[ModItemRecipe NanitePhantomPX DisplayName]] "Phantom Rifle"),
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 7,
		Icon = "NanoTech/PXPhantom.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CPUCore",
				'amount', 2000,
			}),
			PlaceObj('ResAmount', {
				'resource', "MechCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 10000,
			}),
			PlaceObj('ResAmount', {
				'resource', "CarbonNanotubes",
				'amount', 100000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 100000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechPhantom",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PhantomRiflePX",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechPhantom",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"AdvancedSmithInterface",
		},
		SortKey = 9999999999,
		Unfinished = true,
		group = "Weapons",
		id = "NanitePhantomPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "CraftWeapons",
		Description = T(251490692251, --[[ModItemRecipe NaniteBladePX Description]] "Craft the Nano-Tech Blade."),
		DestroyOnFail = false,
		DisplayName = T(512603191916, --[[ModItemRecipe NaniteBladePX DisplayName]] "Nanite Blade"),
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 6,
		Icon = "NanoTech/PXNaniteBlade.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "MechCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 4000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 70000,
			}),
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 30000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechNaniteBlade",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechBlade",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechNaniteBlade",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"AdvancedSmithInterface",
		},
		SortKey = 99999,
		Unfinished = true,
		group = "Weapons",
		id = "NaniteBladePX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "CraftWeapons",
		Description = T(680280326366, --[[ModItemRecipe NaniteKhopeshPX Description]] "Craft the Nano-Tech Khopesh."),
		DestroyOnFail = false,
		DisplayName = T(957539104547, --[[ModItemRecipe NaniteKhopeshPX DisplayName]] "Nanite Khopesh"),
		FailDecayPercent = 0,
		GuaranteedSuccessLevel = 6,
		Icon = "NanoTech/PXNanoKhopeshLarge.png",
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "MechCore",
			}),
			PlaceObj('ResAmount', {
				'resource', "ScrapElectronics",
				'amount', 4000,
			}),
			PlaceObj('ResAmount', {
				'resource', "Metal",
				'amount', 70000,
			}),
			PlaceObj('ResAmount', {
				'resource', "EnergyCrystals",
				'amount', 60000,
			}),
		},
		LockPrerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechKhopesh",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechKhopesh",
			}),
		},
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "NanoTechKhopesh",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"AdvancedSmithInterface",
		},
		SortKey = 9999999,
		Unfinished = true,
		group = "Weapons",
		id = "NaniteKhopeshPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "MeleePX",
		DestroyOnFail = false,
		DisplayName = T(658063908715, --[[ModItemRecipe RepairLaserPikePX DisplayName]] "Laser Pike"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Melee_LaserPike",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Weapons",
		id = "RepairLaserPikePX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(319989812860, --[[ModItemRecipe ExchangeLaserPikePX DisplayName]] "Laser Pike"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Melee_LaserPike",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Weapons",
		id = "ExchangeLaserPikePX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(222998162414, --[[ModItemRecipe RepairCarbonHelmetPX DisplayName]] "Carbon Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Hat_Carbon",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCarbonHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(722276749619, --[[ModItemRecipe ExchangeCarbonHelmetPX DisplayName]] "Carbon Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Hat_Carbon",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCarbonHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(679329716913, --[[ModItemRecipe RepairCarbonChestPX DisplayName]] "Carbon Chest-Piece"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Jacket_Carbon",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCarbonChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(608482844404, --[[ModItemRecipe ExchangeCarbonChestPX DisplayName]] "Carbon Chest-Piece"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Jacket_Carbon",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCarbonChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(347209421858, --[[ModItemRecipe RepairCarbonLegsPX DisplayName]] "Carbon Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Pants_Carbon",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCarbonLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(964492677793, --[[ModItemRecipe ExchangeCarbonLegsPX DisplayName]] "Carbon Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Pants_Carbon",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCarbonLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(422980585667, --[[ModItemRecipe RepairCarbonBootsPX DisplayName]] "Carbon Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Shoes_Carbon",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCarbonBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 640000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(760597113682, --[[ModItemRecipe ExchangeCarbonBootsPX DisplayName]] "Carbon Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Armor_Shoes_Carbon",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCarbonBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 760000,
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(464470964834, --[[ModItemRecipe RepairGalacticHelmetPX DisplayName]] "Galactic Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 4000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticHelmet",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Clothing",
		id = "RepairGalacticHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 760000,
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(798725690329, --[[ModItemRecipe RepairGalacticChestPX DisplayName]] "Galactic Chest"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 4000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticChest",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 6,
		Unfinished = true,
		group = "Clothing",
		id = "RepairGalacticChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 760000,
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(796068147536, --[[ModItemRecipe RepairGalacticLegsPX DisplayName]] "Galactic Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 4000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticLegs",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 7,
		Unfinished = true,
		group = "Clothing",
		id = "RepairGalacticLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 760000,
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(643768073422, --[[ModItemRecipe RepairGalacticBootsPX DisplayName]] "Galactic Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 4000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticBoots",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 8,
		Unfinished = true,
		group = "Clothing",
		id = "RepairGalacticBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(765598726966, --[[ModItemRecipe RepairCyberHelmetPX DisplayName]] "Cyber Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberHelmet",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 9,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCyberHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(575755133890, --[[ModItemRecipe ExchangeCyberHelmetPX DisplayName]] "Cyber Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberHelmet",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 9,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCyberHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(520294635797, --[[ModItemRecipe RepairCyberChestPX DisplayName]] "Cyber Chest-Piece"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberChest",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCyberChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(583696539068, --[[ModItemRecipe ExchangeCyberChestPX DisplayName]] "Cyber Chest-Piece"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberChest",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCyberChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(263380506697, --[[ModItemRecipe RepairCyberLegsPX DisplayName]] "Cyber Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberLegs",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 11,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCyberLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(651046259896, --[[ModItemRecipe ExchangeCyberLegsPX DisplayName]] "Cyber Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberLegs",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 11,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCyberLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(817489848079, --[[ModItemRecipe RepairCyberBootsPX DisplayName]] "Cyber Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBoots",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Clothing",
		id = "RepairCyberBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1000000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(379619431935, --[[ModItemRecipe ExchangeCyberBootsPX DisplayName]] "Cyber Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberBoots",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeCyberBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(321323466182, --[[ModItemRecipe RepairAlienHelmetPX DisplayName]] "Alien Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienHelmet",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Clothing",
		id = "RepairAlienHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(112451278787, --[[ModItemRecipe ExchangeAlienHelmetPX DisplayName]] "Alien Helmet"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienHelmet",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeAlienHelmetPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(541720497664, --[[ModItemRecipe RepairAlienChestPX DisplayName]] "Alien Chest-Piece"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienChest",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 14,
		Unfinished = true,
		group = "Clothing",
		id = "RepairAlienChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(328287088151, --[[ModItemRecipe ExchangeAlienChestPX DisplayName]] "Alien Chest-Piece"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienChest",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 14,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeAlienChestPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(744554174182, --[[ModItemRecipe RepairAlienLegsPX DisplayName]] "Alien Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienLegs",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 15,
		Unfinished = true,
		group = "Clothing",
		id = "RepairAlienLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(310483940015, --[[ModItemRecipe ExchangeAlienLegsPX DisplayName]] "Alien Legs"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienLegs",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 15,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeAlienLegsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ArmorPX",
		DestroyOnFail = false,
		DisplayName = T(349634155079, --[[ModItemRecipe RepairAlienBootsPX DisplayName]] "Alien Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBoots",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 16,
		Unfinished = true,
		group = "Clothing",
		id = "RepairAlienBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(163860023842, --[[ModItemRecipe ExchangeAlienBootsPX DisplayName]] "Alien Boots"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienBoots",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 16,
		Unfinished = true,
		group = "Clothing",
		id = "ExchangeAlienBootsPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "MeleePX",
		DestroyOnFail = false,
		DisplayName = T(742548046890, --[[ModItemRecipe RepairGalacticSpearPX DisplayName]] "Galactic Spear"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 3000,
			}),
		},
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticSpear",
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Weapons",
		id = "RepairGalacticSpearPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(894473359685, --[[ModItemRecipe ExchangeGalacticSpearPX DisplayName]] "Galactic Spear"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "GalacticSpear",
			}),
		},
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 3000,
			}),
		},
		ProficiencyLevel = 6,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Weapons",
		id = "ExchangeGalacticSpearPX",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 480000,
		BuildCategory = "MeleePX",
		DestroyOnFail = false,
		DisplayName = T(760534050276, --[[ModItemRecipe PXRepairNaniteBlade DisplayName]] "Nanite Blade"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechBlade",
			}),
		},
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairNaniteBlade",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 480000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(414064599958, --[[ModItemRecipe PXExchangeNaniteBlade DisplayName]] "Nanite Blade"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechBlade",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 5000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeNaniteBlade",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "MeleePX",
		DestroyOnFail = false,
		DisplayName = T(475976780549, --[[ModItemRecipe PXRepairNaniteKhopesh DisplayName]] "Nanite Khopesh"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 6000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechKhopesh",
			}),
		},
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairNaniteKhopesh",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(197611392664, --[[ModItemRecipe PXExchangeNaniteKhopesh DisplayName]] "Nanite Khopesh"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechKhopesh",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 6,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 6000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeNaniteKhopesh",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "MeleePX",
		DestroyOnFail = false,
		DisplayName = T(964175007278, --[[ModItemRecipe PXRepairCyberLaserPike DisplayName]] "Cyber Laser Pike"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberLaserPike",
			}),
		},
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairCyberLaserPike",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(104447419928, --[[ModItemRecipe PXExchangeCyberLaserPike DisplayName]] "Cyber Laser Pike"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberLaserPike",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeCyberLaserPike",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "MeleePX",
		DestroyOnFail = false,
		DisplayName = T(655484708240, --[[ModItemRecipe PXRepairAlienLaserPike DisplayName]] "Alien Laser Pike"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienLaserPike",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 8,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairAlienLaserPike",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1920000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(299767726204, --[[ModItemRecipe PXExchangeAlienLaserPike DisplayName]] "Alien Laser Pike"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienLaserPike",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 8,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeAlienLaserPike",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(847234821147, --[[ModItemRecipe PXRepairLaserPistol DisplayName]] "Laser Pistol"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 1,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_LaserBlaster",
			}),
		},
		ProficiencyLevel = 3,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairLaserPistol",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(890129187169, --[[ModItemRecipe PXExchangeLaserPistol DisplayName]] "Laser Pistol"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_LaserBlaster",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 1,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
			}),
		},
		ProficiencyLevel = 3,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 1,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeLaserPistol",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(437479067872, --[[ModItemRecipe PXRepairLaserPistolAdv DisplayName]] "Laser Pistol 2.0"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 1,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_LaserBlaster_Improved",
			}),
		},
		ProficiencyLevel = 3,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairLaserPistolAdv",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 120000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(222621906215, --[[ModItemRecipe PXExchangeLaserPistolAdv DisplayName]] "Laser Pistol 2.0"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_LaserBlaster_Improved",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 1,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ProficiencyLevel = 3,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 2,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeLaserPistolAdv",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(173424003183, --[[ModItemRecipe PXRepairPulseRifle DisplayName]] "Pulse Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle",
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairPulseRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(717216849330, --[[ModItemRecipe PXExchangePulseRifle DisplayName]] "Pulse Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 2000,
			}),
		},
		ProficiencyLevel = 4,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 3,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangePulseRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(877529893470, --[[ModItemRecipe PXRepairPulseRifleAdv DisplayName]] "Pulse Rifle 2.0"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 3000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle_Improved",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairPulseRifleAdv",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 160000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(293695285723, --[[ModItemRecipe PXExchangePulseRifleAdv DisplayName]] "Pulse Rifle 2.0"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_PulseRifle_Improved",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 2,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 3000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 4,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangePulseRifleAdv",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(415397964983, --[[ModItemRecipe PXRepairRailGunSniper DisplayName]] "Railgun Sniper"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 5000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairRailGunSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(637397250416, --[[ModItemRecipe PXExchangeRailGunSniper DisplayName]] "Railgun Sniper"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 3,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 5000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 5,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeRailGunSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(299305669442, --[[ModItemRecipe PXRepairRailGunSniperAdv DisplayName]] "Railgun Sniper 2.0"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 7000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper_Improved",
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 6,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairRailGunSniperAdv",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 200000,
		ActivityXPGrade = "Crafting_Low",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(269938646151, --[[ModItemRecipe PXExchangeRailGunSniperAdv DisplayName]] "Railgun Sniper 2.0"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "Ranged_RailgunSniper_Improved",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 4,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 7000,
			}),
		},
		ProficiencyLevel = 5,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 6,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeRailGunSniperAdv",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(196492812641, --[[ModItemRecipe PXRepairCryoFreeze DisplayName]] "Cryo Freeze Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CryoFreezeRifle",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 7,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairCryoFreeze",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(191559810214, --[[ModItemRecipe PXExchangeCryoFreeze DisplayName]] "Cryo Freeze Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CryoFreezeRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 7,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeCryoFreeze",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(282156174541, --[[ModItemRecipe PXRepairPacifierSniper DisplayName]] "Pacifier Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PacifierSniper",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 8,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairPacifierSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(912741765190, --[[ModItemRecipe PXExchangePacifierSniper DisplayName]] "Pacifier Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "PacifierSniper",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 8,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangePacifierSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(202675568669, --[[ModItemRecipe PXRepairShockRifle DisplayName]] "Shock Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ShockRifle",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 9,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairShockRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(255073496776, --[[ModItemRecipe PXExchangeShockRifle DisplayName]] "Shock Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ShockRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 9,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeShockRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(172657777328, --[[ModItemRecipe PXRepairToxicSniper DisplayName]] "Toxic Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "ToxicSniperRifle",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairToxicSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(437965910247, --[[ModItemRecipe PXExchangeToxicSniper DisplayName]] "Toxic Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "ToxicSniperRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 10000,
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 10,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeToxicSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(220230237964, --[[ModItemRecipe PXRepairMissileLauncher DisplayName]] "Missile Launcher"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "MissileLauncher",
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 11,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairMissileLauncher",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 560000,
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(303255800240, --[[ModItemRecipe PXExchangeMissileLauncher DisplayName]] "Missile Launcher"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "MissileLauncher",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 5,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 15000,
			}),
		},
		ProficiencyLevel = 7,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 11,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeMissileLauncher",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 720000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(818186540863, --[[ModItemRecipe PXRepairCyberPlasma DisplayName]] "Cyber Plasma Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberPlasmaRifle",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairCyberPlasma",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 720000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(665276062135, --[[ModItemRecipe PXExchangeCyberPlasma DisplayName]] "Cyber Plasma Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberPlasmaRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 15000,
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 12,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeCyberPlasma",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 720000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(825346135363, --[[ModItemRecipe PXRepairCyberSniper DisplayName]] "Cyber Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 15000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberSniperRifle",
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairCyberSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 720000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(168407253929, --[[ModItemRecipe PXExchangeCyberSniper DisplayName]] "Cyber Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "CyberSniperRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 7,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 15000,
			}),
		},
		ProficiencyLevel = 9,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 13,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeCyberSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(890301821605, --[[ModItemRecipe PXRepairAnnihilator DisplayName]] "Annihilator"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechAnnihilator",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 15,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairAnnihilator",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(111539685330, --[[ModItemRecipe PXExchangeAnnihilator DisplayName]] "Annihilator"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechAnnihilator",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 15,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeAnnihilator",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(717584042396, --[[ModItemRecipe PXRepairNaniteSwarm DisplayName]] "Nanite-Swarmer"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechSwarmer",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 16,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairNaniteSwarm",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 960000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(787689540135, --[[ModItemRecipe PXExchangeNaniteSwarm DisplayName]] "Nanite-Swarmer"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "NanoTechSwarmer",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 20000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 16,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeNaniteSwarm",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 880000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(446000645447, --[[ModItemRecipe PXRepairPhantomRifle DisplayName]] "Phantom Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 18000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "PhantomRiflePX",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 17,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairPhantomRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 880000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(462237438154, --[[ModItemRecipe PXExchangePhantomRifle DisplayName]] "Phantom Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "PhantomRiflePX",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 9,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 18000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 17,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangePhantomRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1040000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(901748464057, --[[ModItemRecipe PXRepairAlienPlasmaRifle DisplayName]] "Alien Plasma Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 22000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienPlasmaRifle",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 18,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairAlienPlasmaRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1040000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(586973497162, --[[ModItemRecipe PXExchangeAlienPlasmaRifle DisplayName]] "Alien Plasma Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienPlasmaRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 22000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 18,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeAlienPlasmaRifle",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1040000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "RangedPX",
		DestroyOnFail = false,
		DisplayName = T(375103124338, --[[ModItemRecipe PXRepairAlienSniper DisplayName]] "Alien Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 30000,
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienSniperRifle",
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 19,
		Unfinished = true,
		group = "Weapons",
		id = "PXRepairAlienSniper",
	}),
	PlaceObj('ModItemRecipe', {
		Activity = "Crafting",
		ActivityDuration = 1040000,
		ActivityXPGrade = "Crafting_High",
		BuildCategory = "ExchangePX",
		DestroyOnFail = false,
		DisplayName = T(411818287491, --[[ModItemRecipe PXExchangeAlienSniper DisplayName]] "Alien Sniper Rifle"),
		FailDecayPercent = 0,
		InputResources = {
			PlaceObj('ResAmount', {
				'resource', "AlienSniperRifle",
			}),
		},
		MakeUntilMultiplier = 10,
		ManualWork = true,
		MinSkillLevel = 10,
		OutputResources = {
			PlaceObj('ResAmount', {
				'resource', "RepairKitPX",
				'amount', 30000,
			}),
		},
		ProficiencyLevel = 10,
		RequiredDeviceInterfaces = {
			"RepairPX",
		},
		SortKey = 19,
		Unfinished = true,
		group = "Weapons",
		id = "PXExchangeAlienSniper",
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Status Effects",
}, {
	PlaceObj('ModItemHappinessFactor', {
		Description = T(355043160121, --[[ModItemHappinessFactor Scouting Description]] '"I feel good knowing that our home is safe!"'),
		DisplayName = T(276183570330, --[[ModItemHappinessFactor Scouting DisplayName]] "Secured the Perimeter."),
		DisplayNameShort = T(319041808330, --[[ModItemHappinessFactor Scouting DisplayNameShort]] "Scouters Safety"),
		Expiration = true,
		ExpirationTime = 960000,
		Happiness = 12,
		StackLimit = 1,
		group = "PROJECTX",
		id = "Scouting",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(706698793049, --[[ModItemHappinessFactor Daydream Description]] '"I enjoy the comfort of my own mind."'),
		DisplayName = T(305942903217, --[[ModItemHappinessFactor Daydream DisplayName]] "Sat down and daydreamed"),
		DisplayNameShort = T(180650032094, --[[ModItemHappinessFactor Daydream DisplayNameShort]] "Daydreamed"),
		Expiration = true,
		ExpirationTime = 960000,
		Happiness = 8,
		StackLimit = 1,
		group = "PROJECTX",
		id = "Daydream",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(561194921914, --[[ModItemHappinessFactor CheerfulMiner Description]] "Gains happiness when mining."),
		DisplayName = T(878619055754, --[[ModItemHappinessFactor CheerfulMiner DisplayName]] "Cheerful Miner"),
		DisplayNameShort = T(434119275596, --[[ModItemHappinessFactor CheerfulMiner DisplayNameShort]] "Cheerful Miner"),
		Expiration = true,
		Happiness = 17,
		ShockHappiness = 5,
		StackLimit = 1,
		group = "PROJECTX",
		id = "CheerfulMiner",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(733510007640, --[[ModItemHappinessFactor SmokingJoint Description]] "This person has smoked a joint and is currently feeling the effects of being high."),
		DisplayName = T(450206867903, --[[ModItemHappinessFactor SmokingJoint DisplayName]] "High"),
		DisplayNameShort = T(217856105495, --[[ModItemHappinessFactor SmokingJoint DisplayNameShort]] "High"),
		Expiration = true,
		Happiness = 25,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_X8ZoRs6",
				add = -20000,
				param_bindings = false,
				prop = "Manipulation",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = -30000,
				param_bindings = false,
				prop = "Movement",
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_M4zyYM",
				add = -60000,
				param_bindings = false,
				prop = "Pain",
			}),
		},
		StackLimit = 1,
		group = "PROJECTX",
		id = "SmokingJoint",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(314402790647, --[[ModItemHappinessFactor DrugUser Description]] "This person uses drugs."),
		DisplayName = T(764637187505, --[[ModItemHappinessFactor DrugUser DisplayName]] "Drug User"),
		DisplayNameShort = T(971896675949, --[[ModItemHappinessFactor DrugUser DisplayNameShort]] "Drug User"),
		Happiness = 30,
		group = "PROJECTX",
		id = "DrugUser",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(962230828260, --[[ModItemHappinessFactor Schizophrenia Description]] "This person has been diagnosed with ''Schizophrenia'' and has regular episodes of hallucinations and strange behaviours."),
		DisplayName = T(976038946526, --[[ModItemHappinessFactor Schizophrenia DisplayName]] "Schizophrenia"),
		DisplayNameShort = T(552464635302, --[[ModItemHappinessFactor Schizophrenia DisplayNameShort]] "Schizophrenia"),
		Happiness = 30,
		StackLimit = 1,
		group = "PROJECTX",
		id = "Schizophrenia",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(282308752402, --[[ModItemHappinessFactor HackersPleasure Description]] "Gains happiness when doing hacking tasks."),
		DisplayName = T(175112192541, --[[ModItemHappinessFactor HackersPleasure DisplayName]] "Hackers Pleasure"),
		DisplayNameShort = T(638251160111, --[[ModItemHappinessFactor HackersPleasure DisplayNameShort]] "Hackers Pleasure"),
		Expiration = true,
		ExpirationTime = 80000,
		Happiness = 25,
		ShockHappiness = 10,
		StackLimit = 1,
		group = "PROJECTX",
		id = "HackersPleasure",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(548985566886, --[[ModItemHappinessFactor DelightedTrader Description]] "Gains happiness when trading."),
		DisplayName = T(760701604885, --[[ModItemHappinessFactor DelightedTrader DisplayName]] "Delighted Trader"),
		DisplayNameShort = T(675894306382, --[[ModItemHappinessFactor DelightedTrader DisplayNameShort]] "Delighted Trader"),
		Expiration = true,
		Happiness = 17,
		ShockHappiness = 5,
		StackLimit = 1,
		group = "PROJECTX",
		id = "DelightedTrader",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(902108984293, --[[ModItemHappinessFactor AdrenalineRush1 Description]] "A temporary boost of adrenaline caused by the pilots bad flying on descent."),
		DisplayName = T(779989179633, --[[ModItemHappinessFactor AdrenalineRush1 DisplayName]] "Adrenaline Rush"),
		DisplayNameShort = T(553591441169, --[[ModItemHappinessFactor AdrenalineRush1 DisplayNameShort]] "Adrenaline Rush"),
		Expiration = true,
		ExpirationTime = 1920000,
		Happiness = 50,
		ShockHappiness = 30,
		StackLimit = 1,
		group = "PROJECTX",
		id = "AdrenalineRush1",
		msg_reactions = {
			PlaceObj('MsgReaction', {
				Event = "HumanInit",
				Handler = function (self, unit)
					if IsGameRuleActive("AdrenalineRush") then
						unit:AddHappinessFactor(self.id, "init")
					end
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(785654603057, --[[ModItemHappinessFactor AnimalHeaven Description]] "Gains happiness when training animals."),
		DisplayName = T(576589673076, --[[ModItemHappinessFactor AnimalHeaven DisplayName]] "Animal Heaven"),
		DisplayNameShort = T(498196230439, --[[ModItemHappinessFactor AnimalHeaven DisplayNameShort]] "Animal Heaven"),
		Expiration = true,
		ExpirationTime = 320000,
		Happiness = 25,
		ShockHappiness = 10,
		StackLimit = 1,
		group = "PROJECTX",
		id = "AnimalHeaven",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(125570962902, --[[ModItemHappinessFactor TradersDelight Description]] "Gains happiness when performing Trading tasks."),
		DisplayName = T(677390003406, --[[ModItemHappinessFactor TradersDelight DisplayName]] "Traders Delight"),
		DisplayNameShort = T(429328510656, --[[ModItemHappinessFactor TradersDelight DisplayNameShort]] "Traders Delight"),
		Expiration = true,
		ExpirationTime = 320000,
		Happiness = 15,
		ShockHappiness = 10,
		StackLimit = 1,
		group = "PROJECTX",
		id = "TradersDelight",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(931778448467, --[[ModItemHappinessFactor OneWithNature_Inside Description]] '"Closed walls all around me, I feel trapped!"'),
		DisplayName = T(547553420790, --[[ModItemHappinessFactor OneWithNature_Inside DisplayName]] "One With Nature"),
		Happiness = -15,
		ShowFloatingText = false,
		group = "PROJECTX",
		id = "OneWithNature_Inside",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(859310345316, --[[ModItemHappinessFactor Insanity Description]] "This person enjoys killing or observing death."),
		DisplayName = T(730298033999, --[[ModItemHappinessFactor Insanity DisplayName]] "Insanity"),
		Expiration = true,
		Happiness = 18,
		StackLimit = 1,
		group = "PROJECTX",
		id = "Insanity",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(354515818799, --[[ModItemHappinessFactor AccountantsDream Description]] "Gains a small increase in happiness when assigned to do handling or delivering tasks."),
		DisplayName = T(582629709428, --[[ModItemHappinessFactor AccountantsDream DisplayName]] "Accountants Dream"),
		DisplayNameShort = T(159526707262, --[[ModItemHappinessFactor AccountantsDream DisplayNameShort]] "Accountants Dream"),
		Expiration = true,
		ExpirationTime = 40000,
		Happiness = 6,
		ShockHappiness = 4,
		StackLimit = 1,
		group = "PROJECTX",
		id = "AccountantsDream",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(453788675734, --[[ModItemHappinessFactor OneWithNature_Outside Description]] '"I was born to be with nature!"'),
		DisplayName = T(238896741652, --[[ModItemHappinessFactor OneWithNature_Outside DisplayName]] "One With Nature"),
		Happiness = 15,
		ShowFloatingText = false,
		group = "PROJECTX",
		id = "OneWithNature_Outside",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(312870731201, --[[ModItemHappinessFactor DrugWithdrawals Description]] "This person is experiencing symptoms of substance withdrawals."),
		DisplayName = T(126620572548, --[[ModItemHappinessFactor DrugWithdrawals DisplayName]] "Drug Withdrawals Symptoms"),
		DisplayNameShort = T(763483147005, --[[ModItemHappinessFactor DrugWithdrawals DisplayNameShort]] "Drug Withdrawal"),
		Happiness = -60,
		group = "PROJECTX",
		id = "DrugWithdrawals",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(240758624716, --[[ModItemHappinessFactor CyberPendantPX Description]] "Has increased movement speed and happiness due to the energy emitted from the Cyber Pendant."),
		DisplayName = T(688884083680, --[[ModItemHappinessFactor CyberPendantPX DisplayName]] "Cyber Pendant's Energy"),
		Happiness = 25,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_Wk7j2pt",
				add = 60000,
				param_bindings = false,
				prop = "Movement",
			}),
		},
		ShockHappiness = 25,
		StackLimit = 1,
		group = "PROJECTX",
		id = "CyberPendantPX",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(589393632561, --[[ModItemHappinessFactor InfoTabletPX Description]] "This tool gives increase skill learning ratio of x1.5 and increases happiness"),
		DisplayName = T(980445662936, --[[ModItemHappinessFactor InfoTabletPX DisplayName]] "Info Tablet Tool"),
		Happiness = 10,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_G3Z7UhO",
				mul = 1500,
				param_bindings = false,
				prop = "SkillLearning",
			}),
		},
		ShockHappiness = 10,
		group = "PROJECTX",
		id = "InfoTabletPX",
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(532862733395, --[[ModItemHappinessFactor MedicalKitPX Description]] "+2 Level in Healing and Increased efficiency when performing healing tasks."),
		DisplayName = T(397251041108, --[[ModItemHappinessFactor MedicalKitPX DisplayName]] "Tool: Medical Kit"),
		Modifiers = {
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_BCLZYEb",
				Level = 2,
				Skill = "Healing",
				param_bindings = false,
			}),
		},
		ShowFloatingText = false,
		StackLimit = 1,
		group = "PROJECTX",
		id = "MedicalKitPX",
		unit_reactions = {
			PlaceObj('UnitReaction', {
				Event = "ModifyActivityEfficiency",
				Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
					if activity_id == "Healing" or activity_id == "FeedingSurvivor" or activity_id == "HealSelf" then
						efficiency = 4 * efficiency
					end
					return efficiency
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(173841669292, --[[ModItemHappinessFactor BuildersToolBoxPX Description]] "+2 Level in Healing and Increased efficiency when performing healing tasks."),
		DisplayName = T(177812273665, --[[ModItemHappinessFactor BuildersToolBoxPX DisplayName]] "Tool: Builders Toolbox"),
		Modifiers = {
			PlaceObj('ModifySkill', {
				Id = "",
				Level = 2,
				Skill = "Construction",
				param_bindings = false,
			}),
		},
		ShowFloatingText = false,
		StackLimit = 1,
		group = "PROJECTX",
		id = "BuildersToolBoxPX",
		unit_reactions = {
			PlaceObj('UnitReaction', {
				Event = "ModifyActivityEfficiency",
				Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
					if activity_id == "Construction" then
						efficiency = 4 * efficiency
					end
					return efficiency
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHappinessFactor', {
		Description = T(251473570591, --[[ModItemHappinessFactor PXScopeBuff Description]] "Adds 10% accuracy and +2 levels to combat."),
		DisplayName = T(744454268581, --[[ModItemHappinessFactor PXScopeBuff DisplayName]] "Tool: Scope"),
		Modifiers = {
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_QvehE5",
				Level = 2,
				Skill = "Combat",
				param_bindings = false,
			}),
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_e6cbLZf",
				add = 10,
				param_bindings = false,
				prop = "hit_chance_bonus",
			}),
		},
		ShowFloatingText = false,
		StackLimit = 1,
		group = "PROJECTX",
		id = "PXScopeBuff",
	}),
	PlaceObj('ModItemHappinessFactor', {
		DisplayName = T(173801565199, --[[ModItemHappinessFactor x_haunted DisplayName]] "Witnessed Horrors"),
		Happiness = -40,
		group = "PROJECTX",
		id = "x_haunted",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 100000,
		Description = T(292245867566, --[[ModItemHealthCondition JunoAdrenaline Description]] "Increased movement speed and attack rate from injecting a modified adrenaline fluid from a Juno."),
		DisplayName = T(557052205490, --[[ModItemHealthCondition JunoAdrenaline DisplayName]] "Juno's Adrenaline Shot"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 320000,
		FloatingTextType = "Display name",
		MovementModifier = 50000,
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "AgitatedByPheromones", "Animal", "Flying", "Human" ),
		group = "PROJECTX",
		id = "JunoAdrenaline",
		unit_reactions = {
			PlaceObj('UnitReaction', {
				Event = "ModifyAttackCooldown",
				Handler = function (self, target, cooldown, weapon_def)
					return Min(cooldown, Max(500, weapon_def.AttackCooldownMaxSkill / 2))
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "TorsoHeart",
				BodyPartGroup = "Organs",
				param_bindings = false,
			}),
		},
		Description = T(272264630256, --[[ModItemHealthCondition Pacemaker Description]] "This person is fitted with a standard pacemaker, electromagnetic functions that keeps the heart pumping."),
		DisplayName = T(865415307128, --[[ModItemHealthCondition Pacemaker DisplayName]] "Pacemaker"),
		Expiration = true,
		ExpirationNoCondChance = 0,
		ExpirationRandom = 160000000,
		ExpirationTime = 60000000,
		FloatingTextType = "Display name",
		Type = "Debuff",
		UnitTags = set( "Human" ),
		group = "PROJECTX",
		id = "Pacemaker",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 25000,
		Description = T(139502369839, --[[ModItemHealthCondition Energized Description]] "This person, animal or object has recently been treated from electrocution and is energized."),
		DisplayName = T(945081607709, --[[ModItemHealthCondition Energized DisplayName]] "Energized"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 1920000,
		FloatingTextType = "Display name",
		ManipulationModifier = 25000,
		MovementModifier = 25000,
		PainModifier = 25000,
		StackLimit = 1,
		UnitTags = set( "AgitatedByPheromones", "Animal", "Flying", "Human" ),
		group = "PROJECTX",
		id = "Energized",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "Ears",
				param_bindings = false,
			}),
		},
		Description = T(765019382552, --[[ModItemHealthCondition HearingAidMalfunction Description]] "Hearing Aid has malfunctioned and requires replacing. Until it has been replaced the persons hearing range has been decreased."),
		DisplayName = T(155675299655, --[[ModItemHealthCondition HearingAidMalfunction DisplayName]] "Hearing Aid Malfunction"),
		FloatingTextType = "Display name",
		MistreatmentChance = 30,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "HearingAidMalfunction",
				param_bindings = false,
			}),
		},
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_SUaXXJe",
				add = -100000,
				param_bindings = false,
				prop = "HearingRange",
			}),
		},
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "HearingAid",
				param_bindings = false,
			}),
		},
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "ElectronicComponents",
		TreatmentMinSkillLevel = 2,
		TreatmentNoCondChance = 50,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "PROJECTX",
		id = "HearingAidMalfunction",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 20000,
		ConsciousnessModifier = -20000,
		Coughing = true,
		Description = T(518904800646, --[[ModItemHealthCondition Poison Description]] "This person, animal or object has been poisoned and is slowly dieing."),
		DisplayName = T(814175897548, --[[ModItemHealthCondition Poison DisplayName]] "Poison"),
		FloatingTextType = "Display name",
		HealthLoss = 5000,
		InitialVomitDelayMax = 40000,
		InitialVomitDelayMin = 0,
		LifeTreatening = true,
		ManipulationModifier = -60000,
		MovementModifier = -20000,
		PainModifier = 10000,
		SequentialVomitDelayMax = 80000,
		SequentialVomitDelayMin = 40000,
		TreatmentDuration = 20000,
		TreatmentMedicineAmount = 3000,
		TreatmentMedicineResource = "MedAntibiotics",
		TreatmentPriority = 1,
		TreatmentStatus = "requires treatment",
		UnitTags = set( "Animal", "Human" ),
		Vomiting = true,
		group = "PROJECTX",
		id = "Poison",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		AffectedArea = "inside",
		ConsciousnessModifier = -20000,
		Description = T(464870868090, --[[ModItemHealthCondition Schizophrenia Description]] "This person has been diagnosed with ''Schizophrenia'' and has regular episodes of hallucinations and strange behaviours."),
		DisplayName = T(591026406644, --[[ModItemHealthCondition Schizophrenia DisplayName]] "Schizophrenia"),
		FloatingTextType = "Display name",
		ManipulationModifier = 20000,
		Modifiers = {
			PlaceObj('AddHappinessFactorEffect', {
				HappinessFactor = "Schizophrenia",
				Id = "autoid_fDsBmM1_bB35lkE",
				param_bindings = false,
			}),
		},
		MovementModifier = 10000,
		StackLimit = 1,
		Type = "Disease",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "Schizophrenia",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "Eyes",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = -10000,
		Description = T(446406455801, --[[ModItemHealthCondition MalfunctionBionicEye Description]] "Malfunction - One of the Bionic Eyes have malfunctioned. System rebooting; Malfunction repair status estimated 5 hours.\n\n-50% Movement Speed during repair."),
		DisplayName = T(115376312314, --[[ModItemHealthCondition MalfunctionBionicEye DisplayName]] "Bionic Eye Malfunction"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "BionicEye",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationTime = 200000,
		FloatingTextType = "Display name",
		MovementModifier = -50000,
		Type = "Injury",
		group = "PROJECTX",
		id = "MalfunctionBionicEye",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "TorsoLungs",
				BodyPartGroup = "ChestOrgans",
				param_bindings = false,
			}),
		},
		BleedingModifier = 2000,
		Coughing = true,
		Description = T(533590899570, --[[ModItemHealthCondition AlienPlasmaInhalation Description]] "This person, animal or object has inhaled fumes from alien technology which has caused discomfort and irritation to the lungs."),
		DisplayName = T(907124120580, --[[ModItemHealthCondition AlienPlasmaInhalation DisplayName]] "Alien Plasma Wound"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		FloatingTextType = "Display name",
		InitialVomitDelayMax = 80000,
		InitialVomitDelayMin = 40000,
		LifeTreatening = true,
		MovementModifier = -10000,
		PainModifier = 10000,
		StackLimit = 1,
		UnitTags = set( "Animal", "Human" ),
		Vomiting = true,
		group = "PROJECTX",
		id = "AlienPlasmaInhalation",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 5000,
		ConsciousnessModifier = -10000,
		Description = T(750245191015, --[[ModItemHealthCondition ToxicPoisoning Description]] "This unit has received toxic poisoning from chemicals or toxic substances."),
		DisplayName = T(662913661039, --[[ModItemHealthCondition ToxicPoisoning DisplayName]] "Toxic Poisoning"),
		DisplayNameTreatment = T(827924830733, --[[ModItemHealthCondition ToxicPoisoning DisplayNameTreatment]] "Take medicine"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Poisoning_5_Death",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 25,
		ExpirationRandom = 160000,
		ExpirationTime = 80000,
		FloatingTextType = "Display name",
		HealthLoss = 30000,
		LifeTreatening = true,
		MistreatmentChance = 40,
		MistreatmentNoCondChance = 100,
		MovementModifier = -10000,
		PainModifier = 10000,
		TreatmentMaxSkillLevel = 6,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedAntibiotics",
		TreatmentNoCondChance = 100,
		TreatmentPriority = 1,
		TreatmentStatus = "requires treatment",
		Type = "UntreatedDisease",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "ToxicPoisoning",
	}),
	PlaceObj('ModItemHealthCondition', {
		Description = T(167287309144, --[[ModItemHealthCondition CyberneticMalfunctionLeg Description]] "One of the cybernetic limbs have malfunctioned. System rebooting; Malfunction repair status estimated 5 hours.\n\n-20% Movement Speed."),
		DisplayName = T(194601746016, --[[ModItemHealthCondition CyberneticMalfunctionLeg DisplayName]] "Cybernetic Malfunction Leg"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "CyberneticLeg",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationTime = 320000,
		FloatingTextType = "Display name",
		ManipulationModifier = -20000,
		Type = "Injury",
		group = "PROJECTX",
		id = "CyberneticMalfunctionLeg",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		AffectedArea = "inside",
		ConsciousnessModifier = -20000,
		Coughing = true,
		Description = T(630980831819, --[[ModItemHealthCondition SubstanceWithdrawals Description]] "This person is going through withdrawals from substances and is searching for there next substance. (5 Hour Debuff)"),
		DisplayName = T(618354640461, --[[ModItemHealthCondition SubstanceWithdrawals DisplayName]] "Substance Withdrawals"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "ConstantlyHigh",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationTime = 200000,
		FloatingTextIcon = "UI/Hud/float_heal",
		FloatingTextType = "Display name",
		ManipulationModifier = -100000,
		Modifiers = {
			PlaceObj('AddHappinessFactorEffect', {
				HappinessFactor = "DrugWithdrawals",
				Id = "autoid_fDsBmM1_f8OOjgU",
				param_bindings = false,
			}),
		},
		MovementModifier = -20000,
		PainModifier = 30000,
		StackLimit = 1,
		Type = "Injury",
		UnitTags = set( "Animal", "Human" ),
		Vomiting = true,
		group = "PROJECTX",
		id = "SubstanceWithdrawals",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = -500000,
		Description = T(225016667680, --[[ModItemHealthCondition CyberParalysis Description]] "This person or unit has been hit by a Cyber Pulse Wave and is temporarily stunned, concussed and has numbed senses from the effects."),
		DisplayName = T(813122058141, --[[ModItemHealthCondition CyberParalysis DisplayName]] "Cyber Paralysis"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationRandom = 24000,
		ExpirationTime = 8000,
		FloatingTextIcon = "UI/Hud/float_hit",
		FloatingTextType = "Display name",
		MovementModifier = -500000,
		StackLimit = 1,
		Type = "Injury",
		group = "PROJECTX",
		id = "CyberParalysis",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadEarLeft",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadEarRight",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		Description = T(794792339208, --[[ModItemHealthCondition ImpairedHearing Description]] "This person has impaired hearing which greatly effects her ability to detect movement nearby. However increases sight range due to being more reliant on her vision."),
		DisplayName = T(694022596581, --[[ModItemHealthCondition ImpairedHearing DisplayName]] "Impaired Hearing"),
		FloatingTextType = "Display name",
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_Nobc5w",
				add = -25000,
				param_bindings = false,
				prop = "HearingRange",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				add = 25000,
				param_bindings = false,
				prop = "SightRange",
			}),
		},
		Type = "Debuff",
		group = "PROJECTX",
		id = "ImpairedHearing",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		BleedingModifier = 1000,
		DirtinessModifier = 5000,
		DirtinessTarget = "WholeBody",
		DisplayName = T(277567115414, --[[ModItemHealthCondition Shrieker_Brute_SpikePuncturePX DisplayName]] "Brute Spike Puncture"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
				weight = 30,
			}),
		},
		ExpirationNoCondChance = 40,
		ExpirationRandom = 960000,
		ExpirationTime = 960000,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 28000,
		LimitCond = {
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Common",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Critical",
				param_bindings = false,
				weight = 2,
			}),
		},
		LimitNoCondChance = 20,
		ManipulationModifierOpt = -10000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		MovementModifierOpt = -10000,
		PainModifier = 8000,
		ReplaceOldest = false,
		StackLimit = 6,
		StackLimitCounter = function (self) return self.id end,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Stab_Body_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 10000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentPriority = 3,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "Weapons_Insect",
		id = "Shrieker_Brute_SpikePuncturePX",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 5000,
		ConsciousnessModifier = -20000,
		Coughing = true,
		Description = T(448268221202, --[[ModItemHealthCondition Burning Description]] "This person, animal or object is burning."),
		DisplayName = T(735741191248, --[[ModItemHealthCondition Burning DisplayName]] "Burning"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationRandom = 40000,
		ExpirationTime = 12000,
		FloatingTextType = "Display name",
		HealthLoss = 50000,
		LifeTreatening = true,
		ManipulationModifier = -50000,
		MovementModifier = -20000,
		PainModifier = 40000,
		StackLimit = 1,
		group = "PROJECTX",
		id = "Burning",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 10000,
		Description = T(781651503103, --[[ModItemHealthCondition GeneticNanites Description]] "The nanites enhance the senses, hearing range, sight range, speed and conciousness."),
		DisplayName = T(185215552040, --[[ModItemHealthCondition GeneticNanites DisplayName]] "Nanites - Genetic Modification"),
		FloatingTextType = "Display name",
		ManipulationModifier = 10000,
		MaxHealthModifier = 25000,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_WrBZxWE",
				mul = 2000,
				param_bindings = false,
				prop = "HearingRange",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				mul = 2000,
				param_bindings = false,
				prop = "SightRange",
			}),
		},
		MovementModifier = 10000,
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "GeneticNanites",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 1000,
		Coughing = true,
		Description = T(392481614097, --[[ModItemHealthCondition Stun Description]] "This person, animal or object has been temporarily stunned and cannot move or attack until the effect fades."),
		DisplayName = T(707169794293, --[[ModItemHealthCondition Stun DisplayName]] "Stunned"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 1200,
		FloatingTextIcon = "UI/Hud/float_hit",
		FloatingTextType = "Display name",
		HealthLoss = 5000,
		IsCompatible = function (self, owner, ...) return not owner:IsDead() end,
		Modifiers = {
			PlaceObj('ForbidActivity', {
				Activity = "Combat",
				FilterBy = "Combat",
				Id = "autoid_fDsBmM1_FCR6KUt",
				Reason = "Stunned",
				param_bindings = false,
			}),
		},
		MovementModifier = -500000,
		PainModifier = 20000,
		StackLimit = 1,
		Type = "Injury",
		group = "PROJECTX",
		id = "Stun",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		AffectedArea = "inside",
		ConsciousnessModifier = 10000,
		Description = T(385961295734, --[[ModItemHealthCondition ConstantlyHigh Description]] "This person is constantly high as she harvests from the environment for her next kick."),
		DisplayName = T(857219187306, --[[ModItemHealthCondition ConstantlyHigh DisplayName]] "Constantly High"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "SubstanceWithdrawals",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationRandom = 24000000,
		ExpirationTime = 4000000,
		FloatingTextType = "Display name",
		ManipulationModifier = 50000,
		Modifiers = {
			PlaceObj('AddHappinessFactorEffect', {
				HappinessFactor = "DrugUser",
				Id = "autoid_fDsBmM1_ri3XpGt",
				param_bindings = false,
			}),
		},
		MovementModifier = 10000,
		PainModifier = -30000,
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "ConstantlyHigh",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		BleedingModifier = 5000,
		DirtinessModifier = 10000,
		DirtinessTarget = "WholeBody",
		DisplayName = T(224571858268, --[[ModItemHealthCondition AlphaRaptorClawPuncturePX DisplayName]] "Raptor Claw Puncture"),
		Expiration = true,
		ExpirationNoCondChance = 40,
		ExpirationRandom = 960000,
		ExpirationTime = 960000,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 30000,
		LimitCond = {
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Common",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Critical",
				param_bindings = false,
				weight = 2,
			}),
		},
		LimitNoCondChance = 20,
		ManipulationModifierOpt = -20000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_2_Moderate",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		MovementModifierOpt = -20000,
		PainModifier = 10000,
		ReplaceOldest = false,
		StackLimit = 6,
		StackLimitCounter = function (self) return self.id end,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Stab_Body_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 20000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentPriority = 2,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "Weapons_Insect",
		id = "AlphaRaptorClawPuncturePX",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		Description = T(499450353297, --[[ModItemHealthCondition CyberneticImmunity Description]] "Due to being cybernetic this person is immune to diseases."),
		DisplayName = T(538577709608, --[[ModItemHealthCondition CyberneticImmunity DisplayName]] "Cybernetic Immunity"),
		FloatingTextType = "Display name",
		IsCompatible = function (self, owner, ...) return not owner:IsDead() end,
		StackLimit = 1,
		StackLimitCounter = function (self) return "Pneumonia" or "AnimalFlu" or "CommonCold" or "SmokeInhalation" or "ToxicAir_BloodPoisoning" or "ToxicAir_ShortnessOfBreath" or "Tuberculosis" or "Starting_SmokeInhalation" end,
		Type = "Buff",
		group = "PROJECTX",
		id = "CyberneticImmunity",
		msg_reactions = {
			PlaceObj('MsgReactionScript', {
				Event = "HealthConditionAdded",
				Handler = PlaceObj('ScriptProgram', {
					Params = "self, unit, condition",
					eval = function (self, unit, condition)
						if unit and unit:FirstEffectByIdClass("ToxicAir_ShortnessOfBreath", 'HealthCondition') then
							unit:RemoveHealthCondition("ToxicAir_ShortnessOfBreath", "treat")
						end
						if unit and unit:FirstEffectByIdClass("Starting_SmokeInhalation", 'HealthCondition') then
							unit:RemoveHealthCondition("Starting_SmokeInhalation", "treat")
						end
						if unit and unit:FirstEffectByIdClass("AlienPlasmaInhalation", 'HealthCondition') then
							unit:RemoveHealthCondition("AlienPlasmaInhalation", "treat")
						end
						if unit and unit:FirstEffectByIdClass("SmokeInhalation", 'HealthCondition') then
							unit:RemoveHealthCondition("SmokeInhalation", "treat")
						end
						if unit and unit:FirstEffectByIdClass("Poison", 'HealthCondition') then
							unit:RemoveHealthCondition("Poison", "treat")
						end
						if unit and unit:FirstEffectByIdClass("Glutch_LungDamage", 'HealthCondition') then
							unit:RemoveHealthCondition("Glutch_LungDamage", "treat")
						end
						if unit and unit:FirstEffectByIdClass("ToxicPoisoning", 'HealthCondition') then
							unit:RemoveHealthCondition("ToxicPoisoning", "treat")
						end
						if unit and unit:FirstEffectByIdClass("Anemia_1_Mild", 'HealthCondition') then
							unit:RemoveHealthCondition("Anemia_1_Mild", "treat")
						end
						if unit and unit:FirstEffectByIdClass("Asthma_1_Mild", 'HealthCondition') then
							unit:RemoveHealthCondition("Asthma_1_Mild", "treat")
						end
						if unit and unit:FirstEffectByIdClass("BloodInfection_1_Mild", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BloodInfection_2_Moderate", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BloodInfection_3_Severe", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BloodInfection_4_Extreme", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BloodInfection_Anemia", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BloodInfection_ChronicAnemia", 'HealthCondition') then
							unit:RemoveHealthCondition("BloodInfection_1_Mild", false)
							unit:RemoveHealthCondition("BloodInfection_2_Moderate", false)
							unit:RemoveHealthCondition("BloodInfection_3_Severe", false)
							unit:RemoveHealthCondition("BloodInfection_4_Extreme", false)
							unit:RemoveHealthCondition("BloodInfection_Anemia", false)
							unit:RemoveHealthCondition("BloodInfection_ChronicAnemia", false)
						end
						if unit and unit:FirstEffectByIdClass("BrainParasite_Treatable", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BrainParasite_Untreatable", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BrainNanites_SingleUse", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BrainNanites_MultiplePeople", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("BrainDamage_Slight", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("PulseRifle_BrainConcussion", 'HealthCondition') then
							unit:RemoveHealthCondition("BrainParasite_Treatable", "treat")
							unit:RemoveHealthCondition("BrainParasite_Untreatable", "treat")
							unit:RemoveHealthCondition("BrainNanites_SingleUse", "treat")
							unit:RemoveHealthCondition("BrainNanites_MultiplePeople", "treat")
							unit:RemoveHealthCondition("BrainDamage_Slight", "treat")
							unit:RemoveHealthCondition("PulseRifle_BrainConcussion", "treat")
						end
						if unit and unit:FirstEffectByIdClass("CommonCold", 'HealthCondition') then
							unit:RemoveHealthCondition("CommonCold", "treat")
						end
						if unit and unit:FirstEffectByIdClass("Heatstroke_1_Mild", 'HealthCondition') then
							unit:RemoveHealthCondition("Heatstroke_1_Mild", false)
						end
						if unit and unit:FirstEffectByIdClass("Hypothermia_1_Mild", 'HealthCondition') then
							unit:RemoveHealthCondition("Hypothermia_1_Mild", false)
						end
						if unit and unit:FirstEffectByIdClass("Infection_1_Mild", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("Infection_2_Moderate", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("Infection_3_Severe", 'HealthCondition') and
							unit and unit:FirstEffectByIdClass("Infection_4_Death", 'HealthCondition') then
							unit:RemoveHealthCondition("Infection_1_Mild", "treat")
							unit:RemoveHealthCondition("Infection_2_Moderate", "treat")
							unit:RemoveHealthCondition("Infection_3_Severe", "treat")
							unit:RemoveHealthCondition("Infection_4_Death", "treat")
						end
						if unit and unit:FirstEffectByIdClass("SleepParasite", 'HealthCondition') then
							unit:RemoveHealthCondition("SleepParasite", "treat")
						end
						if unit and unit:FirstEffectByIdClass("SwarmFever_1_Mild", 'HealthCondition') then
							unit:RemoveHealthCondition("SwarmFever_1_Mild", "treat")
						end
					end,
					param_bindings = false,
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "ToxicAir_ShortnessOfBreath",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "ToxicAir_ShortnessOfBreath",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Starting_SmokeInhalation",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Starting_SmokeInhalation",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "AlienPlasmaInhalation",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "AlienPlasmaInhalation",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "SmokeInhalation",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "SmokeInhalation",
							HealthCondReason = "treat",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Poison",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Poison",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Glutch_LungDamage",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Glutch_LungDamage",
							HealthCondReason = "treat",
							HealthCondType = "Injury",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "ToxicPoisoning",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "ToxicPoisoning",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Anemia_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Anemia_1_Mild",
							HealthCondReason = "treat",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Asthma_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Asthma_1_Mild",
							HealthCondReason = "treat",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BloodInfection_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BloodInfection_2_Moderate",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BloodInfection_3_Severe",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BloodInfection_4_Extreme",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BloodInfection_Anemia",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BloodInfection_ChronicAnemia",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BloodInfection_1_Mild",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BloodInfection_2_Moderate",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BloodInfection_3_Severe",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BloodInfection_4_Extreme",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BloodInfection_Anemia",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BloodInfection_ChronicAnemia",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BrainParasite_Treatable",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BrainParasite_Untreatable",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BrainNanites_SingleUse",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BrainNanites_MultiplePeople",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "BrainDamage_Slight",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "PulseRifle_BrainConcussion",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BrainParasite_Treatable",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BrainParasite_Untreatable",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BrainNanites_SingleUse",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BrainNanites_MultiplePeople",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "BrainDamage_Slight",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "PulseRifle_BrainConcussion",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "CommonCold",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "CommonCold",
							HealthCondReason = "treat",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Heatstroke_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Heatstroke_1_Mild",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Hypothermia_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Hypothermia_1_Mild",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Infection_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Infection_2_Moderate",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Infection_3_Severe",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "Infection_4_Death",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Infection_1_Mild",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Infection_2_Moderate",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Infection_3_Severe",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "Infection_4_Death",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "SleepParasite",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "SleepParasite",
							HealthCondReason = "treat",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptIf', {
						param_bindings = false,
						PlaceObj('ScriptCheckHealthCondition', {
							HealthCond = "SwarmFever_1_Mild",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
					PlaceObj('ScriptThen', {
						param_bindings = false,
						PlaceObj('ScriptRemoveHealthCondition', {
							HealthCond = "SwarmFever_1_Mild",
							HealthCondReason = "treat",
							HealthCondType = "",
							Param1 = "unit",
							param_bindings = false,
						}),
					}),
				}),
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHealthCondition', {
		Description = T(184006170115, --[[ModItemHealthCondition RaptorSprint Description]] "Capable of moving at an increased speed when hunting prey and under threat."),
		DisplayName = T(505492306250, --[[ModItemHealthCondition RaptorSprint DisplayName]] "Raptor Sprint"),
		FloatingTextType = "Display name",
		MovementModifier = 200000,
		StackLimit = 1,
		UnitTags = set( "Animal" ),
		group = "PROJECTX",
		id = "RaptorSprint",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "Eyes",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 5000,
		Description = T(801509261809, --[[ModItemHealthCondition BionicEye Description]] "A bionic eye that functions as a normal eye. Occasional malfunctions causing migraines."),
		DisplayName = T(728100098993, --[[ModItemHealthCondition BionicEye DisplayName]] "Bionic Eye"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "MalfunctionBionicEye",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationRandom = 80000000,
		ExpirationTime = 8000000,
		FloatingTextType = "Display name",
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Android", "Human" ),
		group = "PROJECTX",
		id = "BionicEye",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = -200000,
		Description = T(459906287725, --[[ModItemHealthCondition Zapped Description]] "This person, animal or object has taken shock damage and has been rendered unconscious. "),
		DisplayName = T(589988008059, --[[ModItemHealthCondition Zapped DisplayName]] "Zapped"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationRandom = 24000,
		ExpirationTime = 4000,
		FloatingTextType = "Display name",
		StackLimit = 1,
		group = "PROJECTX",
		id = "Zapped",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = -30000,
		Description = T(291411922888, --[[ModItemHealthCondition ChippedCriminal Description]] "This person has a chip implant due to criminal activity and is being monitored by the authorities. The implant greatly reduces the hosts entire efficiency and makes every skill <color TextEmphasis>'indifferent'</color>. Attempting to remove the chip is an illegal act.\n\n<center><color TextEmphasis>(Healing Level 7 Required to Treat)</color>"),
		DisplayName = T(291417296336, --[[ModItemHealthCondition ChippedCriminal DisplayName]] "Chip Implant"),
		FloatingTextType = "Display name",
		ManipulationModifier = -30000,
		Modifiers = {
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_lX7dT2w",
				Inclination = "Indifferent",
				Skill = "Combat",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_X52hYDs",
				Inclination = "Indifferent",
				Skill = "Construction",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "",
				Inclination = "Indifferent",
				Skill = "Cooking",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_Fcx5kNO",
				Inclination = "Indifferent",
				Skill = "Crafting",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "",
				Inclination = "Indifferent",
				Skill = "Farming",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_M8R6ZeY",
				Inclination = "Indifferent",
				Skill = "Healing",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "",
				Inclination = "Indifferent",
				Skill = "Intellectual",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_BDcS0dd",
				Inclination = "Indifferent",
				Skill = "Physical",
				param_bindings = false,
			}),
		},
		MovementModifier = -50000,
		PainModifier = 10000,
		StackLimit = 1,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Freedom",
				param_bindings = false,
			}),
		},
		TreatmentDuration = 80000,
		TreatmentMaxSkillLevel = 8,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "ChipDevice",
		TreatmentMedicineResourceAlt = "ChipDevice",
		TreatmentMinSkillLevel = 7,
		TreatmentStatus = "requires treatment",
		Type = "Debuff",
		group = "PROJECTX",
		id = "ChippedCriminal",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		AffectedArea = "outline",
		BleedingModifier = 2000,
		ConsciousnessModifier = -1000,
		Description = T(737304467561, --[[ModItemHealthCondition CyberBlasterBurn Description]] "This person or unit has been hit by a Cyber Blaster Bolt that has caused burns."),
		DisplayName = T(502557529023, --[[ModItemHealthCondition CyberBlasterBurn DisplayName]] "Cyber Blaster Burn"),
		FloatingTextIcon = "UI/Hud/float_hit",
		FloatingTextType = "Display name",
		HealthLoss = 15000,
		ManipulationModifierOpt = -1000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		MovementModifierOpt = -1000,
		PainModifier = 2000,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Burn_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 20000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedHealingBalm",
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "PROJECTX",
		id = "CyberBlasterBurn",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		BleedingModifier = 2000,
		DirtinessModifier = 10000,
		DirtinessTarget = "WholeBody",
		DisplayName = T(760323782117, --[[ModItemHealthCondition Shrieker_Brute_DeepPuncturePX DisplayName]] "Brute Deep Puncture"),
		Expiration = true,
		ExpirationNoCondChance = 40,
		ExpirationRandom = 960000,
		ExpirationTime = 960000,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 60000,
		LimitCond = {
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Common",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Critical",
				param_bindings = false,
				weight = 2,
			}),
		},
		LimitNoCondChance = 20,
		ManipulationModifierOpt = -20000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_2_Moderate",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		MovementModifierOpt = -20000,
		PainModifier = 16000,
		ReplaceOldest = false,
		StackLimit = 6,
		StackLimitCounter = function (self) return self.id end,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Stab_Body_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 20000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentPriority = 2,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "Weapons_Insect",
		id = "Shrieker_Brute_DeepPuncturePX",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "TorsoHeart",
				BodyPartGroup = "Organs",
				param_bindings = false,
			}),
		},
		Description = T(664406127043, --[[ModItemHealthCondition AdvancedPacemaker Description]] "This person is fitted with an advanced pacemaker, bionic functions that keeps the heart pumping."),
		DisplayName = T(740525050222, --[[ModItemHealthCondition AdvancedPacemaker DisplayName]] "Advanced Pacemaker"),
		FloatingTextType = "Display name",
		Type = "Buff",
		group = "PROJECTX",
		id = "AdvancedPacemaker",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 10000,
		ConsciousnessModifier = -20000,
		Coughing = true,
		Description = T(408057084165, --[[ModItemHealthCondition FireSpread Description]] "This person, animal or object had caught on fire from another target."),
		DisplayName = T(116976637538, --[[ModItemHealthCondition FireSpread DisplayName]] "Spread of Fire"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationRandom = 40000,
		ExpirationTime = 12000,
		FloatingTextType = "Display name",
		HealthLoss = 70000,
		LifeTreatening = true,
		MovementModifier = -20000,
		PainModifier = 60000,
		StackLimit = 1,
		group = "PROJECTX",
		id = "FireSpread",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 20000,
		Description = T(180383345658, --[[ModItemHealthCondition Freedom Description]] "This person has had a chip implant removed that greatly restricted there overall manipulation, health and movement. Now that the chip has been removed, they are free and are slowly returning back to full strength again. This person has regained interest in some skills.\n\n<center><color TextEmphasis>(All skills have been returned to 'normal' and some have additional levels boosted.)</color>"),
		DisplayName = T(572403077862, --[[ModItemHealthCondition Freedom DisplayName]] "Freed Criminal"),
		FloatingTextType = "Display name",
		ManipulationModifier = 50000,
		Modifiers = {
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_vjLPYJM",
				Inclination = "Interested",
				Level = 2,
				Skill = "Combat",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_MNmWFKK",
				Inclination = "Normal",
				Skill = "Construction",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_SfAOhiX",
				Inclination = "Normal",
				Skill = "Cooking",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_YmLEBmI",
				Inclination = "Interested",
				Level = 2,
				Skill = "Crafting",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_CApXJwK",
				Inclination = "Normal",
				Skill = "Farming",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "",
				Inclination = "Normal",
				Level = 2,
				Skill = "Healing",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "autoid_fDsBmM1_kmieFad",
				Inclination = "Interested",
				Level = 2,
				Skill = "Intellectual",
				param_bindings = false,
			}),
			PlaceObj('ModifySkill', {
				Id = "",
				Inclination = "Interested",
				Level = 2,
				Skill = "Physical",
				param_bindings = false,
			}),
		},
		MovementModifier = 50000,
		PainModifier = -20000,
		StackLimit = 1,
		Type = "Buff",
		group = "PROJECTX",
		id = "Freedom",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 100000,
		Description = T(233755681098, --[[ModItemHealthCondition MercsImplant Description]] "A implant designed by a Mercenary Guild, to receive such an implant they must be an official member of the Mercenary Legion. "),
		DisplayName = T(886220798405, --[[ModItemHealthCondition MercsImplant DisplayName]] "Mercenaries Implant"),
		FloatingTextType = "Display name",
		HealthRegenModifier = 3000,
		ManipulationModifier = 20000,
		MaxHealthModifier = 200000,
		StackLimit = 1,
		Type = "Buff",
		group = "PROJECTX",
		id = "MercsImplant",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		Coughing = true,
		Description = T(543295165033, --[[ModItemHealthCondition CryoFreeze Description]] "This person, animal or object has been cryogenically frozen and cannot move until the effect fades."),
		DisplayName = T(956470694015, --[[ModItemHealthCondition CryoFreeze DisplayName]] "Cryogenically Frozen"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 80000,
		FloatingTextType = "Display name",
		IsCompatible = function (self, owner, ...) return not owner:IsDead() end,
		MovementModifier = -200000,
		StackLimit = 1,
		Type = "Injury",
		group = "PROJECTX",
		id = "CryoFreeze",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "Arms",
				param_bindings = false,
			}),
		},
		Description = T(898429950596, --[[ModItemHealthCondition CyberneticArm Description]] "A cybernetic arm that functions as a normal arm. Occasional can malfunction."),
		DisplayName = T(397004056031, --[[ModItemHealthCondition CyberneticArm DisplayName]] "Cybernetic Arm"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "CyberneticMalfunctionArm",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationRandom = 80000000,
		ExpirationTime = 8000000,
		FloatingTextType = "Display name",
		ManipulationModifier = 5000,
		MovementModifier = 5000,
		StackLimit = 1,
		StackLimitCounter = function (self) return "CyberneticArm" .. self.body_part end,
		Type = "Buff",
		group = "PROJECTX",
		id = "CyberneticArm",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "UpperTorso",
				param_bindings = false,
			}),
		},
		BleedingModifier = 1000,
		DirtinessModifier = 15000,
		DirtinessTarget = "Jacket",
		DisplayName = T(468350086429, --[[ModItemHealthCondition Shrieker_Brute_TailStabPX DisplayName]] "Brute Tail Stab"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
				weight = 30,
			}),
		},
		ExpirationNoCondChance = 40,
		ExpirationRandom = 960000,
		ExpirationTime = 960000,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 40000,
		LimitCond = {
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Common",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Critical",
				param_bindings = false,
				weight = 2,
			}),
		},
		LimitNoCondChance = 20,
		ManipulationModifierOpt = -10000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		PainModifier = 8000,
		ReplaceOldest = false,
		StackLimit = 6,
		StackLimitCounter = function (self) return self.id end,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Stab_Body_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 10000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentPriority = 3,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "Weapons_Insect",
		id = "Shrieker_Brute_TailStabPX",
	}),
	PlaceObj('ModItemHealthCondition', {
		ConsciousnessModifier = 200000,
		Description = T(663499710173, --[[ModItemHealthCondition RaptorInstinct Description]] "Capable of moving at an increased speed when hunting prey and increased conciousness."),
		DisplayName = T(766652130700, --[[ModItemHealthCondition RaptorInstinct DisplayName]] "Raptor's Instinct"),
		FloatingTextType = "Display name",
		MovementModifier = 100000,
		StackLimit = 1,
		group = "PROJECTX",
		id = "RaptorInstinct",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		BleedingModifier = 15000,
		ConsciousnessModifier = -20000,
		Coughing = true,
		Description = T(328134982166, --[[ModItemHealthCondition AlienRadiationBurn Description]] "This person, animal or object has been in contact with alien technology which has caused radiation burns."),
		DisplayName = T(253744743600, --[[ModItemHealthCondition AlienRadiationBurn DisplayName]] "Alien Radiation Burn"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 40000,
		FloatingTextType = "Display name",
		HealthLoss = 20000,
		LifeTreatening = true,
		ManipulationModifier = -50000,
		MovementModifier = -20000,
		PainModifier = 40000,
		StackLimit = 1,
		group = "PROJECTX",
		id = "AlienRadiationBurn",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "UpperTorso",
				param_bindings = false,
			}),
		},
		BleedingModifier = 1000,
		DirtinessModifier = 15000,
		DirtinessTarget = "Jacket",
		DisplayName = T(364170392816, --[[ModItemHealthCondition RaptorTailSwipePX DisplayName]] "Raptor Tail Swipe"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
				weight = 30,
			}),
		},
		ExpirationNoCondChance = 40,
		ExpirationRandom = 960000,
		ExpirationTime = 960000,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 20000,
		LimitCond = {
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Common",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "PuncturedChestOrgan_Critical",
				param_bindings = false,
				weight = 2,
			}),
		},
		LimitNoCondChance = 20,
		ManipulationModifierOpt = -10000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		PainModifier = 5000,
		ReplaceOldest = false,
		StackLimit = 6,
		StackLimitCounter = function (self) return self.id end,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Stab_Body_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 10000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentPriority = 3,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "Weapons_Insect",
		id = "RaptorTailSwipePX",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		Description = T(106514955060, --[[ModItemHealthCondition CyberneticAndroid Description]] "This person is a cybernetic android, meaning the entire body is made from metallic material and electronics."),
		DisplayName = T(491598749172, --[[ModItemHealthCondition CyberneticAndroid DisplayName]] "Cybernetic Android"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "FriedElectronics",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationRandom = 80000000,
		ExpirationTime = 40000000,
		FloatingTextType = "Display name",
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Android", "Animal", "Human", "Robot" ),
		group = "PROJECTX",
		id = "CyberneticAndroid",
	}),
	PlaceObj('ModItemHealthCondition', {
		Description = T(706615481663, --[[ModItemHealthCondition NumbedNerves Description]] "Has taken a pill that numbs the nerves allowing this person to sustain double the temperature threshold for 48 hours."),
		DisplayName = T(248087025079, --[[ModItemHealthCondition NumbedNerves DisplayName]] "Numbed Nerves"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 1920000,
		FloatingTextType = "Display name",
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_RpoBOsR",
				mul = 2000,
				param_bindings = false,
				prop = "TemperatureHigh",
			}),
			PlaceObj('ModifyHuman', {
				Id = "",
				mul = 2000,
				param_bindings = false,
				prop = "TemperatureLow",
			}),
		},
		PainModifier = -100000,
		StackLimit = 1,
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "NumbedNerves",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "TorsoHeart",
				BodyPartGroup = "ChestOrgans",
				param_bindings = false,
			}),
		},
		Coughing = true,
		Description = T(498090788144, --[[ModItemHealthCondition MalfunctionedPacemaker Description]] "This person's pacemaker has malfunctioned and requires immediate repairs. If left untreated the person has an increased chance of death."),
		DisplayName = T(302018741185, --[[ModItemHealthCondition MalfunctionedPacemaker DisplayName]] "Malfunctioned Pacemaker"),
		FloatingTextType = "Display name",
		LifeTreatening = true,
		ManipulationModifier = -20000,
		MistreatmentChance = 30,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "MalfunctionedPacemaker",
				param_bindings = false,
			}),
		},
		MovementModifier = -20000,
		StackLimit = 1,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Pacemaker",
				param_bindings = false,
			}),
		},
		TreatmentMaxSkillLevel = 7,
		TreatmentMedicineAmount = 2000,
		TreatmentMedicineResource = "ElectronicComponents",
		TreatmentMedicineResourceAlt = "CPUCore",
		TreatmentMinSkillLevel = 5,
		TreatmentNoCondChance = 50,
		TreatmentPriority = 3,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "PROJECTX",
		id = "MalfunctionedPacemaker",
	}),
	PlaceObj('ModItemHealthCondition', {
		Description = T(410330771201, --[[ModItemHealthCondition CyberneticMalfunctionArm Description]] "One of the cybernetic limbs have malfunctioned. System rebooting; Malfunction repair status estimated 5 hours.\n\n-20% Manipulation Efficiency."),
		DisplayName = T(363656176586, --[[ModItemHealthCondition CyberneticMalfunctionArm DisplayName]] "Cybernetic Malfunction"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "CyberneticArm",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationTime = 320000,
		FloatingTextType = "Display name",
		ManipulationModifier = -20000,
		Type = "Injury",
		group = "PROJECTX",
		id = "CyberneticMalfunctionArm",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		Description = T(741590682660, --[[ModItemHealthCondition NaniteShot Description]] "Increased movement & attack speed for 24 hours."),
		DisplayName = T(110135131476, --[[ModItemHealthCondition NaniteShot DisplayName]] "Juno Anger Incarnate"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		FloatingTextType = "Display name",
		MovementModifier = 75000,
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "NaniteShot",
		unit_reactions = {
			PlaceObj('UnitReaction', {
				Event = "ModifyAttackCooldown",
				Handler = function (self, target, cooldown, weapon_def)
					return Min(cooldown, Max(500, weapon_def.AttackCooldownMaxSkill / 2))
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 100000,
		Description = T(462236128087, --[[ModItemHealthCondition NaniteShot_1 Description]] "Increased consciousness and manipulation for 24 hours."),
		DisplayName = T(896996147891, --[[ModItemHealthCondition NaniteShot_1 DisplayName]] "Nanite Shot"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		FloatingTextType = "Display name",
		ManipulationModifier = 100000,
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "NaniteShot_1",
		unit_reactions = {
			PlaceObj('UnitReaction', {
				Event = "ModifyAttackCooldown",
				Handler = function (self, target, cooldown, weapon_def)
					return Min(cooldown, Max(500, weapon_def.AttackCooldownMaxSkill / 2))
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		BleedingModifier = 8000,
		DisplayName = T(667540685354, --[[ModItemHealthCondition AdvancedSniperWound DisplayName]] "Sniper Wound"),
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 150000,
		ManipulationModifierOpt = -10000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 10,
		MovementModifierOpt = -10000,
		PainModifier = 20000,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Gunshot_Body_Treated",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 10000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "PROJECTX",
		id = "AdvancedSniperWound",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		Description = T(646599524027, --[[ModItemHealthCondition OneWithNature_Outside Description]] "Feeling calmed while outside."),
		DisplayName = T(147792545416, --[[ModItemHealthCondition OneWithNature_Outside DisplayName]] "One With Nature"),
		FloatingTextType = "Display name",
		ManipulationModifier = 50000,
		MovementModifier = 50000,
		ShowFloatingText = false,
		Type = "Buff",
		id = "OneWithNature_Outside",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		BleedingModifier = 2000,
		ConsciousnessModifier = -500000,
		Description = T(845388525024, --[[ModItemHealthCondition CyberExplosion Description]] "This person, object or unit has received explosion damage from Cyber Weaponry and is temporarily stunned."),
		DisplayName = T(415534211163, --[[ModItemHealthCondition CyberExplosion DisplayName]] "Cyber Explosion"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationRandom = 20000,
		ExpirationTime = 400,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 225000,
		PainModifier = 5000,
		Type = "Debuff",
		group = "PROJECTX",
		id = "CyberExplosion",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		Description = T(212181677653, --[[ModItemHealthCondition GelBoost Description]] "Increased manipulation and double energy threshold for 12 hours."),
		DisplayName = T(631103077667, --[[ModItemHealthCondition GelBoost DisplayName]] "Boost Gel"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		FloatingTextType = "Display name",
		ManipulationModifier = 150000,
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_qtmrAtj",
				mul = 2000,
				param_bindings = false,
				prop = "MaxEnergyAvailable",
			}),
		},
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "GelBoost",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 5000,
		Description = T(702726363338, --[[ModItemHealthCondition InflictHeavyBleed Description]] "This person, object or entity has been inflicted with a toxin that produces chemicals into the bloodstream, causing the blood to thin and increase bleeding."),
		DisplayName = T(193925899043, --[[ModItemHealthCondition InflictHeavyBleed DisplayName]] "Inflicted Heavy Bleed"),
		FloatingTextIcon = "UI/Hud/float_hit",
		FloatingTextType = "Display name",
		HealthLoss = 5000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
				weight = 50,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Infection_2_Moderate",
				param_bindings = false,
				weight = 20,
			}),
		},
		TreatmentMedicineAmount = 2000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentNoCondChance = 50,
		TreatmentPriority = 2,
		TreatmentStatus = "requires treatment",
		Type = "Debuff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "InflictHeavyBleed",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		AffectedArea = "inside",
		ConsciousnessModifier = 50000,
		Description = T(606216746063, --[[ModItemHealthCondition HackersWit Description]] "This person is a genius, they are more alert than the ordinary person and alot faster to react to situations. "),
		DisplayName = T(343317279733, --[[ModItemHealthCondition HackersWit DisplayName]] "Hackers Wit"),
		FloatingTextType = "Display name",
		ManipulationModifier = 20000,
		MovementModifier = 10000,
		StackLimit = 1,
		Type = "Buff",
		group = "PROJECTX",
		id = "HackersWit",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				BodyPartGroup = "WholeHead",
				param_bindings = false,
			}),
		},
		Description = T(984458367911, --[[ModItemHealthCondition OneWithNature_Inside Description]] "The feeling of restlessness when inside, trapped by four walls."),
		DisplayName = T(400016491731, --[[ModItemHealthCondition OneWithNature_Inside DisplayName]] "One With Nature"),
		FloatingTextType = "Display name",
		ManipulationModifier = -50000,
		MovementModifier = -50000,
		ShowFloatingText = false,
		Type = "Disease",
		id = "OneWithNature_Inside",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "Legs",
				param_bindings = false,
			}),
		},
		Description = T(379789135295, --[[ModItemHealthCondition CyberneticLeg Description]] "A cybernetic leg that functions as a normal leg. Occasional malfunctions causing slowness. "),
		DisplayName = T(317436823243, --[[ModItemHealthCondition CyberneticLeg DisplayName]] "Cybernetic Leg"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "CyberneticMalfunctionLeg",
				param_bindings = false,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationRandom = 80000000,
		ExpirationTime = 8000000,
		FloatingTextType = "Display name",
		MovementModifier = 10000,
		StackLimit = 1,
		StackLimitCounter = function (self) return "CyberneticLeg" .. self.body_part end,
		Type = "Buff",
		group = "PROJECTX",
		id = "CyberneticLeg",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "HeadBrain",
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = 100000,
		Description = T(388003965214, --[[ModItemHealthCondition Frenzy Description]] "Increased movement speed and attack rate. Blindly aggressive, can't be pacified."),
		DisplayName = T(545171185608, --[[ModItemHealthCondition Frenzy DisplayName]] "Frenzy"),
		FloatingTextType = "Display name",
		MovementModifier = 50000,
		StackLimit = 1,
		Type = "Buff",
		UnitTags = set( "Animal", "Human" ),
		group = "PROJECTX",
		id = "Frenzy",
		unit_reactions = {
			PlaceObj('UnitReaction', {
				Event = "ModifyAttackCooldown",
				Handler = function (self, target, cooldown, weapon_def)
					return Min(cooldown, Max(500, weapon_def.AttackCooldownMaxSkill / 2))
				end,
				param_bindings = false,
			}),
		},
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "WholeBody",
				param_bindings = false,
			}),
		},
		AffectedArea = "outline",
		ConsciousnessModifierOpt = -3000,
		DirtinessModifier = 5000,
		DirtinessTarget = "WholeBody",
		DisplayName = T(546062517535, --[[ModItemHealthCondition TurretLaserBurnAdv DisplayName]] "Electric Laser Burn"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_2_Moderate",
				param_bindings = false,
				weight = 20,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Burn_2",
				param_bindings = false,
				weight = 80,
			}),
		},
		ExpirationNoCondChance = 0,
		ExpirationRandom = 120000,
		ExpirationTime = 640000,
		FloatingTextIcon = "UI/Hud/float_hit",
		HealthLoss = 10000,
		ManipulationModifierOpt = -3000,
		MistreatmentChance = 50,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
				weight = 20,
			}),
			PlaceObj('HealthConditionOption', {
				effect = "Wound_Scar",
				param_bindings = false,
			}),
		},
		MistreatmentNoCondChance = 20,
		MovementModifierOpt = -3000,
		PainModifier = 2000,
		StackLimit = 2,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Burn_Treated",
				param_bindings = false,
			}),
		},
		TreatmentDuration = 10000,
		TreatmentMaxSkillLevel = 5,
		TreatmentMedicineAmount = 1000,
		TreatmentMedicineResource = "Medicine",
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "PROJECTX",
		id = "TurretLaserBurnAdv",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = -15000,
		Description = T(172828171221, --[[ModItemHealthCondition ChainLightning Description]] "This person, animal or object was close to lightning and received some damage."),
		DisplayName = T(754703282796, --[[ModItemHealthCondition ChainLightning DisplayName]] "Chained Lightning"),
		Expiration = true,
		ExpirationNoCondChance = 0,
		ExpirationTime = 40000,
		FloatingTextType = "Display name",
		HealthLoss = 35000,
		LifeTreatening = true,
		ManipulationModifier = -15000,
		MistreatmentChance = 20,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Infection_1_Mild",
				param_bindings = false,
				weight = 50,
			}),
		},
		MistreatmentNoCondChance = 20,
		MovementModifier = -15000,
		PainModifier = 25000,
		StackLimit = 1,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "Energized",
				param_bindings = false,
				weight = 100,
			}),
		},
		TreatmentDuration = 45000,
		TreatmentMaxSkillLevel = 6,
		TreatmentMedicineAmount = 2000,
		TreatmentMedicineResource = "MedBandages",
		TreatmentMinSkillLevel = 3,
		TreatmentPriority = 1,
		TreatmentStatus = "requires treatment",
		group = "PROJECTX",
		id = "ChainLightning",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPartGroup = "Ears",
				param_bindings = false,
			}),
		},
		Description = T(355581139759, --[[ModItemHealthCondition HearingAid Description]] "This person is fitted with an hearing aid."),
		DisplayName = T(582003167955, --[[ModItemHealthCondition HearingAid DisplayName]] "Hearing Aid"),
		Expiration = true,
		ExpirationRandom = 160000000,
		ExpirationTime = 20000000,
		FloatingTextType = "Display name",
		Modifiers = {
			PlaceObj('ModifyHuman', {
				Id = "autoid_fDsBmM1_iihDGkW",
				mul = 2000,
				param_bindings = false,
				prop = "HearingRange",
			}),
		},
		Type = "Buff",
		group = "PROJECTX",
		id = "HearingAid",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				BodyPart = "All",
				param_bindings = false,
			}),
		},
		BleedingModifier = 1000,
		ConsciousnessModifier = -500000,
		Coughing = true,
		Description = T(617343930225, --[[ModItemHealthCondition Paralyzed Description]] "This person, animal or object has been temporarily paralyzed and cannot move or attack until the effect fades."),
		DisplayName = T(949700652210, --[[ModItemHealthCondition Paralyzed DisplayName]] "Paralyzed"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 1200,
		FloatingTextIcon = "UI/Hud/float_hit",
		FloatingTextType = "Display name",
		HealthLoss = 10000,
		IsCompatible = function (self, owner, ...) return not owner:IsDead() end,
		Modifiers = {
			PlaceObj('ForbidActivity', {
				Activity = "Combat",
				FilterBy = "Combat",
				Reason = "Paralyzed",
				param_bindings = false,
			}),
		},
		MovementModifier = -500000,
		PainModifier = 20000,
		StackLimit = 10,
		Type = "Injury",
		group = "PROJECTX",
		id = "Paralyzed",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		ConsciousnessModifier = -300000,
		Description = T(451758997573, --[[ModItemHealthCondition FriedElectronics Description]] "Malfunctioned - Requires Repair of Electronics."),
		DisplayName = T(286260921211, --[[ModItemHealthCondition FriedElectronics DisplayName]] "Fried Electronics"),
		Expiration = true,
		ExpirationCond = {
			PlaceObj('HealthConditionOption', {
				effect = "CyberneticAndroid",
				param_bindings = false,
			}),
		},
		FloatingTextType = "Display name",
		HealthLoss = 50000,
		LifeTreatening = true,
		ManipulationModifier = -300000,
		MistreatmentChance = 30,
		MistreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "FriedElectronics",
				param_bindings = false,
			}),
		},
		MovementModifier = -300000,
		StackLimit = 1,
		TreatmentCond = {
			PlaceObj('HealthConditionOption', {
				effect = "CyberneticAndroid",
				param_bindings = false,
			}),
		},
		TreatmentMaxSkillLevel = 8,
		TreatmentMedicineAmount = 5000,
		TreatmentMedicineResource = "ScrapElectronics",
		TreatmentMedicineResourceAlt = "CPUCore",
		TreatmentMinSkillLevel = 5,
		TreatmentNoCondChance = 50,
		TreatmentPriority = 1,
		TreatmentStatus = "requires treatment",
		Type = "Injury",
		group = "PROJECTX",
		id = "FriedElectronics",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		BleedingModifier = 2000,
		Coughing = true,
		Description = T(354422773500, --[[ModItemHealthCondition AlienPlasmaWound Description]] "This person, animal or object has been in contact with alien technology which has caused a plasma wound."),
		DisplayName = T(887422571508, --[[ModItemHealthCondition AlienPlasmaWound DisplayName]] "Alien Plasma Wound"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 8000,
		FloatingTextType = "Display name",
		HealthLoss = 10000,
		LifeTreatening = true,
		PainModifier = 5000,
		group = "PROJECTX",
		id = "AlienPlasmaWound",
	}),
	PlaceObj('ModItemHealthCondition', {
		Description = T(497069970965, --[[ModItemHealthCondition LightBackpack Description]] "Has increased movement speed of 25% due to wearing light tools."),
		DisplayName = T(735870874106, --[[ModItemHealthCondition LightBackpack DisplayName]] "Tool: Light Backpack"),
		FloatingTextType = "Display name",
		MovementModifier = 25000,
		ShowFloatingText = false,
		StackLimit = 1,
		group = "PROJECTX",
		id = "LightBackpack",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		BleedingModifier = 2000,
		Description = T(532100583122, --[[ModItemHealthCondition NaniteExplosionPX Description]] "This person, animal or object has been in contact with nano-tech weaponry."),
		DisplayName = T(570238139613, --[[ModItemHealthCondition NaniteExplosionPX DisplayName]] "Nanite Explosion"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 8000,
		FloatingTextType = "Display name",
		HealthLoss = 40000,
		LifeTreatening = true,
		MovementModifier = -5000,
		PainModifier = 5000,
		group = "PROJECTX",
		id = "NaniteExplosionPX",
	}),
	PlaceObj('ModItemHealthCondition', {
		AffectableBodyParts = {
			PlaceObj('HealthConditionBodyParts', {
				param_bindings = false,
			}),
		},
		BleedingModifier = 3000,
		ConsciousnessModifier = -5000,
		Description = T(231828148947, --[[ModItemHealthCondition NaniteBurnPX Description]] "This person, animal or object has been in contact with nano-tech weaponry."),
		DisplayName = T(392870163124, --[[ModItemHealthCondition NaniteBurnPX DisplayName]] "Nanite Burns"),
		Expiration = true,
		ExpirationNoCondChance = 100,
		ExpirationTime = 8000,
		FloatingTextType = "Display name",
		HealthLoss = 10000,
		LifeTreatening = true,
		ManipulationModifier = -10000,
		MovementModifier = -5000,
		PainModifier = 5000,
		group = "PROJECTX",
		id = "NaniteBurnPX",
	}),
	PlaceObj('ModItemMentalBreakdown', {
		AttackFlags = 55,
		Condition = function (self, unit)
			if not unit.can_attack then
				return
			end
			return MapGetFirst(unit, unit:GetDetectionRange(), "Building", const.efAttackable | const.efVisible, nil, const.gofDamageable, function(obj, unit)
				return not unit:IsAttackTargetIgnored(obj) and obj:CheckLabelName("BerserkTargets") and obj:CanBeAttacked(unit)
			end, unit)
		end,
		Description = T(787771321348, --[[ModItemMentalBreakdown Hallucinating Description]] "Experiencing violent hallucinations due to having a schizophrenia episode."),
		DisplayName = T(336820273424, --[[ModItemMentalBreakdown Hallucinating DisplayName |gender-variants]] "Hallucinating"),
		Execute = function (self, unit, data, end_time)
			local radius = unit:GetDetectionRange()
			local objs = MapGet(unit, radius, "Building", const.efAttackable | const.efVisible, nil, const.gofDamageable, function(obj, unit)
				return not unit:IsAttackTargetIgnored(obj)  and obj:CheckLabelName("BerserkTargets") and obj:CanBeAttacked(unit)
			end, unit)
			if not objs then
				return
			end
			local seed = unit:RandSeed("Berserk")
			local function weight(obj)
				return guim + radius - unit:GetDist(obj)
			end
			local obj = table.weighted_rand(objs, weight, seed)
			local burst_time = unit:Random(30*1000, "Berserk")
			local attack_until = Min(end_time, GameTime() + burst_time)
			MapForEach(unit, 5*guim, "Human", function(survivor, unit)
				if survivor ~= unit and not survivor:HasTrait("Intimidating") and survivor:GetSkillLevel("Combat") <= 5 then
					survivor:AddHappinessFactor("Intimidated", "Berserk around", { other = unit })
				end
			end, unit)
			unit:WaitAttackTarget(obj, self.AttackFlags, attack_until, self)
			local remaining_time = end_time - GameTime()
			if remaining_time <= 0 then
				return
			end
			local idle_time = Min(remaining_time, unit:Random(15*1000, "Berserk"))
			local anims = {"standing_Berserk_Idle", "standing_Berserk_Idle2"}
			while idle_time > 0 do
				local idle_anim = unit:RandAnim(anims, "Berserk")
				local anim_time = Min(unit:GetAnimDuration(idle_anim), idle_time)
				idle_time = idle_time - anim_time
				unit:PlayTimedMomentTrackedAnim(idle_anim, anim_time)
			end
		end,
		GetAttackWeapons = function (self, attacker)
			return "Melee_BareHands_Berserk"
		end,
		RecoveryTime = 120000,
		RecoveryTimeRand = 40000,
		RepeatCount = -1,
		StatusIcon = "UI/Hud/st_breakdown_berserk",
		Weight = 50,
		id = "Hallucinating",
	}),
	PlaceObj('ModItemMentalBreakdown', {
		AttackFlags = 0,
		Condition = function (self, unit)
			return unit:HasTrait("FarmWorker") or Scenario.id == "ProjectXScenario" and unit.command_center:GetSupplyRequestList("Money", 5000 * const.ResourceScale, unit, nil, nil, "test_only", nil, max_int, nil, nil, function(_, req_bld) return req_bld.can_steal_from end)
		end,
		DisplayName = T(740661067504, --[[ModItemMentalBreakdown Stealing DisplayName |gender-variants]] "Stealing <image 'UI/Icons/Resources/res_money' 1100>"),
		Execute = function (self, unit, data, end_time)
			if data.stolen_amount >= data.desired_amount then
				return
			end
			local steal_amount = RoundResourceAmount(data.desired_amount / 10)
			if not unit.command_center:GetSupplyRequestList("Money", steal_amount, unit, nil, nil, "test_only", nil, max_int, nil, nil, function(_, req_bld) return req_bld.can_steal_from end) then
				return
			end
			if not unit:CmdGetMoney(nil, steal_amount, "stealing", function(_, req_bld) return req_bld.can_steal_from end) then
				return
			end
			data.stolen_amount = data.stolen_amount + steal_amount
			unit:PlayIdleAnim(5000)
		end,
		OnStart = function (self, unit, data)
			data.desired_amount = unit:RandRange(2500 * const.ResourceScale, 5000 * const.ResourceScale, "Stealing")
			data.stolen_amount = 0
			unit:StatusUIAddData("stealing", {
				title = T(265832624855, --[[MentalBreakdown Stealing DisplayName |gender-variants]] "Contemplating theft", unit),
			}, StatusUIPriorities["breakdown"] + 1)
			local dtors = unit:PushDestructor(function(unit)
				if unit:StatusUIIsDataAdded("stealing") then
					unit:StatusUIRemoveData("stealing")
				end
			end)
			unit:PlayIdleAnim(20000)
			unit:PopAndCallDestructor(dtors)
		end,
		RecoveryTime = 160000,
		RepeatCount = 10,
		RoamOnFail = false,
		StatusIcon = "UI/Hud/st_breakdown_stealing",
		group = "Severity_1",
		id = "Stealing",
	}),
	PlaceObj('ModItemRelaxationRoutine', {
		Description = T(594928685678, --[[ModItemRelaxationRoutine Daydreaming Description]] "I suppose drifting off into your own mind is one way to escape the hard labor of running a colony."),
		DirectOrderText = T(721177936569, --[[ModItemRelaxationRoutine Daydreaming DirectOrderText |gender-variants]] "Sit to daydream"),
		DisplayName = T(730949331516, --[[ModItemRelaxationRoutine Daydreaming DisplayName]] "Daydreaming"),
		Duration = 20000,
		Execute = function (self, unit, target, end_time)
			unit.relaxing = end_time
			local chair_sit_side = target:GetClosestSideToUnit(unit)
			return unit:SitAndRelaxOnChair(target, chair_sit_side)
		end,
		HappinessFactor = "Daydream",
		IsValidTarget = function (self, target, unit)
			return target.working and target:CanBeOwnedBy(unit) and (not target.related_table or not target.related_table:IsVirtual())
		end,
		OnEnd = function (self, unit, target)
			unit:ExitHolder()
			target:CancelReservation(unit)
		end,
		OnStart = function (self, unit, target)
			target:Reserve(unit)
		end,
		Preference = 10,
		RequiredLabel = "Chair",
		Satisfaction = 15000,
		SortKey = 2100,
		StatusText = T(579758303335, --[[ModItemRelaxationRoutine Daydreaming StatusText |gender-variants]] "Daydreaming"),
		group = "PROJECTX",
		id = "Daydreaming",
	}),
	PlaceObj('ModItemRelaxationRoutine', {
		Description = T(854463862719, --[[ModItemRelaxationRoutine Scouting Description]] "Scouting the perimeter of the colony increases the safety of the colony members."),
		DisplayName = T(584118345546, --[[ModItemRelaxationRoutine Scouting DisplayName]] "Scouting"),
		Duration = 20000,
		Execute = function (self, unit, target, end_time)
			local hash = GetPosHash(unit)
			local stuck_counter, roam_count = 0, 3
			while GameTime() < end_time do
				unit:Roam(30*guim, guim, nil, "try outside")
				if GameTime() >= end_time then
					break
				end
				local new_hash = GetPosHash(unit)
				if new_hash == hash then
					self.roam_start_pos = nil
					stuck_counter = stuck_counter + 1
					if stuck_counter == 3 then
						return
					end
				else
					stuck_counter = 0
					hash = new_hash
					if roam_count == 0 then 
						unit:PlayIdleAnim()
						roam_count = unit:Random(3, "Scouting")
					else
						roam_count = roam_count - 1
					end
				end
			end
			return true
		end,
		HappinessFactor = "Scouting",
		Preference = 10,
		Satisfaction = 25000,
		SortKey = 2000,
		StatusText = T(965837994711, --[[ModItemRelaxationRoutine Scouting StatusText |gender-variants]] "Scouting"),
		group = "PROJECTX",
		id = "Scouting",
	}),
	PlaceObj('ModItemRelaxationRoutine', {
		ApproachTarget = return_true,
		Description = T(852982001217, --[[ModItemRelaxationRoutine SmokingJoint Description]] "Some argue that there's nothing more relaxing than taking the time to smoke a good joint.Some argue that there's nothing more relaxing than taking the time to smoke a good joint."),
		DisplayName = T(172828042635, --[[ModItemRelaxationRoutine SmokingJoint DisplayName]] "Smoking Joint"),
		Duration = 20000,
		Execute = function (self, unit, target, end_time)
			return unit:CmdConsume(ActivityTypes.Eating, target)
		end,
		FindRequiredTarget = function (self, unit, range)
			if not unit:IsResAccepted("SmokeleafPipe") then return end
			local req_list = unit.command_center:GetSupplyRequestList("SmokeleafPipe", const.ResourceScale, unit)
			return #(req_list or "") > 0 and req_list
		end,
		HappinessFactor = "SmokingJoint",
		OnEnd = function (self, unit, target, success)
			unit:ResumeRelaxationSatisfaction()
		end,
		OnStart = function (self, unit, target)
			unit:PauseRelaxationSatisfaction()
		end,
		Preference = 10,
		RoutineAllowed = function (self, unit)
			return unit:IsRelaxationRoutineAllowed(self.id) and unit:IsResAccepted("SmokeleafPipe")
		end,
		Satisfaction = 25000,
		SortKey = 2300,
		StatusText = T(438485139974, --[[ModItemRelaxationRoutine SmokingJoint StatusText |gender-variants]] "Smoking Joint"),
		group = "PROJECTX",
		id = "SmokingJoint",
		msg_reactions = {
			PlaceObj('MsgReaction', {
				Event = "HumanStartConsuming",
				Handler = function (self, unit)
					if unit.current_act_target ~= self then return end
					unit:ResumeRelaxationSatisfaction()
				end,
			}),
		},
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Research",
}, {
	PlaceObj('ModItemResearchGroup', {
		SortKey = 600,
		display_name = T(489903611638, --[[ModItemResearchGroup ContrabandItems display_name]] "<style red>ILLICIT TRADING</style>"),
		id = "ContrabandItems",
	}),
	PlaceObj('ModItemResearchGroup', {
		SortKey = 601,
		display_name = T(827350262549, --[[ModItemResearchGroup Nano-Tech display_name]] "<style TextPositive>TOP SECRET</style>"),
		id = "Nano-Tech",
	}),
	PlaceObj('ModItemResearchGroup', {
		SortKey = 599,
		display_name = T(508795426670, --[[ModItemResearchGroup Trade display_name]] "<style TechSubtitleBlue>OFFICIAL TRADING</style>"),
		id = "Trade",
	}),
	PlaceObj('ModItemResearchGroup', {
		SortKey = 602,
		display_name = T(956732672585, --[[ModItemResearchGroup x_backgrounds display_name]] "<style TechSubtitlePurple>Background</style>"),
		id = "x_backgrounds",
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Resources",
}, {
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3000,
		alt_icon = "Biologist/ShriekerHeart.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(835032140019, --[[ModItemResource ShriekersHeart description]] "Obtained from butchering or dissecting a Shrieker."),
		display_name = T(560696514085, --[[ModItemResource ShriekersHeart display_name]] "Shrieker's Heart"),
		group = "CraftingMaterials",
		grouped_as = "x_org_box_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ShriekerHeartSmall.png",
		id = "ShriekersHeart",
		in_groups = {
			"x_org_old",
		},
		money_value = 8000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4005,
		alt_icon = "Biologist/ScarabBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(299804525138, --[[ModItemResource ScarabBox description]] "A box of carefully dissected Skarabei organisms."),
		display_name = T(985145713264, --[[ModItemResource ScarabBox display_name]] "Skarabei Organs"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScarabBoxSmall.png",
		id = "ScarabBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 15000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3060,
		alt_icon = "Biologist/GlutchSlime.png",
		alt_icon_outlined = "Biologist/GlutchSlime.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(807339040650, --[[ModItemResource GlutchSlime description]] "Obtained from butchering or dissecting a Manhunting Glutch."),
		display_name = T(245680329463, --[[ModItemResource GlutchSlime display_name]] "Glutch Slime"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/GlutchSlimeSmall.png",
		id = "GlutchSlime",
		in_groups = {
			"x_org_old",
		},
		money_value = 6000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		ConsumerTags = set( "Human" ),
		DecayRateOutside = 174,
		DecayTimeOutside = 23040000,
		LockState = "hidden",
		MinStorageCondition = 2,
		SortKey = 1001,
		alt_icon = "Biologist/MedicalGel.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_HealingBalm",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumable = true,
		consumption_type = "Medicine",
		description = T(853660144607, --[[ModItemResource BoostGel description]] "A gel created from alien organisms. If consumed it can trick the Human brain to produce more adrenaline, boosting performance, health, attack speed and speed for 24 hours."),
		display_name = T(689708755130, --[[ModItemResource BoostGel display_name]] "Boost Gel"),
		group = "Medicine",
		grouped_as = "Medicine",
		health_condition = "GelBoost",
		health_condition_chance = 100,
		icon = "Biologist/MedicalGelSmall.png",
		id = "BoostGel",
		in_groups = {
			"Medicine",
		},
		money_value = 55000000,
		preference = -900,
		progress = 8000,
		serving_nutrition = 0,
		stack_entity = "ResourceBulk_HealingBalm",
		stack_idle_state_count = 5,
		stack_size = 25000,
		vegetarian = true,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		ConsumerTags = set( "Human" ),
		DecayRateOutside = 174,
		DecayTimeOutside = 23040000,
		LockState = "hidden",
		MinStorageCondition = 2,
		SortKey = 3000,
		alt_icon = "Biologist/JunoAdrenaline.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_Antibiotics",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumable = true,
		consumption_type = "Medicine",
		description = T(666792338779, --[[ModItemResource JunoAdrenaline description]] "An adrenaline shot made from a Juno's organisms, capable of enhancing movement speed, attack speed and conciousness for 8 hours."),
		display_name = T(294771049953, --[[ModItemResource JunoAdrenaline display_name]] "Juno Adrenaline Shot"),
		group = "Medicine",
		grouped_as = "Medicine",
		health_condition = "JunoAdrenaline",
		health_condition_chance = 100,
		icon = "Biologist/JunoAdrenalineSmall.png",
		id = "JunoAdrenaline",
		in_groups = {
			"Medicine",
		},
		money_value = 40000000,
		preference = -999,
		progress = 10000,
		serving_nutrition = 0,
		show_on_second_row = true,
		stack_entity = "ResourceBulk_Antibiotics",
		stack_idle_state_count = 5,
		stack_size = 25000,
		vegetarian = true,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 149,
		DecayRateOutside = 260,
		DecayRateRefrigerated = 42,
		DecayTimeInside = 26880000,
		DecayTimeOutside = 15360000,
		DecayTimeRefrigerated = 96000000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3123,
		alt_icon = "Biologist/ShriekerScales.png",
		alt_icon_outlined = "Biologist/ShriekerScales.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(404313585975, --[[ModItemResource ShriekerBruteScales description]] "Obtained from butchering or dissecting a rare breed of Shrieker, known as the Brutes. A very pricey item worth quite a chunk of Galacticoins in the organ black market."),
		display_name = T(507446749755, --[[ModItemResource ShriekerBruteScales display_name]] "Shrieker Brute Scales"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ShriekerScalesSmall.png",
		id = "ShriekerBruteScales",
		in_groups = {
			"x_org_old",
		},
		money_value = 125000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3013,
		alt_icon = "Biologist/JunoHeart.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(836521419985, --[[ModItemResource JunoHeart description]] "Obtained from butchering or dissecting a Juno."),
		display_name = T(486664964467, --[[ModItemResource JunoHeart display_name]] "Juno's Heart"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/JunoHeartSmall.png",
		id = "JunoHeart",
		in_groups = {
			"x_org_old",
		},
		money_value = 20000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3005,
		alt_icon = "Biologist/ScissorHandsBlood.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(352723424884, --[[ModItemResource ScissorhandsBlood description]] "Obtained from butchering or dissecting a Scissorhand insect."),
		display_name = T(753293640477, --[[ModItemResource ScissorhandsBlood display_name]] "Scissorhands Blood"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScissorBloodSmall.png",
		id = "ScissorhandsBlood",
		in_groups = {
			"x_org_old",
		},
		money_value = 6000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 149,
		DecayRateOutside = 260,
		DecayRateRefrigerated = 42,
		DecayTimeInside = 26880000,
		DecayTimeOutside = 15360000,
		DecayTimeRefrigerated = 96000000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3122,
		alt_icon = "Biologist/JunoExoSkeleton.png",
		alt_icon_outlined = "Biologist/JunoExoSkeleton.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(393011810904, --[[ModItemResource JunoskarScales description]] "Obtained from butchering or dissecting a rare breed of Juno, named the Junoskar's. A very pricey item worth quite a chunk of Galacticoins in the organ black market."),
		display_name = T(555715843652, --[[ModItemResource JunoskarScales display_name]] "Junoskar Scales"),
		group = "CraftingMaterials",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/JunoExoSkeletonSmall.png",
		id = "JunoskarScales",
		in_groups = {
			"x_org_old",
		},
		money_value = 125000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		ConsumerTags = set( "Human" ),
		DecayRateOutside = 174,
		DecayTimeOutside = 23040000,
		LockState = "hidden",
		MinStorageCondition = 2,
		SortKey = 2000,
		alt_icon = "Biologist/TempPill.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_Antibiotics",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumable = true,
		consumption_type = "Medicine",
		description = T(868801969048, --[[ModItemResource NumbedNerves description]] "A pill that numbs the nerves from temperatures for 48 hours."),
		display_name = T(332696762482, --[[ModItemResource NumbedNerves display_name]] "Nerve Pill"),
		group = "Medicine",
		grouped_as = "Medicine",
		health_condition = "NumbedNerves",
		health_condition_chance = 100,
		icon = "Biologist/TempPillSmall.png",
		id = "NumbedNerves",
		in_groups = {
			"Medicine",
		},
		money_value = 55000000,
		preference = -999,
		progress = 10000,
		serving_nutrition = 0,
		show_on_second_row = true,
		stack_entity = "ResourceBulk_Antibiotics",
		stack_idle_state_count = 5,
		stack_size = 25000,
		vegetarian = true,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3012,
		alt_icon = "Biologist/JunoLungs.png",
		alt_icon_outlined = "Biologist/JunoLungs.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(329718580196, --[[ModItemResource JunoLung description]] "Obtained from butchering or dissecting a Juno."),
		display_name = T(408503674846, --[[ModItemResource JunoLung display_name]] "Juno's Lung"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/JunoLungsSmall.png",
		id = "JunoLung",
		in_groups = {
			"x_org_old",
		},
		money_value = 20000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3011,
		alt_icon = "Biologist/RaptorBlood.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(339987420301, --[[ModItemResource RaptorBlood description]] "Obtained from butchering or dissecting a Raptor."),
		display_name = T(475534675149, --[[ModItemResource RaptorBlood display_name]] "Raptor Blood"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/RaptorBloodSmall.png",
		id = "RaptorBlood",
		in_groups = {
			"x_org_old",
		},
		money_value = 5000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		ConsumerTags = set( "Human" ),
		DecayRateInside = 119,
		DecayRateOutside = 139,
		DecayRateRefrigerated = 93,
		DecayTimeInside = 33600000,
		DecayTimeOutside = 28800000,
		DecayTimeRefrigerated = 43200000,
		MinStorageCondition = 3,
		SortKey = 10,
		alt_icon = "General/GujoEgg.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 40000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		consumable = true,
		decay_fx = true,
		description = T(839795128583, --[[ModItemResource GujoEgg description]] "An egg that has come from a Gujo, can be used in recipes to make delicious food."),
		display_name = T(912641554584, --[[ModItemResource GujoEgg display_name]] "Gujo Egg"),
		display_name_pl = T(252769347243, --[[ModItemResource GujoEgg display_name_pl]] "Gujo Egg's"),
		group = "FoodRaw",
		grouped_as = "FoodRaw",
		happiness_factor = "AteRawFood",
		health_condition = "FoodPoisoning",
		health_condition_chance = 30,
		icon = "General/GujoEggSmall.png",
		id = "GujoEgg",
		in_groups = {
			"FoodRaw",
		},
		money_value = 5000,
		preference = 10,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_nutrition = 126000,
		show_on_second_row = true,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_size = 300000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		ShowDiscoveryNotification = false,
		SortKey = 99989,
		alt_icon = "UI/Icons/Items/trade_goods",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		description = T(771126108716, --[[ModItemResource TradeGoods description]] "Various manufactured goods such as small tools, toys and jewelry, which the trading ships may want to trade for."),
		display_name = T(155773551127, --[[ModItemResource TradeGoods display_name]] "Trade Goods"),
		group = "Trading",
		icon = "UI/Icons/Resources/res_trade_goods",
		id = "TradeGoods",
		in_groups = {
			"Other",
			"Other_Infobar",
		},
		money_value = 36000,
		progress = 0,
		quality = 50,
		stack_entity = "ResourceBulk_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 100000,
		trade_amount_multiplier = 10000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		Comment = "calculate cost",
		DecayRateOutside = 87,
		DecayTimeOutside = 46080000,
		LockState = "hidden",
		MinStorageCondition = 2,
		ShowDiscoveryNotification = false,
		SortKey = 10000,
		alt_icon = "Trade/GalacticSchematic.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		description = T(849951476490, --[[ModItemResource TradingSchematic description]] "Proof that you have provided resources to a struggling colony! This proof will get us access to download from the central Galactical Civilian Research Archives!"),
		display_name = T(878985006636, --[[ModItemResource TradingSchematic display_name]] "Trade Receipt"),
		icon = "Trade/GalacticSchematicSmall.png",
		id = "TradingSchematic",
		in_groups = {
			"BlueprintsInfoPanel",
		},
		money_value = 1000000,
		progress = 400,
		show_on_second_row = true,
		stack_entity = "ResourceBulk_SmallBox",
		stack_idle_state_count = 3,
		stack_size = 100000,
		trade_amount_multiplier = 10000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		Comment = "calculate cost",
		DecayRateOutside = 87,
		DecayTimeOutside = 46080000,
		LockState = "hidden",
		MinStorageCondition = 2,
		ShowDiscoveryNotification = false,
		SortKey = 10000,
		alt_icon = "Mod/ucCehPy/CriminalActivity/Blueprint.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_SmallBox",
		carry_rotation = 5400,
		carry_scale = 50,
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		description = T(747638231551, --[[ModItemResource Blueprint description]] "Anything from a stolen report, troop movements, military schematics. Taken from the Galactican Empire to research military technology."),
		display_name = T(863591107761, --[[ModItemResource Blueprint display_name]] "Government Secret"),
		display_name_pl = T(467912447586, --[[ModItemResource Blueprint display_name_pl]] "Government Secrets"),
		group = "OtherItems",
		icon = "Mod/ucCehPy/CriminalActivity/Blueprint_Small.png",
		id = "Blueprint",
		in_groups = {
			"BlueprintsInfoPanel",
		},
		money_value = 10000000,
		progress = 400,
		stack_entity = "ResourceBulk_SmallBox",
		stack_idle_state_count = 5,
		stack_scale = 50,
		stack_size = 100000,
		trade_amount_multiplier = 10000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4004,
		alt_icon = "Biologist/ScissorBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(899829535997, --[[ModItemResource ScissorhandsBox description]] "A box of carefully dissected Scissorhand organisms."),
		display_name = T(831758637711, --[[ModItemResource ScissorhandsBox display_name]] "Scissorhands Organs"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScissorBoxSmall.png",
		id = "ScissorhandsBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 20000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3008,
		alt_icon = "Biologist/ScaraBlood.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(723157944807, --[[ModItemResource ScarabBlood description]] "Obtained from butchering or dissecting a Skarabei insect."),
		display_name = T(108212899246, --[[ModItemResource ScarabBlood display_name]] "Skarabei's Blood"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScaraBloodSmall.png",
		id = "ScarabBlood",
		in_groups = {
			"x_org_old",
		},
		money_value = 5000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4003,
		alt_icon = "Biologist/ShriekerBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(997333033396, --[[ModItemResource ShriekerBox description]] "A box of carefully dissected Shrieker organisms."),
		display_name = T(851509607376, --[[ModItemResource ShriekerBox display_name]] "Shrieker Organs"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ShriekerBoxSmall.png",
		id = "ShriekerBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 26000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3003,
		alt_icon = "Biologist/ScissorHandsLungs.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(957619225412, --[[ModItemResource ScissorhandsLungs description]] "Obtained from butchering or dissecting a Scissorhand insect."),
		display_name = T(831297987179, --[[ModItemResource ScissorhandsLungs display_name]] "Scissorhands Lungs"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScissorHandsLungsSmall.png",
		id = "ScissorhandsLungs",
		in_groups = {
			"x_org_old",
		},
		money_value = 6000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3014,
		alt_icon = "Biologist/JunoBlood.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(947070483088, --[[ModItemResource JunoBlood description]] "Obtained from butchering or dissecting a Juno."),
		display_name = T(574472440413, --[[ModItemResource JunoBlood display_name]] "Juno's Blood"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/JunoBloodSmall.png",
		id = "JunoBlood",
		in_groups = {
			"x_org_old",
		},
		money_value = 20000000,
		preference = -3000,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4002,
		alt_icon = "Biologist/JunoBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(870543701604, --[[ModItemResource JunoBox description]] "A box of carefully dissected Juno organisms."),
		display_name = T(736199206551, --[[ModItemResource JunoBox display_name]] "Juno Organs"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/JunoBoxSmall.png",
		id = "JunoBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 60000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateOutside = 87,
		DecayTimeOutside = 46080000,
		MinStorageCondition = 2,
		ShowDiscoveryNotification = false,
		SortKey = 1000001,
		alt_icon = "Biologist/OrganIcon.png",
		alt_icon_outlined = "Biologist/OrganIcon.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_MedKit",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		description = T(517368157936, --[[ModItemResource Organs description]] "Organisms of foreign species."),
		display_name = T(948612510062, --[[ModItemResource Organs display_name]] "Organs"),
		display_name_pl = T(324614049928, --[[ModItemResource Organs display_name_pl]] "Organs"),
		group = "InfobarUsable",
		icon = "Biologist/OrganIcon.png",
		id = "Organs",
		is_group = true,
		money_value = 20000000,
		multi_object_resource_entity = "ResourceBulk_MeatRaw",
		progress = 10000,
		resource_entities = {
			"ResourceBulk_MeatRaw",
		},
		stack_entity = "ResourceBulk_MedKit",
		stack_idle_state_count = 5,
		stack_size = 25000,
		transportable = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateOutside = 87,
		DecayTimeOutside = 46080000,
		MinStorageCondition = 2,
		ShowDiscoveryNotification = false,
		SortKey = 999997,
		alt_icon = "Biologist/OrganIcon.png",
		alt_icon_outlined = "Biologist/OrganIcon.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_MedKit",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		description = T(914743670072, --[[ModItemResource x_org_old description]] "Depreciated Organs"),
		display_name = T(880332609299, --[[ModItemResource x_org_old display_name]] "Creature Organs"),
		group = "ResourceGroupsSub",
		grouped_as = "Organs",
		icon = "Biologist/OrganIcon.png",
		id = "x_org_old",
		in_groups = {
			"Organs",
		},
		is_group = true,
		money_value = 1000000000,
		multi_object_resource_entity = "ResourceBulk_MeatRaw",
		progress = 10000,
		resource_entities = {
			"ResourceBulk_MeatRaw",
		},
		stack_entity = "ResourceBulk_MedKit",
		stack_idle_state_count = 5,
		stack_size = 25000,
		transportable = false,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateOutside = 87,
		DecayTimeOutside = 46080000,
		MinStorageCondition = 2,
		ShowDiscoveryNotification = false,
		SortKey = 999997,
		alt_icon = "Biologist/OrganIcon.png",
		alt_icon_outlined = "Biologist/OrganIcon.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_MedKit",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		description = T(938299172342, --[[ModItemResource x_org_box_old description]] "Depreciated Resource"),
		display_name = T(505786511574, --[[ModItemResource x_org_box_old display_name]] "Creature Organ Box"),
		display_name_pl = T(156161218661, --[[ModItemResource x_org_box_old display_name_pl]] "Creature Organ Box"),
		group = "ResourceGroupsSub",
		grouped_as = "Organs",
		icon = "Biologist/OrganIcon.png",
		id = "x_org_box_old",
		in_groups = {
			"Organs",
		},
		is_group = true,
		money_value = 7766279631452240896,
		multi_object_resource_entity = "ResourceBulk_MeatRaw",
		progress = 10000,
		resource_entities = {
			"ResourceBulk_MeatRaw",
		},
		stack_entity = "ResourceBulk_MedKit",
		stack_idle_state_count = 5,
		stack_size = 25000,
		transportable = false,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3010,
		alt_icon = "Biologist/RaptorHeart.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(801908267015, --[[ModItemResource RaptorHeart description]] "Obtained from butchering or dissecting a Raptor."),
		display_name = T(811575653789, --[[ModItemResource RaptorHeart display_name]] "Raptor Heart"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/RaptorHeartSmall.png",
		id = "RaptorHeart",
		in_groups = {
			"x_org_old",
		},
		money_value = 5000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3002,
		alt_icon = "Biologist/ShriekerBloodSmall.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(139569302657, --[[ModItemResource ShriekersBlood description]] "Obtained from butchering or dissecting a Shrieker."),
		display_name = T(479972887698, --[[ModItemResource ShriekersBlood display_name]] "Shrieker's Blood"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ShriekerBloodSmall.png",
		id = "ShriekersBlood",
		in_groups = {
			"x_org_old",
		},
		money_value = 8000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3001,
		alt_icon = "Biologist/ShriekerStomach.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(873204640981, --[[ModItemResource ShriekersStomach description]] "Obtained from butchering or dissecting a Shrieker."),
		display_name = T(907577735161, --[[ModItemResource ShriekersStomach display_name]] "Shrieker's Stomach"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ShriekerStomachSmall.png",
		id = "ShriekersStomach",
		in_groups = {
			"x_org_old",
		},
		money_value = 8000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4006,
		alt_icon = "Biologist/RaptorBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(144260423429, --[[ModItemResource RaptorBox description]] "A box of carefully dissected Raptor's organisms."),
		display_name = T(601476673959, --[[ModItemResource RaptorBox display_name]] "Raptor's Organs"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/RaptorBoxSmall.png",
		id = "RaptorBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 15000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3004,
		alt_icon = "Biologist/ScissorhandsHeart.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(461724096106, --[[ModItemResource ScissorhandsHeart description]] "Obtained from butchering or dissecting a Scissorhand insect."),
		display_name = T(850806373754, --[[ModItemResource ScissorhandsHeart display_name]] "Scissorhands Heart"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScissorHandsHeartSmall.png",
		id = "ScissorhandsHeart",
		in_groups = {
			"x_org_old",
		},
		money_value = 6000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		AllowedInScenarios = set( "ProjectXScenario" ),
		LockState = "hidden",
		ShowDiscoveryNotification = false,
		SortKey = 99991,
		alt_icon = "UI/Icons/Items/planetary_ownership",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 1000,
		carry_entity = "ResourceBulk_Paper",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		description = T(789873171277, --[[ModItemResource PlanetaryOwnership description]] "Worthless paper that means absolutely nothing."),
		display_name = T(517328364615, --[[ModItemResource PlanetaryOwnership display_name]] "Scrap Paper"),
		group = "Pseudo",
		icon = "UI/Icons/Resources/planetary_ownership",
		id = "PlanetaryOwnership",
		in_groups = {
			"Other",
			"Other_Infobar",
		},
		progress = 0,
		quality = 50,
		stack_entity = "ResourceBulk_PlanetaryOwnership",
		stack_size = 1000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4000,
		alt_icon = "Biologist/SmallBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(471440311133, --[[ModItemResource OrganBox description]] "A box of carefully dissected alien organisms."),
		display_name = T(138191278137, --[[ModItemResource OrganBox display_name]] "Box of Organs"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/OrganBoxSmall.png",
		id = "OrganBox",
		in_groups = {
			"Organs",
		},
		money_value = 265000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		show_on_second_row = true,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3007,
		alt_icon = "Biologist/ScarabHeart.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(875837219846, --[[ModItemResource ScarabHeart description]] "Obtained from butchering or dissecting a Skarabei insect."),
		display_name = T(777792616314, --[[ModItemResource ScarabHeart display_name]] "Skarabei's Heart"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScarabHeartSmall.png",
		id = "ScarabHeart",
		in_groups = {
			"x_org_old",
		},
		money_value = 5000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		FuelDescription = "",
		LockState = "hidden",
		ShowDiscoveryNotification = false,
		SortKey = 3123,
		alt_icon = "Biologist/RaptorClaws.png",
		alt_icon_outlined = "Biologist/RaptorClaws.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(346870341755, --[[ModItemResource RaptorClawPX description]] "Obtained from butchering or dissecting a rare breed of Raptor known as an Alpha. A very pricey item worth quite a chunk of Galacticoins in the organ black market."),
		display_name = T(602903830410, --[[ModItemResource RaptorClawPX display_name]] "Raptor Claw"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/RaptorClawsSmall.png",
		id = "RaptorClawPX",
		in_groups = {
			"x_org_old",
		},
		money_value = 8000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		ShowDiscoveryNotification = false,
		SortKey = 999999,
		alt_icon = "UI/Icons/Items/money",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 100000000,
		carry_entity = "ResourceBulk_Money",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		description = T(720521847497, --[[ModItemResource Money description]] "The most complex, yet stable currency in the known universe. With more than 300 variants in circulation, these coins are made of gold, platinum, diamonds, dilithium, or whatever precious materials are available. "),
		display_name = T(660268457715, --[[ModItemResource Money display_name]] "Galacticoins"),
		group = "InfobarUsable",
		icon = "UI/Icons/Resources/res_money",
		id = "Money",
		in_groups = {
			"Other",
		},
		progress = 0,
		quality = 50,
		stack_entity = "ResourceBulk_Money",
		stack_idle_state_count = 5,
		stack_metas = {
			"equipped",
		},
		stack_scale = 90,
		stack_size = 50000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3006,
		alt_icon = "Biologist/ScarabLiver.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(512129898897, --[[ModItemResource ScarabLiver description]] "Obtained from butchering or dissecting a Skarabei insect."),
		display_name = T(590110162400, --[[ModItemResource ScarabLiver display_name]] "Skarabei's Liver"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/ScarabLiverSmall.png",
		id = "ScarabLiver",
		in_groups = {
			"x_org_old",
		},
		money_value = 5000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4020,
		alt_icon = "Biologist/GlutchBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(265624329954, --[[ModItemResource GlutchBox description]] "A box of carefully dissected Glutch organisms."),
		display_name = T(415825832715, --[[ModItemResource GlutchBox display_name]] "Glutch Box"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/GlutchBoxSmall.png",
		id = "GlutchBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 12000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3060,
		alt_icon = "Biologist/GlutchPoisonGlands.png",
		alt_icon_outlined = "Biologist/GlutchPoisonGlands.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(754575322329, --[[ModItemResource GlutchGlands description]] "Obtained from butchering or dissecting a Manhunting Glutch."),
		display_name = T(444419109528, --[[ModItemResource GlutchGlands display_name]] "Glutch Poisonous Glands"),
		group = "CraftingMaterials",
		grouped_as = "x_org_old",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/GlutchPoisonGlandsSmall.png",
		id = "GlutchGlands",
		in_groups = {
			"x_org_old",
			"Construction",
		},
		money_value = 6000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		show_on_second_row = true,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 521,
		DecayRateOutside = 833,
		DecayRateRefrigerated = 278,
		DecayTimeInside = 7680000,
		DecayTimeOutside = 4800000,
		DecayTimeRefrigerated = 14400000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 3009,
		alt_icon = "Biologist/RaptorLung.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "ResourceBulk_MeatRaw",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(942721897807, --[[ModItemResource RaptorLung description]] "Obtained from butchering or dissecting a Raptor."),
		display_name = T(861205986710, --[[ModItemResource RaptorLung display_name]] "Raptor Lung"),
		group = "CraftingMaterials",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Mod/ucCehPy/Biologist/RaptorLungSmall.png",
		id = "RaptorLung",
		in_groups = {
			"x_org_old",
		},
		money_value = 5000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "ResourceBulk_MeatRaw",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		DecayRateInside = 694,
		DecayRateOutside = 1389,
		DecayRateRefrigerated = 347,
		DecayTimeInside = 5760000,
		DecayTimeOutside = 2880000,
		DecayTimeRefrigerated = 11520000,
		FuelDescription = "",
		LockState = "hidden",
		MinStorageCondition = 4,
		ShowDiscoveryNotification = false,
		SortKey = 4001,
		alt_icon = "Biologist/BloodBox.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 200000,
		carry_entity = "Resource_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumption_type = "",
		decay_fx = true,
		description = T(459235216857, --[[ModItemResource BloodBox description]] "A box of carefully drained alien blood samples stored in vials for transporting."),
		display_name = T(602575606164, --[[ModItemResource BloodBox display_name]] "Blood Samples"),
		group = "CraftingMaterials",
		grouped_as = "Organs",
		happiness_factor = "AteRawFood",
		health_condition = "Poisoning_1_Mild",
		health_condition_chance = 5,
		icon = "Biologist/BloodBoxSmall.png",
		id = "BloodBox",
		in_groups = {
			"x_org_box_old",
		},
		money_value = 100000000,
		preference = -9999999999,
		progress = 200,
		res_entities_idle_state_count = 3,
		serving_amount = 10000,
		serving_nutrition = 1500000,
		stack_entity = "Resource_SmallBox",
		stack_idle_state_count = 5,
		stack_size = 1000000,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		ConsumerTags = set( "Human" ),
		DecayRateOutside = 174,
		DecayTimeOutside = 23040000,
		LockState = "hidden",
		MinStorageCondition = 2,
		SortKey = 2000,
		alt_icon = "Biologist/NaniteShot.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 50000,
		carry_entity = "ResourceBulk_Antibiotics",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		consumable = true,
		consumption_type = "Medicine",
		description = T(821823759304, --[[ModItemResource NaniteShot description]] "A nanite shot made from alien organisms, capable of enhancing manipulation and work speed for 12 hours."),
		display_name = T(464159575140, --[[ModItemResource NaniteShot display_name]] "Nanite Shot"),
		group = "Medicine",
		grouped_as = "Medicine",
		health_condition = "NaniteShot",
		health_condition_chance = 100,
		icon = "Biologist/NaniteShotSmall.png",
		id = "NaniteShot",
		in_groups = {
			"Medicine",
		},
		money_value = 55000000,
		preference = -990,
		progress = 10000,
		serving_nutrition = 0,
		stack_entity = "ResourceBulk_Antibiotics",
		stack_idle_state_count = 5,
		stack_size = 25000,
		vegetarian = true,
		visible = false,
	}),
	PlaceObj('ModItemResource', {
		ShowDiscoveryNotification = false,
		SortKey = 1,
		alt_icon = "general/repairkitslargenew.png",
		anim_pile_load = "standing_PickUp_HandsClose",
		anim_pile_unload = "standing_DropDown_HandsClose_High",
		carry_amount = 1000000,
		carry_entity = "ResourceBulk_SmallBox",
		carry_spot = "Tool",
		carry_type = "HandsClose",
		description = T(611912686375, --[[ModItemResource RepairKitPX description]] "A repair kit that has materials and tools that can be used to repair worn out and damaged equipment at the Repair Bay."),
		display_name = T(863114543214, --[[ModItemResource RepairKitPX display_name]] "Repair Kit"),
		group = "InfobarUsable",
		icon = "general/repairkitsmallnew.png",
		id = "RepairKitPX",
		in_groups = {
			"ElectronicComponents",
		},
		progress = 0,
		quality = 50,
		stack_entity = "ResourceBulk_SmallBox",
		stack_idle_state_count = 5,
		stack_metas = {
			"equipped",
		},
		stack_scale = 90,
		stack_size = 1000000,
		visible = false,
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Expeditions",
}, {
	PlaceObj('ModItemExpeditionPreset', {
		DisplayImage = "Events/CyberCrystals.png",
		Expiration = 1920000,
		FoundByExploration = true,
		FoundByExplorationDisplayText = T(599279798468, --[[ModItemExpeditionPreset CrystalCave FoundByExplorationDisplayText]] "We've spotted a cluster of crystals towards the South-East, we should check this out!"),
		Icon = "Events/CrystalExpedition.png",
		OneInstanceOnly = true,
		OneTime = true,
		StoryBits = {
			PlaceObj('ExpeditionStoryBitWeight', {
				'StoryBit', "CrystalCave",
			}),
		},
		description = T(319611890317, --[[ModItemExpeditionPreset CrystalCave description]] "We've spotted a cluster of crystals towards the South-East, we should check this out!"),
		display_name = T(125732723907, --[[ModItemExpeditionPreset CrystalCave display_name]] "Crystal Cave"),
		display_name_caps = T(174009379578, --[[ModItemExpeditionPreset CrystalCave display_name_caps]] "CRYSTAL CAVE"),
		id = "CrystalCave",
		new_in = "Military",
	}),
	PlaceObj('ModItemExpeditionPreset', {
		DisplayImage = "Events/Decipher.png",
		Expiration = 4000000,
		FoundByExploration = true,
		FoundByExplorationDisplayText = T(976630633076, --[[ModItemExpeditionPreset UnknownEncounter FoundByExplorationDisplayText]] "A shadow has been spotted nearby the settlement. It appears to be a humanoid figure. We should do a thorough search of the area as a security measure."),
		FoundByExplorationWeight = 30,
		Icon = "Events/DecipherExpedition.png",
		OneInstanceOnly = true,
		OneTime = true,
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "HackingDevice",
			}),
		},
		RelevantSkills = set( "Hacking" ),
		StoryBits = {
			PlaceObj('ExpeditionStoryBitWeight', {
				'StoryBit', "UnknownEncounter",
			}),
		},
		description = T(768733203217, --[[ModItemExpeditionPreset UnknownEncounter description]] "A shadow has been spotted nearby the settlement. It appears to be a humanoid figure. We should do a thorough search of the area as a security measure."),
		display_name = T(619400709928, --[[ModItemExpeditionPreset UnknownEncounter display_name]] "Unknown Encounter"),
		display_name_caps = T(548228292105, --[[ModItemExpeditionPreset UnknownEncounter display_name_caps]] "UNKNOWN ENCOUNTER"),
		id = "UnknownEncounter",
		new_in = "Military",
	}),
	PlaceObj('ModItemExpeditionPreset', {
		DisplayImage = "Events/MetoriteShower.png",
		Expiration = 640000,
		FoundByExploration = true,
		FoundByExplorationDisplayText = T(100611932243, --[[ModItemExpeditionPreset MeteoriteShower FoundByExplorationDisplayText]] "Whilst exploring I noticed a meteorite shower in the distance, it was quite far from the colony so I couldn't quite make certain if it was a meteorite shower or something else..."),
		Icon = "Events/MeteoriteExpedition.png",
		OneInstanceOnly = true,
		OneTime = true,
		StoryBits = {
			PlaceObj('ExpeditionStoryBitWeight', {
				'StoryBit', "MeteoriteShower",
			}),
			PlaceObj('ExpeditionStoryBitWeight', {
				'StoryBit', "MeteoriteShower2",
			}),
			PlaceObj('ExpeditionStoryBitWeight', {
				'StoryBit', "Ambush",
				'Weight', 30,
			}),
		},
		description = T(647272360903, --[[ModItemExpeditionPreset MeteoriteShower description]] "Some kind of meteorite shower or a ship that burnt up on descent. Either way we should check this out to be certain."),
		display_name = T(148580706218, --[[ModItemExpeditionPreset MeteoriteShower display_name]] "Meteorite Shower"),
		display_name_caps = T(878465893394, --[[ModItemExpeditionPreset MeteoriteShower display_name_caps]] "METEORITE SHOWER"),
		id = "MeteoriteShower",
		new_in = "Military",
	}),
	PlaceObj('ModItemExpeditionPreset', {
		DisplayImage = "Events/BunkerOutside.png",
		Expiration = 960000,
		FoundByExploration = true,
		FoundByExplorationDisplayText = T(753012191422, --[[ModItemExpeditionPreset AbandonedBunker FoundByExplorationDisplayText]] "I've spotted some abandoned facility just south of here, at first I thought it was wreckage... but its a bunker. Abit worrying... this means we either are not alone or whoever was here, isn't here anymore for a reason. Regardless... we were not the first here. We should go check it out."),
		Icon = "Events/BunkerExpedition.png",
		OneInstanceOnly = true,
		OneTime = true,
		Prerequisites = {
			PlaceObj('CheckTrait', {
				Trait = "ExpeditionHacker",
			}),
		},
		RelevantSkills = set( "Hacking" ),
		StoryBits = {
			PlaceObj('ExpeditionStoryBitWeight', {
				'StoryBit', "AbandonedBunker",
			}),
		},
		description = T(393673269139, --[[ModItemExpeditionPreset AbandonedBunker description]] "Its what appears to be a abandoned bunker."),
		display_name = T(309873759857, --[[ModItemExpeditionPreset AbandonedBunker display_name]] "Abandoned Bunker"),
		display_name_caps = T(244888396038, --[[ModItemExpeditionPreset AbandonedBunker display_name_caps]] "ABANDONED BUNKER"),
		id = "AbandonedBunker",
		new_in = "Military",
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 480000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		Image = "Events/BunkerInside.png",
		NotificationTitle = T(513496559338, --[[ModItemStoryBit AbandonedBunker NotificationTitle]] "Expedition Progress"),
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Sets = {
			Witness = true,
		},
		SuppressTime = 10000000,
		Text = T(483815065578, --[[ModItemStoryBit AbandonedBunker Text]] "<center>I've approached the destination, one thing for certain is that its definitely abandoned. I've never seen anything quite like this, there are huge tubes as if scientific experiments were performed inside them. It looks like whoever were here, left in a hurry. This place still has power, how is that possible?\n\nSome rooms are sealed shut and some of the rooms that are open have a few blueprints around. Not much else remains here except debris from the bunker being eaten away by nature itself and destroyed machinary from what appears to be... claw marks."),
		Title = T(326455445275, --[[ModItemStoryBit AbandonedBunker Title]] "Abandoned Bunker"),
		group = "Expedition_ANewSite",
		id = "AbandonedBunker",
		max_reply_id = 6,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2020-Dec-21\nModified by Gaby on 2021-Jan-05\nModified by Ivan on 2021-Jan-06\nModified by Gaby on 2021-Jan-07\nModified by Gaby on 2021-Jan-08\nModified by Lina on 2021-Jan-12\nModified by Lina on 2021-Feb-23\nModified by Gaby on 2021-Apr-09\nModified by Bobby on 2021-May-20\nModified by Lina on 2021-Aug-25\nModified by Lina on 2021-Aug-31\nModified by Lina on 2021-Sep-03\nModified by Lina on 2021-Sep-08\nModified by Lina on 2021-Sep-13\nModified by Lina on 2021-Sep-27\nModified by Lina on 2022-Apr-12\nModified by Lina on 2022-Apr-14\nModified by Xaerial on 2022-Oct-10",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = "",
			OutcomeText = "custom",
			PrerequisiteText = T(384855773913, --[[ModItemStoryBit AbandonedBunker PrerequisiteText]] "Requires Hacking 7. 70% Success Chance."),
			Prerequisites = {
				PlaceObj('CheckSkillLevel', {
					Amount = 7,
					Condition = ">=",
					Skill = "Hacking",
					param_bindings = false,
				}),
			},
			Text = T(108733165890, --[[ModItemStoryBit AbandonedBunker Text]] "Try hack into some of the sealed rooms."),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 10000,
					Resource = "AlienBlueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 20000,
					Resource = "CyberBlueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 50000,
					Resource = "Blueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 2000,
					Resource = "CyberProcessor",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Resource = "CyberCore",
					param_bindings = false,
				}),
			},
			Image = "Mod/ucCehPy/Events/Decipher.png",
			Text = T(606579112850, --[[ModItemStoryBit AbandonedBunker Text]] "I was successful at hacking into one of the rooms and found some tech stuff and rare blueprints, perhaps we can discover something from these. I'm hearing these strange noises here... its almost as if there coming from inside the walls... I'm heading back now!"),
			Title = T(665656249785, --[[ModItemStoryBit AbandonedBunker Title]] "Successful Hacking Attempt"),
			Weight = 70,
			param_bindings = false,
		}),
		PlaceObj('StoryBitOutcome', {
			Image = "Mod/ucCehPy/Events/BunkerInside.png",
			Text = T(173972609752, --[[ModItemStoryBit AbandonedBunker Text]] "Unfortunately I was unable to access the room I attempted to hack, its getting dark, I should head back."),
			Title = T(515670582392, --[[ModItemStoryBit AbandonedBunker Title]] "Failed Hacking Attempt"),
			Weight = 30,
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(668392751693, --[[ModItemStoryBit AbandonedBunker PrerequisiteText]] "Requires Hacking 4. 50% Success Chance."),
			Prerequisites = {
				PlaceObj('CheckSkillLevel', {
					Amount = 4,
					Condition = ">=",
					Skill = "Hacking",
					param_bindings = false,
				}),
			},
			Text = T(111500975495, --[[ModItemStoryBit AbandonedBunker Text]] "Try hack into some of the sealed crates scattered around the bunker."),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Image = "Mod/ucCehPy/Events/BunkerInside.png",
			Text = T(392719238661, --[[ModItemStoryBit AbandonedBunker Text]] "I failed to hack into a container and got spooked by something moving down the corridor, I don't know what it was but i'm not sticking around to find out!"),
			Title = T(174163727800, --[[ModItemStoryBit AbandonedBunker Title]] "Failed Hacking Attempt"),
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 15000,
					Resource = "Blueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 5000,
					Resource = "CyberBlueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 2000,
					Resource = "CyberCrystal",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Resource = "CyberProcessor",
					param_bindings = false,
				}),
			},
			Image = "Mod/ucCehPy/Events/Decipher.png",
			Text = T(904306693302, --[[ModItemStoryBit AbandonedBunker Text]] "I managed to hack into a few sealed containers and got some blueprints and tech stuff we could probably use, on my way back now! This place creeps me out..."),
			Title = T(562307679907, --[[ModItemStoryBit AbandonedBunker Title]] "Successful Hacking Attempt"),
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(325953185215, --[[ModItemStoryBit AbandonedBunker PrerequisiteText]] "0 Hacking Required. 30% Success Chance."),
			Text = T(988814334880, --[[ModItemStoryBit AbandonedBunker Text]] "Search the floor for anything of use."),
			param_bindings = false,
			unique_id = 6,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 10000,
					Resource = "Blueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Resource = "CyberCrystal",
					param_bindings = false,
				}),
			},
			Image = "Mod/ucCehPy/Events/BunkerInside.png",
			Text = T(807280270221, --[[ModItemStoryBit AbandonedBunker Text]] "I managed to find some old pieces of tech that we could probably use! On my way back now. -- W..wait.. what was that sound? - I'm not staying to find out- i'm getting home!"),
			Title = T(576959523992, --[[ModItemStoryBit AbandonedBunker Title]] "Successful Search"),
			Weight = 30,
			param_bindings = false,
		}),
		PlaceObj('StoryBitOutcome', {
			Image = "Mod/ucCehPy/Events/BunkerInside.png",
			Text = T(941415541907, --[[ModItemStoryBit AbandonedBunker Text]] "I cannot find anything of use to us, its all rubble and weeds. I best return before it gets too dark."),
			Title = T(154464160715, --[[ModItemStoryBit AbandonedBunker Title]] "Failed Search Attempt"),
			Weight = 70,
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 200000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		Image = "Portraits/Shadow_Large.png",
		NotificationTitle = T(555426366669, --[[ModItemStoryBit UnknownEncounter NotificationTitle]] "Expedition Progress"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "HackingDevice",
				param_bindings = false,
			}),
		},
		ScriptDone = true,
		SelectObject = false,
		Sets = {
			Witness = true,
		},
		Text = T(309846189281, --[[ModItemStoryBit UnknownEncounter Text]] "After searching for five hours I came across a mysterious shadow figure, they appear to be female and human. Upon approaching they were very reluctant to share any information with me, or talk at all really. However, they were not aggressive. They pointed at there neck several times in silence and signaled what appeared to be that they were mute. Upon closer inspection of the neck area, I could see they had a chip implant. It was quite clear that this was or still is a criminal that has escaped and somehow made it here. What should we do?"),
		Title = T(291894916621, --[[ModItemStoryBit UnknownEncounter Title]] "Hooded Shadow Figure"),
		group = "Expedition_ANewSite",
		id = "UnknownEncounter",
		max_reply_id = 7,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2020-Dec-21\nModified by Gaby on 2021-Jan-05\nModified by Ivan on 2021-Jan-06\nModified by Gaby on 2021-Jan-07\nModified by Gaby on 2021-Jan-08\nModified by Lina on 2021-Jan-12\nModified by Lina on 2021-Feb-23\nModified by Gaby on 2021-Apr-09\nModified by Bobby on 2021-May-20\nModified by Lina on 2021-Aug-25\nModified by Lina on 2021-Aug-31\nModified by Lina on 2021-Sep-03\nModified by Lina on 2021-Sep-08\nModified by Lina on 2021-Sep-13\nModified by Lina on 2021-Sep-27\nModified by Lina on 2022-Apr-12\nModified by Lina on 2022-Apr-14\nModified by Xaerial on 2022-Oct-10",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = "",
			OutcomeText = "custom",
			PrerequisiteText = "",
			Text = T(878643328623, --[[ModItemStoryBit UnknownEncounter Text]] "Detain them and bring them back here, we will hand them into the authorities. "),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Disables = {
				"UnknownEncounter",
			},
			Text = T(440007227312, --[[ModItemStoryBit UnknownEncounter Text]] "I failed, they were very quick and capable of fighting, I dare say they were actually very skilled in combat and could've potentially killed me, but they didn't. They fled towards the South. "),
			Title = T(406900681146, --[[ModItemStoryBit UnknownEncounter Title]] "Mission Report"),
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(904668962698, --[[ModItemStoryBit UnknownEncounter PrerequisiteText]] "Requires Hacking 9."),
			Prerequisites = {
				PlaceObj('CheckSkillLevel', {
					Amount = 9,
					Condition = ">=",
					Skill = "Hacking",
					param_bindings = false,
				}),
			},
			Text = T(676037559614, --[[ModItemStoryBit UnknownEncounter Text]] "Use your knowledge in hacking and attempt to remove the chip."),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('SpawnSurvivor', {
					SpawnNearBase = true,
					param_bindings = false,
				}),
			},
			Text = T(824378083768, --[[ModItemStoryBit UnknownEncounter Text]] "With my expertise in hacking I was successful in removing the chip with a hacking device. The criminal chip implant appeared to have malfunctioned and triggered the neurological shutdown which is why this person could not speak. They should've been dead... they were very lucky this chip malfunctioned as these are designed to completely shut down the body if triggered. I don't know if there voice will ever return, but for now... 'The shadow' has agreed to join us."),
			Title = T(927350378447, --[[ModItemStoryBit UnknownEncounter Title]] "Mission Outcome"),
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(892861232269, --[[ModItemStoryBit UnknownEncounter Text]] "Leave them be and return home."),
			param_bindings = false,
			unique_id = 7,
		}),
		PlaceObj('StoryBitOutcome', {
			Text = T(946411380489, --[[ModItemStoryBit UnknownEncounter Text]] "Roger that, on my way back."),
			Title = T(809316003937, --[[ModItemStoryBit UnknownEncounter Title]] "Expedition Response"),
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 360000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		Image = "Events/MetoriteShower.png",
		NotificationTitle = T(700458819927, --[[ModItemStoryBit MeteoriteShower NotificationTitle]] "Expedition Progress"),
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Sets = {
			Witness = true,
		},
		SuppressTime = 10000000,
		Text = T(164886348382, --[[ModItemStoryBit MeteoriteShower Text]] "<center>Closer inspection reveals that it was not a meteorite shower... its a escape pod, several actually. Probably the Galactic Space Station's fleet patrolling the space around the planet to try keep the colony efforts safe. The issue is, whoever was inside them pods could be alive... and here with us.\n\nI count eight escape pods, seven are open and one is sealed shut."),
		Title = T(651428688885, --[[ModItemStoryBit MeteoriteShower Title]] "Meteorite Shower"),
		group = "Expedition_ANewSite",
		id = "MeteoriteShower",
		max_reply_id = 7,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2020-Dec-21\nModified by Gaby on 2021-Jan-05\nModified by Ivan on 2021-Jan-06\nModified by Gaby on 2021-Jan-07\nModified by Gaby on 2021-Jan-08\nModified by Lina on 2021-Jan-12\nModified by Lina on 2021-Feb-23\nModified by Gaby on 2021-Apr-09\nModified by Bobby on 2021-May-20\nModified by Lina on 2021-Aug-25\nModified by Lina on 2021-Aug-31\nModified by Lina on 2021-Sep-03\nModified by Lina on 2021-Sep-08\nModified by Lina on 2021-Sep-13\nModified by Lina on 2021-Sep-27\nModified by Lina on 2022-Apr-12\nModified by Lina on 2022-Apr-14\nModified by Xaerial on 2022-Oct-10",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = "",
			OutcomeText = "custom",
			PrerequisiteText = T(833978814662, --[[ModItemStoryBit MeteoriteShower PrerequisiteText]] "Combat Level 6 Required"),
			Prerequisites = {
				PlaceObj('CheckSkillLevel', {
					Amount = 6,
					Condition = ">=",
					Skill = "Combat",
					param_bindings = false,
				}),
			},
			Text = T(650618751239, --[[ModItemStoryBit MeteoriteShower Text]] "Check the interior of the open escape pods."),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 2000,
					Resource = "HackingDevice",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 5000,
					Resource = "CyberBlueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 20000,
					Resource = "Blueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 2000,
					Resource = "CyberCrystal",
					param_bindings = false,
				}),
			},
			Text = T(637102911217, --[[ModItemStoryBit MeteoriteShower Text]] "Out of the seven escape pods, only two casualties were counted, I can confirm they appear to be pirates judging by the contraband onboard. This is a big concern for us as the other five escape pods were empty and one was sealed shut. Its quite possible the other pods did not have people onboard, but we should probably not take the risk and double our patrols.\n\nI'll bring back what I can grab I suppose, you know... to ugh... hand into the galactic authorities ofcourse..."),
			Title = T(263220135889, --[[ModItemStoryBit MeteoriteShower Title]] "Mission Report"),
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(700155871291, --[[ModItemStoryBit MeteoriteShower PrerequisiteText]] "Requires Hacking 6."),
			Prerequisites = {
				PlaceObj('CheckSkillLevel', {
					Amount = 6,
					Condition = ">=",
					Skill = "Hacking",
					param_bindings = false,
				}),
			},
			Text = T(630397521876, --[[ModItemStoryBit MeteoriteShower Text]] "Try hack into the sealed escape pod."),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 20000,
					Resource = "Blueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 10000,
					Resource = "CyberBlueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 5000,
					Resource = "CyberCrystal",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Amount = 2000,
					Resource = "AlienBlueprint",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Resource = "CyberProcessor",
					param_bindings = false,
				}),
				PlaceObj('GiveExpeditionRewardToSurvivor', {
					Resource = "MechCore",
					param_bindings = false,
				}),
			},
			Text = T(404561039940, --[[ModItemStoryBit MeteoriteShower Text]] "I managed to hack into the sealed escape pod... Whoever these people are they stashed alot of valuable contraband inside this one escape pod. Probably was attempting to escape from authorities and jettisoned the illegal cargo I am presuming. \n\nI don't have enough time to check the other escape pods, its getting dark. I'll bring back what I can."),
			Title = T(523006232117, --[[ModItemStoryBit MeteoriteShower Title]] "Successful Hacking Attempt"),
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(867104663427, --[[ModItemStoryBit MeteoriteShower Text]] "Its too risky, come back."),
			param_bindings = false,
			unique_id = 7,
		}),
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Meta",
	'NameColor', RGBA(237, 229, 229, 255),
}, {
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GreenFloodLightPX",
		Attach = true,
		CastShadows = true,
		Color = 4278714112,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4278714112,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4278714112,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightGreenPX",
		id = "FloodLightGreenPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampYellow",
		Attach = true,
		CastShadows = true,
		Color = 4294966016,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampYellow",
		id = "GalacticCeilingLampYellow",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "PurpleFloodLightPX",
		Attach = true,
		CastShadows = true,
		Color = 4294377727,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294901987,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294901987,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightPurplePX",
		id = "FloodLightPurplePX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "YellowFloodLightPX",
		Attach = true,
		CastShadows = true,
		Color = 4294835968,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294835968,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294835968,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightYellowPX",
		id = "FloodLightYellowPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "YellowFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		Color = 4294442767,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294442767,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294442767,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightYellowTiltPX",
		id = "FloodLightYellowTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "RedFloodLightPX",
		Attach = true,
		CastShadows = true,
		Color = 4294901760,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294901760,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294901760,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightRedPX",
		id = "FloodLightRedPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "OrangeFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		Color = 4294936832,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294936832,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294936832,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightOrangeTiltPX",
		id = "FloodLightOrangeTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "WhiteFloodLightPX",
		Attach = true,
		CastShadows = true,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294967295,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294967295,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightWhitePX",
		id = "FloodLightWhitePX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampOrange",
		Attach = true,
		CastShadows = true,
		Color = 4294936832,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampOrange",
		id = "GalacticCeilingLampOrange",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampGreen",
		Attach = true,
		CastShadows = true,
		Color = 4278255387,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampGreen",
		id = "GalacticWallLampGreen",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "OrangeFloodLightPX",
		Attach = true,
		CastShadows = true,
		Color = 4294936832,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294936832,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294936832,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightOrangePX",
		id = "FloodLightOrangePX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "RedFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		Color = 4294901760,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294901760,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294901760,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightRedTiltPX",
		id = "FloodLightRedTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampOrange",
		Attach = true,
		CastShadows = true,
		Color = 4294939904,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampOrange",
		id = "GalacticWallLampOrange",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "WhiteFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294967295,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294967295,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightWhiteTiltPX",
		id = "FloodLightWhiteTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "BlueFloodLightPX",
		Attach = true,
		CastShadows = true,
		Color = 4278237183,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4278237183,
		FadeOutIntensity = 10,
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(0, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 40000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4278237183,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightBluePX",
		id = "FloodLightBluePX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GreenFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		Color = 4278255369,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4278255369,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4278255369,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightGreenTiltPX",
		id = "FloodLightGreenTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "PurpleFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		Color = 4294901999,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4294901999,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4294901999,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightPurpleTiltPX",
		id = "FloodLightPurpleTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampWhite",
		Attach = true,
		CastShadows = true,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampWhite",
		id = "GalacticWallLampWhite",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampPurple",
		Attach = true,
		CastShadows = true,
		Color = 4294902011,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampPurple",
		id = "GalacticWallLampPurple",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampGreen",
		Attach = true,
		CastShadows = true,
		Color = 4278714112,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampGreen",
		id = "GalacticCeilingLampGreen",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampRed",
		Attach = true,
		CastShadows = true,
		Color = 4294901760,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampRed",
		id = "GalacticWallLampRed",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampRed",
		Attach = true,
		CastShadows = true,
		Color = 4294901760,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampRed",
		id = "GalacticCeilingLampRed",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampWhite",
		Attach = true,
		CastShadows = true,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampWhite",
		id = "GalacticCeilingLampWhite",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampPurple",
		Attach = true,
		CastShadows = true,
		Color = 4294901993,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampPurple",
		id = "GalacticCeilingLampPurple",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticCeilingLampBlue",
		Attach = true,
		CastShadows = true,
		Color = 4278237183,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticCeilingLampBlue",
		id = "GalacticCeilingLampBlue",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "BlueFloodLightTiltedPX",
		Attach = true,
		CastShadows = true,
		Color = 4278237183,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		FadeOutColor = 4278237183,
		FadeOutIntensity = 10,
		Intensity = 20,
		InteriorAndExteriorWhenHasShadowmap = false,
		LookAngle = 4967,
		Moment = "start",
		Offset = point(-40000, 0, -10000),
		OffsetDir = "SourceAxisY",
		Radius = 70000,
		SourceRadius = 1600,
		Spot = "Light",
		StartColor = 4278237183,
		StartIntensity = 20,
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "FloodLightBlueTiltPX",
		id = "FloodLightBlueTiltPX",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampYellow",
		Attach = true,
		CastShadows = true,
		Color = 4294964480,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampYellow",
		id = "GalacticWallLampYellow",
	}),
	PlaceObj('ModItemActionFXLight', {
		Action = "working",
		Actor = "GalacticWallLampBlue",
		Attach = true,
		CastShadows = true,
		Color = 4278237183,
		ConeInnerAngle = 80,
		ConeOuterAngle = 120,
		DetailLevel = 100,
		EndRules = {
			PlaceObj('ActionFXEndRule', {
				'EndAction', "working",
				'EndMoment', "end",
			}),
		},
		Intensity = 10,
		InteriorAndExteriorWhenHasShadowmap = false,
		Moment = "start",
		Radius = 10000,
		Spot = "Light",
		behaviors = {
			PlaceObj('ActionFXBehavior', nil),
		},
		group = "FXLights",
		handle = "GalacticWallLampBlue",
		id = "GalacticWallLampBlue",
	}),
	PlaceObj('ModItemActivityGroup', {
		Activities = {
			"Biologist",
		},
		Description = T(447996104088, --[[ModItemActivityGroup Biologist Description]] "Researching bodily organisms and dissection of alien species."),
		DisplayName = T(751691799931, --[[ModItemActivityGroup Biologist DisplayName]] "Biology"),
		DisplayNameShortened = T(708717376316, --[[ModItemActivityGroup Biologist DisplayNameShortened]] "Biology"),
		SortKey = 5000,
		id = "Biologist",
	}),
	PlaceObj('ModItemActivityGroup', {
		Activities = {
			"Trade",
		},
		Description = T(250492138122, --[[ModItemActivityGroup Trade Description]] "Engaging with the market, contractors and suppliers."),
		DisplayName = T(475104324283, --[[ModItemActivityGroup Trade DisplayName]] "Trading"),
		DisplayNameShortened = T(952009727038, --[[ModItemActivityGroup Trade DisplayNameShortened]] "Trading"),
		SortKey = 5100,
		id = "Trade",
	}),
	PlaceObj('ModItemActivityGroup', {
		Activities = {
			"Hacking",
		},
		Description = T(447652370006, --[[ModItemActivityGroup Hacking Description]] "Hacking databases for blueprints."),
		DisplayName = T(773859126011, --[[ModItemActivityGroup Hacking DisplayName]] "Hacking"),
		DisplayNameShortened = T(142653299548, --[[ModItemActivityGroup Hacking DisplayNameShortened]] "Hacking"),
		SortKey = 5400,
		id = "Hacking",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(811123610623, --[[ModItemActivityType GetMoney ActivityStatusText |gender-variants]] "Collecting Salary <image 'UI/Icons/Resources/res_money'>"),
		CanPreemptDefaultActivities = true,
		Cmd = "CmdGetMoney",
		DefaultPriority = 1,
		Description = T(318402124623, --[[ModItemActivityType GetMoney Description]] "Collecting Salary <image 'UI/Icons/Resources/res_money'>"),
		FindTarget = function (self, unit, range, prev_target)
			if unit:IsHired() then
				local money_to_get = unit.desired_money
				return money_to_get > 0 and unit.command_center:GetSupplyRequestList("Money", money_to_get, unit, nil, nil, "test_only", nil, max_int) and money_to_get
			end
		end,
		PreemptionPriority = 50,
		QueueStatusText = T(705320829055, --[[ModItemActivityType GetMoney QueueStatusText |gender-variants]] "Get Salary"),
		SortKey = 110,
		StatusIcon = "UI/Hud/st_payment",
		id = "GetMoney",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(937366310656, --[[ModItemActivityType BoardTradingPod ActivityStatusText |gender-variants]] "Leaving the colony."),
		AllowedWhileMovementImpaired = true,
		CanPreemptDefaultActivities = true,
		Cmd = "CmdBoardTradingPod",
		DefaultPriority = 1,
		Description = T(766218101384, --[[ModItemActivityType BoardTradingPod Description]] "Leaving the colony."),
		FindTarget = function (self, unit, range, prev_target)
			if unit:IsFired() then
				local pod = GetTradingPodBuilding()
				return IsValid(pod) and pod:CanTakeOff("no_fuel_required") and not unit:IsTargetUnreachable(pod) and pod
			end
		end,
		PreemptionPriority = 60,
		QueueStatusText = T(796247391269, --[[ModItemActivityType BoardTradingPod QueueStatusText |gender-variants]] "Leaving the colony."),
		SortKey = 120,
		StatusIcon = "UI/Hud/st_payment",
		id = "BoardTradingPod",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(505843761262, --[[ModItemActivityType LoadPod ActivityStatusText |gender-variants]] "Loading pod"),
		ActivityText = T(939892607393, --[[ModItemActivityType LoadPod ActivityText |gender-variants]] "Load pod"),
		Description = T(309705131296, --[[ModItemActivityType LoadPod Description]] "Transporting resources to Trading Pod"),
		DisplayName = T(120531555308, --[[ModItemActivityType LoadPod DisplayName]] "Load pod"),
		EfficiencyFromManipulation = true,
		EfficiencyFromSkill = 100,
		GetDisplayedStatusText = function (self, unit, short)
			local status = GetTByGender(self.ActivityStatusText, unit)
			if unit.carried_amount > 0 then
				return T{274655941973, "<status> <res(task_resource, carried_amount)>", status = status, unit}
			elseif unit.task_resource then
				return T{812322927031, "<status> <res_icon(task_resource)>", status = status, unit}
			else
				local supply_list = unit.current_act_target
				local param = unit.current_act_param1
				local res
				if supply_list and not param then
					local supply_req = supply_list ~= true and supply_list
					-- supply_list could be a table {target, res}
					if type(supply_req) == "table" then
						res = supply_req[2]
					end
				elseif type(supply_list) == "table" then
					local req = supply_list[1]
					req = type(req) == "userdata" and req
					res = req and req:GetResource()
				end
				if res then
					return T{717803690676, "<status> <res_icon(res)>", status = status, res =  res}
				end
			end
			return status
		end,
		QueueStatusText = T(633655152835, --[[ModItemActivityType LoadPod QueueStatusText |gender-variants]] "Load pod"),
		SortKey = 1650,
		StatusIcon = "UI/Hud/st_hand",
		id = "LoadPod",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(574333858706, --[[ModItemActivityType UnloadPod ActivityStatusText |gender-variants]] "Unloading pod"),
		ActivityText = T(473694555872, --[[ModItemActivityType UnloadPod ActivityText |gender-variants]] "Unload pod"),
		Description = T(808839897162, --[[ModItemActivityType UnloadPod Description]] "Transporting resources from Trading Pod"),
		DisplayName = T(289780786980, --[[ModItemActivityType UnloadPod DisplayName]] "Unload pod"),
		EfficiencyFromManipulation = true,
		EfficiencyFromSkill = 100,
		GetDisplayedStatusText = function (self, unit, short)
			local status = GetTByGender(self.ActivityStatusText, unit)
			if unit.carried_amount > 0 then
				return T{274655941973, "<status> <res(task_resource, carried_amount)>", status = status, unit}
			elseif unit.task_resource then
				return T{812322927031, "<status> <res_icon(task_resource)>", status = status, unit}
			else
				local supply_list = unit.current_act_target
				local param = unit.current_act_param1
				local res
				if supply_list and not param then
					local supply_req = supply_list ~= true and supply_list
					-- supply_list could be a table {target, res}
					if type(supply_req) == "table" then
						res = supply_req[2]
					end
				elseif type(supply_list) == "table" then
					local req = supply_list[1]
					req = type(req) == "userdata" and req
					res = req and req:GetResource()
				end
				if res then
					return T{717803690676, "<status> <res_icon(res)>", status = status, res =  res}
				end
			end
			return status
		end,
		PriorityDisplayName = T(623877177864, --[[ModItemActivityType UnloadPod PriorityDisplayName]] "Unloading pod"),
		QueueStatusText = T(149114140919, --[[ModItemActivityType UnloadPod QueueStatusText |gender-variants]] "Unload pod"),
		SortKey = 1660,
		StatusIcon = "UI/Hud/st_hand",
		id = "UnloadPod",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(433785224703, --[[ModItemActivityType Biologist ActivityStatusText |gender-variants]] "Dissecting"),
		ActivityText = T(871717261483, --[[ModItemActivityType Biologist ActivityText |gender-variants]] "Dissecting"),
		AddDeliveryToBatch = true,
		Description = T(310372517965, --[[ModItemActivityType Biologist Description]] "Handling organisms for transporting and research."),
		DisplayName = T(419558588676, --[[ModItemActivityType Biologist DisplayName]] "Dissecting"),
		EfficiencyFromConsciousness = true,
		EfficiencyFromManipulation = true,
		EfficiencyFromSkill = 50,
		GetActivityQueueStatusText = function (self, target, unit, param1, param2)
			local target = IsValid(target) and target:GetActivityTarget()
			if IsValid(target) then
				local recipe = Recipes[target.selected_recipe.id]
				local text = { T{116123475078, "<status> ", status = GetTByGender(self.QueueStatusText, unit) } }
				for _, output in ipairs(recipe and recipe.OutputResources) do
					text[#text + 1] = T{424460929843, "<res_icon(res)>", res = output.resource }
				end
				return table.concat(text)
			end
			return GetTByGender(self.QueueStatusText, unit)
		end,
		GetDeliveryRes = function (self, target, unit)
			-- get the resoure from the recipe output
			if not IsValid(target) then return end
			local recipe_def = Recipes[target.recipe_id]
			local output = recipe_def and recipe_def.OutputResources
			if #(output or "") == 0 then return end
			return true, output[1].resource, target:GetActivityTarget()
		end,
		GetDisplayedStatusText = function (self, unit, short)
			local activity_target = unit.current_act_target
			local target = IsValid(activity_target) and activity_target:GetActivityTarget()
			if IsValid(target) then
				local selected = target.selected_recipe
				if selected then
					local recipe = Recipes[selected.id]
					local input_icons, output_icons = {}, {}
					for _, input in ipairs(recipe and recipe.InputResources) do
						input_icons[#input_icons + 1] = T{424460929843, "<res_icon(res)>", res = input.resource }
					end
					for _, output in ipairs(recipe and recipe.OutputResources) do
						output_icons[#output_icons + 1] = T{424460929843, "<res_icon(res)>", res = output.resource }
					end
					
					if unit:IsWorkerTaskInProgress() and not unit:IsDoingActivityObject() then
						return T{550125990911, --[[|gender-variants]] "Getting <input_res> for <output_res>", input_res = table.concat(input_icons), output_res = table.concat(output_icons), TGender = unit}
					end
					return T{968433297330, "<status> <output_res>", status = GetTByGender(self.ActivityStatusText, unit), output_res = table.concat(output_icons) }
				end
			end
			return GetTByGender(self.ActivityStatusText, unit)
		end,
		PickClosest = true,
		QueueStatusText = T(821838349997, --[[ModItemActivityType Biologist QueueStatusText |gender-variants]] "Biology"),
		Skill = "Biology",
		SortKey = 5000,
		StatusIcon = "Biologist/BiologistLogoSmall.png",
		id = "Biologist",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(955091457024, --[[ModItemActivityType Trade ActivityStatusText |gender-variants]] "Trading"),
		ActivityText = T(539303408616, --[[ModItemActivityType Trade ActivityText |gender-variants]] "Trading for <target.DisplayName>"),
		AddDeliveryToBatch = true,
		Description = T(454523237973, --[[ModItemActivityType Trade Description]] "Producing resources from contractors, suppliers and the market."),
		DisplayName = T(834610341361, --[[ModItemActivityType Trade DisplayName]] "Trading"),
		EfficiencyFromConsciousness = true,
		EfficiencyFromManipulation = true,
		EfficiencyFromSkill = 50,
		GetActivityQueueStatusText = function (self, target, unit, param1, param2)
			local target = IsValid(target) and target:GetActivityTarget()
			if IsValid(target) then
				local recipe = Recipes[target.selected_recipe.id]
				local text = { T{116123475078, "<status> ", status = GetTByGender(self.QueueStatusText, unit) } }
				for _, output in ipairs(recipe and recipe.OutputResources) do
					text[#text + 1] = T{424460929843, "<res_icon(res)>", res = output.resource }
				end
				return table.concat(text)
			end
			return GetTByGender(self.QueueStatusText, unit)
		end,
		GetDeliveryRes = function (self, target, unit)
			-- get the resoure from the recipe output
			if not IsValid(target) then return end
			local recipe_def = Recipes[target.recipe_id]
			local output = recipe_def and recipe_def.OutputResources
			if #(output or "") == 0 then return end
			return true, output[1].resource, target:GetActivityTarget()
		end,
		GetDisplayedStatusText = function (self, unit, short)
			local activity_target = unit.current_act_target
			local target = IsValid(activity_target) and activity_target:GetActivityTarget()
			if IsValid(target) then
				local selected = target.selected_recipe
				if selected then
					local recipe = Recipes[selected.id]
					local input_icons, output_icons = {}, {}
					for _, input in ipairs(recipe and recipe.InputResources) do
						input_icons[#input_icons + 1] = T{424460929843, "<res_icon(res)>", res = input.resource }
					end
					for _, output in ipairs(recipe and recipe.OutputResources) do
						output_icons[#output_icons + 1] = T{424460929843, "<res_icon(res)>", res = output.resource }
					end
					
					if unit:IsWorkerTaskInProgress() and not unit:IsDoingActivityObject() then
						return T{550125990911, --[[|gender-variants]] "Getting <input_res> for <output_res>", input_res = table.concat(input_icons), output_res = table.concat(output_icons), TGender = unit}
					end
					return T{968433297330, "<status> <output_res>", status = GetTByGender(self.ActivityStatusText, unit), output_res = table.concat(output_icons) }
				end
			end
			return GetTByGender(self.ActivityStatusText, unit)
		end,
		PickClosest = true,
		QueueStatusText = T(298843521800, --[[ModItemActivityType Trade QueueStatusText |gender-variants]] "Trading"),
		Skill = "Trade",
		SortKey = 5100,
		StatusIcon = "Trade/TradeLogoSmall.png",
		id = "Trade",
	}),
	PlaceObj('ModItemActivityType', {
		ActivityStatusText = T(914254311734, --[[ModItemActivityType Hacking ActivityStatusText |gender-variants]] "Hacking"),
		ActivityText = T(943595594807, --[[ModItemActivityType Hacking ActivityText |gender-variants]] "Downloading <target.DisplayName>"),
		AddDeliveryToBatch = true,
		Description = T(756620149425, --[[ModItemActivityType Hacking Description]] "Producing blueprints by hacking into government software and retrieving confidential files to research."),
		DisplayName = T(231654145213, --[[ModItemActivityType Hacking DisplayName]] "Hacking"),
		EfficiencyFromConsciousness = true,
		EfficiencyFromManipulation = true,
		EfficiencyFromSkill = 50,
		GetActivityQueueStatusText = function (self, target, unit, param1, param2)
			local target = IsValid(target) and target:GetActivityTarget()
			if IsValid(target) then
				local recipe = Recipes[target.selected_recipe.id]
				local text = { T{116123475078, "<status> ", status = GetTByGender(self.QueueStatusText, unit) } }
				for _, output in ipairs(recipe and recipe.OutputResources) do
					text[#text + 1] = T{424460929843, "<res_icon(res)>", res = output.resource }
				end
				return table.concat(text)
			end
			return GetTByGender(self.QueueStatusText, unit)
		end,
		GetDeliveryRes = function (self, target, unit)
			-- get the resoure from the recipe output
			if not IsValid(target) then return end
			local recipe_def = Recipes[target.recipe_id]
			local output = recipe_def and recipe_def.OutputResources
			if #(output or "") == 0 then return end
			return true, output[1].resource, target:GetActivityTarget()
		end,
		GetDisplayedStatusText = function (self, unit, short)
			local activity_target = unit.current_act_target
			local target = IsValid(activity_target) and activity_target:GetActivityTarget()
			if IsValid(target) then
				local selected = target.selected_recipe
				if selected then
					local recipe = Recipes[selected.id]
					local input_icons, output_icons = {}, {}
					for _, input in ipairs(recipe and recipe.InputResources) do
						input_icons[#input_icons + 1] = T{424460929843, "<res_icon(res)>", res = input.resource }
					end
					for _, output in ipairs(recipe and recipe.OutputResources) do
						output_icons[#output_icons + 1] = T{424460929843, "<res_icon(res)>", res = output.resource }
					end
					
					if unit:IsWorkerTaskInProgress() and not unit:IsDoingActivityObject() then
						return T{550125990911, --[[|gender-variants]] "Getting <input_res> for <output_res>", input_res = table.concat(input_icons), output_res = table.concat(output_icons), TGender = unit}
					end
					return T{968433297330, "<status> <output_res>", status = GetTByGender(self.ActivityStatusText, unit), output_res = table.concat(output_icons) }
				end
			end
			return GetTByGender(self.ActivityStatusText, unit)
		end,
		PickClosest = true,
		QueueStatusText = T(655848345972, --[[ModItemActivityType Hacking QueueStatusText |gender-variants]] "Hacking"),
		Skill = "Hacking",
		SortKey = 5400,
		StatusIcon = "CriminalActivity/CriminalActivitySmall.png",
		id = "Hacking",
	}),
	PlaceObj('ModItemConstDef', {
		group = "Gameplay",
		id = "ResearchQueueSize",
		value = 20,
	}),
	PlaceObj('ModItemConstDef', {
		group = "Gameplay",
		id = "MaxDraftedIdleTime",
		scale = "h",
		value = 1920000,
	}),
	PlaceObj('ModItemConstDef', {
		group = "Gameplay",
		id = "MaxSurvivorsCount",
		value = 200,
	}),
	PlaceObj('ModItemConstDef', {
		Comment = "The range of power poles connecting to each other and rooms.",
		group = "Gameplay",
		id = "PowerPolesConnectionRange",
		scale = "m",
		value = 40000,
	}),
	PlaceObj('ModItemGameDifficultyDef', {
		Comment = "I know this and I want a challenge",
		SortKey = 9990,
		description = T(779202277834, --[[ModItemGameDifficultyDef PXImpossible description]] "For players who are looking for a extreme challenge. This difficulty will increase all nests spawn limits, creating a more challenging environment. It will reduce attack times between waves and increase the difficulty of waves. Also increases the frequency of disasters.\n\n<left>Starting resources:\n0"),
		display_name = T(477414874278, --[[ModItemGameDifficultyDef PXImpossible display_name]] "Impossible"),
		display_name_caps = T(260328880504, --[[ModItemGameDifficultyDef PXImpossible display_name_caps]] "IMPOSSIBLE"),
		effects = {
			PlaceObj('EffectsWithParams', {
				Effects = {
					PlaceObj('ModifyProperty', {
						mul = 2000,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "PositiveCooldownInitial",
					}),
					PlaceObj('ModifyProperty', {
						mul = 2000,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "PositiveCooldownMin",
					}),
					PlaceObj('ModifyProperty', {
						mul = 2000,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "PositiveCooldownMax",
					}),
					PlaceObj('ModifyProperty', {
						mul = 500,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "AttackCooldownMin",
					}),
					PlaceObj('ModifyProperty', {
						mul = 500,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "AttackCooldownMax",
					}),
					PlaceObj('ModifyProperty', {
						mul = 400,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "NegativeCooldownMin",
					}),
					PlaceObj('ModifyProperty', {
						mul = 400,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "NegativeCooldownMax",
					}),
					PlaceObj('ModifyProperty', {
						mul = 1500,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "ProgressSurvivor",
					}),
					PlaceObj('ModifyProperty', {
						add = 80,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "ProgressYear",
					}),
					PlaceObj('ModifyProperty', {
						mul = 2500,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "ProgressBuildingsFactor",
					}),
					PlaceObj('ModifyProperty', {
						mul = 2500,
						obj_class = "MoonProps",
						param_bindings = false,
						prop = "ProgressResourcesFactor",
					}),
					PlaceObj('AttachEffectsToLabel', {
						Effects = {
							PlaceObj('ModifyObject', {
								Add = 10,
								Id = "IncreaseNestsAdults",
								ModProperty = "adults_max_count",
								ObjectClass = "TerritorialNest",
								param_bindings = false,
							}),
							PlaceObj('ModifyObject', {
								Add = 20,
								Id = "IncreaseNestsHatchlings",
								ModProperty = "hatchlings_max_count",
								ObjectClass = "TerritorialNest",
								param_bindings = false,
							}),
							PlaceObj('ModifyObject', {
								Add = 4,
								Id = "IncreaseNestsMothers",
								ModProperty = "elders_max_count",
								ObjectClass = "TerritorialNest",
								param_bindings = false,
							}),
							PlaceObj('ModifyObject', {
								Add = 30,
								Id = "IncreaseNestsRegen",
								ModProperty = "health_regen",
								ObjectClass = "TerritorialNest",
								param_bindings = false,
							}),
							PlaceObj('ModifyObject', {
								Id = "IncreaseNestsHealth",
								ModProperty = "MaxHealth",
								Mul = 6000,
								ObjectClass = "TerritorialNest",
								param_bindings = false,
							}),
							PlaceObj('ModifyObject', {
								Add = 10,
								Id = "IncreaseNestsSleepers",
								ModProperty = "burrowed_max_count",
								ObjectClass = "TerritorialNest",
								param_bindings = false,
							}),
						},
						Id = "BoostShriekerNests",
						Label = "TerritorialNests",
						LabelType = "Game",
						param_bindings = false,
					}),
				},
				__params = function (self, obj, context, ...) return MoonInstance, context, ... end,
				param_bindings = false,
			}),
		},
		id = "PXImpossible",
		new_in = "DunesAndMoons",
	}),
	PlaceObj('ModItemGameRuleDef', {
		SortKey = 101,
		description = T(961279536898, --[[ModItemGameRuleDef AdrenalineRush description]] "<center><color TextEmphasis>Project-X Modification:</color>\n\nA temporary adrenaline rush caused by the pilots terrible flying upon descending through the planets atmosphere. \n\n<color TextEmphasis>(+50% Happiness for 48 Hours.)</color>"),
		display_name = T(220584108961, --[[ModItemGameRuleDef AdrenalineRush display_name]] "Adrenaline Rush"),
		display_name_caps = T(919445947719, --[[ModItemGameRuleDef AdrenalineRush display_name_caps]] "ADRENALINE RUSH"),
		effects = {
			PlaceObj('AddHappinessFactorEffect', {
				HappinessFactor = "AdrenalineRush1",
				Id = "autoid_fDsBmM1_SlQ2dwD",
				param_bindings = false,
			}),
		},
		id = "AdrenalineRush",
		new_in = "DunesAndMoons",
	}),
	PlaceObj('ModItemInfopanelStatus', {
		SortKey = 90,
		Text = T(201862423794, --[[ModItemInfopanelStatus NoWorkingRadio Text]] "Request Supply Drops at the Communication Relay."),
		id = "NoWorkingRadio",
	}),
	PlaceObj('ModItemMoonDef', {
		AttackCooldownInitial = 7680000,
		AttackCooldownMax = 19200000,
		AttackCooldownMin = 9600000,
		Color = 4294901999,
		DecreasePopMax = 200,
		DecreasePopMin = 1,
		Image = "ProjectXMoonV1.PNG",
		IncreasePopMax = 200,
		IncreasePopMin = 1,
		MinIncreasePopChance = 0,
		NegativeCooldownInitial = 4800000,
		NegativeCooldownMax = 8640000,
		NegativeCooldownMin = 7680000,
		OnMoonCreated = function (self, moon_obj)
			moon_obj:SetSIModulation(0)
		end,
		OrbitalHeight = 300000,
		OrbitalRadius = 500000,
		PositiveCooldownInitial = 4800000,
		PositiveCooldownMax = 8640000,
		PositiveCooldownMin = 7680000,
		ProgressBuildingsFactor = 30,
		ProgressResourcesFactor = 30,
		ProgressSurvivor = 0,
		ProgressVariationMin = 20,
		Radius = 1000000,
		SatelliteScale = 20,
		SortKey = 700,
		description = T(762508939510, --[[ModItemMoonDef ProjectXMoon description]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nThis moon is the very ambiance of silence. We do not have much information in regards to how it effects the nearby planets in rotation just yet, but that is why we have you I suppose. A new colonization effort is to take place on the nearby planet and we need you to assist us in building from the foundation up. Your progress will determine if the planet can sustain Human civilization and how the Human biology reacts to long exposure to this moon and the environment of the planet itself. Thank you for volunteering to aid the expansion of the Human race.\n\n<color TextEmphasis>::Transmission Terminating::\n::Transmission Terminated::</color>\n"),
		display_name = T(207079423846, --[[ModItemMoonDef ProjectXMoon display_name]] "<style TextPositive>Astral Moon</style>"),
		display_name_caps = T(436045912122, --[[ModItemMoonDef ProjectXMoon display_name_caps]] "<style TextPositive>ASTRAL MOON</style>"),
		flavor_text = T(768390037049, --[[ModItemMoonDef ProjectXMoon flavor_text]] '"This moon has been designed for longevity and the waves of attacks have been greatly decreased to happen over a very long period of time. This way you have a more realistic time period to work on your colony and appreciate your hard work instead of being slaughtered by waves every second."'),
		id = "ProjectXMoon",
		new_in = "Military",
	}),
	PlaceObj('ModItemMoonDef', {
		AttackCooldownInitial = 5760000,
		AttackCooldownMax = 5760000,
		AttackCooldownProgressReduction = 50,
		AttackDelayMod = 40,
		Color = 4278201855,
		DecreasePopMax = 200,
		DecreasePopMin = 1,
		Image = "ProjectXMoonV2.PNG",
		IncreasePopMax = 200,
		IncreasePopMin = 1,
		InitialRotation = 5400,
		MinDecreasePopChance = 5,
		NegativeCooldownInitial = 960000,
		NegativeCooldownMax = 960000,
		PositiveCooldownInitial = 960000,
		PositiveCooldownMax = 960000,
		ProgressBuildingsFactor = 80,
		ProgressInitial = 300,
		ProgressResourcesFactor = 80,
		ProgressSurvivor = 50,
		ProgressVariationMax = 300,
		ProgressYear = 100,
		SortKey = 900,
		description = T(313811741525, --[[ModItemMoonDef ProjectXMoon2 description]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nThis moon is the very ambiance of chaos. Those seeking a true challenge then this is your stop, and for those who do pick this moon... I wish you the best of luck. The scent of a human alone is picked up by the wildlife here within minutes and before you know it, you will have plenty of visitors. Be prepared for a challenge. This is the most insanely intensified chaotic moon you can attempt to challenge and is not for the faint hearted.\n\n<color TextEmphasis>::Transmission Terminating::\n::Transmission Terminated::</color>"),
		display_name = T(206103355378, --[[ModItemMoonDef ProjectXMoon2 display_name]] "<style TextNegative>Uxtol Moon</style>"),
		display_name_caps = T(367562308154, --[[ModItemMoonDef ProjectXMoon2 display_name_caps]] "<style TextNegative>UXTOL MOON</style>"),
		flavor_text = T(250263580178, --[[ModItemMoonDef ProjectXMoon2 flavor_text]] '"How can you look at the galaxy and not feel insignificant?"'),
		id = "ProjectXMoon2",
		new_in = "DunesAndMoons",
	}),
	PlaceObj('ModItemMoonDef', {
		AttackCooldownInitial = 26880000,
		AttackCooldownMax = 29760000,
		AttackCooldownMin = 26880000,
		AxisTilt = 2100,
		Color = 4288286208,
		DecreasePopMax = 1,
		DecreasePopMin = 1,
		Image = "Mod/ucCehPy/ProjectXMoonV3.png",
		IncreasePopMax = 1,
		IncreasePopMin = 1,
		InitialRotation = 16200,
		MinDecreasePopChance = 5,
		NegativeCooldownInitial = 11520000,
		NegativeCooldownMax = 18240000,
		NegativeCooldownMin = 14400000,
		PositiveCooldownInitial = 11520000,
		PositiveCooldownMax = 18240000,
		PositiveCooldownMin = 14400000,
		ProgressVariationMax = 150,
		ProgressVariationMin = 50,
		ProgressYear = 100,
		Radius = 1500000,
		RotationTime = 1200000,
		SortKey = 800,
		description = T(380716869392, --[[ModItemMoonDef ProjectXMoon3 description]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nThe moon located in the Delta Sector is the mildest of moons, the radiated energy from the atmosphere brings a wave of calmness across the wildlife on the nearby planet for a large portion of the year. Though the animals do tend to get hostile in 28 day intervals, we are still baffled as to why this is. This is a very calm and peaceful location, one for those who desire a more relaxing type of play.\n\n<color TextEmphasis>::Transmission Terminating::\n::Transmission Terminated::</color>\n"),
		display_name = T(146049507543, --[[ModItemMoonDef ProjectXMoon3 display_name]] "<color TextEmphasis>Delta Sector</color>"),
		display_name_caps = T(188987989263, --[[ModItemMoonDef ProjectXMoon3 display_name_caps]] "<color TextEmphasis>DELTA SECTOR</color>"),
		flavor_text = T(542740756183, --[[ModItemMoonDef ProjectXMoon3 flavor_text]] '"Never apologize for burning too brightly or collapsing into yourself every night. That is how galaxies are made."'),
		group = "Default",
		id = "ProjectXMoon3",
		new_in = "Robots",
	}),
	PlaceObj('ModItemMsgDef', {
		Params = "door",
		id = "DoorLocked",
	}),
	PlaceObj('ModItemMsgDef', {
		Params = "door",
		id = "DoorUnlocked",
	}),
	PlaceObj('ModItemNotificationPreset', {
		dismissable = false,
		id = "LockedDoors",
		msg_reactions = {
			PlaceObj('MsgReaction', {
				Event = "DoorLocked",
				Handler = function (self, door)
					if door.player == UIPlayer then
						self:AddObject(door)
					end
				end,
			}),
			PlaceObj('MsgReaction', {
				Event = "DoorUnlocked",
				Handler = function (self, door)
					self:RemoveObject(door)
				end,
			}),
		},
		suppressable = false,
		text = T(225821982210, --[[ModItemNotificationPreset LockedDoors text]] "<color TextEmphasis><image UI/Icons/Infopanels/close_window 1000><count></color>"),
	}),
	PlaceObj('ModItemNotificationPreset', {
		AllowedInScenarios = set( "CrashLanding", "MilitaryOutpost", "Trading" ),
		IPTabToOpen = "",
		fx_action = "UINotificationCritical",
		game_speed = "normal",
		id = "Scenario",
		msg_reactions = {
			PlaceObj('MsgReaction', {
				Event = "GameStarted",
				Handler = function (self)
					AddGameNotification(self.id)
				end,
			}),
		},
		priority = "Critical",
		rollover = T(521515614939, --[[ModItemNotificationPreset Scenario rollover]] "<center><style TextEmphasis>You have activated the Project-X modification but are not playing the scenario for the mod. We strongly advise that the mod is played on the ''Project-X'' scenario found in the start new game menu to get the full potential experience from the mod and avoid potential conflicts that could cause bugs, the mod is only tested in 'Project-X' scenario and may not be 100% functional on other scenarios.</style>"),
		rollover_text = T(915044130016, --[[ModItemNotificationPreset Scenario rollover_text]] "<center><style red>WARNING</style>\n<style TextEmphasis>You have activated the Project-X mod but are not playing the scenario for the mod. We strongly advise that the mod is played on the ''Project-X'' scenario found in the start new game menu to get the full potential experience from the mod and avoid potential conflicts that could cause bugs, the mod is only tested in 'Project-X' scenario and may not be 100% functional on other scenarios.</style>"),
		rollover_title = T(354237638346, --[[ModItemNotificationPreset Scenario rollover_title]] "Wrong Scenario"),
		show_once = true,
		text = T(390703045515, --[[ModItemNotificationPreset Scenario text]] "<style red>Wrong Scenario</style>"),
		text_many = T(591094172050, --[[ModItemNotificationPreset Scenario text_many]] "<center><style TextEmphasis>Thank you for supporting Stranded: Project-X! It is a privilege to be able to work with such an amazing community. I want to make Project-X incredible for all of you. Please join the discord to help me develop this mod to your liking. It will allow me to engage with the community, fix bug reports and add new features suggested by you. The discord server can be found on the mods information page at the bottom.</style>"),
		voiced_text = "",
	}),
	PlaceObj('ModItemRadioStationPreset', {
		Folder = "RadioStationPX",
		SortKey = 3,
		description = T(690101168437, --[[ModItemRadioStationPreset Project-X description]] "Project-X Radio"),
		display_name = T(195056565192, --[[ModItemRadioStationPreset Project-X display_name]] "Radio Project-X"),
		group = "Project-X",
		id = "Project-X",
	}),
	PlaceObj('ModItemScenarioDef', {
		DecreasePopMax = 20,
		ForceDisabledGameRules = {
			"PeacefulMode",
		},
		ForceEnabledGameRules = {
			"AdrenalineRush",
		},
		GameLoseConds = {
			PlaceObj('CheckExpression', {
				Expression = function (self, player) return next(SpawnedSurvivorIds) and LiveSurvivorsCount() == 0 end,
				Params = "self, player",
			}),
		},
		GameLoseText = T(511950544855, --[[ModItemScenarioDef ProjectXScenario GameLoseText]] "Your colonization efforts have failed."),
		GameWinText = "",
		Image = "ProjectXScenario.PNG",
		IncreasePopMax = 20,
		IntroClouds = true,
		KeepPlayingOnWin = true,
		LandingScene = function (self)
			local PodOrbitalVelocity = 120*guim
			local PodOrbitalAltitude = 500*guim
			local cloud_offsets = {
				point(0, 0, -120*guim),
				point(0, 0, -60*guim),
			}
			
			-- place the prefab
			local start_pos = WaitGameStartPos()
			local success, objs = SpawnStartPrefab(start_pos)
			local mark = GetLandingLocationMark(objs, start_pos)
			local mark_pos = mark and mark:GetPos() or start_pos
			local center = SnapToVoxel(mark_pos)
			local construction_pos, last_pos = center
			local dr, A = const.SlabSizeX, 360 * 60
			local r, a, da = 0, 0, A
			local bbox = GetPlayBox()
			local landing_pad
			while da > 60 and r < 50*guim do
				if construction_pos ~= last_pos and bbox:Point2DInside(construction_pos) then
					local csites = PlaceConstructionFromState(nil, nil, "TradingPodBuilding", {
						construction_pos = construction_pos,
						skip_terrain_change = true
					}, nil, "silent")
					if csites then
						local csite = csites[1]
						landing_pad = csite:GetConstructedObj()
						csite:OnConstructionActivityComplete("forced")
						break
					end
					last_pos = construction_pos
				end
				local a1 = (a + da) % A
				if a1 > a then
					a = a1
				else
					a, r = 0, r + dr
					da = MulDivRound(dr, A * 7, 22 * r)
				end
				construction_pos = SnapToVoxel(RotateRadius(r, a, center))
			end
			
			if not landing_pad then
				construction_pos = center
				landing_pad = PlaceObject("TradingPodBuilding", { player = UIPlayer })
				landing_pad:InitElementConstruction()
				landing_pad:SetPos(construction_pos)
				landing_pad:StartElementConstruction()
				landing_pad:CompleteElementConstruction()
			end
			if not Game or not Game.no_intro then
				landing_pad:SetVisible(false)
				local pod = TradingPod:new{
					landing_spot = landing_pad,
					orbital_entry_velocity = PodOrbitalVelocity,
					orbital_altitude = PodOrbitalAltitude,
					
					CameraHorizontalOffset = 25*1000, -- How far behind the trading pod the game camera will be while following it
					CameraVerticalOffset = 1*1000, -- How far above the trading pod the game camera will be while following it.
					CameraStartUpPitch = 60*60,
					CameraMinPitch = 30*60,
					CameraMaxPitch = 80*60,
					CameraZoom = 50, -- The zoom level of the game camera while it is following the trading pod .
				}
				pod:ClearEnumFlags(const.efCollision)
				local dest, norm, material = landing_pad:GetLandingParams(pod)
				local spawn_pos = dest + norm
				pod:SetOrientation(norm, CalcOrientation(pod, bbox:Center()))
				pod:SetPos(spawn_pos)
				
				UIFollowObj(pod, "IModeIntroFollowCamera")
				camera3p.OverrideDefaultPitch(pod.CameraStartUpPitch, true)
				
				WaitingIntroDialog = false
				CloseDialog("Intro")
				SetAllVolumesReason("Intro", nil, 1000)
				SetGameSpeed("normal")
				
				local skip, landed
				local main_thread = CurrentThread()
				local skip_thread = CreateGameTimeThread(function()
					WaitMsg("SkipIntro")
					skip = true
					Wakeup(main_thread)
				end)
				local landing_thread = CreateGameTimeThread(function()
					pod:WaitLandAt(dest, norm, material)
					landed = true
					Wakeup(main_thread)
				end)
				
				local function PlaceCloud(pos)
					local cloud = AttachDummy:new()
					cloud:SetGameFlags(const.gofAlwaysRenderable)
					cloud:SetPos(pos)
					cloud:Face(spawn_pos)
					PlayFX("SpaceDebris_Cloud", "start", cloud)
					return cloud
				end
				local clouds = {}
				for _, offset in ipairs(cloud_offsets) do
					PlaceCloud(spawn_pos + offset)
				end
				
				while not skip and not landed do
					WaitWakeup(1000)
				end
				
				local dialog = OpenDialog("IntroFadeIn")
				local transition = dialog and dialog.FadeInTime or 1000
				SetAllVolumesReason("Intro", 0, transition, { UI = true })
				Sleep(transition)
				
				OpenDialog("IntroFadeOut")
				CloseDialog("IntroFadeIn")
				camera3p.Reset()
				UIUnfollowObj(pod, "IModeIntroFollowCamera")
				
				-- enforce black screen now as the fading is in real time
				Sleep(const.IntroLandingScene.BlackScreenDelay)
				
				pod:CmdLandDstr()
				if pod.landing_state and pod.landing_state < 3 then
					PlayFX("LandingPodLand", "burn-ground", pod, material, dest)
					PlayFX("LandingPodLand", "end", pod)
				end
				
				DeleteThread(skip_thread)
				DeleteThread(landing_thread)
				DoneObject(pod)
				DoneObjects(clouds)
			end
			
			ConstructionChangeTerrain(landing_pad:GetPassBox(), landing_pad)
			landing_pad:SetVisible(true)
		end,
		ScenarioTags = set( "ProjectXScenario" ),
		SortKey = 1000,
		StartDate = 13440000,
		StartTime = 0,
		StartingCharacters = 8,
		StartingLootTemplate = "ProjectX_StartingLoot",
		default_StartingCharacters = 5,
		description = T(264344700447, --[[ModItemScenarioDef ProjectXScenario description]] '<color TextNegative>(( Pick this scenario if you want to experience the new Project-X attack waves. These attack waves are more challenging and have been buffed to match the power of the armor, weaponry and survivors added with the mod. ))</color>\n\n<center>A crew of five have been assigned a classified objective only known as <style red>"Project-X"</style> by the <color TextEmphasis>Galactican Authorities</color>. The Galactican Authorities are a government body founded by the Human race. They currently control up to 4 Galaxies, 32 Planets and 4 Large Space Stations within that territory. The Human race have come a long way, ships slowly replaced cars as the standard transport and before you knew it everyone was travelling space, discovering technology from far beyond.\n\nMultiple teams have been deployed to begin the first steps of colonization on this planet. Any success surviving will be met with additional support. This is a revival of the empires colonization efforts, after a pause 200 years ago. The official reason given is Planet Earth\'s slow descent towards destruction.\n\nBut rumors swirl around why one of the 4 large space stations are in orbit.... News broke of some crash survivors that escaped this planet. What was not reported on was their experience or details of the planet. Coincidentally, the colonization protocol was restarted shortly after. Maybe as the colony flourishes, it will learn more about what the empire really wants from this planet....\n\n<style red>Their mission</style>: Create a thriving and successful colony.'),
		display_name = T(479214093233, --[[ModItemScenarioDef ProjectXScenario display_name]] "<style TextPositive>Project-X</style>"),
		display_name_caps = T(932212980420, --[[ModItemScenarioDef ProjectXScenario display_name_caps]] "<style TextPositive>PROJECT-X</style>"),
		effects = {
			PlaceObj('RemoveLockedState', {
				Class = "BuildingCompositeDef",
				Group = "Structures",
				LockState = "hidden",
				PresetId = "MilitaryWonder",
			}),
			PlaceObj('RemoveLockedState', {
				Class = "BuildingCompositeDef",
				Group = "Structures",
				LockState = "hidden",
				PresetId = "TradingPodBuilding",
			}),
			PlaceObj('RemoveLockedState', {
				Class = "Tech",
				Group = "Power",
				LockState = "hidden",
				PresetId = "MechCores",
			}),
			PlaceObj('RemoveLockedState', {
				Class = "Tech",
				Group = "Defense",
				LockState = "hidden",
				PresetId = "SmallMech",
			}),
			PlaceObj('RemoveLockedState', {
				Class = "Tech",
				Group = "Defense",
				LockState = "hidden",
				PresetId = "CombatMech",
			}),
			PlaceObj('RemoveLockedState', {
				Class = "Resource",
				Group = "ElectronicComponents",
				LockState = "hidden",
				PresetId = "MatterGenerator",
			}),
		},
		flavor_text = T(938945156805, --[[ModItemScenarioDef ProjectXScenario flavor_text]] '"Are we as Humans worth saving? We destroyed our own planet... what makes us think we will change by replacing Earth with a new Earth? Or perhaps i\'m wrong and we can change."'),
		id = "ProjectXScenario",
		msg_reactions = {
			PlaceObj('MsgReaction', {
				Event = "ResourceUnlocked",
				Handler = function (self, res, player, reason)
					-- The production of mech cores is only available in the Military Outpost scenario and the mech techs are available for research there, as well. The following script unlocks the mech techs if a mech core has been found in other scenarios.
					if res == "MechCore" and GetPresetLockStateAndText(Techs["MechCores"], UIPlayer) == "hidden" and player == UIPlayer then
						RemovePresetLockStateReason("Tech", "Defense", "SmallMech", "hidden", false)
						RemovePresetLockStateReason("Tech", "Defense", "CombatMech", "hidden", false)
					end
				end,
			}),
			PlaceObj('MsgReaction', {
				Event = "GameStarted",
				Handler = function (self)
					if not Game or Game.scenario ~= self.id then
						return
					end
					
					for _, survivor in ipairs(AllSurvivors) do
						survivor:SetTrait("FarmOwner", true, "forced")
					end
				end,
			}),
		},
		new_in = "Military",
	}),
	PlaceObj('ModItemSkill', {
		Description = T(743816323984, --[[ModItemSkill Biology Description]] "How confident this person is in dissecting bodies, researching and learning of science concerning living organisms. Also predicts the skill of handling organs."),
		DescriptionForbidden = T(213232283310, --[[ModItemSkill Biology DescriptionForbidden]] "This person is not confident with bodily organisms and will not participate in any activities to do with Biology."),
		DisplayName = T(387121131870, --[[ModItemSkill Biology DisplayName]] "Biology"),
		SortKey = 890,
		id = "Biology",
	}),
	PlaceObj('ModItemSkill', {
		Description = T(798966686927, --[[ModItemSkill Hacking Description]] "The ability to hack databases for blueprints which gain access to the contraband research tree. Hacking unlocks exclusive expeditions and access to the black market."),
		DescriptionForbidden = T(699345531290, --[[ModItemSkill Hacking DescriptionForbidden]] "Cannot hack and has limited access to the contraband research."),
		DisplayName = T(303125293451, --[[ModItemSkill Hacking DisplayName]] "Hacking"),
		SortKey = 888,
		id = "Hacking",
	}),
	PlaceObj('ModItemSkill', {
		Description = T(676486895645, --[[ModItemSkill Trade Description]] "The efficiency of resources gained through supply contracts and the market. The higher the level will determine what materials you can get supplied and what items you can trade in the market."),
		DescriptionForbidden = T(209814102615, --[[ModItemSkill Trade DescriptionForbidden]] "Cannot trade and has limited access to the trade tech tree."),
		DisplayName = T(621253847839, --[[ModItemSkill Trade DisplayName]] "Trading"),
		SortKey = 889,
		id = "Trade",
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Tamer's Guild",
	'NameColor', RGBA(41, 188, 15, 255),
}, {
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Enabled = true,
		HasNotification = false,
		Image = "Events/ProjectXRelay2.png",
		OneTime = false,
		SelectObject = false,
		Text = T(763129449648, --[[ModItemStoryBit InitiatedCall Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nWelcome to the Project-X Communication's Headquarters, how may we be of assistance?\n\nIf you are requesting a transport of supplies or animals we can only do one transport every 20 days due to Galactic restrictions and travel time.\n\n<color TextEmphasis>::Input Request::</color>"),
		Title = T(577022169171, --[[ModItemStoryBit InitiatedCall Title]] "Communication Relay #PX-778"),
		group = "Trading",
		id = "InitiatedCall",
		max_reply_id = 24,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Bobby on 2022-Dec-09\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Feb-10\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16\nModified by Gaby on 2023-Mar-28",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(849667374062, --[[ModItemStoryBit InitiatedCall Text]] "Space Station PX-003"),
			param_bindings = false,
			unique_id = 18,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SpaceStationHQ",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(303650901339, --[[ModItemStoryBit InitiatedCall PrerequisiteText]] "Advanced Com Towers Needed"),
			Prerequisites = {
				PlaceObj('CheckOR', {
					Conditions = {
						PlaceObj('CheckObjectCount', {
							Amount = 1,
							Condition = ">=",
							Filters = {
								PlaceObj('IsBuildingClass', {
									BuildingClass = "alien_motion_sensor_temp",
									param_bindings = false,
								}),
							},
							Label = "Buildings",
							param_bindings = false,
						}),
						PlaceObj('CheckObjectCount', {
							Amount = 1,
							Condition = ">=",
							Filters = {
								PlaceObj('IsBuildingClass', {
									BuildingClass = "cyber_motion_sensor_temp",
									param_bindings = false,
								}),
							},
							Label = "Buildings",
							param_bindings = false,
						}),
					},
					param_bindings = false,
				}),
			},
			Text = T(492031078209, --[[ModItemStoryBit InitiatedCall Text]] "Commune with the Fauna via towers"),
			param_bindings = false,
			unique_id = 19,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "sensor_parent",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckObjectCount', {
					Amount = 1,
					Condition = ">=",
					Filters = {
						PlaceObj('CheckTrait', {
							Trait = "TamerGuildAccess",
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Text = T(854412164178, --[[ModItemStoryBit InitiatedCall Text]] "Tamer's Guild HQ"),
			param_bindings = false,
			unique_id = 15,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "TamerHQ",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			PrerequisiteText = "",
			Text = T(961344341925, --[[ModItemStoryBit InitiatedCall Text]] "Request Trade Ship"),
			param_bindings = false,
			unique_id = 21,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "TradeHQ",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(169329613158, --[[ModItemStoryBit InitiatedCall Text]] "BUGFIX"),
			param_bindings = false,
			unique_id = 22,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('SetCooldownEffect', {
					Cooldown = "Attack",
					TimeMin = 40000,
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "MinTimeBetweenAttacks",
					TimeMax = 40000,
					TimeMin = 40000,
					param_bindings = false,
				}),
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						const.Gameplay.atk_shr_flag = true
					end,
					param_bindings = false,
				}),
			},
			Text = T(277172576561, --[[ModItemStoryBit InitiatedCall Text]] "The following is being attempted:\n- Recalculate what techs are available for research\n- Resets attack cooldowns\n- Sets Shriekers as having already attacked the base\n\nHopefully this knocks other things loose."),
			Title = T(716915175533, --[[ModItemStoryBit InitiatedCall Title]] "Backwards Compatibility patch in progress"),
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(184474635873, --[[ModItemStoryBit InitiatedCall Text]] "Terminate Transmission"),
			param_bindings = false,
			unique_id = 7,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 4000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/ProjectXRelayFlokiLee.png",
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Text = T(372001636970, --[[ModItemStoryBit FlokiLee Text]] "<center><color TextEmphasis>::Scanning Credentials::\n::Credentials Verified::</color>\n\nGreetings Floki Lee. You have the following options available.\n\n<color TextEmphasis>::Input Option::</color>"),
		Title = T(694199077276, --[[ModItemStoryBit FlokiLee Title]] "Tamer's Guild HeadQuarters - Floki Lee"),
		UseObjectImage = true,
		group = "Expedition",
		id = "FlokiLee",
		max_reply_id = 50,
		qa_info = PlaceObj('PresetQAInfo', {
			data = {},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(382113208176, --[[ModItemStoryBit FlokiLee Text]] "Request Tamed Juno Brute"),
			param_bindings = false,
			unique_id = 11,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Juno_Brute"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(333453650310, --[[ModItemStoryBit FlokiLee Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the Juno Brute has been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(745232543958, --[[ModItemStoryBit FlokiLee Text]] "Request a pack of Tamed Dogs."),
			param_bindings = false,
			unique_id = 48,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Boxer"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Boxer"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Boxer"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Boxer"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(642577525854, --[[ModItemStoryBit FlokiLee Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and a selection of Boxer Breed Dogs have been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(306388120609, --[[ModItemStoryBit FlokiLee Text]] "Request 3 Tamed Drakka"),
			param_bindings = false,
			unique_id = 50,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Draka"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Draka"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Draka"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(142852888518, --[[ModItemStoryBit FlokiLee Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and 3 Tamed Drakka have been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(152016356050, --[[ModItemStoryBit FlokiLee Text]] "Go Back"),
			param_bindings = false,
			unique_id = 49,
		}),
		PlaceObj('StoryBitOutcome', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "TamerHQ",
					'NoCooldown', true,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(751998380101, --[[ModItemStoryBit FlokiLee Text]] "Terminate Transmission"),
			param_bindings = false,
			unique_id = 47,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 4000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/ProjectXRelayWillianAllen.png",
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Text = T(942307628256, --[[ModItemStoryBit WillianAllen Text]] "<center><color TextEmphasis>::Scanning Credentials::\n::Credentials Verified::</color>\n\nGreetings Willian Allen. You have the following options available.\n\n<color TextEmphasis>::Input Option::</color>"),
		Title = T(511630479993, --[[ModItemStoryBit WillianAllen Title]] "Tamer's Guild HeadQuarters - Willian Allen"),
		UseObjectImage = true,
		group = "Expedition",
		id = "WillianAllen",
		max_reply_id = 50,
		qa_info = PlaceObj('PresetQAInfo', {
			data = {},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(748022041130, --[[ModItemStoryBit WillianAllen Text]] "Request 5 Tamed Gujo Birds"),
			param_bindings = false,
			unique_id = 48,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(496476488222, --[[ModItemStoryBit WillianAllen Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and 5 Gujo Birds have been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(954855099051, --[[ModItemStoryBit WillianAllen Text]] "Request 3 Ulfen"),
			param_bindings = false,
			unique_id = 50,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Ulfen"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Ulfen"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Ulfen"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(685975487349, --[[ModItemStoryBit WillianAllen Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and 3 Ulf have been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(406244921259, --[[ModItemStoryBit WillianAllen Text]] "Go Back"),
			param_bindings = false,
			unique_id = 47,
		}),
		PlaceObj('StoryBitOutcome', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "TamerHQ",
					'NoCooldown', true,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(567380653098, --[[ModItemStoryBit WillianAllen Text]] "Terminate Transmission"),
			param_bindings = false,
			unique_id = 49,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 4000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/ProjectXRelayKassandra.png",
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Text = T(609700412439, --[[ModItemStoryBit KassandraInkk Text]] "<center><color TextEmphasis>::Scanning Credentials::\n::Credentials Verified::</color>\n\nGreetings Kassandra Inkk. You have the following options available.\n\n<color TextEmphasis>::Input Option::</color>"),
		Title = T(130043599419, --[[ModItemStoryBit KassandraInkk Title]] "Tamer's Guild HeadQuarters - Kassandra Inkk"),
		UseObjectImage = true,
		group = "Expedition",
		id = "KassandraInkk",
		max_reply_id = 51,
		qa_info = PlaceObj('PresetQAInfo', {
			data = {},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(136682248452, --[[ModItemStoryBit KassandraInkk Text]] "Request 2 Tamed Venomous Raptor"),
			param_bindings = false,
			unique_id = 11,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(770942295149, --[[ModItemStoryBit KassandraInkk Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the 2 Venomous Raptor has been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(210733756182, --[[ModItemStoryBit KassandraInkk Text]] "Request 5 Tamed Venomous Raptor"),
			param_bindings = false,
			unique_id = 48,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "VenomousRaptors"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(724016072060, --[[ModItemStoryBit KassandraInkk Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the 5 Venomous Raptor has been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(845003225044, --[[ModItemStoryBit KassandraInkk Text]] "Request a Tamed Scissorhand Demolisher"),
			param_bindings = false,
			unique_id = 49,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Scissorhands_Brute"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(908218236272, --[[ModItemStoryBit KassandraInkk Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the Scissorhand Demolisher has been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(240656764139, --[[ModItemStoryBit KassandraInkk Text]] "Go Back"),
			param_bindings = false,
			unique_id = 47,
		}),
		PlaceObj('StoryBitOutcome', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "TamerHQ",
					'NoCooldown', true,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(876166925904, --[[ModItemStoryBit KassandraInkk Text]] "Terminate Transmission"),
			param_bindings = false,
			unique_id = 50,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 4000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/ProjectXRelayZander.png",
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Text = T(577938877115, --[[ModItemStoryBit ZanderPogaa Text]] "<center><color TextEmphasis>::Scanning Credentials::\n::Credentials Verified::</color>\n\nGreetings Zander Pogaa. You have the following options available.\n\n<color TextEmphasis>::Input Option::</color>"),
		Title = T(406256225058, --[[ModItemStoryBit ZanderPogaa Title]] "Tamer's Guild HeadQuarters - Zander Pogaa"),
		UseObjectImage = true,
		group = "Expedition",
		id = "ZanderPogaa",
		max_reply_id = 49,
		qa_info = PlaceObj('PresetQAInfo', {
			data = {},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(143581569183, --[[ModItemStoryBit ZanderPogaa Text]] "Request Tamed Shrieker Queen"),
			param_bindings = false,
			unique_id = 11,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Shrieker_Manhunting_Mother"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(770447014075, --[[ModItemStoryBit ZanderPogaa Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the Shrieker Queen has been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(322151212421, --[[ModItemStoryBit ZanderPogaa Text]] "Request 5 Tamed Gujo Birds"),
			param_bindings = false,
			unique_id = 48,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('ActivateSpawnDef', {
					CreateInstance = true,
					FillInstance = function (self, instance)
						instance.SpawnClass = "Gujo"
					end,
					ProgressMul = 0,
					SpawnDefId = "ProjectX_Tamed",
					param_bindings = false,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "OrbitalOffer",
					TimeMax = 19200000,
					TimeMin = 19200000,
					TimeScale = "days",
					param_bindings = false,
				}),
			},
			Text = T(880546885957, --[[ModItemStoryBit ZanderPogaa Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and 5 Gujo Birds have been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(720953270568, --[[ModItemStoryBit ZanderPogaa Text]] "Go Back"),
			param_bindings = false,
			unique_id = 47,
		}),
		PlaceObj('StoryBitOutcome', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "TamerHQ",
					'NoCooldown', true,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(435891121274, --[[ModItemStoryBit ZanderPogaa Text]] "Terminate Transmission"),
			param_bindings = false,
			unique_id = 49,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 4000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/ProjectXRelayTamerHQ.png",
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Text = T(666256418224, --[[ModItemStoryBit TamerHQ Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nWelcome to the Tamer's Guild HeadQuarters. Please scan your credentials for us to access your account. Be warned that this counts as your supply drop. Due to the number of active colonies, your current wait time is one supply drop every 20 days. \n\n((If options are greyed out but you have researched a specific tamer's background research; that means PX-003 is unable to send a supply drop down right now))\n\n<color TextEmphasis>::Scan Credentials::</color>"),
		Title = T(795620650262, --[[ModItemStoryBit TamerHQ Title]] "Tamer's Guild HeadQuarters"),
		UseObjectImage = true,
		group = "Expedition",
		id = "TamerHQ",
		max_reply_id = 52,
		qa_info = PlaceObj('PresetQAInfo', {
			data = {},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Prerequisites = {
				PlaceObj('CheckTech', {
					Tech = "LunariaPasker",
					param_bindings = false,
				}),
				PlaceObj('CheckCooldown', {
					Cooldown = "OrbitalOffer",
					param_bindings = false,
				}),
			},
			Text = T(308614727338, --[[ModItemStoryBit TamerHQ Text]] "Lunaria Pasker"),
			param_bindings = false,
			unique_id = 11,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "LunariaPasker",
					param_bindings = false,
				}),
			},
			Text = "",
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Prerequisites = {
				PlaceObj('CheckTech', {
					Tech = "FlokiLee",
					param_bindings = false,
				}),
				PlaceObj('CheckCooldown', {
					Cooldown = "OrbitalOffer",
					param_bindings = false,
				}),
			},
			Text = T(513706686038, --[[ModItemStoryBit TamerHQ Text]] "Floki Lee"),
			param_bindings = false,
			unique_id = 48,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "FlokiLee",
					param_bindings = false,
				}),
			},
			Text = "",
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Prerequisites = {
				PlaceObj('CheckTech', {
					Tech = "KassandraInk",
					param_bindings = false,
				}),
				PlaceObj('CheckCooldown', {
					Cooldown = "OrbitalOffer",
					param_bindings = false,
				}),
			},
			Text = T(599154893845, --[[ModItemStoryBit TamerHQ Text]] "Kassandra Inkk"),
			param_bindings = false,
			unique_id = 49,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "KassandraInkk",
					param_bindings = false,
				}),
			},
			Text = "",
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Prerequisites = {
				PlaceObj('CheckTech', {
					Tech = "ZanderPogaa",
					param_bindings = false,
				}),
				PlaceObj('CheckCooldown', {
					Cooldown = "OrbitalOffer",
					param_bindings = false,
				}),
			},
			Text = T(464074248453, --[[ModItemStoryBit TamerHQ Text]] "Zander Pogaa"),
			param_bindings = false,
			unique_id = 50,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ZanderPogaa",
					param_bindings = false,
				}),
			},
			Text = "",
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Prerequisites = {
				PlaceObj('CheckTech', {
					Tech = "WillianAllen",
					param_bindings = false,
				}),
				PlaceObj('CheckCooldown', {
					Cooldown = "OrbitalOffer",
					param_bindings = false,
				}),
			},
			Text = T(199687423099, --[[ModItemStoryBit TamerHQ Text]] "Willian Allen"),
			param_bindings = false,
			unique_id = 52,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "WillianAllen",
					param_bindings = false,
				}),
			},
			Text = "",
			Title = "",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(166394900345, --[[ModItemStoryBit TamerHQ Text]] "Go Back"),
			param_bindings = false,
			unique_id = 51,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "InitiatedCall",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(211090607983, --[[ModItemStoryBit TamerHQ Text]] "Terminate Transmission"),
			param_bindings = false,
			unique_id = 47,
		}),
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Attacks",
	'NameColor', RGBA(228, 14, 14, 255),
}, {
	PlaceObj('ModItemAnimalSpawnDef', {
		AvoidPassTypes = set( "cost_alien_avoid" ),
		ClearArea = 256,
		ClearRadius = 2000,
		Comment = "Nest!",
		Cond = return_true,
		Count = 0,
		DistFromOthers = 10000,
		FlatRadius = 2000,
		MapCountFilter = false,
		RandomCount = 1,
		Regions = set( "Desertum", "Sobrius" ),
		SpawnClass = "GujoNest",
		SurvivorDistMin = 75000,
		TargetClass = "PastureMarker",
		TargetDistMax = 250000,
		TargetDistMin = 75000,
		ThrottleDelay = 40000,
		group = "Daily",
		id = "Gujos_Daily",
	}),
	PlaceObj('ModItemAnimalSpawnDef', {
		MaxRetries = 20,
		PostSpawn = function (self, obj, target)
			obj:Tame()
			obj.CombatHostile = false
		end,
		SpawnClass = "Gujo",
		SurvivorDistMax = 200000,
		SurvivorDistMin = 20000,
		SurvivorSpawnDistMax = 200000,
		SurvivorSpawnDistMin = 20000,
		TargetDistMax = 200000,
		TargetDistMin = 20000,
		id = "ProjectX_Tamed",
	}),
	PlaceObj('ModItemAnimalSpawnDef', {
		Behaviours = {
			PlaceObj('AnimalSpawnDefBehaviourRoam', {
				'Duration', 0,
				'RoamRadius', 15000,
				'RoamMinDist', 4500,
				'RoamMaxDist', 9000,
			}),
			PlaceObj('AnimalSpawnDefBehaviourIdle', {
				'Duration', 480000,
				'DurationMod', function (self, unit) return MoonInstance.AttackDelayMod end,
				'NoSleep', false,
			}),
			PlaceObj('AnimalSpawnDefBehaviourAggressive', {
				'Duration', 1440000,
				'SearchLabels', {
					"Survivors",
					"Buildings",
				},
				'SearchRadius', 1000000,
			}),
			PlaceObj('AnimalSpawnDefBehaviourDespawn', {
				'Wait', false,
			}),
		},
		CheckConnectivity = true,
		ClearArea = 256,
		ClearRadius = 1000,
		CountMod = function (self, target, progress) return CalculateAnimalAttackersCountMod(self, progress) end,
		DistFromOthers = 1000,
		PostSpawn = function (self, obj, target)
			obj.CombatHostile = true
			Msg("SpawnedAnimalThreat", obj)
		end,
		ResolveTarget = function (self)
			-- this target picking logic doesn't use any of the default target parameters!
			-- pick a random survivor
			local survivors = GetValidSurvivorsOnMap()
			if #survivors == 0 then
				return
			end
			local seed = InteractionRand(nil, "SpawnResolveTarget")
			local survivor, idx, seed = table.rand(survivors, seed)
			-- pick the closest N buildings
			local N = 100
			local buildings = {}
			for _, bld in ipairs(survivor.player.labels.Buildings) do
				if not bld:IsVirtual() then
					buildings[#buildings + 1] = bld
				end
			end
			table.sortby_dist(buildings, survivor, true)
			table.iclear(buildings, N + 1)
			-- pick M in the most overbuild area
			local M = 10
			table.stable_sort(buildings, function (b1, b2)
				return GetIrritationAt(b1) > GetIrritationAt(b2)
			end)
			table.iclear(buildings, M + 1)
			-- pick a random building
			local building, idx, seed = table.rand(buildings, seed)
			return building
		end,
		SpawnAsGroup = true,
		SpawnClass = "VenomousRaptors",
		SurvivorDistMax = 400000,
		SurvivorDistMin = 100000,
		SurvivorSpawnDistMax = 400000,
		SurvivorSpawnDistMin = 100000,
		TargetDistMax = 400000,
		TargetDistMin = 100000,
		TargetFilter = function (obj) return not obj:IsVirtual() end,
		TargetStartPosOnMissingTarget = true,
		group = "Attacks_Insects_NEW",
		id = "ProjectX_AttackSwarm",
	}),
	PlaceObj('ModItemAnimalSpawnDef', {
		AvoidPassTypes = set( "cost_alien_avoid" ),
		ClearArea = 256,
		ClearRadius = 3000,
		Comment = "-- spawned before the survivors",
		Cond = return_true,
		Count = 10,
		DistFromOthers = 25000,
		FlatRadius = 2000,
		MapCountFilter = false,
		PostSpawn = function (self, obj, target)
			CreateGameTimeThread(function(obj)
				for i,member in ipairs(obj.members) do
					if member:IsTheLeader() then
						member:SetPos(obj)
					else
						local nearby_pos = member:FindSleepOnGroundPos(member.SleepMaxDist, member.SleepMinDist, nil, obj, Gujo.pfclass)
						member:SetPos(nearby_pos or obj)
					end
					member.init_with_command = {"CmdSleep", "instant"}
				end
			end, obj)
		end,
		Regions = set( "Desertum", "Sobrius" ),
		ResolveTarget = function (self)
			return GameStartPos
		end,
		SpawnClass = "GujoNest",
		TargetDistMax = 400000,
		TargetDistMin = 75000,
		group = "Initial",
		id = "Gujos_Initial",
	}),
	PlaceObj('ModItemAnimalSpawnDef', {
		Behaviours = {
			PlaceObj('AnimalSpawnDefBehaviourRoam', {
				'Duration', 0,
				'RoamRadius', 15000,
				'RoamMinDist', 4500,
				'RoamMaxDist', 9000,
			}),
			PlaceObj('AnimalSpawnDefBehaviourIdle', {
				'Duration', 480000,
				'DurationMod', function (self, unit) return MoonInstance.AttackDelayMod end,
				'NoSleep', false,
			}),
			PlaceObj('AnimalSpawnDefBehaviourAggressive', {
				'Duration', 1440000,
				'SearchLabels', {
					"Survivors",
					"Buildings",
				},
				'SearchRadius', 1000000,
			}),
			PlaceObj('AnimalSpawnDefBehaviourDespawn', {
				'Wait', false,
			}),
		},
		CheckConnectivity = true,
		ClearArea = 256,
		ClearRadius = 1000,
		CountMod = function (self, target, progress) return CalculateAnimalAttackersCountMod(self, progress) end,
		DistFromOthers = 1000,
		PostSpawn = function (self, obj, target)
			obj.CombatHostile = true
			Msg("SpawnedAnimalThreat", obj)
		end,
		ResolveTarget = function (self)
			-- this target picking logic doesn't use any of the default target parameters!
			-- pick a random survivor
			local survivors = GetValidSurvivorsOnMap()
			if #survivors == 0 then
				return
			end
			local seed = InteractionRand(nil, "SpawnResolveTarget")
			local survivor, idx, seed = table.rand(survivors, seed)
			-- pick the closest N buildings
			local N = 100
			local buildings = {}
			for _, bld in ipairs(survivor.player.labels.Buildings) do
				if not bld:IsVirtual() then
					buildings[#buildings + 1] = bld
				end
			end
			table.sortby_dist(buildings, survivor, true)
			table.iclear(buildings, N + 1)
			-- pick M in the most overbuild area
			local M = 10
			table.stable_sort(buildings, function (b1, b2)
				return GetIrritationAt(b1) > GetIrritationAt(b2)
			end)
			table.iclear(buildings, M + 1)
			-- pick a random building
			local building, idx, seed = table.rand(buildings, seed)
			return building
		end,
		SpawnAsGroup = true,
		SpawnClass = "Junoskar",
		SurvivorDistMax = 400000,
		SurvivorDistMin = 100000,
		SurvivorSpawnDistMax = 400000,
		SurvivorSpawnDistMin = 100000,
		TargetDistMax = 400000,
		TargetDistMin = 100000,
		TargetFilter = function (obj) return not obj:IsVirtual() end,
		TargetStartPosOnMissingTarget = true,
		group = "Attacks_Insects_NEW",
		id = "ProjectX_Attack",
	}),
	PlaceObj('ModItemStoryBit', {
		HasNotification = false,
		Image = "Mod/ucCehPy/Events/warning.png",
		SelectObject = false,
		Text = T(510184329422, --[[ModItemStoryBit px_Attack_Ready Text]] "<center><color TextNegative>::WARNING::\n::WARNING::</color>\n\nAdvanced Sensors Scan Results:\nBuildup of biomass detected!\n\nThey can attack anytime.\nPrepare the defenses!"),
		Title = T(386141497568, --[[ModItemStoryBit px_Attack_Ready Title]] "Long Range Scan Results"),
		group = "PROJECTX",
		id = "px_Attack_Ready",
		max_reply_id = 6,
	}),
	PlaceObj('ModItemStoryBit', {
		HasNotification = false,
		Image = "Mod/ucCehPy/Events/green light.png",
		SelectObject = false,
		Text = T(684547481160, --[[ModItemStoryBit px_Attack_Not_Ready Text]] "<center><color TextPositive>::INFO::\n::INFO::</color>\n\nAdvanced Sensors Scan Results:\nNo buildup of biomass detected\n\nThe wildlife is calm."),
		Title = T(169389202915, --[[ModItemStoryBit px_Attack_Not_Ready Title]] "Long-Range Scan Results"),
		group = "PROJECTX",
		id = "px_Attack_Not_Ready",
		max_reply_id = 6,
	}),
	}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 4000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	HasNotification = false,
	Image = "Events/ProjectXRelayStation.png",
	OneTime = false,
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Text = T(780971334441, --[[ModItemStoryBit SpaceStationHQ Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nThis is Space Station PX-003, how may we be of assistance?\n\n<color TextEmphasis>::Input Request::</color>"),
	Title = T(938720259819, --[[ModItemStoryBit SpaceStationHQ Title]] "Space Station PX-003"),
	UseObjectImage = true,
	group = "Expedition",
	id = "SpaceStationHQ",
	max_reply_id = 51,
	qa_info = PlaceObj('PresetQAInfo', {
		data = {},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(565498258904, --[[ModItemStoryBit SpaceStationHQ Text]] "Hire a new Colony Member."),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "HireCandidateBoardPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		Text = "",
		Title = "",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(486347376652, --[[ModItemStoryBit SpaceStationHQ Text]] "Hire a random Colony Member."),
		param_bindings = false,
		unique_id = 48,
	}),
	PlaceObj('StoryBitOutcome', {
		StoryBits = {
			PlaceObj('StoryBitWithWeight', {
				'StoryBitId', "NewCrewMember",
				'NoCooldown', true,
			}),
		},
		Text = "",
		Title = "",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "OrbitalOffer",
				param_bindings = false,
			}),
		},
		Text = T(724711814304, --[[ModItemStoryBit SpaceStationHQ Text]] "Request a Supply Drop. (20 Day Cooldown)"),
		param_bindings = false,
		unique_id = 49,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				param_bindings = false,
			}),
		},
		Prerequisites = {
			PlaceObj('PickFromLabel', {
				Label = "LandingSpot",
				param_bindings = false,
			}),
		},
		Text = "",
		Title = "",
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Image = "Mod/ucCehPy/tutorials/Landing Spot.PNG",
		Prerequisites = {
			PlaceObj('CheckAND', {
				Conditions = {
					PlaceObj('PickFromLabel', {
						Label = "LandingSpot",
						param_bindings = false,
					}),
					PlaceObj('PickFromLabel', {
						Label = "LandingSpot",
						param_bindings = false,
					}),
				},
				Negate = true,
				param_bindings = false,
			}),
		},
		Text = T(229374114574, --[[ModItemStoryBit SpaceStationHQ Text]] "Please build a landing zone before requesting resources"),
		Title = T(305245697836, --[[ModItemStoryBit SpaceStationHQ Title]] "Build a Landing Spot"),
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(382773879140, --[[ModItemStoryBit SpaceStationHQ CustomOutcomeText]] "Let's you skip the early game \"meet the neighbors\" attacks, and be attacked by more powerful compositions"),
		HideIfDisabled = true,
		OutcomeText = "custom",
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj)
					if (not UnlockedInsectMinions["Dragonfly"])
					    or (not UnlockedInsectMinions["Juno"])
					    or (not UnlockedInsectMinions["Scissorhands"])
						or (not UnlockedInsectMinions["Skarabei"])
						or (not UnlockedInsectMinions["Glutch"])
						or (not UnlockedInsectMinions["Shrieker"])
						or (not UnlockedInsectMinions["Tecatli"]) then 
					return true 
					else
					return false
					end
				end,
				param_bindings = false,
			}),
		},
		Text = T(924460809095, --[[ModItemStoryBit SpaceStationHQ Text]] "Pheromone Bomb the area"),
		param_bindings = false,
		unique_id = 51,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					UnlockedInsectMinions["Dragonfly"]=true
					UnlockedInsectMinions["Juno"]=true
					UnlockedInsectMinions["Scissorhands"]=true
					UnlockedInsectMinions["Skarabei"]=true
					UnlockedInsectMinions["Glutch"]=true
					UnlockedInsectMinions["Shrieker"]=true
					UnlockedInsectMinions["Tecatli"]=true
				end,
				param_bindings = false,
			}),
			PlaceObj('StoryBitActivate', {
				Id = "AnimalAttack_Controller_earlyAll_ProjectX",
				param_bindings = false,
			}),
		},
		Text = T(698021738507, --[[ModItemStoryBit SpaceStationHQ Text]] "Alright, though good luck out there.\nThe boys will do a quick fly-by and drop some flash bangs and pheromone bombs on the largest clumps of biomass we can detect.\n\nThat should let the whole neighborhood know your here, without waiting for them to discover you.\nIf you make it through to next year, I'll make sure the Galactican's will hear of how much of a go-getter yall are! "),
		Title = T(266634551162, --[[ModItemStoryBit SpaceStationHQ Title]] "Galactican Announcement"),
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(457649558317, --[[ModItemStoryBit SpaceStationHQ Text]] "Go Back"),
		param_bindings = false,
		unique_id = 47,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "InitiatedCall",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(379525323314, --[[ModItemStoryBit SpaceStationHQ Text]] "Terminate Transmission"),
		param_bindings = false,
		unique_id = 50,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('SetTalkActivityTextEffect', {
			TalkGroup = "Traits_HackerInstructor",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				local skill = "Hacking"
				local other = obj.other_social
				
				local old_exp = other:GetSkillExperience(skill)
				local old_level = SkillExperienceToLevel(old_exp)
				local new_level = Min(#const.SkillExpAtLevel, old_level + 1)
				local target_exp = const.SkillExpAtLevel[new_level]
				other:AddSkillExperience(skill, target_exp - old_exp)
				ObjModified(other)
			end,
			param_bindings = false,
		}),
	},
	Category = "SocialInteraction",
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	NotificationAction = "select object",
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return CanInstructSkill(obj, "HackerInstructor", obj.other_social, "Hacking") end,
			param_bindings = false,
		}),
	},
	SuppressTime = 400000,
	Trigger = "SelectSocialInteraction",
	id = "HackerInstructor",
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Gaby on 2021-Feb-11\nModified by Gaby on 2021-May-11\nModified by Lina on 2021-May-14\nModified by Gaby on 2021-May-26\nModified by IPVankov on 2021-Jun-15\nModified by Gaby on 2021-Sep-09\nModified by Gaby on 2021-Sep-15\nModified by Gaby on 2021-Sep-27\nModified by Gaby on 2021-Oct-08\nModified by Lina on 2021-Oct-11\nModified by Lina on 2021-Oct-13\nModified by Ivan on 2022-Mar-15\nModified by Ivan on 2022-Mar-22",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('SetTalkActivityTextEffect', {
			TalkGroup = "Traits_MedicInstructor",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				local skill = "Healing"
				local other = obj.other_social
				
				local old_exp = other:GetSkillExperience(skill)
				local old_level = SkillExperienceToLevel(old_exp)
				local new_level = Min(#const.SkillExpAtLevel, old_level + 1)
				local target_exp = const.SkillExpAtLevel[new_level]
				other:AddSkillExperience(skill, target_exp - old_exp)
				ObjModified(other)
			end,
			param_bindings = false,
		}),
	},
	Category = "SocialInteraction",
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	NotificationAction = "select object",
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return CanInstructSkill(obj, "MedicInstructor", obj.other_social, "Healing") end,
			param_bindings = false,
		}),
	},
	SuppressTime = 400000,
	Trigger = "SelectSocialInteraction",
	id = "MedicInstructor",
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Gaby on 2021-Feb-11\nModified by Gaby on 2021-May-11\nModified by Lina on 2021-May-14\nModified by Gaby on 2021-May-26\nModified by IPVankov on 2021-Jun-15\nModified by Gaby on 2021-Sep-09\nModified by Gaby on 2021-Sep-15\nModified by Gaby on 2021-Sep-27\nModified by Gaby on 2021-Oct-08\nModified by Lina on 2021-Oct-11\nModified by Lina on 2021-Oct-13\nModified by Ivan on 2022-Mar-15\nModified by Ivan on 2022-Mar-22",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemFolder', {
	'name', "Trading",
	'NameColor', RGBA(192, 79, 5, 255),
}, {
	PlaceObj('ModItemStoryBit', {
		ActivationEffects = {
			PlaceObj('SpawnTradingShip', {
				Ship = "TradeShip",
				TimeInOrbit = 1920000,
				param_bindings = false,
			}),
		},
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Trade",
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "Trade",
				param_bindings = false,
			}),
		},
		Enabled = true,
		HasNotification = false,
		HasPopup = false,
		InheritsObject = false,
		NotificationCanDismiss = false,
		OneTime = false,
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj) return not CheckForTradingShip() end,
				param_bindings = false,
			}),
			PlaceObj('CheckCooldown', {
				Cooldown = "EmbargoTradeShips",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Sets = set( "Trade" ),
		SuppressTime = 14400000,
		group = "Trading",
		id = "TradingShip_TradeShip",
		max_reply_id = 4,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Geri on 2022-Oct-28\nModified by Geri on 2022-Oct-31\nModified by Ivan on 2022-Nov-17\nModified by Geri on 2022-Nov-17\nModified by Ivan on 2022-Nov-21\nModified by Ivan on 2023-Jan-27\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07\nModified by Geri on 2023-Mar-28",
			param_bindings = false,
		}),
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Depreciated",
	'NameColor', RGBA(255, 0, 0, 255),
}, {
	PlaceObj('ModItemStoryBit', {
		Category = "AttackSpawns",
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Junoskar"
				end,
				ProgressMul = 50,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "NewInsectSpeciesUnlock",
				param_bindings = false,
			}),
		},
		Enabled = true,
		HasNotification = false,
		Image = "Events/JunoBrute.png",
		Obsolete = true,
		OneTime = false,
		Text = T(217306097848, --[[ModItemStoryBit AnimalAttack_Initial_Junoskar_disabled Text]] "<color TextEmphasis>This is a rather large green Juno... What is that thing?!</color>\n\n<color blue>Strengths:</color>\n- Elite Enemy. (Expensive Loot)\n- High defense to Gas, Energy and Pacify attacks.\n- Intelligent Species (70-90% Trap Avoidance Chance)\n- Deep lacerating melee strikes that inflict a deadly poison.\n- High Damage.\n\n<color red>Weaknesses:</color>\n- Weak against blunt and pierce attacks.\n- Range attacks."),
		Title = T(599804586776, --[[ModItemStoryBit AnimalAttack_Initial_Junoskar_disabled Title]] "Scout Report"),
		group = "AttackControllers_Spawners",
		id = "AnimalAttack_Initial_Junoskar_disabled",
		max_reply_id = 2,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "AttackSpawns",
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "AlphaRaptorPX"
				end,
				ProgressMul = 30,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "VenomousRaptors"
				end,
				ProgressMul = 50,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "BabyRaptors"
				end,
				ProgressMul = 70,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "BabyRaptors"
				end,
				ProgressMul = 70,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "NewInsectSpeciesUnlock",
				param_bindings = false,
			}),
		},
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/VenomRaptor.png",
		InheritsObject = false,
		NotificationCanDismiss = false,
		NotificationExpirationBar = true,
		NotificationPriority = "AnimalAlert",
		NotificationTitle = T(767178467824, --[[ModItemStoryBit AnimalAttack_AlphaRaptorPX NotificationTitle]] "Potential Threat"),
		Obsolete = true,
		OneTime = false,
		PopupFxAction = "MessagePopup",
		SelectObject = false,
		Text = T(660853318018, --[[ModItemStoryBit AnimalAttack_AlphaRaptorPX Text]] "<color TextEmphasis>Did you hear that loud noise? It sounded like a Tecatli, if it had lungs the size of a Human that is... (12 Hours till Attack)</color>\n\n<color blue>Strengths:</color>\n- Elite Enemy. (Expensive Loot)\n- Gas/Poison attacks.\n- Pack Leader.\n- Intelligent Species. (50-80% Chance to avoid traps)\n\n<color red>Weaknesses:</color>\n- Blunt Attacks.\n- Piercing Attacks.\n- Energy Attacks.\n- Pacify Attacks."),
		Title = T(921122220560, --[[ModItemStoryBit AnimalAttack_AlphaRaptorPX Title]] "Scout Report"),
		group = "AttackControllers_Spawners",
		id = "AnimalAttack_AlphaRaptorPX",
		max_reply_id = 2,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "AttackSpawns",
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Juno"
				end,
				ProgressMul = 50,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					UnlockedInsectBosses["Juno"] = true
					Msg("FirstAttackOfSpecies", AnimalDefs["Juno"])
				end,
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "NewInsectSpeciesUnlock",
				param_bindings = false,
			}),
		},
		Enabled = true,
		HasNotification = false,
		Image = "Events/Juno.png",
		OneTime = false,
		Text = T(300391461033, --[[ModItemStoryBit AnimalAttack_Initial_Junos_disabled Text]] "<color TextEmphasis>One of our sensors have been triggered far North from here, it appears to be Juno readings. We should prepare some kind've gas or poisonous defense and utilize as much range as we can, these things are vicious if they get close. Hopefully they dont come this way. Regardless if they continue heading this way we estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Medium defense to Blunt, Pierce, Energy and Pacify attacks.\n- Intelligent Species (70-90% Trap Avoidance Chance)\n- Deep lacerating melee strikes.\n\n<color red>Weaknesses:</color>\n- Weak against gas and poison attacks.\n- Range attacks."),
		Title = T(194495775350, --[[ModItemStoryBit AnimalAttack_Initial_Junos_disabled Title]] "Scout Report"),
		group = "AttackControllers_Spawners",
		id = "AnimalAttack_Initial_Junos_disabled",
		max_reply_id = 2,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "AttackSpawns",
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "ShriekerBrutePX"
				end,
				ProgressMul = 30,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "NewInsectSpeciesUnlock",
				param_bindings = false,
			}),
		},
		Enabled = true,
		HasNotification = false,
		Image = "Events/ShriekerQueen.png",
		OneTime = false,
		Text = T(851582967644, --[[ModItemStoryBit AnimalAttack_Initial_ShriekerBrute_disabled Text]] "<color TextEmphasis>We have spotted some Shrieker Brutes leaving the nests just South from here, we should be cautious. They don't appear all to pleased to see us settling here. (12 Hours before attack commences.)</color>\n\n<color blue>Strengths:</color>\n- Elite Enemy. (Expensive Loot)\n- High defense to Pacify, Pierce and Blunt attacks.\n- Intelligent Species (70% Trap Avoidance Chance)\n- Deep lacerating melee strikes that inflict a deadly poison.\n- High Damage and Health.\n\n<color red>Weaknesses:</color>\n- Weak against gas and energy attacks."),
		Title = T(938873007879, --[[ModItemStoryBit AnimalAttack_Initial_ShriekerBrute_disabled Title]] "Scout Report"),
		group = "AttackControllers_Spawners",
		id = "AnimalAttack_Initial_ShriekerBrute_disabled",
		max_reply_id = 2,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "AttackSpawns",
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Juno_Brute"
				end,
				ProgressMul = 30,
				SpawnDefId = "ProjectX_Attack",
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					UnlockedInsectBosses["Juno"] = true
					Msg("FirstAttackOfSpecies", AnimalDefs["Juno"])
				end,
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "NewInsectSpeciesUnlock",
				param_bindings = false,
			}),
		},
		Enabled = true,
		HasNotification = false,
		Image = "Events/JunoBrute.png",
		OneTime = false,
		Text = T(609249146835, --[[ModItemStoryBit AnimalAttack_Initial_Junos_Brute_disabled Text]] "<color TextEmphasis>One of our sensors have been triggered far South from here, it appears to be a very large Juno species. This is bad news, especially a Juno of that size, hopefully they dont come this way.  they If they do continue heading this way we estimated that they could take 12 hours to reach us.</color>\n\n<color blue>Strengths:</color>\n- Medium defense to Blunt, Pierce, Energy and Pacify attacks.\n- Intelligent Species (70-90% Trap Avoidance Chance)\n- Deep lacerating melee strikes.\n\n<color red>Weaknesses:</color>\n- Weak against gas and poison attacks.\n- Range attacks."),
		Title = T(314484114726, --[[ModItemStoryBit AnimalAttack_Initial_Junos_Brute_disabled Title]] "Scout Report"),
		group = "AttackControllers_Spawners",
		id = "AnimalAttack_Initial_Junos_Brute_disabled",
		max_reply_id = 2,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
			param_bindings = false,
		}),
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Random Events",
	'NameColor', RGBA(192, 79, 5, 255),
}, {
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Tick",
		FxAction = "UINotificationExpedition",
		Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
		InheritsObject = false,
		NotificationText = T(787063565403, --[[ModItemStoryBit WantedFugitive_Colonies NotificationText]] "Incoming transmission"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "WantedFugitiveDelay_Colonies",
				param_bindings = false,
			}),
			PlaceObj('PickFromLabel', {
				Filters = {
					PlaceObj('CheckExpression', {
						Expression = function (self, obj) return obj.id == ColoniesLookingFor end,
						param_bindings = false,
					}),
				},
				Label = "Survivors",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Text = T(344830184112, --[[ModItemStoryBit WantedFugitive_Colonies Text]] "The Outer Colonies Federation has detected the presence of <color TextEmphasis><FirstName> <LastName></color> in your base. They are a wanted fugitive.\n\nWe insist that you deliver that person to us immediately. In case you refuse, we will notify the Federation to not trade with you."),
		Title = T(605584287627, --[[ModItemStoryBit WantedFugitive_Colonies Title]] "Incoming transmission"),
		group = "Trading",
		id = "WantedFugitive_Colonies",
		max_reply_id = 6,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(531610548201, --[[ModItemStoryBit WantedFugitive_Colonies CustomOutcomeText]] "<FirstName> leaves the planet"),
			OutcomeText = "custom",
			Text = T(877498374642, --[[ModItemStoryBit WantedFugitive_Colonies Text]] "Of course"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						obj:SetFarmerStatus("fired")
						ColoniesLookingFor = ""
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(436249633622, --[[ModItemStoryBit WantedFugitive_Colonies CustomOutcomeText]] "1 year embargo"),
			OutcomeText = "custom",
			Text = T(261646302067, --[[ModItemStoryBit WantedFugitive_Colonies Text]] "No"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('SetCooldownEffect', {
					Cooldown = "EmbargoColonies",
					param_bindings = false,
				}),
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						ColoniesLookingFor = ""
					end,
					param_bindings = false,
				}),
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						Msg("TradingShipEmbargo")
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		ActivationEffects = {
			PlaceObj('PickCharacterDef', {
				param_bindings = false,
			}),
		},
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Disables = {
			"JobOffer_Activator",
		},
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "JobOffers",
				TimeMin = 0,
				param_bindings = false,
			}),
		},
		Enabled = true,
		FxAction = "UINotificationExpedition",
		NotificationText = T(726369393892, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Smugglers NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Sets = set( "IncreasePop" ),
		Text = T(562318740045, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Smugglers Text]] "Hi there! I saw that you are looking for workers.\n\nMy name is <color TextEmphasis><character_def.FirstName> <character_def.LastName></color>. Long story short, I'm looking for a place to hide from the <color TextEmphasis>Smugglers Guild</color> for a couple of seasons. I will gladly work for you, no payment needed.\n\nI'm skilled in <color TextEmphasis><character_def.UIBestSkills></color>.\n\nLet me know if you're interested."),
		Title = T(904038594484, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Smugglers Title]] "Contract offer"),
		UseObjectImage = true,
		group = "Trading",
		id = "JobOffer_Candidate_Fugitive_Smugglers",
		max_reply_id = 6,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(861017349479, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Smugglers CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
			Text = T(647091935342, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Smugglers Text]] "Yes, you can stay for half a year"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = return_0,
					param_bindings = false,
					time = 23040000,
				}),
			},
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						SmugglersLookingFor = context.character_def.id
						return 0
					end,
					param_bindings = false,
					time = 23040000,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "WantedFugitiveDelay_Smugglers",
					param_bindings = false,
				}),
			},
			Enables = {
				"WantedFugitive_Smugglers",
			},
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(937324136977, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Smugglers Text]] "No thanks! This sounds like a potential problem"),
			param_bindings = false,
			unique_id = 2,
		}),
	}),
	}),
PlaceObj('ModItemFolder', {
	'name', "Hiring",
}, {
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Enabled = true,
		HasNotification = false,
		Image = "Events/ProjectXRelayBountyHQ.png",
		OneTime = false,
		SelectObject = false,
		Sets = set( "Positive" ),
		Text = T(630042036130, --[[ModItemStoryBit FarmWorker_ExpiredContract_NoRaise Text]] "<center><color TextEmphasis>::Receiving Transmission::\n::Transmission Received::</color>\n\nThis candidates contract has expired and they will return to the space station with immediate effect. \n\nIf you wish to re-hire this candidate then you can do so using the Communication Relay. Thank you for using our services and we hope to see you again.\n\n\n<color TextEmphasis>::Transmission Ended::</color>"),
		Title = T(526579781911, --[[ModItemStoryBit FarmWorker_ExpiredContract_NoRaise Title]] "Expired Contract"),
		UseObjectImage = true,
		group = "Trading",
		id = "FarmWorker_ExpiredContract_NoRaise",
		max_reply_id = 4,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Bobby on 2022-Dec-09\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-06\nModified by Bobby on 2023-Mar-07",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(128545897568, --[[ModItemStoryBit FarmWorker_ExpiredContract_NoRaise CustomOutcomeText]] "<DisplayNameNoStatus> will get Galacticoins"),
			PrerequisiteText = "",
			Text = T(256849305715, --[[ModItemStoryBit FarmWorker_ExpiredContract_NoRaise Text]] "Acknowledge"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						obj:SetFarmerStatus("fired")
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Tick",
		FxAction = "UINotificationExpedition",
		InheritsObject = false,
		NotificationText = T(880602718746, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings_Delayed NotificationText]] "Question: <color TextEmphasis><FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "HugoDelay2",
				param_bindings = false,
			}),
			PlaceObj('PickFromLabel', {
				Filters = {
					PlaceObj('CheckExpression', {
						Expression = function (self, obj) return obj.id == "Hugo" and obj.tamed_animals < 5 end,
						param_bindings = false,
					}),
				},
				Label = "Survivors",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Text = T(664862678873, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings_Delayed Text]] "Hi there!\n\nApparently, I will never have enough time to tame and take care of new animal species around here. I have decided to leave and continue my journey somewhere else."),
		Title = T(602176219668, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings_Delayed Title]] "Question"),
		UseObjectImage = true,
		group = "Trading",
		id = "Custom_Hugo_NotEnoughTamings_Delayed",
		max_reply_id = 8,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(782566179144, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings_Delayed CustomOutcomeText]] "<DisplayNameNoStatus> leaves"),
			OutcomeText = "custom",
			Text = T(117331226021, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings_Delayed Text]] "That is unfortunate"),
			param_bindings = false,
			unique_id = 8,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						obj:SetFarmerStatus("fired")
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/DavidKincaid.png",
		OneTime = false,
		Text = T(117889030004, --[[ModItemStoryBit SettlerCandidatesDavidKincaidPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(723272910088, --[[ModItemStoryBit SettlerCandidatesDavidKincaidPX Title]] "Candidate Profile - David Kincaid"),
		group = "PROJECTX",
		id = "SettlerCandidatesDavidKincaidPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(447242203415, --[[ModItemStoryBit SettlerCandidatesDavidKincaidPX PrerequisiteText]] "Free"),
			Text = T(857970906953, --[[ModItemStoryBit SettlerCandidatesDavidKincaidPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "DavidKincaid",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(958296408693, --[[ModItemStoryBit SettlerCandidatesDavidKincaidPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		ActivationEffects = {
			PlaceObj('PickCharacterDef', {
				DefId = "Hann",
				param_bindings = false,
			}),
		},
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Disables = {
			"JobOffer_Activator",
		},
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "JobOffers",
				TimeMin = 0,
				param_bindings = false,
			}),
		},
		Enabled = true,
		FxAction = "UINotificationExpedition",
		NotificationText = T(863116451438, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hann NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "Hann",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Sets = set( "IncreasePop" ),
		Text = T(109256798866, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hann Text]] "Hi there! I saw that you are looking for workers.\n\nI am traveling space looking to hunt new species. I will gladly work for you for a while, no payment needed. I would just require enough time to practice my kill shots. My aspiration is to kill shot 10 animals.\n\nLet me know if you're interested."),
		Title = T(987903079101, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hann Title]] "Contract offer"),
		UseObjectImage = true,
		group = "Trading",
		id = "JobOffer_Candidate_Custom_Hann",
		max_reply_id = 6,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09\nModified by Ivan on 2023-Mar-22",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(911489254342, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hann CustomOutcomeText]] "<character_def.FirstName> will work for free for half a year if he is given enough time to hunt and kill shot 10 animals"),
			OutcomeText = "custom",
			Text = T(566220132216, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hann Text]] "Yes, you are welcome to stay"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = return_0,
					param_bindings = false,
					time = 23040000,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "HannDelay1",
					param_bindings = false,
				}),
			},
			Enables = {
				"Custom_Hann_NotEnoughKillshots",
			},
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(727602742781, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hann Text]] "No, we do not need hunters"),
			param_bindings = false,
			unique_id = 2,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/ZackarieOzk.png",
		OneTime = false,
		Text = T(693368436216, --[[ModItemStoryBit SettlerCandidatesZackarieOzkPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(677249880623, --[[ModItemStoryBit SettlerCandidatesZackarieOzkPX Title]] "Candidate Profile - Zackarie Ozk'euun"),
		group = "PROJECTX",
		id = "SettlerCandidatesZackarieOzkPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(451054751610, --[[ModItemStoryBit SettlerCandidatesZackarieOzkPX PrerequisiteText]] "Free"),
			Text = T(530141421379, --[[ModItemStoryBit SettlerCandidatesZackarieOzkPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "ZackarieOzk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(259544063242, --[[ModItemStoryBit SettlerCandidatesZackarieOzkPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Portraits/SamJones_Large.png",
		OneTime = false,
		Text = T(328307228704, --[[ModItemStoryBit SettlerCandidatesSamJonesPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(911826139428, --[[ModItemStoryBit SettlerCandidatesSamJonesPX Title]] "Candidate Profile - Samuel Jones"),
		group = "PROJECTX",
		id = "SettlerCandidatesSamJonesPX",
		max_reply_id = 4,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(207804160808, --[[ModItemStoryBit SettlerCandidatesSamJonesPX PrerequisiteText]] "Free"),
			Text = T(896261865238, --[[ModItemStoryBit SettlerCandidatesSamJonesPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "SamuelJonesPX",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(162573668185, --[[ModItemStoryBit SettlerCandidatesSamJonesPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/TzukUnn.png",
		OneTime = false,
		Text = T(474798185769, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(665254619738, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Title]] "Candidate Profile - Tzuk Unn"),
		group = "PROJECTX",
		id = "ContractCandidatesTzukUnnPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 200000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 200000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(601255142662, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "TzukUnn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(331950365218, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "TzukUnn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(713752011608, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "TzukUnn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(889242207908, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "TzukUnn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(292392119095, --[[ModItemStoryBit ContractCandidatesTzukUnnPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageTwoPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Events/ProjectXRelayDroidShop.png",
		OneTime = false,
		Text = T(828091542710, --[[ModItemStoryBit DroidCandidatesG7B9028 Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors.\n\nThis droid is for sale for <style red>170,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(865987400305, --[[ModItemStoryBit DroidCandidatesG7B9028 Title]] "Candidate Profile - G7-B9028"),
		group = "PROJECTX",
		id = "DroidCandidatesG7B9028",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 170000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 170000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(674613501422, --[[ModItemStoryBit DroidCandidatesG7B9028 Text]] "Confirm Order"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "G7-B9028",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
				PlaceObj('StoryBitActivate', {
					Id = "px_droid_intro",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(275488285554, --[[ModItemStoryBit DroidCandidatesG7B9028 Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "DroidCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Events/ProjectXRelayDroidShop.png",
		OneTime = false,
		Text = T(803228035212, --[[ModItemStoryBit DroidCandidatesG8L33PX Text]] '<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nGen 8 Security drone designed for close combat to keep alien creatures at bay for colonist. Retrofitted to use in close weapons the designation "Lancer" was chosen. \n\nThis droid is for sale for <style red>500,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>'),
		Title = T(437881581429, --[[ModItemStoryBit DroidCandidatesG8L33PX Title]] "Candidate Profile - G8-L33"),
		group = "PROJECTX",
		id = "DroidCandidatesG8L33PX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 500000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 500000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(460768869504, --[[ModItemStoryBit DroidCandidatesG8L33PX Text]] "Confirm Order"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "G8-L33",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
				PlaceObj('StoryBitActivate', {
					Id = "px_droid_intro",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(397223200927, --[[ModItemStoryBit DroidCandidatesG8L33PX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "DroidCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/FlokiLee.png",
		OneTime = false,
		Text = T(117399561195, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(174582819658, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Title]] "Candidate Profile - Floki Lee"),
		group = "PROJECTX",
		id = "ContractCandidatesFlokiLeePX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 200000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 200000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(712243405784, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "FlokiLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(718839937430, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "FlokiLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(667992641241, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "FlokiLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(303430342344, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "FlokiLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(190030634723, --[[ModItemStoryBit ContractCandidatesFlokiLeePX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageOnePX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Tick",
		FxAction = "UINotificationExpedition",
		InheritsObject = false,
		NotificationText = T(740514379431, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings NotificationText]] "Question: <color TextEmphasis><FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "HugoDelay1",
				param_bindings = false,
			}),
			PlaceObj('PickFromLabel', {
				Filters = {
					PlaceObj('CheckExpression', {
						Expression = function (self, obj) return obj.id == "Hugo" and obj.tamed_animals < 5 end,
						param_bindings = false,
					}),
				},
				Label = "Survivors",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Text = T(933942537131, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings Text]] "Hi there!\n\nI came here to tame new animals but have managed to do it only <tamed_animals> times, while I wanted to practice this at least 5 times.\n\nWhat should we do?"),
		Title = T(595498763800, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings Title]] "Question"),
		UseObjectImage = true,
		group = "Trading",
		id = "Custom_Hugo_NotEnoughTamings",
		max_reply_id = 8,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(785732550363, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings Text]] "Stay several more days"),
			param_bindings = false,
			unique_id = 7,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('SetCooldownEffect', {
					Cooldown = "HugoDelay2",
					param_bindings = false,
				}),
			},
			Enables = {
				"Custom_Hugo_NotEnoughTamings_Delayed",
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(610150562749, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings CustomOutcomeText]] "<DisplayNameNoStatus> leaves"),
			OutcomeText = "custom",
			Text = T(775899068501, --[[ModItemStoryBit Custom_Hugo_NotEnoughTamings Text]] "No time for hunting"),
			param_bindings = false,
			unique_id = 8,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						obj:SetFarmerStatus("fired")
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/ChazRelioo.png",
		OneTime = false,
		Text = T(721680589628, --[[ModItemStoryBit SettlerCandidatesChazReliooPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(562407242077, --[[ModItemStoryBit SettlerCandidatesChazReliooPX Title]] "Candidate Profile - Chaz Relioo"),
		group = "PROJECTX",
		id = "SettlerCandidatesChazReliooPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(631429502033, --[[ModItemStoryBit SettlerCandidatesChazReliooPX PrerequisiteText]] "Free"),
			Text = T(970446736212, --[[ModItemStoryBit SettlerCandidatesChazReliooPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "ChazRelioo",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(712556649961, --[[ModItemStoryBit SettlerCandidatesChazReliooPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/QuraDunn.png",
		OneTime = false,
		Text = T(652384540023, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>300,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(938521507691, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Title]] "Candidate Profile - Qura Dunn"),
		group = "PROJECTX",
		id = "ContractCandidatesQuraDunnPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 300000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 300000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(402641737770, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "QuraDunn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(578622234739, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "QuraDunn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1200000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1200000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(432018012187, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "QuraDunn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 2100000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 2100000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(725153507513, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "QuraDunn",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(429791467652, --[[ModItemStoryBit ContractCandidatesQuraDunnPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageOnePX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Tick",
		FxAction = "UINotificationExpedition",
		InheritsObject = false,
		NotificationText = T(180288426289, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots NotificationText]] "Question: <color TextEmphasis><FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "HannDelay1",
				param_bindings = false,
			}),
			PlaceObj('PickFromLabel', {
				Filters = {
					PlaceObj('CheckExpression', {
						Expression = function (self, obj) return obj.id == "Hann" and obj.killshots < 10 end,
						param_bindings = false,
					}),
				},
				Label = "Survivors",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Text = T(808714485667, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots Text]] "Hi there!\n\nI came here to kill shot animals but have managed to do it only <killshots> times, while I wanted to practice this at least 10 times.\n\nWhat should we do?"),
		Title = T(429581951860, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots Title]] "Question"),
		UseObjectImage = true,
		group = "Trading",
		id = "Custom_Hann_NotEnoughKillshots",
		max_reply_id = 8,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(439032117846, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots Text]] "Stay several more days"),
			param_bindings = false,
			unique_id = 7,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('SetCooldownEffect', {
					Cooldown = "HannDelay2",
					param_bindings = false,
				}),
			},
			Enables = {
				"Custom_Hann_NotEnoughKillshots_Delayed",
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(247834951065, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots CustomOutcomeText]] "<DisplayNameNoStatus> leaves"),
			OutcomeText = "custom",
			Text = T(827713398297, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots Text]] "No time for hunting"),
			param_bindings = false,
			unique_id = 8,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('ExecuteCode', {
					Code = function (self, obj)
						obj:SetFarmerStatus("fired")
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Events/ProjectXRelayDroidShop.png",
		OneTime = false,
		Text = T(294160716685, --[[ModItemStoryBit DroidCandidatesG7B223 Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors.\n\nThis droid is for sale for <style red>170,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(128314695206, --[[ModItemStoryBit DroidCandidatesG7B223 Title]] "Candidate Profile - G7-B223"),
		group = "PROJECTX",
		id = "DroidCandidatesG7B223",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 170000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 170000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(794676907722, --[[ModItemStoryBit DroidCandidatesG7B223 Text]] "Confirm Order"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "G7-B223",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
				PlaceObj('StoryBitActivate', {
					Id = "px_droid_intro",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(652943371906, --[[ModItemStoryBit DroidCandidatesG7B223 Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "DroidCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Delay = 4000,
		Enabled = true,
		FxAction = "UINotificationExpedition",
		HasNotification = false,
		Image = "Events/ProjectXRelayCrewHQ.png",
		OneTime = false,
		PopupFxAction = "MessagePopup",
		ScriptDone = true,
		SelectObject = false,
		Text = T(130731499067, --[[ModItemStoryBit NewCrewMember Text]] "Randomly hire a survivor, this could be any Project-X mod survivor or other survivors that you have from other mods. This feature is here so that other survivors can be used in the scenario and is best avoided if you don't have much money yet.\n\nThey will have an initial payment that will require being paid and could be between <style red>50,000 Coins to 3 Million Coins</style> depending on the character that is randomly picked, then once paid in full they will remain with the colony. If you do not have the full amount you will be placed in debt with this person and could go bankrupt."),
		Title = T(984633918618, --[[ModItemStoryBit NewCrewMember Title]] "Recruit Colony Member"),
		UseObjectImage = true,
		group = "Expedition",
		id = "NewCrewMember",
		max_reply_id = 49,
		qa_info = PlaceObj('PresetQAInfo', {
			data = {},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			PrerequisiteText = "",
			Text = T(232475286972, --[[ModItemStoryBit NewCrewMember Text]] "Accept New Colony Member"),
			param_bindings = false,
			unique_id = 19,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			Text = T(529558761038, --[[ModItemStoryBit NewCrewMember Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nCertification and approval received. New crew member is onboard the shuttle and will be arriving shortly to the colony. Have a pleasant day!\n\n<color TextEmphasis>::Transmission Terminated::</color>"),
			Title = T(974456770100, --[[ModItemStoryBit NewCrewMember Title]] "Settler Accepted"),
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(604289945338, --[[ModItemStoryBit NewCrewMember Text]] "Go Back"),
			param_bindings = false,
			unique_id = 49,
		}),
		PlaceObj('StoryBitOutcome', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "SpaceStationHQ",
					'NoCooldown', true,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/ZanderPogaa.png",
		OneTime = false,
		Text = T(997644898169, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(300968212325, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Title]] "Candidate Profile - Zander Pogaa"),
		group = "PROJECTX",
		id = "ContractCandidatesZanderPogaaPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 200000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 200000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(648401601830, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "ZanderPogaa",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(123336526058, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "ZanderPogaa",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(448400190687, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "ZanderPogaa",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(911062501777, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "ZanderPogaa",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(732612187626, --[[ModItemStoryBit ContractCandidatesZanderPogaaPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageTwoPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/PogoDainer.png",
		OneTime = false,
		Text = T(945342531268, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>300,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(746958593198, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Title]] "Candidate Profile - Pogo Dainer"),
		group = "PROJECTX",
		id = "ContractCandidatesPogoDainerPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 300000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 300000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(342744435252, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "PogoDainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(149315218935, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "PogoDainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 900000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 900000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(972881888256, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "PogoDainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 2100000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 2100000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(922165100798, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "PogoDainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(392106880483, --[[ModItemStoryBit ContractCandidatesPogoDainerPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "CriminalCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "FarmWorker_ExpiredContract_NoRaise",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		Enabled = true,
		HasNotification = false,
		HasPopup = false,
		OneTime = false,
		UseObjectImage = true,
		group = "Trading",
		id = "FarmWorker_ExpiredContract",
		max_reply_id = 4,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Bobby on 2022-Dec-09\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07",
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/BrunoRainer.png",
		OneTime = false,
		Text = T(777085259587, --[[ModItemStoryBit ContractCandidatesBrunoPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(926744553096, --[[ModItemStoryBit ContractCandidatesBrunoPX Title]] "Candidate Profile - Bruno Rainer"),
		group = "PROJECTX",
		id = "ContractCandidatesBrunoPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 150000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 150000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(638053685563, --[[ModItemStoryBit ContractCandidatesBrunoPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "BrunoRainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 300000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 300000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(959378667205, --[[ModItemStoryBit ContractCandidatesBrunoPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "BrunoRainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 450000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 450000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(505209588198, --[[ModItemStoryBit ContractCandidatesBrunoPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "BrunoRainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1050000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1050000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(227306604683, --[[ModItemStoryBit ContractCandidatesBrunoPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "BrunoRainer",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(268891765816, --[[ModItemStoryBit ContractCandidatesBrunoPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageOnePX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/XyraLee.png",
		OneTime = false,
		Text = T(967369929864, --[[ModItemStoryBit ContractCandidatesXyraLeePX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(427666304228, --[[ModItemStoryBit ContractCandidatesXyraLeePX Title]] "Candidate Profile - Xyra Lee"),
		group = "PROJECTX",
		id = "ContractCandidatesXyraLeePX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 200000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 200000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(247376828629, --[[ModItemStoryBit ContractCandidatesXyraLeePX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "XyraLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(474575340662, --[[ModItemStoryBit ContractCandidatesXyraLeePX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "XyraLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(329634186902, --[[ModItemStoryBit ContractCandidatesXyraLeePX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "XyraLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1400000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1400000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(978560813316, --[[ModItemStoryBit ContractCandidatesXyraLeePX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "XyraLee",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(326873049039, --[[ModItemStoryBit ContractCandidatesXyraLeePX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageTwoPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/RexLennard.png",
		OneTime = false,
		Text = T(773526719371, --[[ModItemStoryBit ContractCandidatesRexLenPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>300,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(382084555366, --[[ModItemStoryBit ContractCandidatesRexLenPX Title]] "Candidate Profile - Rex Lennard"),
		group = "PROJECTX",
		id = "ContractCandidatesRexLenPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 300000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 300000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(674616888262, --[[ModItemStoryBit ContractCandidatesRexLenPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "RexLennard",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 600000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 600000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(185793889321, --[[ModItemStoryBit ContractCandidatesRexLenPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "RexLennard",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1200000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1200000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(403639241271, --[[ModItemStoryBit ContractCandidatesRexLenPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "RexLennard",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 2100000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 2100000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(523703654847, --[[ModItemStoryBit ContractCandidatesRexLenPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "RexLennard",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(117417745040, --[[ModItemStoryBit ContractCandidatesRexLenPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageTwoPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/WillianAllen.png",
		OneTime = false,
		Text = T(329138004599, --[[ModItemStoryBit SettlerCandidatesWillianAllenPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(840580453641, --[[ModItemStoryBit SettlerCandidatesWillianAllenPX Title]] "Candidate Profile - Willian Allen"),
		group = "PROJECTX",
		id = "SettlerCandidatesWillianAllenPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(225552563274, --[[ModItemStoryBit SettlerCandidatesWillianAllenPX PrerequisiteText]] "Free"),
			Text = T(358300346359, --[[ModItemStoryBit SettlerCandidatesWillianAllenPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "WillianAllen",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(154044837025, --[[ModItemStoryBit SettlerCandidatesWillianAllenPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		ActivationEffects = {
			PlaceObj('PickCharacterDef', {
				DefId = "Hugo",
				param_bindings = false,
			}),
		},
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Disables = {
			"JobOffer_Activator",
		},
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "JobOffers",
				TimeMin = 0,
				param_bindings = false,
			}),
		},
		Enabled = true,
		FxAction = "UINotificationExpedition",
		NotificationText = T(875482536039, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hugo NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "Hugo",
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Sets = set( "IncreasePop" ),
		Text = T(662731607718, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hugo Text]] "Hi there! I saw that you are looking for workers.\n\nI am traveling space looking to learn about new animal species. I will gladly work for you for a while, no payment needed. I would just require enough time to tame animals. My aspiration is to tame 5 animals.\n\nLet me know if you're interested."),
		Title = T(511620453547, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hugo Title]] "Contract offer"),
		UseObjectImage = true,
		group = "Trading",
		id = "JobOffer_Candidate_Custom_Hugo",
		max_reply_id = 6,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09\nModified by Ivan on 2023-Mar-22",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(405501100355, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hugo CustomOutcomeText]] "<character_def.FirstName> will work for free for half a year if he is given enough time to tame 5 animals"),
			OutcomeText = "custom",
			Text = T(751984410692, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hugo Text]] "Yes, you are welcome to stay"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = return_0,
					param_bindings = false,
					time = 23040000,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "HugoDelay1",
					param_bindings = false,
				}),
			},
			Enables = {
				"Custom_Hugo_NotEnoughTamings",
			},
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(131488935877, --[[ModItemStoryBit JobOffer_Candidate_Custom_Hugo Text]] "No, we have no time for taming"),
			param_bindings = false,
			unique_id = 2,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/FioraJasmin.png",
		OneTime = false,
		Text = T(648748470813, --[[ModItemStoryBit SettlerCandidatesFioraJasminPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(764190274539, --[[ModItemStoryBit SettlerCandidatesFioraJasminPX Title]] "Candidate Profile - Fiora Jasmin"),
		group = "PROJECTX",
		id = "SettlerCandidatesFioraJasminPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(132938146730, --[[ModItemStoryBit SettlerCandidatesFioraJasminPX PrerequisiteText]] "Free"),
			Text = T(300957379422, --[[ModItemStoryBit SettlerCandidatesFioraJasminPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "FioraJasmin",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(910451838865, --[[ModItemStoryBit SettlerCandidatesFioraJasminPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/FelixHanns.png",
		OneTime = false,
		Text = T(715336432588, --[[ModItemStoryBit SettlerCandidatesFelixHannsPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(513369190555, --[[ModItemStoryBit SettlerCandidatesFelixHannsPX Title]] "Candidate Profile - Felix Hanns"),
		group = "PROJECTX",
		id = "SettlerCandidatesFelixHannsPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(931274837323, --[[ModItemStoryBit SettlerCandidatesFelixHannsPX PrerequisiteText]] "Free"),
			Text = T(933255168838, --[[ModItemStoryBit SettlerCandidatesFelixHannsPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "FelixHanns",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(927537947746, --[[ModItemStoryBit SettlerCandidatesFelixHannsPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/CodeX.png",
		OneTime = false,
		Text = T(896462483208, --[[ModItemStoryBit DroidCandidatesCodeX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis droid is owned by the Galactic Authorities and can be used for the colony efforts for <style red>900,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(553627467801, --[[ModItemStoryBit DroidCandidatesCodeX Title]] "Candidate Profile - Code-X"),
		group = "PROJECTX",
		id = "DroidCandidatesCodeX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 900000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 900000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(912337636452, --[[ModItemStoryBit DroidCandidatesCodeX Text]] "Confirm Order"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "CodeX",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
				PlaceObj('StoryBitActivate', {
					Id = "px_droid_intro",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(688203419768, --[[ModItemStoryBit DroidCandidatesCodeX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "DroidCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		OneTime = false,
		Text = T(417385503724, --[[ModItemStoryBit DroidCandidatesG8Helper Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis droid is owned by the Galactic Authorities and can be used for the colony efforts for <style red>FREE</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(596337783776, --[[ModItemStoryBit DroidCandidatesG8Helper Title]] "Candidate Profile - B8-Helper (Free)"),
		group = "PROJECTX",
		id = "DroidCandidatesG8Helper",
		max_reply_id = 7,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = "",
			Text = T(215979591362, --[[ModItemStoryBit DroidCandidatesG8Helper Text]] "Confirm Order"),
			param_bindings = false,
			unique_id = 6,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "G8Helper",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
				PlaceObj('StoryBitActivate', {
					Id = "px_droid_intro",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(860407025613, --[[ModItemStoryBit DroidCandidatesG8Helper Text]] "Decline"),
			param_bindings = false,
			unique_id = 7,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "DroidCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/KarlMiner.png",
		OneTime = false,
		Text = T(259710923648, --[[ModItemStoryBit SettlerCandidatesKarlMinerPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(718877612563, --[[ModItemStoryBit SettlerCandidatesKarlMinerPX Title]] "Candidate Profile - Karl The Miner"),
		group = "PROJECTX",
		id = "SettlerCandidatesKarlMinerPX",
		max_reply_id = 2,
		PlaceObj('StoryBitReply', {
			PrerequisiteText = T(840001800863, --[[ModItemStoryBit SettlerCandidatesKarlMinerPX PrerequisiteText]] "Free"),
			Text = T(964382475812, --[[ModItemStoryBit SettlerCandidatesKarlMinerPX Text]] "Agree."),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "KarlTheMiner",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(598127664988, --[[ModItemStoryBit SettlerCandidatesKarlMinerPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/GizmoRassk.png",
		OneTime = false,
		Text = T(118916844975, --[[ModItemStoryBit ContractCandidatesGizmoPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>250,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(662497034316, --[[ModItemStoryBit ContractCandidatesGizmoPX Title]] "Candidate Profile - Gizmo Rassk"),
		group = "PROJECTX",
		id = "ContractCandidatesGizmoPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 250000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 250000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(466613932747, --[[ModItemStoryBit ContractCandidatesGizmoPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "Gizmo",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 500000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 500000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(307885670113, --[[ModItemStoryBit ContractCandidatesGizmoPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "Gizmo",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 850000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 850000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(456242051462, --[[ModItemStoryBit ContractCandidatesGizmoPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "Gizmo",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1850000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1850000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(365678921397, --[[ModItemStoryBit ContractCandidatesGizmoPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "Gizmo",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(964520636386, --[[ModItemStoryBit ContractCandidatesGizmoPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "CriminalCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Events/ProjectXRelayCrewHQ.png",
		OneTime = false,
		Text = T(237062262223, --[[ModItemStoryBit SettlerCandidatesPX Text]] "<center>We have listed below the available candidates that wish to offer there skills and settle on the planet for free."),
		Title = T(981973565532, --[[ModItemStoryBit SettlerCandidatesPX Title]] "Settler Candidates"),
		group = "PROJECTX",
		id = "SettlerCandidatesPX",
		max_reply_id = 18,
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "ChazRelioo",
					param_bindings = false,
				}),
			},
			Text = T(129263312858, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Chaz Relioo'"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesChazReliooPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "DaynRheo",
					param_bindings = false,
				}),
			},
			Text = T(849524353810, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Dayn Rheo'"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesDaynRheoPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "DavidKincaid",
					param_bindings = false,
				}),
			},
			Text = T(534332651573, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'David Kincaid'"),
			param_bindings = false,
			unique_id = 13,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesDavidKincaidPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "DrSwain",
					param_bindings = false,
				}),
			},
			Text = T(439720549560, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Doctor Swain'"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesDrSwainPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "FelixHanns",
					param_bindings = false,
				}),
			},
			Text = T(959921956072, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Felix Hanns'"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesFelixHannsPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "FioraJasmin",
					param_bindings = false,
				}),
			},
			Text = T(653715140414, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Fiora Jasmin'"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesFioraJasminPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "OrlandoJunior",
					param_bindings = false,
				}),
			},
			Text = T(788941219221, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Orlando Junior'"),
			param_bindings = false,
			unique_id = 6,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesOrlandoJuniorPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "OldManJohn",
					param_bindings = false,
				}),
			},
			Text = T(406367298188, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Old Man John'"),
			param_bindings = false,
			unique_id = 7,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesOldJohnPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "SarahGospal",
					param_bindings = false,
				}),
			},
			Text = T(441735683960, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Sarah Gospal'"),
			param_bindings = false,
			unique_id = 8,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesSarahGospalPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "TayykJr",
					param_bindings = false,
				}),
			},
			Text = T(884751695603, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Tayyk Junior'"),
			param_bindings = false,
			unique_id = 9,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesTayykJuniorPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "YannaFitch",
					param_bindings = false,
				}),
			},
			Text = T(721903208617, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Yanna Fitch'"),
			param_bindings = false,
			unique_id = 10,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesYannaFitchPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "ZackarieOzk",
					param_bindings = false,
				}),
			},
			Text = T(844126464855, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Zackarie Ozk'euun'"),
			param_bindings = false,
			unique_id = 11,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesZackarieOzkPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "DrakeJames",
					param_bindings = false,
				}),
			},
			Text = T(700624125343, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Drake James'"),
			param_bindings = false,
			unique_id = 14,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesDrakeJamesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "KarlTheMiner",
					param_bindings = false,
				}),
			},
			Text = T(503173142313, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Karl'"),
			param_bindings = false,
			unique_id = 15,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesKarlMinerPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "MarkErikson",
					param_bindings = false,
				}),
			},
			Text = T(264735749070, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Mark Erikson'"),
			param_bindings = false,
			unique_id = 16,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesMarkEriksonPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "WillianAllen",
					param_bindings = false,
				}),
			},
			Text = T(214282754029, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Willian Allen'"),
			param_bindings = false,
			unique_id = 17,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesWillianAllenPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			HideIfDisabled = true,
			Prerequisites = {
				PlaceObj('CheckCharacterDef', {
					DefId = "SamuelJonesPX",
					param_bindings = false,
				}),
			},
			Text = T(516401600488, --[[ModItemStoryBit SettlerCandidatesPX Text]] "View Profile 'Samuel Jones'"),
			param_bindings = false,
			unique_id = 18,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "SettlerCandidatesSamJonesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(605406489551, --[[ModItemStoryBit SettlerCandidatesPX Text]] "Go Back"),
			param_bindings = false,
			unique_id = 12,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "HireCandidateBoardPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		ActivationEffects = {
			PlaceObj('PickCharacterDef', {
				param_bindings = false,
			}),
		},
		AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
		Category = "Pseudo",
		Disables = {
			"JobOffer_Activator",
		},
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "JobOffers",
				TimeMin = 0,
				param_bindings = false,
			}),
		},
		Enabled = true,
		FxAction = "UINotificationExpedition",
		NotificationText = T(520524545008, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Colony NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
		PopupFxAction = "MessagePopup",
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				param_bindings = false,
			}),
		},
		SelectObject = false,
		Sets = set( "IncreasePop" ),
		Text = T(759049662699, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Colony Text]] "Hi there! I saw that you are looking for workers.\n\nMy name is <color TextEmphasis><character_def.FirstName> <character_def.LastName></color>. Long story short, I'm looking for a place to hide from the <color TextEmphasis>Outer Colonies Federation</color> for a couple of seasons. I will gladly work for you, no payment needed.\n\nI'm skilled in <color TextEmphasis><character_def.UIBestSkills></color>.\n\nLet me know if you're interested."),
		Title = T(951679472298, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Colony Title]] "Contract offer"),
		UseObjectImage = true,
		group = "Trading",
		id = "JobOffer_Candidate_Fugitive_Colony",
		max_reply_id = 6,
		qa_info = PlaceObj('PresetQAInfo', {
			Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09",
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			CustomOutcomeText = T(507498877209, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Colony CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
			Text = T(637600947236, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Colony Text]] "Yes, you can stay for half a year"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = return_0,
					param_bindings = false,
					time = 23040000,
				}),
			},
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						ColoniesLookingFor = context.character_def.id
						return 0
					end,
					param_bindings = false,
					time = 23040000,
				}),
				PlaceObj('SetCooldownEffect', {
					Cooldown = "WantedFugitiveDelay_Colonies",
					param_bindings = false,
				}),
			},
			Enables = {
				"WantedFugitive_Colonies",
			},
			Weight = 50,
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(902031418424, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Colony Text]] "No thanks! This sounds like a potential problem"),
			param_bindings = false,
			unique_id = 2,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/SyndraRayuk.png",
		OneTime = false,
		Text = T(374425287940, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>125,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(259512006562, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Title]] "Candidate Profile - Syndra Rayuk"),
		group = "PROJECTX",
		id = "ContractCandidatesSyndraRayukPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 125000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 125000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(215821002589, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "SyndraRayuk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 250000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 250000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(505226934471, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "SyndraRayuk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 375000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 375000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(503899318617, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "SyndraRayuk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 875000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 875000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(712755111856, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "SyndraRayuk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(940480720251, --[[ModItemStoryBit ContractCandidatesSyndraRayukPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "ContractCandidatesPageTwoPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	PlaceObj('ModItemStoryBit', {
		Category = "Exploration",
		Enabled = true,
		HasNotification = false,
		Image = "Profiles/GalenosYaskk.png",
		OneTime = false,
		Text = T(607925894542, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>250,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
		Title = T(387800725280, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Title]] "Candidate Profile - Galenos Yaskk"),
		group = "PROJECTX",
		id = "ContractCandidatesGalenosYaskkPX",
		max_reply_id = 5,
		PlaceObj('StoryBitReply', {
			Cost = 250000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 250000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(764368175874, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Text]] "1 Year Contract"),
			param_bindings = false,
			unique_id = 1,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "GalenosYaskk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 100)
					end,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 500000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 500000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(997320698036, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Text]] "2 Year Contract"),
			param_bindings = false,
			unique_id = 3,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "GalenosYaskk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 200)
					end,
					param_bindings = false,
					time = 92160000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 850000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 850000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(565794688643, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Text]] "3 Year Contract"),
			param_bindings = false,
			unique_id = 4,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "GalenosYaskk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 300)
					end,
					param_bindings = false,
					time = 138240000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Cost = 1850000,
			PrerequisiteText = "",
			Prerequisites = {
				PlaceObj('CheckResource', {
					Amount = 1850000000,
					Condition = ">=",
					Resource = "Money",
					ResourceGroup = "InfobarUsable",
					param_bindings = false,
				}),
			},
			Text = T(991671616290, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Text]] "Forever"),
			param_bindings = false,
			unique_id = 5,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('PickCharacterDef', {
					DefId = "GalenosYaskk",
					param_bindings = false,
				}),
				PlaceObj('PickUpHiredSurvivor', {
					CalcPayment = function (self, context)
						return GetPaymentModifiedByPct(context.character_def.Payment, 700)
					end,
					param_bindings = false,
					time = 46080000000,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('StoryBitReply', {
			Text = T(785753330929, --[[ModItemStoryBit ContractCandidatesGalenosYaskkPX Text]] "Decline"),
			param_bindings = false,
			unique_id = 2,
		}),
		PlaceObj('StoryBitOutcome', {
			Effects = {
				PlaceObj('StoryBitActivate', {
					Id = "CriminalCandidatesPX",
					NoCooldown = true,
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	}),
	}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayTraderHQ.png",
	OneTime = false,
	SelectObject = false,
	Text = T(105557322298, --[[ModItemStoryBit TradeHQ Text]] "Hello, you have contacted Automated Ansible Relay #499.\n\nHow can we be of assistance?"),
	Title = T(357720370063, --[[ModItemStoryBit TradeHQ Title]] "Trader's HeadQuarters #288"),
	group = "Trading",
	id = "TradeHQ",
	max_reply_id = 18,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Bobby on 2022-Dec-09\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Feb-10\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16\nModified by Gaby on 2023-Mar-28",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(414283319034, --[[ModItemStoryBit TradeHQ Text]] "Contact a Terran Defense Fleet's battleship"),
		param_bindings = false,
		unique_id = 9,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					CallTradeShipUIType = "Battleship"
				end,
				param_bindings = false,
			}),
		},
		StoryBits = {
			PlaceObj('StoryBitWithWeight', {
				'StoryBitId', "Call_Ship",
				'NoCooldown', true,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(424909051972, --[[ModItemStoryBit TradeHQ Text]] "Contact an Outer Colony Federation's ship"),
		param_bindings = false,
		unique_id = 10,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					CallTradeShipUIType = "ColonyShip"
				end,
				param_bindings = false,
			}),
		},
		StoryBits = {
			PlaceObj('StoryBitWithWeight', {
				'StoryBitId', "Call_Ship",
				'NoCooldown', true,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(474199973875, --[[ModItemStoryBit TradeHQ Text]] "Contact a Galactic Trade League's ship"),
		param_bindings = false,
		unique_id = 13,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					CallTradeShipUIType = "TradeShip"
				end,
				param_bindings = false,
			}),
		},
		StoryBits = {
			PlaceObj('StoryBitWithWeight', {
				'StoryBitId', "Call_Ship",
				'NoCooldown', true,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(175005553734, --[[ModItemStoryBit TradeHQ PrerequisiteText]] "Blackmarket Access Required"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "BlackMarket",
				param_bindings = false,
			}),
		},
		Text = T(530745647128, --[[ModItemStoryBit TradeHQ Text]] "Contact a Smuggler's ship"),
		param_bindings = false,
		unique_id = 17,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					CallTradeShipUIType = "Smuggler"
				end,
				param_bindings = false,
			}),
		},
		StoryBits = {
			PlaceObj('StoryBitWithWeight', {
				'StoryBitId', "Call_Ship",
				'NoCooldown', true,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(815372185224, --[[ModItemStoryBit TradeHQ Text]] "Go Back"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "InitiatedCall",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(893951338157, --[[ModItemStoryBit TradeHQ Text]] "Terminate Transmission"),
		param_bindings = false,
		unique_id = 18,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayDroidShop.png",
	InheritsObject = false,
	NotificationCanDismiss = false,
	OneTime = false,
	SelectObject = false,
	Text = T(726619271993, --[[ModItemStoryBit Call_Ship Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nWe can make contact with nearby trade routes and transmit your request to trade. If a trading vessel agrees to divert towards your direction to commence trade then you will be informed."),
	Title = T(222324641023, --[[ModItemStoryBit Call_Ship Title]] "Ansible Relay #499"),
	group = "Trading",
	id = "Call_Ship",
	max_reply_id = 8,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Gaby on 2023-Mar-28\nModified by Geri on 2023-Mar-30",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj) return not CheckForTradingShip() and GetTradeShipCalled() and not Game:GetCooldown(TradingShips[CallTradeShipUIType].embargo) end,
				param_bindings = false,
			}),
		},
		Text = T(991119725124, --[[ModItemStoryBit Call_Ship Text]] "Seek contact (cancels ongoing transmission)"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					CallTradeShip(CallTradeShipUIType)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj) return not CheckForTradingShip() and not GetTradeShipCalled() and not Game:GetCooldown(TradingShips[CallTradeShipUIType].embargo) end,
				param_bindings = false,
			}),
		},
		Text = T(623606336712, --[[ModItemStoryBit Call_Ship Text]] "Seek contact"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					CallTradeShip(CallTradeShipUIType)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(890323675562, --[[ModItemStoryBit Call_Ship Text]] "Close"),
		param_bindings = false,
		unique_id = 8,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Dragonfly"
			end,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Dragonfly"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Dragonfly"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/Dragonflies.png",
	OneTime = false,
	Text = T(369901126746, --[[ModItemStoryBit AnimalAttack_Initial_Dragonflies_disabled Text]] "<color TextEmphasis>A swarm of flying insects are heading this way, though they don't appear to be much of a threat but they definitely can pose a risk to our defenses. We best get some air defense as our walls are not going to do much. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Can fly over walls.\n- Swarming Insects.\n\n<color red>Weaknesses:</color>\n- Low Health.\n- Not Intelligent. (0% Chance to Avoid Traps)\n- Weak to all elements."),
	Title = T(358483067418, --[[ModItemStoryBit AnimalAttack_Initial_Dragonflies_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Dragonflies_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Mar-28\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Gaby on 2022-Nov-25",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/KassandraInkk.png",
	OneTime = false,
	Text = T(464153226866, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(815013016017, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Title]] "Candidate Profile - Kassandra Inkk"),
	group = "PROJECTX",
	id = "ContractCandidatesKassandraInkkPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 150000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 150000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(569036332267, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KassandraInkk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 300000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 300000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(211317179079, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KassandraInkk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 450000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 450000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(249581138646, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KassandraInkk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1050000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1050000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(383326450210, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KassandraInkk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(846599955859, --[[ModItemStoryBit ContractCandidatesKassandraInkkPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Hatchling"
			end,
			ProgressMul = 65,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Hatchling"
			end,
			ProgressMul = 65,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Hatchling"
			end,
			ProgressMul = 65,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Shrieker_Manhunting_Hatchling"] = true
				UnlockedInsectBosses["Shrieker_Manhunting"] = true
				UnlockedInsectBosses["Shrieker_Manhunting_Mother"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Shrieker_Manhunting"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/ShriekerAttack.png",
	OneTime = false,
	Text = T(194658958005, --[[ModItemStoryBit AnimalAttack_Initial_ShriekersNests_disabled Text]] "<color TextEmphasis>We have a problem, the Shrieker nests nearby have become more active lately and we have began to spot more Shriekers leaving the nests, perhaps a Queen has died. If that is so then we could be in quite some trouble as the remaining colony would become a chaotic mess, we should prepare our defenses on all angles until this activity calms down. (12 Hours Before Attack)</color>\n\n<color blue>Strengths:</color>\n- Utilizes Ranged and Melee attacks.\n- Large defense to Piercing and Blunt attacks.\n\n<color red>Weaknesses:</color>\n- Not a Intelligent Species. (0% Chance to avoid traps)\n- Weak to Gas/Poison.\n- Weak to Pacify attacks.\n- Weak to Energy attacks."),
	Title = T(338974068460, --[[ModItemStoryBit AnimalAttack_Initial_ShriekersNests_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_ShriekersNests_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('SpawnTradingShip', {
			Ship = "ColonyShip",
			TimeInOrbit = 1920000,
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Trade",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "Trade",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	InheritsObject = false,
	NotificationCanDismiss = false,
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return not CheckForTradingShip() end,
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "EmbargoColonies",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Sets = set( "Trade" ),
	SuppressTime = 2880000,
	group = "Trading",
	id = "TradingShip_ColonyShip",
	max_reply_id = 4,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Geri on 2022-Oct-28\nModified by Geri on 2022-Oct-31\nModified by Ivan on 2022-Nov-17\nModified by Geri on 2022-Nov-17\nModified by Ivan on 2022-Nov-21\nModified by Ivan on 2023-Jan-27\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09\nModified by Geri on 2023-Mar-28",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/MarkErikson.png",
	OneTime = false,
	Text = T(160838069962, --[[ModItemStoryBit SettlerCandidatesMarkEriksonPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(822097965498, --[[ModItemStoryBit SettlerCandidatesMarkEriksonPX Title]] "Candidate Profile - Mark Erikson"),
	group = "PROJECTX",
	id = "SettlerCandidatesMarkEriksonPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(424286034985, --[[ModItemStoryBit SettlerCandidatesMarkEriksonPX PrerequisiteText]] "Free"),
		Text = T(752204979949, --[[ModItemStoryBit SettlerCandidatesMarkEriksonPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "MarkErikson",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(797190363448, --[[ModItemStoryBit SettlerCandidatesMarkEriksonPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/LunariaPasker.png",
	OneTime = false,
	Text = T(291682639009, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(780589127454, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Title]] "Candidate Profile - Lunaria Pasker"),
	group = "PROJECTX",
	id = "ContractCandidatesLunariaPaskPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 150000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 150000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(845236708400, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LunariaPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 300000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 300000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(463183096760, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LunariaPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 450000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 450000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(301275923476, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LunariaPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1050000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1050000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(459204256071, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LunariaPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(777259064980, --[[ModItemStoryBit ContractCandidatesLunariaPaskPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('PickCharacterDef', {
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Disables = {
		"JobOffer_Activator",
	},
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "JobOffers",
			TimeMin = 0,
			param_bindings = false,
		}),
	},
	Enabled = true,
	FxAction = "UINotificationExpedition",
	NotificationText = T(249249843853, --[[ModItemStoryBit JobOffer_Candidate_Generic NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCharacterDef', {
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Sets = set( "IncreasePop" ),
	Text = T(897906163206, --[[ModItemStoryBit JobOffer_Candidate_Generic Text]] "Hi there! I just saw your job offer.\n\nMy name is <color TextEmphasis><character_def.FirstName> <character_def.LastName></color>, and I'm skilled in <color TextEmphasis><character_def.UIBestSkills></color>. I think I'd be a great fit for your team.\n\nLet me know if you're interested in hiring me."),
	Title = T(793741071103, --[[ModItemStoryBit JobOffer_Candidate_Generic Title]] "Contract offer"),
	UseObjectImage = true,
	group = "Trading",
	id = "JobOffer_Candidate_Generic",
	max_reply_id = 7,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(501276461928, --[[ModItemStoryBit JobOffer_Candidate_Generic CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(104947126193, --[[ModItemStoryBit JobOffer_Candidate_Generic PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 60) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(267429002514, --[[ModItemStoryBit JobOffer_Candidate_Generic Text]] "Yes, I want to hire you for half a year"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 60)
				end,
				param_bindings = false,
				time = 23040000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(668458618387, --[[ModItemStoryBit JobOffer_Candidate_Generic CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(634615009468, --[[ModItemStoryBit JobOffer_Candidate_Generic PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 100) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(381257363515, --[[ModItemStoryBit JobOffer_Candidate_Generic Text]] "Yes, for 1 year"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(443956268163, --[[ModItemStoryBit JobOffer_Candidate_Generic CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(236731129506, --[[ModItemStoryBit JobOffer_Candidate_Generic PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 180) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(811575145380, --[[ModItemStoryBit JobOffer_Candidate_Generic Text]] "Yes, for 2 years"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 180)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(588294914747, --[[ModItemStoryBit JobOffer_Candidate_Generic PrerequisiteText]] "Haggler in the colony"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj)
					for _, survivor in ipairs(UIPlayer.labels.Survivors) do
						if survivor:HasTrait("Haggler") and not survivor:IsDead() then
							return true
						end
					end
					return false
				end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(680960226329, --[[ModItemStoryBit JobOffer_Candidate_Generic Text]] "Let's discuss your payment"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj, sbstate)
					TemporaryCharacterDefID = sbstate.character_def.id
				end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
			PlaceObj('StoryBitActivate', {
				Id = "JobOffer_Candidate_Generic_HagglerOutcome",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(816059716026, --[[ModItemStoryBit JobOffer_Candidate_Generic Text]] "No, your services are not needed"),
		param_bindings = false,
		unique_id = 7,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	group = "Trading",
	id = "TradingShip_SmugglerShip",
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				TrySpawnTradingShip(2*const.DayDuration, GetTradeShipCalled())
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "Trade",
			TimeMax = 3840000,
			TimeMin = 1920000,
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Tick",
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	InheritsObject = false,
	NotificationCanDismiss = false,
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return not CheckForTradingShip() and GetTradeShipCalledNoEmbargo() end,
			param_bindings = false,
		}),
		PlaceObj('CheckRandom', {
			Chance = 30,
			param_bindings = false,
		}),
	},
	SelectObject = false,
	group = "Trading",
	id = "Call_Ship_Arrival",
	max_reply_id = 4,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Gaby on 2023-Mar-28\nModified by Geri on 2023-Mar-28",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/OldJohn.png",
	OneTime = false,
	Text = T(567893405744, --[[ModItemStoryBit SettlerCandidatesOldJohnPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(609352329293, --[[ModItemStoryBit SettlerCandidatesOldJohnPX Title]] "Candidate Profile - Old Man John"),
	group = "PROJECTX",
	id = "SettlerCandidatesOldJohnPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(451535633972, --[[ModItemStoryBit SettlerCandidatesOldJohnPX PrerequisiteText]] "Free"),
		Text = T(573641062628, --[[ModItemStoryBit SettlerCandidatesOldJohnPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "OldManJohn",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(811194227107, --[[ModItemStoryBit SettlerCandidatesOldJohnPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('ExecuteCode', {
			Code = function (self, obj, sbstate)
				sbstate.character_def = CharacterDefs[TemporaryCharacterDefID]
				TemporaryCharacterDefID = false
			end,
			Params = "self, obj, sbstate",
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	NotificationText = T(178333322385, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	SelectObject = false,
	Text = T(866558189171, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome Text]] "Okay, okay! I can agree to work for <color TextEmphasis>10%</color> less."),
	Title = T(104580289272, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome Title]] "Contract offer"),
	UseObjectImage = true,
	group = "Trading",
	id = "JobOffer_Candidate_Generic_HagglerOutcome",
	max_reply_id = 7,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(945863764093, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(454965418603, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 55) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(534591012854, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome Text]] "Yes, I want to hire you for half a year"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 55)
				end,
				param_bindings = false,
				time = 23040000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(962881969118, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(525147711441, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 90) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(373582016097, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome Text]] "Yes, for 1 year"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 90)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(531389865746, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(928179572931, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 160) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(577701707022, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome Text]] "Yes, for 2 years"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 160)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(751584804934, --[[ModItemStoryBit JobOffer_Candidate_Generic_HagglerOutcome Text]] "No, your services are not needed"),
		param_bindings = false,
		unique_id = 7,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/KhanFredrick.png",
	OneTime = false,
	Text = T(955717626674, --[[ModItemStoryBit ContractCandidatesKhanFredPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>125,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(303714163203, --[[ModItemStoryBit ContractCandidatesKhanFredPX Title]] "Candidate Profile - Khan Fredrick"),
	group = "PROJECTX",
	id = "ContractCandidatesKhanFredPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 125000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 125000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(304061646981, --[[ModItemStoryBit ContractCandidatesKhanFredPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KhanFredrick",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 250000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 250000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(548791795959, --[[ModItemStoryBit ContractCandidatesKhanFredPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KhanFredrick",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 375000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 375000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(582603824854, --[[ModItemStoryBit ContractCandidatesKhanFredPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KhanFredrick",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 875000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 875000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(646020126312, --[[ModItemStoryBit ContractCandidatesKhanFredPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "KhanFredrick",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(795414360099, --[[ModItemStoryBit ContractCandidatesKhanFredPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/GaleSenario.png",
	OneTime = false,
	Text = T(253386707771, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>250,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(177355559828, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Title]] "Candidate Profile - Gale Senario"),
	group = "PROJECTX",
	id = "ContractCandidatesGaleSenarioPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 250000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 250000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(487116857166, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "GaleSenario",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 500000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 500000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(803636942219, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "GaleSenario",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 850000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 850000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(541868343826, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "GaleSenario",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1850000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1850000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(369694183608, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "GaleSenario",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(502655983349, --[[ModItemStoryBit ContractCandidatesGaleSenarioPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "CriminalCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 480000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	Image = "Events/CyberCrystals.png",
	NotificationTitle = T(361600610613, --[[ModItemStoryBit CrystalCave NotificationTitle]] "Expedition Progress"),
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Sets = {
		Witness = true,
	},
	SuppressTime = 6000000,
	Text = T(336152138636, --[[ModItemStoryBit CrystalCave Text]] "<center>I've never seen anything quite like it in my entire life... The cluster of crystal goes deep below ground. Its difficult to get into the cave and we would need some kind of machine to excavate below surface as my rad detector is detecting high amounts of radiation the deeper I go. Could this be the real reason why the Galactic Authorities specifically picked this planet?- I shouldn't ask questions."),
	Title = T(165108377125, --[[ModItemStoryBit CrystalCave Title]] "Crystal Cave Progress"),
	group = "Expedition_ANewSite",
	id = "CrystalCave",
	max_reply_id = 7,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2020-Dec-21\nModified by Gaby on 2021-Jan-05\nModified by Ivan on 2021-Jan-06\nModified by Gaby on 2021-Jan-07\nModified by Gaby on 2021-Jan-08\nModified by Lina on 2021-Jan-12\nModified by Lina on 2021-Feb-23\nModified by Gaby on 2021-Apr-09\nModified by Bobby on 2021-May-20\nModified by Lina on 2021-Aug-25\nModified by Lina on 2021-Aug-31\nModified by Lina on 2021-Sep-03\nModified by Lina on 2021-Sep-08\nModified by Lina on 2021-Sep-13\nModified by Lina on 2021-Sep-27\nModified by Lina on 2022-Apr-12\nModified by Lina on 2022-Apr-14\nModified by Xaerial on 2022-Oct-10",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = "",
		OutcomeText = "custom",
		PrerequisiteText = T(328415289593, --[[ModItemStoryBit CrystalCave PrerequisiteText]] "Physical Level 8 Required"),
		Prerequisites = {
			PlaceObj('CheckSkillLevel', {
				Amount = 8,
				Condition = ">=",
				Skill = "Physical",
				param_bindings = false,
			}),
		},
		Text = T(879973514155, --[[ModItemStoryBit CrystalCave Text]] "Go as deep as you can and excavate the valuable crystals from the depths."),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 20000,
				Resource = "AlienCrystal",
				param_bindings = false,
			}),
		},
		Text = T(361079646726, --[[ModItemStoryBit CrystalCave Text]] "I went as deep into the cave as I possibly could whilst avoiding radiation sickness and excavate the more valuable crystals. The mission was a success, i'm returning home."),
		Title = T(341478032895, --[[ModItemStoryBit CrystalCave Title]] "Mission Report"),
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(673214458763, --[[ModItemStoryBit CrystalCave PrerequisiteText]] "Requires Intellect 5."),
		Prerequisites = {
			PlaceObj('CheckSkillLevel', {
				Amount = 5,
				Condition = ">=",
				Skill = "Intellectual",
				param_bindings = false,
			}),
		},
		Text = T(564221431720, --[[ModItemStoryBit CrystalCave Text]] "Don't go too deep, try get whatever you safely can."),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 30000,
				Resource = "CyberCrystal",
				param_bindings = false,
			}),
		},
		Text = T(150653194615, --[[ModItemStoryBit CrystalCave Text]] "The excavation efforts were a success."),
		Title = T(142444999015, --[[ModItemStoryBit CrystalCave Title]] "Successful Expedition"),
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(790959680289, --[[ModItemStoryBit CrystalCave Text]] "Just take whatever crystals you can from the surface."),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 25000,
				Resource = "EnergyCrystals",
				param_bindings = false,
			}),
		},
		Text = T(430804165857, --[[ModItemStoryBit CrystalCave Text]] "I've took what I can, returning back now!"),
		Title = T(988348618788, --[[ModItemStoryBit CrystalCave Title]] "Successful Expedition"),
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('SpawnTradingShip', {
			Ship = "Battleship",
			TimeInOrbit = 1920000,
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Trade",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "Trade",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	InheritsObject = false,
	NotificationCanDismiss = false,
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return not CheckForTradingShip() end,
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Sets = set( "Trade" ),
	SuppressTime = 28800000,
	group = "Trading",
	id = "TradingShip_BattleShip",
	max_reply_id = 4,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Geri on 2022-Oct-28\nModified by Geri on 2022-Oct-31\nModified by Ivan on 2022-Nov-17\nModified by Geri on 2022-Nov-17\nModified by Ivan on 2022-Nov-21\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07\nModified by Geri on 2023-Mar-28",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/RayyPasker.png",
	OneTime = false,
	Text = T(631015996946, --[[ModItemStoryBit ContractCandidatesRayPaskPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(818114726831, --[[ModItemStoryBit ContractCandidatesRayPaskPX Title]] "Candidate Profile - Ray Pasker"),
	group = "PROJECTX",
	id = "ContractCandidatesRayPaskPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 150000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 150000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(997580438931, --[[ModItemStoryBit ContractCandidatesRayPaskPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "RayyPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 300000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 300000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(602582863916, --[[ModItemStoryBit ContractCandidatesRayPaskPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "RayyPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 450000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 450000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(835071446218, --[[ModItemStoryBit ContractCandidatesRayPaskPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "RayyPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1050000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1050000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(883948054477, --[[ModItemStoryBit ContractCandidatesRayPaskPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "RayyPasker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(641352542109, --[[ModItemStoryBit ContractCandidatesRayPaskPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageTwoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayGalacticSupplyDropPX.png",
	OneTime = false,
	SelectObject = false,
	Text = T(834209281966, --[[ModItemStoryBit GalacticSupplyCratePX Text]] "<center><color TextEmphasis>::Loading Supply Crate Database::\n::Galactic Supply Crate Contents::</color>\n\n<color red> 1 Galactic Helmet\n1 Galactic Chestpiece\n1 Galactic Leggings\n1 Galactic Boots\n1 Galactic Spear\n1 Galactic Rifle</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(160173468124, --[[ModItemStoryBit GalacticSupplyCratePX Title]] "Galactic Supply Crate"),
	group = "PROJECTX",
	id = "GalacticSupplyCratePX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		Text = T(333117959876, --[[ModItemStoryBit GalacticSupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropGalacticOfficial",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(580052108745, --[[ModItemStoryBit GalacticSupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/DaynRheo.png",
	OneTime = false,
	Text = T(719128464102, --[[ModItemStoryBit SettlerCandidatesDaynRheoPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(895503548825, --[[ModItemStoryBit SettlerCandidatesDaynRheoPX Title]] "Candidate Profile - Dayn Rheo"),
	group = "PROJECTX",
	id = "SettlerCandidatesDaynRheoPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(258713180403, --[[ModItemStoryBit SettlerCandidatesDaynRheoPX PrerequisiteText]] "Free"),
		Text = T(852852137075, --[[ModItemStoryBit SettlerCandidatesDaynRheoPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DaynRheo",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(252938632704, --[[ModItemStoryBit SettlerCandidatesDaynRheoPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 160000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	Image = "Events/MetoriteShower.png",
	NotificationTitle = T(106042192759, --[[ModItemStoryBit Ambush NotificationTitle]] "Expedition Progress"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Sets = {
		Negative = true,
	},
	SuppressTime = 7200000,
	Text = T(836916924567, --[[ModItemStoryBit Ambush Text]] "<center>Just as I arrived to the meteorite site I was ambushed by a pack of spiked tailed insects. I probably sound crazy but they were very aggressive and were all over the site. I had to get out otherwise i'd of become someones lunch."),
	Title = T(227399451436, --[[ModItemStoryBit Ambush Title]] "Meteorite Shower"),
	group = "Expedition_ANewSite",
	id = "Ambush",
	max_reply_id = 7,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2020-Dec-21\nModified by Gaby on 2021-Jan-05\nModified by Ivan on 2021-Jan-06\nModified by Gaby on 2021-Jan-07\nModified by Gaby on 2021-Jan-08\nModified by Lina on 2021-Jan-12\nModified by Lina on 2021-Feb-23\nModified by Gaby on 2021-Apr-09\nModified by Bobby on 2021-May-20\nModified by Lina on 2021-Aug-25\nModified by Lina on 2021-Aug-31\nModified by Lina on 2021-Sep-03\nModified by Lina on 2021-Sep-08\nModified by Lina on 2021-Sep-13\nModified by Lina on 2021-Sep-27\nModified by Lina on 2022-Apr-12\nModified by Lina on 2022-Apr-14\nModified by Xaerial on 2022-Oct-10",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = "",
		OutcomeText = "custom",
		PrerequisiteText = T(326078902919, --[[ModItemStoryBit Ambush PrerequisiteText]] "Combat Level 3 Required. 30% Failure Chance."),
		Prerequisites = {
			PlaceObj('CheckSkillLevel', {
				Amount = 3,
				Condition = ">=",
				Skill = "Combat",
				param_bindings = false,
			}),
		},
		Text = T(704940232046, --[[ModItemStoryBit Ambush Text]] "Stand and fight you coward."),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 40000,
				Resource = "RawMeat",
				param_bindings = false,
			}),
		},
		Text = T(127269021018, --[[ModItemStoryBit Ambush Text]] "I managed to kill two of the creatures, the rest of them decided to flee. I will have to return back however as more seems to be gathering in the distance, I don't want to risk my life for honor. I'll take what food I can butcher from these two and return."),
		Title = T(324585561489, --[[ModItemStoryBit Ambush Title]] "Expedition Results"),
		Weight = 70,
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('AddRemoveHealthCondition', {
				BodyPart = "ArmLeft",
				BodyPartGroup = "Arms",
				HealthCond = "CyberneticArm",
				HealthCondReason = "random_event",
				HealthCondType = "Buff",
				param_bindings = false,
			}),
			PlaceObj('AddRemoveTrait', {
				Trait = "BadMemory",
				param_bindings = false,
			}),
			PlaceObj('AddRemoveHealthCondition', {
				BodyPart = "Any",
				HealthCond = "Cut_Treated",
				HealthCondReason = "random_event",
				HealthCondType = "Debuff",
				param_bindings = false,
			}),
			PlaceObj('AddRemoveHealthCondition', {
				BodyPart = "Any",
				HealthCond = "Bite_Treated",
				HealthCondReason = "random_event",
				HealthCondType = "Debuff",
				param_bindings = false,
			}),
			PlaceObj('AddRemoveHealthCondition', {
				BodyPart = "Any",
				HealthCond = "Wound_Scar",
				HealthCondReason = "random_event",
				HealthCondType = "Debuff",
				param_bindings = false,
			}),
		},
		Image = "Events/MedicalTreatment.png",
		Text = T(365435452341, --[[ModItemStoryBit Ambush Text]] "The crew member has returned from expedition, gravely wounded and missing a limb. Your team rush out to provide life saving medical treatment and were fortunate to be successful, the crew member is stable and will undergo treatment to replace the missing limb with a cybernetic limb."),
		Title = T(640852730915, --[[ModItemStoryBit Ambush Title]] "Failure: Wounded Crew Member"),
		Weight = 30,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = "",
		Text = T(672079428989, --[[ModItemStoryBit Ambush Text]] "Make your way back."),
		param_bindings = false,
		unique_id = 5,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Tick",
	FxAction = "UINotificationExpedition",
	Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
	InheritsObject = false,
	NotificationText = T(948001130524, --[[ModItemStoryBit WantedFugitive_Military NotificationText]] "Incoming transmission"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "WantedFugitiveDelay",
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckExpression', {
					Expression = function (self, obj) return obj.id == MilitaryLookingFor end,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(608937810030, --[[ModItemStoryBit WantedFugitive_Military Text]] "We have detected <color TextEmphasis><FirstName> <LastName></color> in this star system. They are a wanted fugitive.\n\nDo you know anything about that?"),
	Title = T(190862703806, --[[ModItemStoryBit WantedFugitive_Military Title]] "Incoming transmission"),
	group = "Trading",
	id = "WantedFugitive_Military",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Feb-01\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(160446727050, --[[ModItemStoryBit WantedFugitive_Military CustomOutcomeText]] "<FirstName> leaves the planet"),
		OutcomeText = "custom",
		Text = T(532612038307, --[[ModItemStoryBit WantedFugitive_Military Text]] "Yes, we will send them to you immediately"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Disables = {
			"WantedFugitive_Military",
		},
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					obj:SetFarmerStatus("fired")
					MilitaryLookingFor = ""
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(614043206724, --[[ModItemStoryBit WantedFugitive_Military CustomOutcomeText]] "unknown consequences"),
		OutcomeText = "custom",
		Text = T(352382798317, --[[ModItemStoryBit WantedFugitive_Military Text]] "No, we know nothing about this"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivateRandom', {
				StoryBits = {
					PlaceObj('StoryBitWithWeight', {
						'StoryBitId', "WantedFugitive_Military_Attack",
					}),
					PlaceObj('StoryBitWithWeight', {
						'StoryBitId', "WantedFugitive_Military_NoOutcome",
					}),
				},
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "RabidDog"
			end,
			SpawnDefId = "ProjectX_AttackSwarm",
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	FxAction = "UINotificationExpedition",
	HasNotification = false,
	Image = "Events/RabidDog.png",
	InheritsObject = false,
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	NotificationPriority = "AnimalAlert",
	NotificationTitle = T(883055090113, --[[ModItemStoryBit AnimalAttack_RabidDogs NotificationTitle]] "Potential Threat"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	SelectObject = false,
	Text = T(503418074321, --[[ModItemStoryBit AnimalAttack_RabidDogs Text]] "<color TextEmphasis>We've spotted a pack of rabid dogs to the East from us, they appear to be acting in an unusual aggressive manner, perhaps diseased. We should prepare some form of defense as they could steer into our direction. We estimated that they could take (12 Hours) to reach us if they do continue coming this way.</color>\n\n<color blue>Strengths:</color>\n- Speed, Fast Animals.\n- Travel in packs.\n\n<color red>Weaknesses:</color>\n- Low Health\n- Gas Attacks.\n- Blunt Attacks.\n- Piercing Attacks.\n- Energy Attacks.\n- Pacify Attacks."),
	Title = T(200450741469, --[[ModItemStoryBit AnimalAttack_RabidDogs Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_RabidDogs",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Juno_Brute"
			end,
			ProgressMul = 30,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Juno"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Juno"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Juno"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectBosses["Juno"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Juno"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/JunoBrute.png",
	OneTime = false,
	Text = T(179242639216, --[[ModItemStoryBit AnimalAttack_Initial_Junos_Ambush_disabled Text]] "<color TextEmphasis>Boss... we have a problem! Juno's... Juno's everywhere! From all sides! Every sensor is going absolutely nuts, East, South, North!- This isn't good. I have a feeling they are hungry and we are on the menu. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Medium defense to Blunt, Pierce, Energy and Pacify attacks.\n- Intelligent Species (70-90% Trap Avoidance Chance)\n- Deep lacerating melee strikes.\n\n<color red>Weaknesses:</color>\n- Weak against gas and poison attacks.\n- Range attacks."),
	Title = T(769799871792, --[[ModItemStoryBit AnimalAttack_Initial_Junos_Ambush_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Junos_Ambush_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 4000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	HasNotification = false,
	Image = "Events/ProjectXRelayLunaria.png",
	OneTime = false,
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Text = T(638848325350, --[[ModItemStoryBit LunariaPasker Text]] "<center><color TextEmphasis>::Scanning Credentials::\n::Credentials Verified::</color>\n\nGreetings Lunaria Pasker. You have the following options available.\n\n<color TextEmphasis>::Input Option::</color>"),
	Title = T(809187848655, --[[ModItemStoryBit LunariaPasker Title]] "Tamer's Guild HeadQuarters - Lunaria Pasker"),
	UseObjectImage = true,
	group = "Expedition",
	id = "LunariaPasker",
	max_reply_id = 49,
	qa_info = PlaceObj('PresetQAInfo', {
		data = {},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = "",
		Text = T(921017924031, --[[ModItemStoryBit LunariaPasker Text]] "Request Tamed Shrieker Queen"),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Shrieker_Manhunting_Mother"
				end,
				ProgressMul = 0,
				SpawnDefId = "ProjectX_Tamed",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		Text = T(364831943735, --[[ModItemStoryBit LunariaPasker Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the Shrieker Queen has been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
		Title = "",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = "",
		Text = T(993635697197, --[[ModItemStoryBit LunariaPasker Text]] "Request 3 Tamed Dromaddas"),
		param_bindings = false,
		unique_id = 49,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Camel"
				end,
				ProgressMul = 0,
				SpawnDefId = "ProjectX_Tamed",
				param_bindings = false,
			}),
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Camel"
				end,
				ProgressMul = 0,
				SpawnDefId = "ProjectX_Tamed",
				param_bindings = false,
			}),
			PlaceObj('ActivateSpawnDef', {
				CreateInstance = true,
				FillInstance = function (self, instance)
					instance.SpawnClass = "Camel"
				end,
				ProgressMul = 0,
				SpawnDefId = "ProjectX_Tamed",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		Text = T(716619689352, --[[ModItemStoryBit LunariaPasker Text]] "<center><color TextEmphasis>::Input Verified::</color>\n\nYour request has been received and the 3 Dromaddas have been transported to your location.\n\n(Spawned nearby your survivors within a max of 100 meter radius. Check your tamed animals tab if you cannot find them.)\n\n<color TextEmphasis>::Connection Terminated::</color>"),
		Title = "",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(438861328117, --[[ModItemStoryBit LunariaPasker Text]] "Go Back"),
		param_bindings = false,
		unique_id = 47,
	}),
	PlaceObj('StoryBitOutcome', {
		StoryBits = {
			PlaceObj('StoryBitWithWeight', {
				'StoryBitId', "TamerHQ",
				'NoCooldown', true,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(645922780111, --[[ModItemStoryBit LunariaPasker Text]] "Terminate Transmission"),
		param_bindings = false,
		unique_id = 48,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('PickCharacterDef', {
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Disables = {
		"JobOffer_Activator",
	},
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "JobOffers",
			TimeMin = 0,
			param_bindings = false,
		}),
	},
	Enabled = true,
	FxAction = "UINotificationExpedition",
	NotificationText = T(623936681278, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_TradeShips NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCharacterDef', {
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Sets = set( "IncreasePop" ),
	Text = T(262862740631, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_TradeShips Text]] "Hi there! I saw that you are looking for workers.\n\nMy name is <color TextEmphasis><character_def.FirstName> <character_def.LastName></color>. Long story short, I'm looking for a place to hide from the <color TextEmphasis>Galactic Trade League</color> for a couple of seasons. I will gladly work for you, no payment needed.\n\nI'm skilled in <color TextEmphasis><character_def.UIBestSkills></color>.\n\nLet me know if you're interested."),
	Title = T(477507273054, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_TradeShips Title]] "Contract offer"),
	UseObjectImage = true,
	group = "Trading",
	id = "JobOffer_Candidate_Fugitive_TradeShips",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(363161385569, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_TradeShips CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		Text = T(184806362479, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_TradeShips Text]] "Yes, you can stay for half a year"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = return_0,
				param_bindings = false,
				time = 23040000,
			}),
		},
		Weight = 50,
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					TradeShipsLookingFor = context.character_def.id
					return 0
				end,
				param_bindings = false,
				time = 23040000,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "WantedFugitiveDelay_TradeShips",
				param_bindings = false,
			}),
		},
		Enables = {
			"WantedFugitive_TradeShips",
		},
		Weight = 50,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(872489403405, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_TradeShips Text]] "No thanks! This sounds like a potential problem"),
		param_bindings = false,
		unique_id = 2,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('StoryBitActivateRandom', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Generic",
					'NoCooldown', true,
					'ForcePopup', false,
					'Weight', 2000,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Fugitive_Military",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Fugitive_Smugglers",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Fugitive_Colony",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Fugitive_TradeShips",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Custom_Hann",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_Custom_Hugo",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "JobOffer_Candidate_None",
					'Weight', 1,
				}),
			},
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Tick",
	HasNotification = false,
	HasPopup = false,
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "JobOffers",
			Negate = true,
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "JobOfferDelay",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(469782654474, --[[ModItemStoryBit JobOffer_Activator Text]] "None"),
	Title = T(629532911186, --[[ModItemStoryBit JobOffer_Activator Title]] "None"),
	group = "Trading",
	id = "JobOffer_Activator",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 4000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	HasNotification = false,
	Image = "Events/ProjectXRelayBountyHQ.png",
	OneTime = false,
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Text = T(886430556044, --[[ModItemStoryBit BountyHunterHQ Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nWelcome to the Bounty Hunter's Guild, we are closed at the moment. Please call back another time.\n\n<color TextEmphasis>::Input Request::</color>"),
	Title = T(581012385761, --[[ModItemStoryBit BountyHunterHQ Title]] "Bounty Hunter's Guild"),
	UseObjectImage = true,
	group = "Expedition",
	id = "BountyHunterHQ",
	max_reply_id = 52,
	qa_info = PlaceObj('PresetQAInfo', {
		data = {},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "DENIED",
				param_bindings = false,
			}),
		},
		Text = T(144802136617, --[[ModItemStoryBit BountyHunterHQ Text]] "Bounty Contract"),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = "",
		Text = T(333274603115, --[[ModItemStoryBit BountyHunterHQ Text]] "Go Back"),
		param_bindings = false,
		unique_id = 52,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "InitiatedCall",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(990511649575, --[[ModItemStoryBit BountyHunterHQ Text]] "Terminate Transmission"),
		param_bindings = false,
		unique_id = 47,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayDroidShop.png",
	OneTime = false,
	Text = T(725274908467, --[[ModItemStoryBit DroidCandidatesG7B97 Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors.\n\nThis droid is for sale for <style red>170,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(562969412176, --[[ModItemStoryBit DroidCandidatesG7B97 Title]] "Candidate Profile - G7-B97"),
	group = "PROJECTX",
	id = "DroidCandidatesG7B97",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 170000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 170000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(186460922283, --[[ModItemStoryBit DroidCandidatesG7B97 Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "G7-B97",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
			PlaceObj('StoryBitActivate', {
				Id = "px_droid_intro",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(226251710824, --[[ModItemStoryBit DroidCandidatesG7B97 Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Disables = {
		"WantedFugitive_Military",
	},
	Effects = {
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				MilitaryLookingFor = ""
			end,
			param_bindings = false,
		}),
	},
	Enabled = true,
	FxAction = "UINotificationExpedition",
	Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
	NotificationText = T(691071363607, --[[ModItemStoryBit WantedFugitive_Military_NoOutcome NotificationText]] "Incoming transmission"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckExpression', {
					Expression = function (self, obj) return obj.id == MilitaryLookingFor end,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(435113406859, --[[ModItemStoryBit WantedFugitive_Military_NoOutcome Text]] "That's unfortunate! We will looking elsewhere then."),
	Title = T(494041751865, --[[ModItemStoryBit WantedFugitive_Military_NoOutcome Title]] "Incoming transmission"),
	group = "Trading",
	id = "WantedFugitive_Military_NoOutcome",
	max_reply_id = 8,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Tick",
	FxAction = "UINotificationExpedition",
	Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
	InheritsObject = false,
	NotificationText = T(311252397929, --[[ModItemStoryBit WantedFugitive_Smugglers NotificationText]] "Incoming transmission"),
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "WantedFugitiveDelay_Smugglers",
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckExpression', {
					Expression = function (self, obj) return obj.id == SmugglersLookingFor end,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(395721854389, --[[ModItemStoryBit WantedFugitive_Smugglers Text]] "The Smugglers Guild has detected the presence of <color TextEmphasis><FirstName> <LastName></color> in your base. They are a wanted fugitive.\n\nWe insist that you deliver that person to us immediately. In case you refuse, we will notify the Guild to not trade with you."),
	Title = T(970926749551, --[[ModItemStoryBit WantedFugitive_Smugglers Title]] "Incoming transmission"),
	group = "Trading",
	id = "WantedFugitive_Smugglers",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(177326152309, --[[ModItemStoryBit WantedFugitive_Smugglers CustomOutcomeText]] "<FirstName> leaves the planet"),
		OutcomeText = "custom",
		Text = T(951937379346, --[[ModItemStoryBit WantedFugitive_Smugglers Text]] "Of course"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					obj:SetFarmerStatus("fired")
					SmugglersLookingFor = ""
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(960601141897, --[[ModItemStoryBit WantedFugitive_Smugglers CustomOutcomeText]] "1 year embargo"),
		OutcomeText = "custom",
		Text = T(622281193483, --[[ModItemStoryBit WantedFugitive_Smugglers Text]] "No"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "EmbargoSmugglers",
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					SmugglersLookingFor = ""
				end,
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					Msg("TradingShipEmbargo")
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 4000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	HasNotification = false,
	Image = "Events/ProjectXRelayHireBooth.png",
	OneTime = false,
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Text = T(985426131179, --[[ModItemStoryBit HireCandidateBoardPX Text]] "<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nWhat category of candidate are you looking for?\n\n<color TextEmphasis>::Input Option::</color>"),
	Title = T(551468086391, --[[ModItemStoryBit HireCandidateBoardPX Title]] "Candidate Board"),
	UseObjectImage = true,
	group = "PROJECTX",
	id = "HireCandidateBoardPX",
	max_reply_id = 46,
	qa_info = PlaceObj('PresetQAInfo', {
		data = {},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(742535785121, --[[ModItemStoryBit HireCandidateBoardPX PrerequisiteText]] "Cost Range: <image 'UI/Icons/Resources/res_money' 1100> Free"),
		Text = T(170186229352, --[[ModItemStoryBit HireCandidateBoardPX Text]] "Settler Candidates"),
		param_bindings = false,
		unique_id = 41,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(387951927230, --[[ModItemStoryBit HireCandidateBoardPX PrerequisiteText]] "Cost Range: <image 'UI/Icons/Resources/res_money' 1100> 100k-300k"),
		Text = T(634821031356, --[[ModItemStoryBit HireCandidateBoardPX Text]] "Contractual Candidates"),
		param_bindings = false,
		unique_id = 40,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(221369578141, --[[ModItemStoryBit HireCandidateBoardPX PrerequisiteText]] "Cost Range: <image 'UI/Icons/Resources/res_money' 1100> 200k-400k"),
		Text = T(538731803623, --[[ModItemStoryBit HireCandidateBoardPX Text]] "Criminal Candidates"),
		param_bindings = false,
		unique_id = 39,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "CriminalCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(728451861782, --[[ModItemStoryBit HireCandidateBoardPX PrerequisiteText]] "Cost Range: <image 'UI/Icons/Resources/res_money' 1100> 170k-900k"),
		Text = T(932630515744, --[[ModItemStoryBit HireCandidateBoardPX Text]] "Droids"),
		param_bindings = false,
		unique_id = 38,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(753392877899, --[[ModItemStoryBit HireCandidateBoardPX Text]] "Go Back"),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SpaceStationHQ",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "JobOffers",
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "JobOfferDelay",
			param_bindings = false,
		}),
	},
	Enabled = true,
	Enables = {
		"JobOffer_Activator",
	},
	HasNotification = false,
	Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
	OneTime = false,
	SelectObject = false,
	Text = T(902941517393, --[[ModItemStoryBit InitiatedCall_PostJobOffer Text]] "Of course! We will post your job offer and it will remain active for the next 5 days or until a candidate connects with you."),
	Title = T(459954412710, --[[ModItemStoryBit InitiatedCall_PostJobOffer Title]] "Ansible Relay #499"),
	group = "Trading",
	id = "InitiatedCall_PostJobOffer",
	max_reply_id = 14,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Bobby on 2022-Dec-09\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Feb-10\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16\nModified by Gaby on 2023-Mar-28",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(649624748691, --[[ModItemStoryBit InitiatedCall_PostJobOffer Text]] "Thank you!"),
		param_bindings = false,
		unique_id = 7,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/DrakeJames.png",
	OneTime = false,
	Text = T(198245299965, --[[ModItemStoryBit SettlerCandidatesDrakeJamesPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(371493780735, --[[ModItemStoryBit SettlerCandidatesDrakeJamesPX Title]] "Candidate Profile - Drake James"),
	group = "PROJECTX",
	id = "SettlerCandidatesDrakeJamesPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(487727085387, --[[ModItemStoryBit SettlerCandidatesDrakeJamesPX PrerequisiteText]] "Free"),
		Text = T(100873823198, --[[ModItemStoryBit SettlerCandidatesDrakeJamesPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DrakeJames",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(198248623439, --[[ModItemStoryBit SettlerCandidatesDrakeJamesPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Tick",
	FxAction = "UINotificationExpedition",
	InheritsObject = false,
	NotificationText = T(300339578762, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots_Delayed NotificationText]] "Question: <color TextEmphasis><FirstName></color>"),
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "HannDelay2",
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckExpression', {
					Expression = function (self, obj) return obj.id == "Hann" and obj.killshots < 10 end,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(162289673364, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots_Delayed Text]] "Hi there!\n\nIt seems that I wouldn't be able to finish my safary here. I'm going."),
	Title = T(392341560074, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots_Delayed Title]] "Question"),
	UseObjectImage = true,
	group = "Trading",
	id = "Custom_Hann_NotEnoughKillshots_Delayed",
	max_reply_id = 8,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Bobby on 2023-Mar-07",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(541201861306, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots_Delayed CustomOutcomeText]] "<DisplayNameNoStatus> leaves"),
		OutcomeText = "custom",
		Text = T(770198053841, --[[ModItemStoryBit Custom_Hann_NotEnoughKillshots_Delayed Text]] "That is unfortunate"),
		param_bindings = false,
		unique_id = 8,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					obj:SetFarmerStatus("fired")
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Midnight",
	Delay = 40000,
	EnableChance = 999999999,
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayStation.png",
	InheritsObject = false,
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "OrbitalOffer",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	SuppressTime = 4800000,
	Text = T(325670950327, --[[ModItemStoryBit OrbitalOfferCooldownNotification Text]] "<center><color TextEmphasis>::Receiving Transmission::\n::Transmission Received::</color>\n\n<color TextPositive>Greetings, I transmit this message to inform you that the shuttle is prepared and ready. You can choose a 'Supply Drop' or 'Tamer's Package' through the communication relay.</color>\n\n<color TextEmphasis>::Transmission Ended::</color>"),
	Title = T(635908197503, --[[ModItemStoryBit OrbitalOfferCooldownNotification Title]] "Incoming Transmission"),
	Trigger = "Midnight",
	group = "Midnight",
	id = "OrbitalOfferCooldownNotification",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Jan-27\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/DianaVoss.png",
	OneTime = false,
	Text = T(686828172394, --[[ModItemStoryBit ContractCandidatesDianaVossPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(372528914514, --[[ModItemStoryBit ContractCandidatesDianaVossPX Title]] "Candidate Profile - Diana Voss"),
	group = "PROJECTX",
	id = "ContractCandidatesDianaVossPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 200000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 200000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(821893658856, --[[ModItemStoryBit ContractCandidatesDianaVossPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DianaVoss",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(662285907848, --[[ModItemStoryBit ContractCandidatesDianaVossPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DianaVoss",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 600000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 600000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(909537882098, --[[ModItemStoryBit ContractCandidatesDianaVossPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DianaVoss",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(792485414201, --[[ModItemStoryBit ContractCandidatesDianaVossPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DianaVoss",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(336192112325, --[[ModItemStoryBit ContractCandidatesDianaVossPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayStandardSupplyDropPX.png",
	OneTime = false,
	SelectObject = false,
	Text = T(540664600237, --[[ModItemStoryBit StandardSupplyCratePX Text]] "<center><color TextEmphasis>::Loading Supply Crate Database::\n::Standard Supply Crate Contents::</color>\n\n<color red> 15 MedKits\n30 Bandages\n30 Ration Packs\n30 Scrap Electronics\n5 CPU Cores\n1 Energy Cells\n500 Fuel\n200 Wood</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(799324944822, --[[ModItemStoryBit StandardSupplyCratePX Title]] "Standard Supply Crate"),
	group = "PROJECTX",
	id = "StandardSupplyCratePX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		Text = T(597245416788, --[[ModItemStoryBit StandardSupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropStandard",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(507962408851, --[[ModItemStoryBit StandardSupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Delay = 240000,
	Enabled = true,
	FxAction = "UINotificationExpedition",
	Image = "Events/MetoriteShower.png",
	NotificationTitle = T(742914560154, --[[ModItemStoryBit MeteoriteShower2 NotificationTitle]] "Expedition Progress"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	ScriptDone = true,
	SelectObject = false,
	Sets = {
		Witness = true,
	},
	SuppressTime = 10000000,
	Text = T(974537300320, --[[ModItemStoryBit MeteoriteShower2 Text]] "<center>From closer inspection it appears to have just been meteorites that descended. I don't think we will get much from here but I suppose its always worth looking."),
	Title = T(109546413019, --[[ModItemStoryBit MeteoriteShower2 Title]] "Meteorite Shower"),
	group = "Expedition_ANewSite",
	id = "MeteoriteShower2",
	max_reply_id = 7,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2020-Dec-21\nModified by Gaby on 2021-Jan-05\nModified by Ivan on 2021-Jan-06\nModified by Gaby on 2021-Jan-07\nModified by Gaby on 2021-Jan-08\nModified by Lina on 2021-Jan-12\nModified by Lina on 2021-Feb-23\nModified by Gaby on 2021-Apr-09\nModified by Bobby on 2021-May-20\nModified by Lina on 2021-Aug-25\nModified by Lina on 2021-Aug-31\nModified by Lina on 2021-Sep-03\nModified by Lina on 2021-Sep-08\nModified by Lina on 2021-Sep-13\nModified by Lina on 2021-Sep-27\nModified by Lina on 2022-Apr-12\nModified by Lina on 2022-Apr-14\nModified by Xaerial on 2022-Oct-10",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = "",
		OutcomeText = "custom",
		PrerequisiteText = T(268768223834, --[[ModItemStoryBit MeteoriteShower2 PrerequisiteText]] "Physical Level 6 Required. 100% Success Chance."),
		Prerequisites = {
			PlaceObj('CheckSkillLevel', {
				Amount = 6,
				Condition = ">=",
				Skill = "Physical",
				param_bindings = false,
			}),
		},
		Text = T(284388028034, --[[ModItemStoryBit MeteoriteShower2 Text]] "Check for any ore from the asteroids."),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 250000,
				Resource = "Ore",
				param_bindings = false,
			}),
		},
		Text = T(876728942483, --[[ModItemStoryBit MeteoriteShower2 Text]] "I managed to get some resources from the asteroid site."),
		Title = T(250925814018, --[[ModItemStoryBit MeteoriteShower2 Title]] "Mission Report"),
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(141417889592, --[[ModItemStoryBit MeteoriteShower2 PrerequisiteText]] "Physical Level 10 Required - 50% Success Chance."),
		Prerequisites = {
			PlaceObj('CheckSkillLevel', {
				Amount = 10,
				Condition = ">=",
				Skill = "Physical",
				param_bindings = false,
			}),
		},
		Text = T(802433161551, --[[ModItemStoryBit MeteoriteShower2 Text]] "Dig deep and find some valuable resources if you can."),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 15000,
				Resource = "AlienCrystal",
				param_bindings = false,
			}),
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 30000,
				Resource = "CyberCrystal",
				param_bindings = false,
			}),
		},
		Text = T(354529755389, --[[ModItemStoryBit MeteoriteShower2 Text]] "I managed to excavate some really rare material from this site, i'll return now!"),
		Title = T(305726584303, --[[ModItemStoryBit MeteoriteShower2 Title]] "Successful Gathering Attempt"),
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(452176061490, --[[ModItemStoryBit MeteoriteShower2 Text]] "Search the debris for any loose materials."),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('GiveExpeditionRewardToSurvivor', {
				Amount = 80000,
				Resource = "Ore",
				param_bindings = false,
			}),
		},
		Text = T(446203951570, --[[ModItemStoryBit MeteoriteShower2 Text]] "Its not much but it'll do, i'll bring back what I found."),
		Title = T(920212401538, --[[ModItemStoryBit MeteoriteShower2 Title]] "Successful Outcome"),
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayDroidShop.png",
	OneTime = false,
	Text = T(552120052978, --[[ModItemStoryBit DroidCandidatesG7B003 Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nMass production droid model for day to day tasks in new colonies on a budget. Nicknamed Bumbles for the original yellow and black construction colors.\n\nThis droid is for sale for <style red>170,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(192466024280, --[[ModItemStoryBit DroidCandidatesG7B003 Title]] "Candidate Profile - G7-B003"),
	group = "PROJECTX",
	id = "DroidCandidatesG7B003",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 170000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 170000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(384702912442, --[[ModItemStoryBit DroidCandidatesG7B003 Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "G7-B003",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
			PlaceObj('StoryBitActivate', {
				Id = "px_droid_intro",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(961225762412, --[[ModItemStoryBit DroidCandidatesG7B003 Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting"
			end,
			ProgressMul = 60,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Shrieker_Manhunting_Hatchling"] = true
				UnlockedInsectBosses["Shrieker_Manhunting"] = true
				UnlockedInsectBosses["Shrieker_Manhunting_Mother"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Shrieker_Manhunting"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/ShriekerAttack.png",
	OneTime = false,
	Text = T(277471055896, --[[ModItemStoryBit AnimalAttack_Initial_Shriekers_disabled Text]] "<color TextEmphasis>A crew member has returned with a scout report that a group of Shrieker's are coming this direction. From our studies of this specific group species is that they have two types of attacks, one being melee the other range. They use long tails that can fabricate spikes and launch them a good twenty meters. Shrieker's are not something we should simply brush off and we definitely need to prepare some form of defense if they steer this way. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Utilizes Ranged and Melee attacks.\n- Large defense to Piercing and Blunt attacks.\n\n<color red>Weaknesses:</color>\n- Not a Intelligent Species. (0% Chance to avoid traps)\n- Weak to Gas/Poison.\n- Weak to Pacify attacks.\n- Weak to Energy attacks."),
	Title = T(318035018437, --[[ModItemStoryBit AnimalAttack_Initial_Shriekers_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Shriekers_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelaySupplyDrop.png",
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return GetFreeLandingSpot() end,
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "OrbitalOffer",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(838236501988, --[[ModItemStoryBit SupplyDrop Text]] "<center><style red> Must have a landing spot!</style>\nIf you don't have a landing spot, the supply drop will not arrive but the cooldown will still trigger.\n\n(( If you have recently made a transport request for something else such as Animals, then you must wait 20 days. The options will be grey if the cooldown is still active, you will be notified when the option is available again.))"),
	Title = T(175191254149, --[[ModItemStoryBit SupplyDrop Title]] "Supply Drop Request"),
	group = "Orbital",
	id = "SupplyDrop",
	max_reply_id = 12,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Lina on 2021-Feb-23\nModified by Lina on 2021-Mar-01\nModified by Lina on 2021-Mar-08\nModified by Lina on 2021-Apr-13\nModified by Lina on 2021-Apr-22\nModified by Lina on 2021-Jun-10\nModified by IPVankov on 2021-Jun-15\nModified by Lina on 2021-Jun-17\nModified by Bobby on 2021-Aug-18\nModified by Lina on 2021-Sep-30\nModified by Lina on 2021-Oct-05\nModified by Lina on 2021-Dec-06\nModified by Lina on 2021-Dec-07\nModified by Lina on 2021-Dec-08\nModified by Lina on 2021-Dec-14\nModified by Lina on 2021-Dec-15\nModified by Lina on 2022-Mar-09\nModified by Xaerial on 2022-Sep-05\nModified by Ivan on 2022-Sep-07\nModified by Xaerial on 2022-Oct-10",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = "",
		Text = T(678941945422, --[[ModItemStoryBit SupplyDrop Text]] "Standard Supply Crate"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "StandardSupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(591616876244, --[[ModItemStoryBit SupplyDrop PrerequisiteText]] "Trait: Money Supply Drop"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "MoneySupplyDrop",
				param_bindings = false,
			}),
		},
		Text = T(747089802158, --[[ModItemStoryBit SupplyDrop Text]] "Galacticoin Supply Crate"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "MoneySupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(698123454687, --[[ModItemStoryBit SupplyDrop PrerequisiteText]] "Trait: Galactic Supply Drop"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "GalacticSupplyDrop",
				param_bindings = false,
			}),
		},
		Text = T(385581444424, --[[ModItemStoryBit SupplyDrop Text]] "Request Galactic Official Crate"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "GalacticSupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(898567850283, --[[ModItemStoryBit SupplyDrop PrerequisiteText]] "Trait: Contraband Supply Drop"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "ContrabandSupplyDrop",
				param_bindings = false,
			}),
		},
		Text = T(360209949622, --[[ModItemStoryBit SupplyDrop Text]] "Request Contraband Goods"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContrabandSupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(695991970996, --[[ModItemStoryBit SupplyDrop PrerequisiteText]] "Trait: Excavator Supply Drop"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "ExcavatorSupplyDrop",
				param_bindings = false,
			}),
		},
		Text = T(624622333593, --[[ModItemStoryBit SupplyDrop Text]] "Request Excavator Crate"),
		param_bindings = false,
		unique_id = 10,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ExcavatorSupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(964520257627, --[[ModItemStoryBit SupplyDrop PrerequisiteText]] "Trait: Support Supply Drop"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "SupportSupplyDrop",
				param_bindings = false,
			}),
		},
		Text = T(238498643085, --[[ModItemStoryBit SupplyDrop Text]] "Request Support Crate"),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupportSupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(827815148078, --[[ModItemStoryBit SupplyDrop PrerequisiteText]] "Trait: Medical Supply Drop"),
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "MedicalSupplyDrop",
				param_bindings = false,
			}),
		},
		Text = T(147833457934, --[[ModItemStoryBit SupplyDrop Text]] "Request Medical Crate"),
		param_bindings = false,
		unique_id = 12,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "MedicalSupplyCratePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(461254181565, --[[ModItemStoryBit SupplyDrop Text]] "Go Back"),
		param_bindings = false,
		unique_id = 8,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SpaceStationHQ",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(143325753321, --[[ModItemStoryBit SupplyDrop Text]] "Terminate Transmission"),
		param_bindings = false,
		unique_id = 9,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayCriminalCandidates.png",
	OneTime = false,
	Text = T(436272382333, --[[ModItemStoryBit CriminalCandidatesPX Text]] "<center>Welcome to the black market. We have listed below the available candidates that wish to offer there skills for a price."),
	Title = T(236230672712, --[[ModItemStoryBit CriminalCandidatesPX Title]] "Criminal Candidates"),
	group = "PROJECTX",
	id = "CriminalCandidatesPX",
	max_reply_id = 12,
	PlaceObj('StoryBitReply', {
		Text = T(571493368271, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Galenos Yaskk'"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesGalenosYaskkPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(472954680951, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Gale Senario'"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesGaleSenarioPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(895570677802, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Gizmo Rassk'"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesGizmoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(343965830936, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Leonardo Kexx'"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesLeonardoKexxPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(742087606569, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Pogo Dainer'"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPogoDainerPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(627987236608, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Xayah Fayy'"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesXayahFayyPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(692244324005, --[[ModItemStoryBit CriminalCandidatesPX Text]] "View Profile 'Tommy Tucker'"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesTommyTPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(915817380159, --[[ModItemStoryBit CriminalCandidatesPX Text]] "Go Back"),
		param_bindings = false,
		unique_id = 12,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "HireCandidateBoardPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/TarraStones.png",
	OneTime = false,
	Text = T(665397752120, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(984746385402, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Title]] "Candidate Profile - Tarra Stones"),
	group = "PROJECTX",
	id = "ContractCandidatesTarraStonesPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 150000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 150000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(442748727929, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TarraStones",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 300000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 300000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(973654706747, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TarraStones",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 450000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 450000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(655561068864, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TarraStones",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1050000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1050000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(242443502987, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TarraStones",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(175215861021, --[[ModItemStoryBit ContractCandidatesTarraStonesPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageTwoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/XayahFayy.png",
	OneTime = false,
	Text = T(483718980612, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>250,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(283991291153, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Title]] "Candidate Profile - Xayah Fayy"),
	group = "PROJECTX",
	id = "ContractCandidatesXayahFayyPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 250000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 250000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(377040242588, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "XayahFayy",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 500000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 500000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(157088151270, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "XayahFayy",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 850000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 850000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(662722426446, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "XayahFayy",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1850000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1850000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(719952012411, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "XayahFayy",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(211449423088, --[[ModItemStoryBit ContractCandidatesXayahFayyPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "CriminalCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('ExecuteCode', {
			Code = function (self, obj, sbstate)
				sbstate.character_def = CharacterDefs[TemporaryCharacterDefID]
				TemporaryCharacterDefID = false
			end,
			Params = "self, obj, sbstate",
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	NotificationText = T(207310540970, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	SelectObject = false,
	Text = T(615937474750, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler Text]] "Okay, okay! I can agree to work for <color TextEmphasis>10%</color> less."),
	Title = T(720078377972, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler Title]] "Contract offer"),
	UseObjectImage = true,
	group = "Trading",
	id = "JobOffer_Candidate_GenericHaggler",
	max_reply_id = 7,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-26\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(191325452750, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(102855348323, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 55) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(798336896431, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler Text]] "Yes, I want to hire you for half a year"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 55)
				end,
				param_bindings = false,
				time = 23040000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(426890178965, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(234014642464, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 90) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(658681566847, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler Text]] "Yes, for 1 year"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 90)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(409434006475, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		PrerequisiteText = T(666942986749, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler PrerequisiteText]] "0<image 'UI/Icons/Resources/res_money' 1100>"),
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj, sbstate) return UIPlayer:GetSuppliedResAmount("Money") >= GetPaymentModifiedByPct(sbstate.character_def.Payment, 160) end,
				Params = "self, obj, sbstate",
				param_bindings = false,
			}),
		},
		Text = T(379388099635, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler Text]] "Yes, for 2 years"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 160)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(615814957460, --[[ModItemStoryBit JobOffer_Candidate_GenericHaggler Text]] "No, your services are not needed"),
		param_bindings = false,
		unique_id = 7,
	}),
}),
PlaceObj('ModItemStoryBit', {
	ActivationEffects = {
		PlaceObj('PickCharacterDef', {
			param_bindings = false,
		}),
	},
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Disables = {
		"JobOffer_Activator",
	},
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "JobOffers",
			TimeMin = 0,
			param_bindings = false,
		}),
	},
	Enabled = true,
	FxAction = "UINotificationExpedition",
	NotificationText = T(670280036567, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Military NotificationText]] "Contract offer: <color TextEmphasis><character_def.FirstName></color>"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCharacterDef', {
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Sets = set( "IncreasePop" ),
	Text = T(573389724094, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Military Text]] "Hi there! I saw that you are looking for workers.\n\nMy name is <color TextEmphasis><character_def.FirstName> <character_def.LastName></color>. Long story short, I'm looking for a place to hide from the <color TextEmphasis>Terran Defense Fleet</color> for a couple of seasons. I will gladly work for you, no payment needed.\n\nI'm skilled in <color TextEmphasis><character_def.UIBestSkills></color>.\n\nLet me know if you're interested."),
	Title = T(947232295663, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Military Title]] "Contract offer"),
	UseObjectImage = true,
	group = "Trading",
	id = "JobOffer_Candidate_Fugitive_Military",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-06\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-09",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(670797911152, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Military CustomOutcomeText]] "<character_def.FirstName> joins and will collect <color TextEmphasis>Galacticoins</color>"),
		Text = T(183075067193, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Military Text]] "Yes, you can stay for half a year"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = return_0,
				param_bindings = false,
				time = 23040000,
			}),
		},
		Weight = 50,
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					MilitaryLookingFor = context.character_def.id
					return 0
				end,
				param_bindings = false,
				time = 23040000,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "WantedFugitiveDelay",
				param_bindings = false,
			}),
		},
		Enables = {
			"WantedFugitive_Military",
		},
		Weight = 50,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(363154925383, --[[ModItemStoryBit JobOffer_Candidate_Fugitive_Military Text]] "No thanks! This sounds like a potential problem"),
		param_bindings = false,
		unique_id = 2,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Scissorhands_Brute"
			end,
			ProgressMul = 40,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Scissorhands_Hatchling"] = true
				UnlockedInsectBosses["Scissorhands"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Scissorhands"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/ScissorhandsBrute.png",
	OneTime = false,
	Text = T(482791128393, --[[ModItemStoryBit AnimalAttack_Initial_Scissorhands_Brute_disabled Text]] "<color TextEmphasis>This isn't good... you know them scissorhands, well some are coming this way. Slight problem with that is, they appear to be double maybe even triple in size! We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Increased defense to Pacify, Pierce and Blunt attacks.\n- Sharp hands that can cut and pierce deeply.\n- Enrage multiple nearby insects.\n- Fast.\n\n<color red>Weaknesses:</color>\n- Intelligence (20% Chance to avoid traps)\n- Weak against Gas and Energy attacks."),
	Title = T(785287244192, --[[ModItemStoryBit AnimalAttack_Initial_Scissorhands_Brute_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Scissorhands_Brute_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/TayykJunior.png",
	OneTime = false,
	Text = T(550292995579, --[[ModItemStoryBit SettlerCandidatesTayykJuniorPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(756845415585, --[[ModItemStoryBit SettlerCandidatesTayykJuniorPX Title]] "Candidate Profile - Tayyk Junior"),
	group = "PROJECTX",
	id = "SettlerCandidatesTayykJuniorPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(434731571718, --[[ModItemStoryBit SettlerCandidatesTayykJuniorPX PrerequisiteText]] "Free"),
		Text = T(626429721263, --[[ModItemStoryBit SettlerCandidatesTayykJuniorPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TayykJr",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(110637690470, --[[ModItemStoryBit SettlerCandidatesTayykJuniorPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/TommyTucker.png",
	OneTime = false,
	Text = T(478007456093, --[[ModItemStoryBit ContractCandidatesTommyTPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(199033493344, --[[ModItemStoryBit ContractCandidatesTommyTPX Title]] "Candidate Profile - Tommy Tucker"),
	group = "PROJECTX",
	id = "ContractCandidatesTommyTPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 200000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 200000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(515915786397, --[[ModItemStoryBit ContractCandidatesTommyTPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TommyTucker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(669017999737, --[[ModItemStoryBit ContractCandidatesTommyTPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TommyTucker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 600000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 600000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(489367608721, --[[ModItemStoryBit ContractCandidatesTommyTPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TommyTucker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(589608073950, --[[ModItemStoryBit ContractCandidatesTommyTPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TommyTucker",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(962550256252, --[[ModItemStoryBit ContractCandidatesTommyTPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "CriminalCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/EonLouise.png",
	OneTime = false,
	Text = T(360240300779, --[[ModItemStoryBit ContractCandidatesEonLouisePX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(409399214562, --[[ModItemStoryBit ContractCandidatesEonLouisePX Title]] "Candidate Profile - Eon Louise"),
	group = "PROJECTX",
	id = "ContractCandidatesEonLouisePX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 150000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 150000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(744729523605, --[[ModItemStoryBit ContractCandidatesEonLouisePX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "EonLouise",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 300000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 300000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(866600078875, --[[ModItemStoryBit ContractCandidatesEonLouisePX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "EonLouise",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 450000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 450000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(972576829243, --[[ModItemStoryBit ContractCandidatesEonLouisePX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "EonLouise",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1050000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1050000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(400137681668, --[[ModItemStoryBit ContractCandidatesEonLouisePX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "EonLouise",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(593215845193, --[[ModItemStoryBit ContractCandidatesEonLouisePX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayBountyHQ.png",
	OneTime = false,
	Text = T(544602796974, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "<center>We have listed below the available candidates that wish to offer there skills for a price."),
	Title = T(987772090519, --[[ModItemStoryBit ContractCandidatesPageOnePX Title]] "Settler Candidates"),
	group = "PROJECTX",
	id = "ContractCandidatesPageOnePX",
	max_reply_id = 12,
	PlaceObj('StoryBitReply', {
		Text = T(487846196489, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Bruno Rainer'"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesBrunoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(255018297667, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Diana Voss'"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesDianaVossPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(752090148938, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Eon Louise'"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesEonLouisePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(624824542218, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Floki Lee'"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesFlokiLeePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(248004633838, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Khan Fredrick'"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesKhanFredPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(632606877701, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Lunaria Pasker'"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesLunariaPaskPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(340624518485, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Qura Dunn'"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesQuraDunnPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(999138722357, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "View Profile 'Kassandra Inkk'"),
		param_bindings = false,
		unique_id = 8,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesKassandraInkkPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(755259355937, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "Page 2"),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageTwoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(590318972405, --[[ModItemStoryBit ContractCandidatesPageOnePX Text]] "Go Back"),
		param_bindings = false,
		unique_id = 12,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "HireCandidateBoardPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Disables = {
		"JobOffer_Activator",
	},
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	OneTime = false,
	SelectObject = false,
	Text = T(605029830329, --[[ModItemStoryBit JobOffer_Candidate_None Text]] "None"),
	Title = T(902725405190, --[[ModItemStoryBit JobOffer_Candidate_None Title]] "None"),
	group = "Trading",
	id = "JobOffer_Candidate_None",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Bobby on 2023-Mar-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ExcavatorSupplyDrop.png",
	OneTime = false,
	SelectObject = false,
	Text = T(253274304380, --[[ModItemStoryBit ExcavatorSupplyCratePX Text]] "<center><color TextEmphasis>::Loading Supply Crate Database::\n::Excavator Supply Crate Contents::</color>\n\n<color red> 2000 Stone\n750 Ore\n500 Silicon</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(190145119708, --[[ModItemStoryBit ExcavatorSupplyCratePX Title]] "Excavator's Supply Crate"),
	group = "PROJECTX",
	id = "ExcavatorSupplyCratePX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		Text = T(925165833248, --[[ModItemStoryBit ExcavatorSupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropExcavator",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(890590559122, --[[ModItemStoryBit ExcavatorSupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/SupportSupplyDrop.png",
	OneTime = false,
	SelectObject = false,
	Text = T(785022452849, --[[ModItemStoryBit SupportSupplyCratePX Text]] "<center><color TextEmphasis>::Loading Supply Crate Database::\n::Support Supply Crate Contents::</color>\n\n<color red> 50 Bandages\n50 Antibiotics\n20 First Aid\n4 Harvest Tools\n2 Respirators\n2 Flares\n2 Survival Kits</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(906690467618, --[[ModItemStoryBit SupportSupplyCratePX Title]] "Support Supply Crate"),
	group = "PROJECTX",
	id = "SupportSupplyCratePX",
	max_reply_id = 4,
	PlaceObj('StoryBitReply', {
		Text = T(427455775616, --[[ModItemStoryBit SupportSupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropSupport",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(850025071518, --[[ModItemStoryBit SupportSupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/SupportSupplyDrop.png",
	OneTime = false,
	SelectObject = false,
	Text = T(271182961713, --[[ModItemStoryBit MedicalSupplyCratePX Text]] "<center><color TextEmphasis>::Loading Medical Crate Database::\n::Medical Supply Crate Contents::</color>\n\n<color red> 200 Bandages\n200 Antibiotics\n50 First Aid\n100 Emergency Rations</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(237762081408, --[[ModItemStoryBit MedicalSupplyCratePX Title]] "Support Supply Crate"),
	group = "PROJECTX",
	id = "MedicalSupplyCratePX",
	max_reply_id = 6,
	PlaceObj('StoryBitReply', {
		Text = T(246275138425, --[[ModItemStoryBit MedicalSupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropMedical",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(510499900566, --[[ModItemStoryBit MedicalSupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/OrlandoJunior.png",
	OneTime = false,
	Text = T(132868068173, --[[ModItemStoryBit SettlerCandidatesOrlandoJuniorPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(167728849824, --[[ModItemStoryBit SettlerCandidatesOrlandoJuniorPX Title]] "Candidate Profile - Orlando Junior"),
	group = "PROJECTX",
	id = "SettlerCandidatesOrlandoJuniorPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(533992314167, --[[ModItemStoryBit SettlerCandidatesOrlandoJuniorPX PrerequisiteText]] "Free"),
		Text = T(435372850381, --[[ModItemStoryBit SettlerCandidatesOrlandoJuniorPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "OrlandoJunior",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(511019434398, --[[ModItemStoryBit SettlerCandidatesOrlandoJuniorPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Glutch_Manhunting"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectBosses["Glutch_Manhunting"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Glutch_Manhunting"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/Glutch.png",
	OneTime = false,
	Text = T(767993667810, --[[ModItemStoryBit AnimalAttack_Initial_ManhuntingGlutch_disabled Text]] "<color TextEmphasis>Some usually passive Glutch's have been driven insane not far from here. We've been observing them for a few days now and they have been behaving in a aggressive manner. Our concern is that they're heading straight towards us. Perhaps our presence has enraged them or they have just been driven mad. Regardless if they continue heading this way we estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Gas/Poison attacks.\n- Radius of 5 Meter Poison Clouds.\n- High defense from poison/gas attacks.\n\n<color red>Weaknesses:</color>\n- Not a Intelligent Species. (0% Chance to avoid traps)\n- Blunt Attacks.\n- Piercing Attacks.\n- Energy Attacks.\n- Pacify Attacks."),
	Title = T(907003463986, --[[ModItemStoryBit AnimalAttack_Initial_ManhuntingGlutch_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_ManhuntingGlutch_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/LeonardoKexx.png",
	OneTime = false,
	Text = T(295430534298, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(629560905360, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Title]] "Candidate Profile - Leonardo Kexx"),
	group = "PROJECTX",
	id = "ContractCandidatesLeonardoKexxPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 200000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 200000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(406204792967, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LeonardoKexx",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(711807204345, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LeonardoKexx",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 600000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 600000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(706526670939, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LeonardoKexx",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(359111369060, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "LeonardoKexx",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(846600633694, --[[ModItemStoryBit ContractCandidatesLeonardoKexxPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "CriminalCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayMoneySupplyDropPX.png",
	OneTime = false,
	SelectObject = false,
	Text = T(254090946090, --[[ModItemStoryBit MoneySupplyCratePX Text]] "<center><color TextEmphasis>::Loading Supply Crate Database::\n::Money Supply Crate Contents::</color>\n\n<color red> 300,000 Galacticoins</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(451271680933, --[[ModItemStoryBit MoneySupplyCratePX Title]] "Money Supply Crate"),
	group = "PROJECTX",
	id = "MoneySupplyCratePX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		Text = T(273411253943, --[[ModItemStoryBit MoneySupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropMoney",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(494257855013, --[[ModItemStoryBit MoneySupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Pseudo",
	Disables = {
		"WantedFugitive_Military",
	},
	Effects = {
		PlaceObj('ExecuteCode', {
			param_bindings = false,
		}),
	},
	Enabled = true,
	FxAction = "UINotificationExpedition",
	Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
	NotificationText = T(537613615920, --[[ModItemStoryBit WantedFugitive_Military_Attack NotificationText]] "Incoming transmission"),
	OneTime = false,
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckExpression', {
					Expression = function (self, obj) return obj.id == MilitaryLookingFor end,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(880367262604, --[[ModItemStoryBit WantedFugitive_Military_Attack Text]] "You are lying! We just confirmed the presence of this citizen on your planet.\n\nSurrender them immediately, or we will be forced to take disciplinary actions."),
	Title = T(116842270272, --[[ModItemStoryBit WantedFugitive_Military_Attack Title]] "Incoming transmission"),
	group = "Trading",
	id = "WantedFugitive_Military_Attack",
	max_reply_id = 8,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(473061223646, --[[ModItemStoryBit WantedFugitive_Military_Attack CustomOutcomeText]] "<FirstName> leaves the planet"),
		OutcomeText = "custom",
		Text = T(162948298804, --[[ModItemStoryBit WantedFugitive_Military_Attack Text]] "Yes, we will send them to you immediately"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					obj:SetFarmerStatus("fired")
					MilitaryLookingFor = ""
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(399463100932, --[[ModItemStoryBit WantedFugitive_Military_Attack CustomOutcomeText]] "a pheromone bomb will immediately make nearby insects hostile"),
		OutcomeText = "custom",
		Text = T(612863564014, --[[ModItemStoryBit WantedFugitive_Military_Attack Text]] "We refuse"),
		param_bindings = false,
		unique_id = 8,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				ForcePopup = false,
				Id = "AnimalAttack_Controller",
				NoCooldown = true,
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					MilitaryLookingFor = ""
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/SarahGospal.png",
	OneTime = false,
	Text = T(969380042327, --[[ModItemStoryBit SettlerCandidatesSarahGospalPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(526094369616, --[[ModItemStoryBit SettlerCandidatesSarahGospalPX Title]] "Candidate Profile - Sarah Gospal"),
	group = "PROJECTX",
	id = "SettlerCandidatesSarahGospalPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(870095161899, --[[ModItemStoryBit SettlerCandidatesSarahGospalPX PrerequisiteText]] "Free"),
		Text = T(713506767812, --[[ModItemStoryBit SettlerCandidatesSarahGospalPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "SarahGospal",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(354340747679, --[[ModItemStoryBit SettlerCandidatesSarahGospalPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/ToddMasco.png",
	OneTime = false,
	Text = T(850263267662, --[[ModItemStoryBit ContractCandidatesToddMascoPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>150,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(856999071181, --[[ModItemStoryBit ContractCandidatesToddMascoPX Title]] "Candidate Profile - Todd Masco"),
	group = "PROJECTX",
	id = "ContractCandidatesToddMascoPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 150000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 150000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(213852118453, --[[ModItemStoryBit ContractCandidatesToddMascoPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "ToddMasco",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 300000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 300000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(966910932779, --[[ModItemStoryBit ContractCandidatesToddMascoPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "ToddMasco",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 450000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 450000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(764921435863, --[[ModItemStoryBit ContractCandidatesToddMascoPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "ToddMasco",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1050000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1050000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(892942087728, --[[ModItemStoryBit ContractCandidatesToddMascoPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "ToddMasco",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(447057667622, --[[ModItemStoryBit ContractCandidatesToddMascoPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageTwoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/B2V2.png",
	OneTime = false,
	Text = T(352233606317, --[[ModItemStoryBit DroidCandidatesB2V9PX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis droid is for sale at the price of <style red>700,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(617739672386, --[[ModItemStoryBit DroidCandidatesB2V9PX Title]] "Candidate Profile - B2-V9"),
	group = "PROJECTX",
	id = "DroidCandidatesB2V9PX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 700000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 700000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(985825970555, --[[ModItemStoryBit DroidCandidatesB2V9PX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "B2Droid",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
			PlaceObj('StoryBitActivate', {
				Id = "px_droid_intro",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(499350852313, --[[ModItemStoryBit DroidCandidatesB2V9PX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting_Mother"
			end,
			ProgressMul = 30,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Hatchling"
			end,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Shrieker_Manhunting_Hatchling"] = true
				UnlockedInsectBosses["Shrieker_Manhunting"] = true
				UnlockedInsectBosses["Shrieker_Manhunting_Mother"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Shrieker_Manhunting"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/ShriekerQueen.png",
	OneTime = false,
	Text = T(264991876079, --[[ModItemStoryBit AnimalAttack_Initial_Shriekers_Mother_disabled Text]] "<color TextEmphasis>One of our sensors have been triggered just East of the Colony. It appears to be a group of Shrieker's are moving nesting grounds, we had a very large spike on the sensor which could indicate the movement of the Queen. We definitely need to prepare some form of defense, lets hope they dont come this way. But we should still prepare as a few stragglers could wonder this way. If they do we estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Utilizes Ranged and Melee attacks.\n- Large defense to Piercing and Blunt attacks.\n- Can call for reinforcements from other nearby nests.\n\n<color red>Weaknesses:</color>\n- Not a Intelligent Species. (30% Chance to avoid traps)\n- Weak to Gas/Poison.\n- Weak to Pacify attacks.\n- Weak to Energy attacks."),
	Title = T(331925858115, --[[ModItemStoryBit AnimalAttack_Initial_Shriekers_Mother_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Shriekers_Mother_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayBountyHQ.png",
	OneTime = false,
	Text = T(145328410824, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "<center>We have listed below the available candidates that wish to offer there skills for a price."),
	Title = T(416152182542, --[[ModItemStoryBit ContractCandidatesPageTwoPX Title]] "Settler Candidates"),
	group = "PROJECTX",
	id = "ContractCandidatesPageTwoPX",
	max_reply_id = 13,
	PlaceObj('StoryBitReply', {
		Text = T(614892920002, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Rayy Pasker'"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesRayPaskPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(271573204570, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Rex Lennard'"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesRexLenPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(124938525289, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Syndra Rayuk'"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesSyndraRayukPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(925482153429, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Tanner Ozk'euun'"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesTannerOzkPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(183604024528, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Tarra Stones'"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesTarraStonesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(489737951063, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Todd Masco'"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesToddMascoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(640869143338, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Tzuk Unn'"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesTzukUnnPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(113129355579, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Zander Pogaa'"),
		param_bindings = false,
		unique_id = 8,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesZanderPogaaPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(798574181133, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "View Profile 'Xyra Lee'"),
		param_bindings = false,
		unique_id = 13,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesXyraLeePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(493679170984, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "Page 1"),
		param_bindings = false,
		unique_id = 11,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageOnePX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(516317068080, --[[ModItemStoryBit ContractCandidatesPageTwoPX Text]] "Go Back"),
		param_bindings = false,
		unique_id = 12,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "HireCandidateBoardPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Skarabei_Manhunting_Brute"
			end,
			ProgressMul = 30,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Skarabei_Manhunting"
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_AttackSwarm",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Skarabei_Manhunting_Explosive"
			end,
			ProgressMul = 30,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Skarabei_Manhunting"] = true
				UnlockedInsectBosses["Skarabei_Manhunting_Brute"] = true
				UnlockedInsectBosses["Skarabei_Manhunting_Explosive"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Skarabei_Manhunting"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/Scarabei.png",
	OneTime = false,
	Text = T(326051165137, --[[ModItemStoryBit AnimalAttack_Initial_Skarabei_Swarm_disabled Text]] "<color TextEmphasis>A crew member has returned with a scout report that a large group of Skarabei are moving to a new nesting ground. They appear to be much larger in size and quite spread out. From our studies of this specific species is that it has a tough exo-skeleton that can be difficult to penetrate. We best prepare our defenses just incase they start coming this way. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- 20-40% Resistance to all elements.\n- Swarming Insects.\n\n<color red>Weaknesses:</color>\n- Low Health.\n- Not Intelligent. (0% Chance to Avoid Traps)"),
	Title = T(761104717691, --[[ModItemStoryBit AnimalAttack_Initial_Skarabei_Swarm_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Skarabei_Swarm_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayDroidShop.png",
	OneTime = false,
	Text = T(860799053494, --[[ModItemStoryBit DroidCandidatesG8L49PX Text]] '<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nGen 8 Security drone designed for close combat to keep alien creatures at bay for colonist. Retrofitted to use in close weapons the designation "Lancer" was chosen. \n\nThis droid is for sale for <style red>500,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>'),
	Title = T(730127375486, --[[ModItemStoryBit DroidCandidatesG8L49PX Title]] "Candidate Profile - G8-L49"),
	group = "PROJECTX",
	id = "DroidCandidatesG8L49PX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 500000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 500000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(823342697102, --[[ModItemStoryBit DroidCandidatesG8L49PX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "G8-L49",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
			PlaceObj('StoryBitActivate', {
				Id = "px_droid_intro",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(479508618048, --[[ModItemStoryBit DroidCandidatesG8L49PX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayDroidShop.png",
	OneTime = false,
	Text = T(156473453819, --[[ModItemStoryBit DroidCandidatesPX Text]] "<center>Welcome to the Galactican Droid Market! Here you will find a luxury of slav- \n<color TextEmphasis>Hm!*</color TextEmphasis> I mean droids to help destro- \nI mean... serve you!\nLet's make those handling tasks a little easier.\n\nColony ID FRC012 eh?\nLast scans indicate you have enough parts to sustain a new droid.\nLucky you!\nPlease select what model Droid you want:\n"),
	Title = T(503387273316, --[[ModItemStoryBit DroidCandidatesPX Title]] "Droid Candidates"),
	group = "PROJECTX",
	id = "DroidCandidatesPX",
	max_reply_id = 19,
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(413000371743, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "B2Droid",
				param_bindings = false,
			}),
		},
		Text = T(335754252368, --[[ModItemStoryBit DroidCandidatesPX Text]] "B2-V9"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesB2V9PX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(943069042818, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "CodeX",
				param_bindings = false,
			}),
		},
		Text = T(541733005280, --[[ModItemStoryBit DroidCandidatesPX Text]] "Code-X"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesCodeX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(866583998506, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G8Helper",
				param_bindings = false,
			}),
		},
		Text = T(906103677576, --[[ModItemStoryBit DroidCandidatesPX Text]] "G8-Helper"),
		param_bindings = false,
		unique_id = 19,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG8Helper",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(384324913646, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G7-B003",
				param_bindings = false,
			}),
		},
		Text = T(632427196731, --[[ModItemStoryBit DroidCandidatesPX Text]] "G7-B003"),
		param_bindings = false,
		unique_id = 13,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B003",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(336634031552, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G7-B223",
				param_bindings = false,
			}),
		},
		Text = T(474907799094, --[[ModItemStoryBit DroidCandidatesPX Text]] "G7-B223"),
		param_bindings = false,
		unique_id = 14,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B223",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(994952290168, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G7-B9028",
				param_bindings = false,
			}),
		},
		Text = T(965720395976, --[[ModItemStoryBit DroidCandidatesPX Text]] "G7-B9028"),
		param_bindings = false,
		unique_id = 15,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B9028",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(159890727090, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G7-B97",
				param_bindings = false,
			}),
		},
		Text = T(403451392253, --[[ModItemStoryBit DroidCandidatesPX Text]] "G7-B97"),
		param_bindings = false,
		unique_id = 16,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B97",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(743150351339, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G8-L33",
				param_bindings = false,
			}),
		},
		Text = T(151362856266, --[[ModItemStoryBit DroidCandidatesPX Text]] "G8-L33"),
		param_bindings = false,
		unique_id = 17,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG8L33PX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = T(634719395491, --[[ModItemStoryBit DroidCandidatesPX PrerequisiteText]] "Droid"),
		Prerequisites = {
			PlaceObj('CheckCharacterDef', {
				DefId = "G8-L49",
				param_bindings = false,
			}),
		},
		Text = T(665794208481, --[[ModItemStoryBit DroidCandidatesPX Text]] "G8-L49"),
		param_bindings = false,
		unique_id = 18,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG8L49PX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(463516756267, --[[ModItemStoryBit DroidCandidatesPX Text]] "Go Back"),
		param_bindings = false,
		unique_id = 12,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "HireCandidateBoardPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/TannerOzk.png",
	OneTime = false,
	Text = T(518397847713, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to negotiate a deal for there services.\n\n<color TextEmphasis>Yearly Wages: </color><style red>200,000 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(229108674783, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Title]] "Candidate Profile - Tanner Ozk'euun"),
	group = "PROJECTX",
	id = "ContractCandidatesTannerOzkPX",
	max_reply_id = 5,
	PlaceObj('StoryBitReply', {
		Cost = 200000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 200000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(935188015749, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Text]] "1 Year Contract"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TannerOzk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 100)
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(854130282399, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Text]] "2 Year Contract"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TannerOzk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 200)
				end,
				param_bindings = false,
				time = 92160000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 600000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 600000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(309645206533, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Text]] "3 Year Contract"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TannerOzk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 300)
				end,
				param_bindings = false,
				time = 138240000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Cost = 1400000,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckResource', {
				Amount = 1400000000,
				Condition = ">=",
				Resource = "Money",
				ResourceGroup = "InfobarUsable",
				param_bindings = false,
			}),
		},
		Text = T(329219053236, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Text]] "Forever"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "TannerOzk",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				CalcPayment = function (self, context)
					return GetPaymentModifiedByPct(context.character_def.Payment, 700)
				end,
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(364414158146, --[[ModItemStoryBit ContractCandidatesTannerOzkPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "ContractCandidatesPageTwoPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/Swain.png",
	OneTime = false,
	Text = T(101829860838, --[[ModItemStoryBit SettlerCandidatesDrSwainPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(185259325235, --[[ModItemStoryBit SettlerCandidatesDrSwainPX Title]] "Candidate Profile - Doctor Swain"),
	group = "PROJECTX",
	id = "SettlerCandidatesDrSwainPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(957511448971, --[[ModItemStoryBit SettlerCandidatesDrSwainPX PrerequisiteText]] "Free"),
		Text = T(292454130871, --[[ModItemStoryBit SettlerCandidatesDrSwainPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "DrSwain",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(807415661024, --[[ModItemStoryBit SettlerCandidatesDrSwainPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Profiles/YannaFitch.png",
	OneTime = false,
	Text = T(257063704556, --[[ModItemStoryBit SettlerCandidatesYannaFitchPX Text]] "<center><color TextEmphasis>::Loading Candidates Profile::\n::Candidates Profile Loaded::</color>\n\nThis candidate is willing to offer there services under the circumstances of gaining full citizenship on the planet and within the colony.\n\n<color TextEmphasis>Wages: </color><style red>0 Galacticoins</style>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(156138228450, --[[ModItemStoryBit SettlerCandidatesYannaFitchPX Title]] "Candidate Profile - Yanna Fitch"),
	group = "PROJECTX",
	id = "SettlerCandidatesYannaFitchPX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(283524066732, --[[ModItemStoryBit SettlerCandidatesYannaFitchPX PrerequisiteText]] "Free"),
		Text = T(252023660146, --[[ModItemStoryBit SettlerCandidatesYannaFitchPX Text]] "Agree."),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('PickCharacterDef', {
				DefId = "YannaFitch",
				param_bindings = false,
			}),
			PlaceObj('PickUpHiredSurvivor', {
				param_bindings = false,
				time = 46080000000,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(889844164431, --[[ModItemStoryBit SettlerCandidatesYannaFitchPX Text]] "Decline"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SettlerCandidatesPX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Category = "Tick",
	FxAction = "UINotificationExpedition",
	Image = "UI/Messages/Expeditions/exp_unspecific_device_interface_2",
	InheritsObject = false,
	NotificationText = T(699922994562, --[[ModItemStoryBit WantedFugitive_TradeShips NotificationText]] "Incoming transmission"),
	PopupFxAction = "MessagePopup",
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "WantedFugitiveDelay_TradeShips",
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckExpression', {
					Expression = function (self, obj) return obj.id == ColoniesLookingFor end,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(501965313947, --[[ModItemStoryBit WantedFugitive_TradeShips Text]] "The Galactic Trade League has detected the presence of <color TextEmphasis><FirstName> <LastName></color> in your base. They are a wanted fugitive.\n\nWe insist that you deliver that person to us immediately. In case you refuse, we will notify the League to not trade with you."),
	Title = T(897727199501, --[[ModItemStoryBit WantedFugitive_TradeShips Title]] "Incoming transmission"),
	group = "PROJECTX",
	id = "WantedFugitive_TradeShips",
	max_reply_id = 6,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2022-Nov-18\nModified by Bobby on 2022-Nov-18\nModified by Ivan on 2022-Nov-28\nModified by Ivan on 2022-Nov-30\nModified by Ivan on 2022-Dec-02\nModified by Bobby on 2022-Dec-02\nModified by Ivan on 2022-Dec-02\nModified by Ivan on 2022-Dec-04\nModified by Ivan on 2022-Dec-07\nModified by Ivan on 2023-Jan-23\nModified by Ivan on 2023-Jan-24\nModified by Ivan on 2023-Jan-30\nModified by Ivan on 2023-Feb-01\nModified by Ivan on 2023-Feb-15\nModified by Bobby on 2023-Mar-07\nModified by Ivan on 2023-Mar-16",
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(229166871097, --[[ModItemStoryBit WantedFugitive_TradeShips CustomOutcomeText]] "<FirstName> leaves the planet"),
		OutcomeText = "custom",
		Text = T(814894826253, --[[ModItemStoryBit WantedFugitive_TradeShips Text]] "Of course"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					obj:SetFarmerStatus("fired")
					TradeShipsLookingFor = ""
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(828724744131, --[[ModItemStoryBit WantedFugitive_TradeShips CustomOutcomeText]] "1 year embargo"),
		OutcomeText = "custom",
		Text = T(805183561194, --[[ModItemStoryBit WantedFugitive_TradeShips Text]] "No"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SetCooldownEffect', {
				Cooldown = "EmbargoTradeShips",
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					TradeShipsLookingFor = ""
				end,
				param_bindings = false,
			}),
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					Msg("TradingShipEmbargo")
				end,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayContrabandSupplyDropPX.png",
	OneTime = false,
	SelectObject = false,
	Text = T(967660399147, --[[ModItemStoryBit ContrabandSupplyCratePX Text]] "<center><color TextEmphasis>::Loading Supply Crate Database::\n::Contraband Supply Crate Contents::</color>\n\n<color red> 10 Cyber Crystals\n4 Cyber Processors\n1 Cyber Core\n2 Alien Crystals\n1 Alien Processor\n1 Alien Core</color>\n\n<color TextEmphasis>::Input Choice::</color>"),
	Title = T(287926190047, --[[ModItemStoryBit ContrabandSupplyCratePX Title]] "Contraband Supply Crate"),
	group = "PROJECTX",
	id = "ContrabandSupplyCratePX",
	max_reply_id = 2,
	PlaceObj('StoryBitReply', {
		Text = T(211071714621, --[[ModItemStoryBit ContrabandSupplyCratePX Text]] "Confirm Order"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('SpawnResourceCrate', {
				ScavengeLootDef = "SupplyDropContraband",
				param_bindings = false,
			}),
			PlaceObj('SetCooldownEffect', {
				Cooldown = "OrbitalOffer",
				TimeMax = 19200000,
				TimeMin = 19200000,
				TimeScale = "days",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(238238019243, --[[ModItemStoryBit ContrabandSupplyCratePX Text]] "Decline Order"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "SupplyDrop",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Skarabei_Manhunting"
			end,
			ProgressMul = 40,
			SpawnDefId = "ProjectX_AttackSwarm",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				UnlockedInsectMinions["Skarabei_Manhunting"] = true
				UnlockedInsectBosses["Skarabei_Manhunting_Brute"] = true
				UnlockedInsectBosses["Skarabei_Manhunting_Explosive"] = true
				Msg("FirstAttackOfSpecies", AnimalDefs["Skarabei_Manhunting"])
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/Scarabei.png",
	OneTime = false,
	Text = T(204029422169, --[[ModItemStoryBit AnimalAttack_Initial_Skarabei_disabled Text]] "<color TextEmphasis>A crew member has returned with a scout report that a group of Skarabei are heading this direction. From our studies of this specific species is that it has a tough exo-skeleton that can be difficult to penetrate. We best prepare our defenses. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- 20-40% Resistance to all elements.\n- Swarming Insects.\n\n<color red>Weaknesses:</color>\n- Low Health.\n- Not Intelligent. (0% Chance to Avoid Traps)"),
	Title = T(232675824507, --[[ModItemStoryBit AnimalAttack_Initial_Skarabei_disabled Title]] "Scout Report"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Initial_Skarabei_disabled",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemTalkTopicDef', {
	Text = T(263202206707, --[[ModItemTalkTopicDef Traits_HackerInstructor HackerInstructor Text |gender-variants]] "Taught <other_social.FirstName> Hacking skill"),
	group = "Traits_HackerInstructor",
	id = "HackerInstructor",
}),
PlaceObj('ModItemTalkTopicDef', {
	Text = T(218194922324, --[[ModItemTalkTopicDef Traits_MedicInstructor MedicInstructor Text |gender-variants]] "Taught <other_social.FirstName> Healing skills"),
	group = "Traits_MedicInstructor",
	id = "MedicInstructor",
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_GalacticFortificationsTrapsPX",
	},
	Description = T(695791893782, --[[ModItemTech BlackMarketTraps Description]] "<color blue>Tier 1 Illegal Tech</color>\nSome benefactor offered to teach us how to make more... customized mines.\nTheir asking price is steep.... but it's a small price to pay for our lives...\n\nIntergalactic law does says deploying these are \"war crimes\".\nHopefully the authorities don't take too much notice......\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Cyro Freeze Mine\nLethality Mine\nSplinter Mine</color>"),
	DisplayName = T(920431827297, --[[ModItemTech BlackMarketTraps DisplayName]] "Black Market Traps"),
	Icon = "Trade/TrapExplosive5.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 50000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystalGenerator",
		}),
	},
	ResearchPoints = 85000,
	SortKey = 23,
	group = "ContrabandItems",
	id = "BlackMarketTraps",
	money_value = 1700000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Power",
	},
	Description = T(945737196192, --[[ModItemTech ImprovedSolarPanels Description]] "<color blue> Level 3 Research Required.</color>\nLearning from other colonies is fun!\nThe use of inefficient organic compounds and the nonoptimal transparency of the solar cells make the solar panels work at 50% efficiency. This could be easily redesigned.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Improved solar panel</color>: 2<image 'UI/Icons/Resources/res_scrap_electronics' 1100> 10<image 'UI/Icons/Resources/res_metal_ingot' 1100> 40<image 'UI/Icons/Resources/res_electricity' 1100>"),
	DisplayName = T(101373135245, --[[ModItemTech ImprovedSolarPanels DisplayName]] "Improved Solar Cells"),
	Icon = "General/ImprovedSolarCells.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "SolarPanels",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 72000,
	SortKey = 200,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "SolarPanels",
		}),
	},
	group = "Breakthroughs",
	id = "ImprovedSolarPanels",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Power",
		LockState = "hidden",
		PresetId = "SolarPanel_Metal",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(985222845486, --[[ModItemTech HotairBalloonOptimization Description]] "<color blue> Level 1 Research Required.</color>\nLearning from other colonies is fun! People are using the hot air balloons inefficiently. Let's sketch up instructions how the fuel burner should be used and stick them in each balloon. With proper instructions people will use half of the currently required fuel.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Halves the fuel consumed by Hot air balloons during expeditions</color>"),
	DisplayName = T(126063235538, --[[ModItemTech HotairBalloonOptimization DisplayName]] "Balloon Optimization"),
	Icon = "General/BalloonOptimization.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "LongDistanceTravel",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 1,
			},
		}),
	},
	MinSkillLevel = 1,
	OnTechResearched = function (self, player)
		for _, balloon in ipairs(player.labels.HotairBalloon) do
			balloon:DropExcessFuel()
			ObjModified(balloon)
		end
	end,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 204,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "LongDistanceTravel",
		}),
	},
	group = "Breakthroughs",
	id = "HotairBalloonOptimization",
	money_value = 250000000,
	PlaceObj('AttachEffectsToBuildings', {
		Effects = {
			PlaceObj('ModifyObject', {
				Id = "HotairBalloonOptimization",
				ModProperty = "fuel_amount",
				Mul = 500,
				ObjectClass = "HotairBalloon",
			}),
		},
		Id = "HotairBalloonOptimization",
		Label = "HotairBalloon",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(978648233133, --[[ModItemTech LaserBlastersImproved Description]] "<color blue> Level 4 Research Required.</color>\nLearning from other colonies is fun! It is easy to make a simple laser pistol more potent. The hard part is to stop it from falling apart after the release of its first shot.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Laser pistol 2.0</color>: 20<image 'UI/Icons/Resources/res_metal_ingot' 1100> 2<image 'UI/Icons/Resources/res_power_cell' 1100> 2<image 'UI/Icons/Resources/res_cpu_cores' 1100> -> 1<image 'UI/Icons/Resources/res_laser_blaster_improved' 1100>\n   * crafted on Soldering benches"),
	DisplayName = T(303896220709, --[[ModItemTech LaserBlastersImproved DisplayName]] "Improved Laser Pistols"),
	Icon = "General/ImprovedLaserPistols.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "LaserBlasters",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 4,
			},
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 500,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "LaserBlasters",
		}),
	},
	group = "Breakthroughs",
	id = "LaserBlastersImproved",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Weapons",
		LockState = "hidden",
		PresetId = "LaserBlaster_Improved",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(662418817034, --[[ModItemTech GalacticPower Description]] "<color blue>Tier 2 Official Trading</color>\nCarbon nanotubes combined with Galactican Structural engineering means less electricity drain, enhanced range and zero electronic faults. Not to mention a various range of color options.\n\nOur trade contacts have let us know the Galactican's are surprised and scared by how quickly we have flourished.\nTheir receipt requirements are getting exorbitant!\nTheir taxes now include our cadavers, one of our most precious resource!\nOur Biology research must continue, as we will soon be competing with the best minds in the empire.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Carbon Battery</color>\n   <color TextEmphasis>Stirling Generator</color>\n   <color TextEmphasis>Carbon Generator</color>\n   <color TextEmphasis>Carbon Solar Panel</color>\n   <color TextEmphasis>Galactic Turbines</color>\n   <color TextEmphasis>Galactic Wall Light (7 Colors)</color>\n   <color TextEmphasis>Galactic Ceiling Light (7 Colors)</color>\n   <color TextEmphasis>Galactic FloodLight (7 Colors)</color>\n   <color TextEmphasis>Galactic Tilted Floodlights (7 Colors)</color>"),
	DisplayName = T(974296329305, --[[ModItemTech GalacticPower DisplayName]] "Galactic Power"),
	Icon = "General/Production.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 90000,
		}),
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 100000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "ElectricBattery",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicElectricity",
		}),
		PlaceObj('CheckTech', {
			Tech = "GrapheneSolarPanels",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "DieselGenerators",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonWindTurbines",
		}),
		PlaceObj('CheckTech', {
			Tech = "WindTurbines",
		}),
		PlaceObj('CheckTech', {
			Tech = "SearchLights",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
	},
	ResearchPoints = 80000,
	SortKey = 4,
	group = "Trade",
	id = "GalacticPower",
	money_value = 300000000,
}),
PlaceObj('ModItemTech', {
	Description = T(489911192606, --[[ModItemTech VeggieLeatherArmors Description]] "<color blue> Level 2 Research Required.</color>\nUntempered veggie leather is not strong enough to be used for armor. We just need time to temper with it.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Veggie helmet</color>: 20<image 'UI/Icons/Resources/res_veggie_leather' 1100> -> 1<image 'UI/Icons/Resources/veggie_leather_helm' 1100>\n   <color TextEmphasis>Veggie vest</color>: 40<image 'UI/Icons/Resources/res_veggie_leather' 1100> -> 1<image 'UI/Icons/Resources/veggie_leather_armor' 1100>\n   <color TextEmphasis>Veggie leggings</color>: 30<image 'UI/Icons/Resources/res_veggie_leather' 1100> -> 1<image 'UI/Icons/Resources/veggie_leather_pants' 1100>\n   <color TextEmphasis>Veggie boots</color>: 20<image 'UI/Icons/Resources/res_veggie_leather' 1100> -> 1<image 'UI/Icons/Resources/veggie_leather_boots' 1100>\n   * crafted on Tailor benches"),
	DisplayName = T(103071709856, --[[ModItemTech VeggieLeatherArmors DisplayName]] "Veggie armor"),
	Icon = "General/VeggieArmor.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicTailoring",
		}),
		PlaceObj('CheckResourceUnlocked', {
			Resource = "VeggieLeather",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 2,
			},
		}),
	},
	MinSkillLevel = 2,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "FieldSkinbark",
		}),
	},
	ResearchPoints = 96000,
	SortKey = 1000,
	group = "Breakthroughs",
	id = "VeggieLeatherArmors",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Hat_VeggieLeather",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Jacket_VeggieLeather",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Pants_VeggieLeather",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Shoes_VeggieLeather",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(778212908985, --[[ModItemTech OreProspecting Description]] "<color blue> Level 2 Research Required.</color>\nLearning from other colonies is fun! There are many places that you can find ore. It just takes a trained eye to spot them.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Miners have increased chance to find Ore while breaking rocks.</color>"),
	DisplayName = T(724015870197, --[[ModItemTech OreProspecting DisplayName]] "Ore Prospecting"),
	Icon = "General/OreProspecting.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 2,
			},
		}),
	},
	MinSkillLevel = 2,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 1000,
	group = "Breakthroughs",
	id = "OreProspecting",
	money_value = 250000000,
	PlaceObj('AttachEffectsToLabel', {
		Effects = {
			PlaceObj('ModifyHuman', {
				Id = "OreProspecting",
				add = 10,
				prop = "RockProspectingChance",
			}),
		},
		Label = "Survivors",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(432991035293, --[[ModItemTech WillianAllen Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Special Tamer</color>\n\nRumors swirl of renowned tamers flocking to this planet ever since the intergalactic cruiser smashed itself against this planets atmosphere.\nGiant claw marks, acid burns, weird splashes of liquid on the walls give credence.\n\nWe wrote down the letters on a particularly beat up blast door we saw.\n"),
	DisplayName = T(638720388421, --[[ModItemTech WillianAllen DisplayName]] "Menagerie Access (WA)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	LockedText = "",
	MinSkillLevel = 1,
	ResearchPoints = 20000,
	SortKey = 9,
	group = "x_backgrounds",
	id = "WillianAllen",
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(237127653054, --[[ModItemTech HackingDevice Description]] '<color blue>Tier 2 Official Trading</color>\n"Officially" these are used in you lock yourself out of your own devices.\nWe find ourselves locked out of many places and devices that we consider "ours".\n\nWe don\'t want the Galacticans know how many of these we have.\nSo let\'s try and figure out how to make them ourselves.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n<color px_purple>Unlocks Research in the Illegal Trade Column!</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Hacking Device</color>\n   <color TextEmphasis>Illegal Trading Tech Tree</color>\n\n<center>* Crafted on Soldering benches in the criminal tab.'),
	DisplayName = T(704159452503, --[[ModItemTech HackingDevice DisplayName]] "Hacking Device"),
	Icon = "CriminalActivity/HackingTool.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "PowerCells",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 2,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
	},
	ResearchPoints = 480000,
	SortKey = 11,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Trade",
	id = "HackingDevice",
	money_value = 60000000,
}),
PlaceObj('ModItemTech', {
	Description = T(162542895699, --[[ModItemTech CyberWeaponry Description]] "<color blue>Tier 4 Illegal Trading</color>\nBy adding cyber technology to some of our weapons it will surely make our colony more secure. With these blueprints we could definitely come up with something spectacular for our crew members!\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n<color TextEmphasis>Cyber Plasma Rifle Recipe</color>\n<color TextEmphasis>Cyber Sniper Rifle Recipe</color>\n<color TextEmphasis>Cyber Laser Pike Recipe</color>\n\n* Crafted on the 'Soldering Bench' in the 'Craft Weapon' tab."),
	DisplayName = T(518842028773, --[[ModItemTech CyberWeaponry DisplayName]] "Cyber Weaponry"),
	Icon = "CriminalActivity/CyberWeaponsResearch.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 150000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "HackingDevice",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberReactor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 1004,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberWeaponry",
	money_value = 2500000000,
}),
PlaceObj('ModItemTech', {
	Description = T(383519807174, --[[ModItemTech BiologyTrade Description]] "<color blue>Special Research</color>\nAll our smugglers are getting request after request for alien cadavers.\nWhole, spliced, thrown in a box and left out in the sun? \nDoesn't matter, someone still wants it.\nIt is a delicate balance between selling for top dollar, and not selling to those who are also trying to learn the fauna's secrets.\nNo-matter who we smuggle these organs too, the Galactican Empire will not be pleased.\n\nThe 'Organ Market'' in the Dissectory will have some new trades available. \n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>''Organ Market'' recipes in the 'Hackers Terminal''.</color>"),
	DisplayName = T(804388610758, --[[ModItemTech BiologyTrade DisplayName]] "Black Market Organs"),
	Icon = "Biologist/BiologyTrade.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "LabDesk",
		}),
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Biology = 4,
				Intellectual = 5,
			},
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
	},
	ResearchPoints = 50000,
	SortKey = 11,
	group = "ContrabandItems",
	id = "BiologyTrade",
	money_value = 900000000,
}),
PlaceObj('ModItemTech', {
	Description = T(172779540961, --[[ModItemTech BiologyTrade_gal Description]] "<color px_purple>Special Research</color>\n\nBy sending resources, we show that we deserve to exist; but the rumors all point to Organs being the <TextEmphasis>REAL</TextEmphasis> reason for this us to be here. And the reason this planet even made it onto the Colonization Committee's list of planets.\n\nLet's send some Organs back \"home\" so the Empire stays happy. Although this may let their scientists unlock it's secrets before us! \nSo keep some for our \"personal\" use.\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Organ Market recipes in the Dissectory</color>"),
	DisplayName = T(132454340729, --[[ModItemTech BiologyTrade_gal DisplayName]] "Black Market Organs"),
	Icon = "Biologist/BiologyTrade.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Biology = 4,
				Intellectual = 5,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource_fast",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "LabDesk",
		}),
	},
	ResearchPoints = 50000,
	SortKey = 11,
	group = "ContrabandItems",
	id = "BiologyTrade_gal",
	money_value = 900000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(966026491637, --[[ModItemTech CyberSolarPanel Description]] "<color blue>Tier 2 Illegal Trading</color>\nPartially replacing the organic compounds of the solar cells with highly-conductive Graphene and Cyber can significantly increase the electric output and capacity of the solar panels.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Advanced Cyber Solar Panels</color>"),
	DisplayName = T(642013854483, --[[ModItemTech CyberSolarPanel DisplayName]] "Cyber Solar Panels"),
	Icon = "CriminalActivity/CyberSolarPanel.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 50000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 706,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "SolarPanels",
		}),
	},
	group = "ContrabandItems",
	id = "CyberSolarPanel",
	money_value = 1200000000,
}),
PlaceObj('ModItemTech', {
	Description = T(993792760268, --[[ModItemTech TradeFortifications Description]] "<color blue>Tier 2 Official Trading</color>\nWhat was once considered military grade defensive fortifications. These schematics may be old but I'm almost certain with a bit of research, a few trade schematics and some handy contacts in the market, we can create some better more advanced fortifications than what we already have.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Advanced Carbon Walls.\nAdvanced Carbon Gates.\nGalactic Laser Walls.\nGalactic Laser Gates.\nAdvanced Carbon Towers.\nAdvanced Carbon Fence.\nAdvanced Carbon Fence Gate.</color>"),
	DisplayName = T(495932561675, --[[ModItemTech TradeFortifications DisplayName]] "Galactic Fortifications"),
	Icon = "Trade/GalacticFortification.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 90000,
		}),
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 100000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonFortifications",
		}),
		PlaceObj('CheckTech', {
			Tech = "WoodenFortifications",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
	},
	ResearchPoints = 50000,
	SortKey = 5,
	group = "Trade",
	id = "TradeFortifications",
	money_value = 900000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_GalacticWirelessTurretsPX",
	},
	Description = T(506197022503, --[[ModItemTech WirelessGalacticTurret Description]] '<color blue>Tier 4 Official Trading</color>\nWireless Turrets designed by the Galacticans, functions with power cells, does not require a power connector and Advanced Galactic defensive equipment.\nThis is what every rich oligarch thinks of when they imagine a luscious fortified villa. Guaranteed to rid oneself of pesky rioters OR aggressive wildlife.\n\nThis should be the last "donation" to the Galactican\'s.\nTheir civilian archives have been fully reviewed, and we have requested all that they are willing to share.\nMaybe we should move on to learn things they don\'t want to share.... or even what they do not know....\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Wireless/Wired Incendiary Turret</color>\n   <color TextEmphasis>Wireless/Wired Laser Turret</color>\n   <color TextEmphasis>Wireless/Wired Blaster Turret</color>\n   <color TextEmphasis>Wireless/Wired Pacifier Turret</color>\n   <color TextEmphasis>Galactic Siren</color>\n   <color TextEmphasis>Galactic Lure Tower</color>'),
	DisplayName = T(332453697177, --[[ModItemTech WirelessGalacticTurret DisplayName]] "Galactic Defense"),
	Icon = "Trade/WirelessTurretsMissile.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 250000,
		}),
		PlaceObj('ResAmount', {
			'resource', "AICore",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 250000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 100000000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "ElectricTurrets",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 9,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticArmour",
		}),
	},
	ResearchPoints = 120000,
	SortKey = 8,
	group = "Trade",
	id = "WirelessGalacticTurret",
	money_value = 1000000000,
}),
PlaceObj('ModItemTech', {
	Description = T(188733151591, --[[ModItemTech AlienProcessor Description]] "<color blue>Tier 2 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 5, not Research!</color>\n\nWe can now provide near infinite power to our devices. \nThe only limiting factor now is how much compute power we can fit into a single device.\n\nThankfully, Nuedo seems to be an improved neuron-like cell.\nFusing them on top of our alien electronics should create Alien Processors!\n\nI'm sure fusing aggressive alien brain matter and placing it in our infrastructure and gear will not lead to ANY consequences. Afterall, we have no signs that individual Nuedo organs are sentient.\n\n<color TextEmphasis>Required to unlock next Top Secret Tier</color>\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Alien Processor Splicing @Dissectory</color>\n   <color TextEmphasis>Cyber-Based Alien Processor @Soldering Bench</color>"),
	DisplayName = T(252588152104, --[[ModItemTech AlienProcessor DisplayName]] "Alien Processor's"),
	Icon = "CriminalActivity/AlienProcessor.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "AlienElectronics",
			'amount', 2000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 30000,
		}),
	},
	MinSkillLevel = 9,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 80000,
	SortKey = 1008,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienProcessor",
	money_value = 85000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(181947477692, --[[ModItemTech RailgunSnipersImproved Description]] "<color blue> Level 6 Research Required.</color>\nLearning from other colonies is fun! The improved railgun sniper uses the same principle as its predecessor, but more potent targeting system and greater power supply provides a truly devastating effect.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Railgun sniper 2.0</color>: 20<image 'UI/Icons/Resources/res_carbon_nanotubes' 1100> 2<image 'UI/Icons/Resources/res_power_cell' 1100> 2<image 'UI/Icons/Resources/res_cpu_cores' 1100> -> 1<image 'UI/Icons/Resources/res_railgun_sniper_improved' 1100>\n   * crafted on Soldering benches"),
	DisplayName = T(145552462954, --[[ModItemTech RailgunSnipersImproved DisplayName]] "Improved Railgun Snipers"),
	Icon = "General/ImprovedRailSniper.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "RailgunSnipers",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 502,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "RailgunSnipers",
		}),
	},
	group = "Breakthroughs",
	id = "RailgunSnipersImproved",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Weapons",
		LockState = "hidden",
		PresetId = "RailgunSniper_Improved",
	}),
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(918830816336, --[[ModItemTech AlienCrystalGenerator Description]] "<color blue>Tier 4 Top Secret!</color>\n<color blue> Level 7 Biologist Required.</color>\nA generator powered by Alien Crystals, I mean... what could go wrong? This has never been attempted before, and I'm assuming there is a good reason why. \nBut I can imagine that such a majestic piece of technology would definitely power the entire planet for a long time, the only downside if of course... the expensive resources needed to even obtain Alien Crystals.\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Alien Crystal Generator</color>"),
	DisplayName = T(303766449821, --[[ModItemTech AlienCrystalGenerator DisplayName]] "Alien Crystal Generator"),
	Icon = "CriminalActivity/AlienCrystalGenerator.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "AlienCrystal",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 5000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckTech', {
			Tech = "PowerCells",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 2000000,
	SortKey = 1018,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienCrystalGenerator",
	money_value = 1000000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_TerminalsPX",
	},
	Description = T(736679379704, --[[ModItemTech BlackMarketWeaponry Description]] '<color blue>Tier 2 Illegal Trading</color>\nThere are militaries other than the Galactical Empire. Mostly enemies, but some allies.\nDo we dare deploy the weapons of "our" enemies?\nThe Galactican\'s wrath will be immense if we start building the infrastructure to build them. They would see this as a clear switching of allegiance.\n\nBut we can trade for them. \nIndividually, the weapons just look like illegally customized weapons to scanners.\nThe black market will let us smuggle the final products in.\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Cryo Freeze Rifle\nShock Rifle\nToxic Sniper Rifle\nPacifier Sniper Rifle</color>\n\n* \'BlackMarket Weaponry\' can only be accessed through the \'Trading Console\' in the \'Black Market\' tab and cannot be crafted.'),
	DisplayName = T(411169924868, --[[ModItemTech BlackMarketWeaponry DisplayName]] "BlackMarket Weaponry"),
	Icon = "Trade/BMWeaponsResearch.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 100000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 8,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingTerminal",
		}),
	},
	ResearchPoints = 300000,
	SortKey = 30,
	group = "ContrabandItems",
	id = "BlackMarketWeaponry",
	money_value = 1000000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(208316079081, --[[ModItemTech HayCloth Description]] "<color blue>Tier 1 Trading</color>\nLearning from other colonies is fun! Making a crude fabric out of hay is not an issue. Making a nice soft cloth that one could sleep on would require some research.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Cloth</color>: 10<image 'UI/Icons/Resources/res_hay' 1100> -> 20<image 'UI/Icons/Resources/res_cotton_cloth' 1100>\n   * crafted on Workbenches"),
	DisplayName = T(616426038056, --[[ModItemTech HayCloth DisplayName]] "Hay Cloth"),
	Icon = "General/HayCloth.png",
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "Hay",
		}),
	},
	LockState = "hidden",
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 50,
	group = "Breakthroughs",
	id = "HayCloth",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Workbench",
		LockState = "hidden",
		PresetId = "ClothFromHay",
	}),
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_TerminalsPX",
	},
	Description = T(426431421135, --[[ModItemTech HackingTerminal Description]] "<color blue>Tier 0 Illegal Trading</color>\nSlap a Hacking Device onto a trading hub. Dabble in a little cryptography.\nOnce done, official looking messages can be sent to places the Galacticans don't want us \"Civilians\" to know about.\n\nThis will let us start to build up knowledge on the Galacticans Military might, and how we can replicate it on planet.\nHopefully the Galactican's aren't paying attention.\nThey may not react nicely to learning we have military grade hardware.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Hacking Terminal</color>\n   <color TextEmphasis>Govt Military Secret Generation in Hacking Terminal</color>\n<style TextNegative>WARNING, a second working signal relay is needed to pursue illegal research.\nThis is because one will send messages that mask what the other one is sending.</style> "),
	DisplayName = T(749368458384, --[[ModItemTech HackingTerminal DisplayName]] "Hacking Terminal"),
	Icon = "CriminalActivity/HackingTerminal.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingDevice",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 4,
			},
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckOR', {
			Conditions = {
				PlaceObj('CheckTech', {
					Tech = "HackingDevice",
				}),
				PlaceObj('CheckResource', {
					Amount = 1000,
					Condition = ">=",
					Resource = "HackingDevice",
					ResourceGroup = "ElectronicComponents",
				}),
			},
		}),
	},
	ResearchPoints = 100000,
	SortKey = 1,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "HackingTerminal",
	money_value = 220000000,
	PlaceObj('SetLockedState', {
		Class = "Tech",
		Group = "ContrabandItems",
		LockState = "hidden",
		PresetId = "CyberCrystals_fake",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(729582502140, --[[ModItemTech FlokiLee Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Special Tamer</color>\n\nRumors swirl of renowned tamers flocking to this planet ever since the intergalactic cruiser smashed itself against this planets atmosphere.\nGiant claw marks, acid burns, weird splashes of liquid on the walls give credence.\n\nWe wrote down the letters on a particularly beat up blast door we saw.\n"),
	DisplayName = T(304386167766, --[[ModItemTech FlokiLee DisplayName]] "Menagerie Access (FL)"),
	Icon = "General/Filler.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 50000000,
		}),
	},
	LockState = "locked",
	LockedText = "",
	MinSkillLevel = 5,
	ResearchPoints = 192000,
	SortKey = 6,
	group = "x_backgrounds",
	id = "FlokiLee",
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_GalacticFortificationsTrapsPX",
	},
	Description = T(842747336221, --[[ModItemTech TradeTraps Description]] "<color blue>Tier 2 Official Trade</color>\nOne of the VERY few Military grade Colonists are allowed.\nDefensive traps. I guess that's the one thing the Galactican's don't need to worry about being used against them.\nAnd we are definitely lacking in trap quality right now. \nWith the schematics and some imagination certain we can come up with some interesting new creations to blow our enemies up with... ugh I meant -protect- our colony with...\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<color TextEmphasis>Required to unlock next Galactican Trade Tier</color>\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Pulse Energy Mine\nGas Mine\nPacifier Mine</color>"),
	DisplayName = T(547204919467, --[[ModItemTech TradeTraps DisplayName]] "Military Grade Traps"),
	Icon = "Trade/TrapExplosive.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 90000,
		}),
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 100000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "LandMines",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticPower",
		}),
		PlaceObj('CheckTech', {
			Tech = "TradeFortifications",
		}),
	},
	ResearchPoints = 50000,
	SortKey = 14,
	group = "Trade",
	id = "TradeTraps",
	money_value = 900000000,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(290238143218, --[[ModItemTech AlienWeaponry Description]] "<color blue>Tier 4 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 8, not Research!</color>\n\nRather than fight the wildlife with conventional weaponry, we should start to take inspiration from the wildlife!\nWe can even augment the flora's weapons with other organs!\n\nBitherm augmented Shrieker spikes!\nDeathfly's spitting of Glutch gas!\nOur own Scissorhand's blades, aided with Megdeb's defenses!\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Heated Spike Shooter</color>\n<color TextEmphasis>Poison Globe launcher Recipe</color>\n<color TextEmphasis>Sythe Blade Arms Recipe</color>\n\n* Crafted on the 'Soldering Bench' in the 'Craft Weapon' tab."),
	DisplayName = T(655950454274, --[[ModItemTech AlienWeaponry DisplayName]] "Alien Weaponry"),
	Icon = "CriminalActivity/AlienWeaponsResearch.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 80000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 80000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 40000,
		}),
	},
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienCore",
		}),
	},
	ResearchPoints = 300000,
	SortKey = 8789,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienWeaponry",
	money_value = 1000000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(478300650218, --[[ModItemTech CarbonSupply Description]] "Colonies are offering Carbon Nanotubes, but require an unknown call sign. Perhaps someone knows the response to send to receive this valuable resource? "),
	DisplayName = T(894297794070, --[[ModItemTech CarbonSupply DisplayName]] "Unique Trade Route (Carbon)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	ResearchPoints = 45000,
	SortKey = 30,
	group = "x_backgrounds",
	id = "CarbonSupply",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(542065518370, --[[ModItemTech ElectronicComponentsPrinting Description]] "<color blue> Level 8 Research Required.</color>\nLearning from other colonies is fun!\nWhy solder electronics manually when having an automated printer?\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Electronics</color> printing: 10<image 'UI/Icons/Resources/res_silicon' 1100> 10<image 'UI/Icons/Resources/res_metal_ingot' 1100> -> 1<image 'UI/Icons/Resources/res_scrap_electronics' 1100>\n   <color TextEmphasis>CPU Cores</color> printing: 25<image 'UI/Icons/Resources/res_silicon' 1100> 5<image 'UI/Icons/Resources/res_metal_ingot' 1100> -> 1<image 'UI/Icons/Resources/res_cpu_cores' 1100>\n   <color TextEmphasis>Power cells</color> printing: 30<image 'UI/Icons/Resources/res_energy_crystals' 1100> 2<image 'UI/Icons/Resources/res_scrap_electronics' 1100> -> 1<image 'UI/Icons/Resources/res_power_cell' 1100>\n   * printed by 3D Printers"),
	DisplayName = T(441707213794, --[[ModItemTech ElectronicComponentsPrinting DisplayName]] "Printed Components"),
	Icon = "General/PrintedComponents.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 8,
			},
		}),
	},
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 75,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
	},
	group = "Breakthroughs",
	id = "ElectronicComponentsPrinting",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Printer",
		LockState = "hidden",
		PresetId = "Electronics_Printer",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Printer",
		LockState = "hidden",
		PresetId = "CPUCore_Printer",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Printer",
		LockState = "hidden",
		PresetId = "PowerCell_Printer",
	}),
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Power",
	},
	Description = T(587599327609, --[[ModItemTech GrapheneSolarPanels Description]] "<color blue> Level 6 Research Required.</color>\nLearning from other colonies is fun!\nPartially replacing the organic compounds of the solar cells with highly-conductive Graphene can significantly increase the electric output of the solar panels. Placing the solar plate on a rotating frame increases the effect, too.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Graphene solar panel</color>: 3<image 'UI/Icons/Resources/res_scrap_electronics' 1100> 20<image 'UI/Icons/Resources/res_metal_ingot' 1100> 60<image 'UI/Icons/Resources/res_electricity' 1100>"),
	DisplayName = T(393866311147, --[[ModItemTech GrapheneSolarPanels DisplayName]] "Graphene Solar Cells"),
	Icon = "General/GrapheneSolarCells.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "SolarPanels",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 201,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "SolarPanels",
		}),
	},
	group = "Breakthroughs",
	id = "GrapheneSolarPanels",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Power",
		LockState = "hidden",
		PresetId = "SolarPanel_Graphene",
	}),
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(414371691244, --[[ModItemTech AlienElectronics Description]] "<color blue>Tier 1 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 4, not Research!</color>\n\nBitherm can dissipate energy.\nToco can move electrons faster than any known metal.\nConvincing them to work with our electronics metal could lead to a revolution in power!\n\n<color TextEmphasis>Required to unlock next Top Secret Tier</color>\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Alien Electronics @Soldering Bench</color>"),
	DisplayName = T(237066562788, --[[ModItemTech AlienElectronics DisplayName]] "Alien Electronics"),
	Icon = "CriminalActivity/AlienElectronics.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
		}),
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 3000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 3000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	ResearchPoints = 70000,
	SortKey = 1007,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienElectronics",
	money_value = 80000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(884039461917, --[[ModItemTech GalacticWeaponry Description]] "<color blue>Tier 3 Official Trading</color>\nThe Galactican's have finally relented in our requests for better weaponry!\nThis will let us get the best legal weaponry of the Galactican Empire, but the taxes for access are enormous.\nThe empire is clearly trying to make us reliant on these weapons, and disarm us while they are on-route to weaken us.\n\nGalactican Weapons are considered highly reliable and accurate, but are not the most damaging per hit.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Galactic Rifle\n	Galactic Pistol\n	Galactic Spear</color>\n\n* The 'Trade' tab can be found at the Trading Console below 'Supply'."),
	DisplayName = T(262701089244, --[[ModItemTech GalacticWeaponry DisplayName]] "Galactic Weaponry Trade Contacts"),
	Icon = "Trade/GalacticSpearResearch.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 160000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Ranged_PulseRifle",
			'amount', 20000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "TradeFortifications",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticPower",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 6,
	group = "Trade",
	id = "GalacticWeaponry",
	money_value = 600000000,
}),
PlaceObj('ModItemTech', {
	Description = T(933320733438, --[[ModItemTech GalacticResearchDesk Description]] "<color blue>Tier 0 Official Trading</color>\nI guess we could've expected the Galacticans to use the best technologically advanced equipment they can get. I'm almost certain we can get a schematic of one or two of them devices they use for researching from a contact, it would greatly help us speed along our research for new technology breakthroughs. \n\nThe Galactic Research Desk is fitted with advanced technology that aids our colony with increased speed of learning and acquiring new research.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Galactic Research Desk</color>"),
	DisplayName = T(133764200865, --[[ModItemTech GalacticResearchDesk DisplayName]] "Galactic Research Desk Schematic"),
	Icon = "Trade/GalacticResearchDesk.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 10000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedResearchDesk",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 12,
	group = "Trade",
	id = "GalacticResearchDesk",
	money_value = 250000000,
}),
PlaceObj('ModItemTech', {
	Description = T(445940082543, --[[ModItemTech CakeSupply Description]] "Colonies are offering Cakes! But require an unknown call sign. Perhaps someone knows the response to send to receive this valuable resource? "),
	DisplayName = T(626205620177, --[[ModItemTech CakeSupply DisplayName]] "Unique Trade Route (Cake)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	ResearchPoints = 45000,
	SortKey = 99999,
	group = "x_backgrounds",
	id = "CakeSupply",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(813108987410, --[[ModItemTech CyberLightningPole Description]] "<color blue>Tier 1 Illegal Trading</color>\nWith Cyber material the rods will become extra conductive, creating a larger area of coverage and potential output of electricity from the lightning strikes.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Cyber Lightning Rod Device</color>"),
	DisplayName = T(123969875663, --[[ModItemTech CyberLightningPole DisplayName]] "Cyber Lightning Rods"),
	Icon = "CriminalActivity/CyberLightningPole.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 15000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 4,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
	},
	ResearchPoints = 15000,
	SortKey = 5,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberLightningPole",
	money_value = 165000000,
}),
PlaceObj('ModItemTech', {
	Description = T(471452845576, --[[ModItemTech SleepTraining Description]] "<color blue> Level 2 Research Required.</color>\nThere are a number of well known practices to shorten one's sleep cycle. They must be adapted to alien environments, though.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Survivors need less sleep time to fully rest.</color>"),
	DisplayName = T(293205716641, --[[ModItemTech SleepTraining DisplayName]] "Sleep training"),
	Icon = "General/SleepTraining.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 2,
			},
		}),
	},
	MinSkillLevel = 2,
	ResearchPoints = 240000,
	SortKey = 1005,
	group = "Breakthroughs",
	id = "SleepTraining",
	money_value = 250000000,
	PlaceObj('AttachEffectsToLabel', {
		Effects = {
			PlaceObj('ModifyHuman', {
				Id = "SleepTraining",
				mul = 1250,
				prop = "RestPerDaySleeping",
			}),
		},
		Label = "Survivors",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(575153428554, --[[ModItemTech BrickSupply Description]] "Colonies are offering bricks. But require an unknown call sign. Perhaps someone knows the response to send to receive this valuable resource? "),
	DisplayName = T(225481863984, --[[ModItemTech BrickSupply DisplayName]] "Unique Trade Route (Bricks)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	ResearchPoints = 45000,
	SortKey = 99999,
	group = "x_backgrounds",
	id = "BrickSupply",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(633424408049, --[[ModItemTech PulseRifflesImproved Description]] "<color blue> Level 7 Research Required.</color>\nLearning from other colonies is fun! Refining of the recoil suppression mechanism of the basic pulse rifle allows for stronger blast waves of the updated design, given there are enough cells to power such a monster!\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Pulse rifle 2.0</color>: 20<image 'UI/Icons/Resources/res_metal_ingot' 1100> 4<image 'UI/Icons/Resources/res_power_cell' 1100> -> 1<image 'UI/Icons/Resources/res_pulse_riffle_improved' 1100>\n   * crafted on Soldering benches"),
	DisplayName = T(393998037256, --[[ModItemTech PulseRifflesImproved DisplayName]] "Improved Pulse Rifles"),
	Icon = "General/ImprovedPulseRifles.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "PulseRiffles",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 501,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "PulseRiffles",
		}),
	},
	group = "Breakthroughs",
	id = "PulseRifflesImproved",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Weapons",
		LockState = "hidden",
		PresetId = "PulseRifle_Improved",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(409249965127, --[[ModItemTech KassandraInk Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Special Tamer</color>\n\nRumors swirl of renowned tamers flocking to this planet ever since the intergalactic cruiser smashed itself against this planets atmosphere.\nGiant claw marks, acid burns, weird splashes of liquid on the walls give credence.\n\nWe wrote down the letters on a particularly beat up blast door we saw.\n"),
	DisplayName = T(729393848503, --[[ModItemTech KassandraInk DisplayName]] "Menagerie Access (KI)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	LockedText = "",
	MinSkillLevel = 5,
	ResearchPoints = 192000,
	SortKey = 7,
	group = "x_backgrounds",
	id = "KassandraInk",
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(275638509520, --[[ModItemTech AlienReactor Description]] "<color blue>Tier 2 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 4, not Research!</color>\n\nOur batteries are taking up too much room in our colony.\nNow that we are starting to explore Alien Technology, we will need to be more efficient.\n\nThe metal bars that swap electrons will remain the same.\nBut the trigger to dissipate or store can be swapped with Adricon.\nAnd the thing between the metal cores can be swapped with Bitherm.\n\nThis will let batteries quickly cool when needed, to be as efficient as possible. \n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Advanced Reactor Battery</color>"),
	DisplayName = T(545211550999, --[[ModItemTech AlienReactor DisplayName]] "Alien Battery"),
	Icon = "CriminalActivity/AdvCarbonBattery2.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 30000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 20000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "ElectricBattery",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 250000,
	SortKey = 1010,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienReactor",
	money_value = 200000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(899925221781, --[[ModItemTech MoneySupplyDrop Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>PX-003 Supply Variant</color>\n\nYou know.... the supply drops from PX-003 aren't offering what we need anymore.\nIf we get someone who knows the right people.... we could convince the station to send us the money it would cost to buy what they would give us.\nThen we could buy what we wanted in the first place!\n\n<style TechSubtitleBlue>Unlocks Supply Drop Variant</style>\n   <color TextEmphasis>Money Supply Drop</color>"),
	DisplayName = T(959360966492, --[[ModItemTech MoneySupplyDrop DisplayName]] "Money Supply Drop"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	group = "x_backgrounds",
	id = "MoneySupplyDrop",
	money_value = 0,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(801011730750, --[[ModItemTech ConcreteSupply Description]] "Colonies are offering concrete. But require an unknown call sign. Perhaps someone knows the response to send to receive this valuable resource? "),
	DisplayName = T(421618969323, --[[ModItemTech ConcreteSupply DisplayName]] "Unique Trade Route (Concrete)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	ResearchPoints = 45000,
	SortKey = 99999,
	group = "x_backgrounds",
	id = "ConcreteSupply",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_PowerPX",
	},
	Description = T(177739095002, --[[ModItemTech GalacticPrinter Description]] "<color blue>Tier 1 Official Trading</color>\nMost commonly found in Galactic Military Outposts, these devices are capable of producing many much required resources, materials and even edibles. The technology is very expensive and has been restricted for Galactic Authorities use only due to how limited the supply is. Takes less resources and time to create items than the standard printers and has a higher durability, however consumes a large amount of electricity to use.\n\nThe Galactic Fabricator transforms energy into <color TextEmphasis>materials, resources and food</color> at an increased rate and efficiency without the need for 3 different devices, this is a all in one.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Galactic Fabricator</color>\n   <color TextEmphasis>Required to unlock next Galactican Trade Tier</color>"),
	DisplayName = T(899537425131, --[[ModItemTech GalacticPrinter DisplayName]] "Galactic Fabricator Schematic"),
	Icon = "Trade/GalacticMaterialPrinter.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 340000000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckTech', {
			Tech = "ElectronicComponentsPrinting",
		}),
		PlaceObj('CheckTech', {
			Tech = "RawMeatPrinting",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 10,
			},
		}),
	},
	MinSkillLevel = 10,
	Prerequisites = {
		PlaceObj('CheckOR', {
			Conditions = {
				PlaceObj('CheckTech', {
					Tech = "xr_g0_building",
				}),
				PlaceObj('CheckTech', {
					Tech = "xr_g0_resource",
				}),
			},
		}),
	},
	ResearchPoints = 460000,
	SortKey = 8,
	group = "Trade",
	id = "GalacticPrinter",
	money_value = 3400000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Power",
	},
	Description = T(650450132980, --[[ModItemTech CarbonWindTurbines Description]] "<color blue> Level 5 Research Required.</color>\nLearning from other colonies is fun!\nCarbon is the ideal material for light, thin and durable propeller blades. Such blades would produce far more power from slower winds.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Carbon wind turbine</color>: 1<image 'UI/Icons/Resources/res_scrap_electronics' 1100> 25<image 'UI/Icons/Resources/res_carbon_nanotubes' 1100> 80<image 'UI/Icons/Resources/res_electricity' 1100>"),
	DisplayName = T(745099620127, --[[ModItemTech CarbonWindTurbines DisplayName]] "Carbon Wind Turbines"),
	Icon = "General/CarbonWindTurbines.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "WindTurbines",
		}),
		PlaceObj('CheckResourceUnlocked', {
			Resource = "CarbonNanotubes",
			ResourceGroup = "ConstructionMaterials",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 202,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "WindTurbines",
		}),
	},
	group = "Breakthroughs",
	id = "CarbonWindTurbines",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Power",
		LockState = "hidden",
		PresetId = "WindTurbine_Carbon",
	}),
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_StoragePX",
	},
	Description = T(313851909068, --[[ModItemTech BlueprintSafe Description]] "<color blue>Tier 1 Illegal Trading</color>\nA safe designed to keep blueprints inside safe from being stolen. \nIncludes military shielding technology that makes it impossible to scan the contents of. \nHas excessive storage space.\nIf the Galactican's scan any BP safes, they may (correctly) assume we are trying to keep secrets from them.\nSo if we make any of these, we need to make sure to fill it.\nGotta make sure the anger they feel at having things hidden from them is less than how mad they would be finding out how many secrets we actually have!\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Blueprint Safe</color>"),
	DisplayName = T(934509137016, --[[ModItemTech BlueprintSafe DisplayName]] "Blueprint Safe"),
	Icon = "CriminalActivity/BlueprintStorage.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 15000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "HackingDevice",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingTerminal",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
	},
	ResearchPoints = 60000,
	SortKey = 788,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "BlueprintSafe",
	money_value = 100000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(287364287904, --[[ModItemTech CyberCrystalGenerator Description]] "<color blue>Tier 4 Illegal Trading</color>\nElectricity has been the true engine behind the Human race, excelling them into a Galactic threat. New methods have always been created in ways to produce more efficient energy production. The Cyber Crystal Generator was one that was tested and worked, exceptionally well infact. However due to the Galactic Laws restricting the usage of Cyber Crystals due to the potential risk of Human extinction if handled incorrect the generator design was scrapped. However i'm certain it may still be in a backed up blueprint somewhere... perhaps we can try again and do it right this time.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Cyber Crystal Generator</color>"),
	DisplayName = T(648266101338, --[[ModItemTech CyberCrystalGenerator DisplayName]] "Cyber Crystal Generator"),
	Icon = "CriminalActivity/CyberCrystalGenerator.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "PowerCells",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 9,
			},
		}),
	},
	MinSkillLevel = 9,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberArmour",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberWeaponry",
		}),
	},
	ResearchPoints = 120000,
	SortKey = 999,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberCrystalGenerator",
	money_value = 3500000000,
}),
PlaceObj('ModItemTech', {
	Description = T(162270384026, --[[ModItemTech AdvancedWeaponry Description]] "<color blue> Level 0 Research Required.</color>\nNo matter how far the Human race has come, we will always go back to the first weaponry ever invented, the traditional bows, arrows and toxins. Humans have found hundreds of ways to modify these weapons and some are still used to this very date.\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Fire Bow Recipe</color>\n   <color TextEmphasis>Poison Bow Recipe</color>\n   <color TextEmphasis>Paralyzing Dart Gun Recipe</color>\n   <color TextEmphasis>Bleed Gun Recipe</color>\n\n<center>* Can be crafted in the workbench, in the weapons tab."),
	DisplayName = T(546362789846, --[[ModItemTech AdvancedWeaponry DisplayName]] "Early Weapon Variants"),
	Icon = "General/AdvWeaponry.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
	},
	ResearchPoints = 6000,
	SortKey = 5,
	group = "Defense",
	id = "AdvancedWeaponry",
	money_value = 40000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_TerminalsPX",
	},
	Description = T(761142220238, --[[ModItemTech xr_g0_building Description]] "<style TechSubtitleBlue>Trading Console</style>\n<color blue>Tier 0 Official Trading</color>\nThe start of our journey being an independent colony. \nWe can ask for resources from other colonies!\n\nBut until we boost our signal, coordinating and beaming the resources here will be very time consuming.\n\n<color px_purple>Required to unlock next Tier</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Trading Console\n	Ask Tab at the Trading Console</color>"),
	DisplayName = T(754236569421, --[[ModItemTech xr_g0_building DisplayName]] "Trading Console"),
	Icon = "CriminalActivity/HackingTerminal.png",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	comment = "Project X\nResearch - Galactic Tier 0 - Building",
	group = "Trade",
	id = "xr_g0_building",
	money_value = 300000000,
}),
PlaceObj('ModItemTech', {
	Description = T(691957348232, --[[ModItemTech BlackMarketAlienTech Description]] "<color blue>Tier 5 Illegal Trading</color>\nThere are whispers that other colonies have learned the planets secrets.\nCoincidentally, our Black Market Contacts are offering to get things that the Empire knows nothing about.\nAre these fake listings? Can we afford to miss out in case they aren't?\nWe need to coordinate and discuss terms of the trades, then our traders can purchase them and see.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>'Black Market' - Alien Tech Recipes in the Trading Console.</color>\n\n* The 'Black Market' tab can be found at the Trading Console below 'Trade'."),
	DisplayName = T(567989586699, --[[ModItemTech BlackMarketAlienTech DisplayName]] "Black Market - Alien Tech"),
	Icon = "CriminalActivity/AlienCore.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckTech', {
			Tech = "BlackMarketCyberTech",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	LockState = "hidden",
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystalFarm",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 120000,
	SortKey = 30,
	group = "Nano-Tech",
	id = "BlackMarketAlienTech",
	money_value = 400000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(416526238857, --[[ModItemTech CyberCrystalSupply Description]] "Some traders are offering things, but not naming what. They are just describing it in a cipher. We need to get the key from someone in the know!"),
	DisplayName = T(421083161127, --[[ModItemTech CyberCrystalSupply DisplayName]] "Unique Trade Route (??)"),
	Icon = "General/Filler.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	LockState = "locked",
	ResearchPoints = 45000,
	SortKey = 99999,
	group = "x_backgrounds",
	id = "CyberCrystalSupply",
	money_value = 45000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(606551816682, --[[ModItemTech BlackMarket Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Any Smuggler</color>\nWe have observed faint, and ciphered communications from less than official sources.\nNo known decoder parses these messages.\nThis must be the Black Market that the Galactican Empire is trying to root out!\nIf we make contact we can find a benefactor offering something we cannot get elsewhere.\n\nIt won't be cheap, as just by offering they risk everything.\nSo we must be prepared for steep prices.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>'Black Market Tab' at the 'Trading Console'.</color>\n   <color TextEmphasis>'Smuggler Trade Ship at the 'Communications Relay'.</color>\n\n* The 'Black Market' tab can be found at the hacking terminal."),
	DisplayName = T(304216749167, --[[ModItemTech BlackMarket DisplayName]] "Black Market Introductions"),
	Icon = "CriminalActivity/CriminalActivityLogo.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 5000,
		}),
	},
	LockState = "locked",
	LockedText = T(557950632878, --[[ModItemTech BlackMarket LockedText]] "We will need to hire someone who can decipher the incoming messages."),
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
	},
	ResearchPoints = 336000,
	SortKey = 1,
	group = "x_backgrounds",
	id = "BlackMarket",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(301848712296, --[[ModItemTech CyberArmour Description]] "<color blue>Tier 3 Illegal Trading</color>\nA revolutionary breakthrough that is absolutely illegal to own. Cyber armour is only seen equipped by the Galactican Militaries super soldiers. It is created by fusing Cyber Crystals and Carbon. Both of which are are under extremely limited access. This new matrial is very tough, highly durable, but is very unwieldy for our non-genetically augmented bodies. And there has been no focus on temperature regulation.... So wielding a full set will be difficult.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Cyber Helmet</color>\n   <color TextEmphasis>Cyber Chest</color>\n   <color TextEmphasis>Cyber Legs</color>\n   <color TextEmphasis>Cyber Boots</color>\n\n<center>* Crafted at the Tailor Bench."),
	DisplayName = T(483858138663, --[[ModItemTech CyberArmour DisplayName]] "Cyber Armour"),
	Icon = "CriminalActivity/CyberArmour.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 100000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonArmors",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberReactor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
	},
	ResearchPoints = 125000,
	SortKey = 30,
	group = "ContrabandItems",
	id = "CyberArmour",
	money_value = 3550000000,
}),
PlaceObj('ModItemTech', {
	Description = T(548385947202, --[[ModItemTech CyberOrganStorage Description]] "<color blue>Tier 3 Illegal Trading</color>\nWith enough knowledge of organs and cyber crystals, we could learn how to craft a smaller organ storage unit.\nWe will design it so it's small enough to fit indoors; and we suspect the organs hold a surprise for us.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Organ Compression PSU</color>"),
	DisplayName = T(698479406679, --[[ModItemTech CyberOrganStorage DisplayName]] "Organ Compression unit"),
	Icon = "Mod/ucCehPy/General/Storage1.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CyberCrystal",
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberReactor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
	},
	ResearchPoints = 125000,
	SortKey = 30,
	group = "ContrabandItems",
	id = "CyberOrganStorage",
	money_value = 3550000000,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(996177429970, --[[ModItemTech AlienArmour Description]] "<color blue>Tier 2 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 8, not Research!</color>\n\nWe can convince organs to grow over a frame of carbon nanotubes. What is to stop us from wrapping our carbon armors in a mix & match of organs, depending on what we want to be practically immune too!\n\nWe will do our best to limit immediate exposure of organs to our skin; but judging by how Zancer grows... it may just be a small trade off.\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Alien Helmet Variants</color>\n   <color TextEmphasis>Alien Chest Variants</color>\n   <color TextEmphasis>Alien Legs Variants</color>\n   <color TextEmphasis>Alien Boots Variants</color>\n\n<center>* Crafted at the Tailor Bench."),
	DisplayName = T(269367184678, --[[ModItemTech AlienArmour DisplayName]] "Alien Armour"),
	Icon = "CriminalActivity/AlienArmour.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "AlienCrystal",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Armor_Jacket_Carbon_Basic",
		}),
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 40000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonArmors",
		}),
	},
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 300000,
	SortKey = 1512,
	group = "Nano-Tech",
	id = "AlienArmour",
	money_value = 400000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(860266909013, --[[ModItemTech AlienSensor Description]] "<color blue>Tier 3 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 6, not Research!</color>\n\nNow I know what everyone is going to say, experimenting on this much Nuedo can lead to unknown consequences.\nI rebut that! There have been no ominous mental announcements to date! And even if one should occur, it should not stop progress!\n\nWe theorize that Nuedo fused with other organs and some broadcast equipment can enable communication with the wild, local fauna here!\n\nHow is this useful, you may ask! Well if true and fully explored, we could influence what species actually tries to attack us. If we try and pick only species that we are strong against... \n\n<color TextNegative>I suspect the network will notice our intrusion, so any buildings we bring up may cause an undue increase in aggression.</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Alien Motion Sensor</color>:"),
	DisplayName = T(201933639131, --[[ModItemTech AlienSensor DisplayName]] "Alien Signalling"),
	Icon = "CriminalActivity/AlienMotionSensor.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 30000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 15000,
		}),
	},
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienProcessor",
		}),
	},
	ResearchPoints = 60000,
	SortKey = 1506,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicElectricity",
		}),
	},
	group = "Nano-Tech",
	id = "AlienSensor",
	money_value = 70000000,
	tradable = false,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Power",
		LockState = "hidden",
		PresetId = "cyber_motion_sensor_temp",
	}),
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_StoragePX",
	},
	Description = T(542935324981, --[[ModItemTech GalacticSafe Description]] "<color blue>Tier 0 Official Trading</color>\nA safe place to keep all those galacticoins you've accumulated.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Galactic Safe</color>"),
	DisplayName = T(680755026485, --[[ModItemTech GalacticSafe DisplayName]] "Galactic Safe"),
	Icon = "General/GalacticSafe.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 11250000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "StorageSafes",
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
	},
	ResearchPoints = 15000,
	SortKey = 15,
	TradeDescription = T(536920680220, --[[ModItemTech GalacticSafe TradeDescription]] "Large Storage Containers"),
	group = "Trade",
	id = "GalacticSafe",
	money_value = 112500000,
}),
PlaceObj('ModItemTech', {
	Description = T(706791688494, --[[ModItemTech ElectrictBatteryOptimization Description]] "<color blue> Level 6 Research Required.</color>\nLearning from other colonies is fun!\nOur batteries are not working as efficient as they could. Some fine tuning and software engineering could double the amount of power stored inside.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Doubled capacity in all Batteries</color>"),
	DisplayName = T(477784306197, --[[ModItemTech ElectrictBatteryOptimization DisplayName]] "Battery Optimization"),
	Icon = "General/BatteryOptimization.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "ElectricBattery",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 203,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "ElectricBattery",
		}),
	},
	group = "Breakthroughs",
	id = "ElectrictBatteryOptimization",
	money_value = 250000000,
	PlaceObj('AttachEffectsToBuildings', {
		Effects = {
			PlaceObj('ModifyObject', {
				Id = "BatteryOptimizationStorage",
				ModProperty = "StorageCapacity",
				Mul = 2000,
				ObjectClass = "PowerBattery",
			}),
		},
		Id = "BatteryOptimizationStorage",
		Label = "PowerBattery",
	}),
	PlaceObj('AttachEffectsToBuildings', {
		Effects = {
			PlaceObj('ModifyObject', {
				Id = "BatteryOptimizationCharge",
				ModProperty = "MaxCharge",
				Mul = 2000,
				ObjectClass = "PowerBattery",
			}),
		},
		Id = "BatteryOptimizationCharge",
		Label = "PowerBattery",
	}),
	PlaceObj('AttachEffectsToBuildings', {
		Effects = {
			PlaceObj('ModifyObject', {
				Id = "BatteryOptimizationDischarge",
				ModProperty = "MaxDischarge",
				Mul = 2000,
				ObjectClass = "PowerBattery",
			}),
		},
		Id = "BatteryOptimizationDischarge",
		Label = "PowerBattery",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(596158516967, --[[ModItemTech xr_g0_resource Description]] "<color blue>Tier -1 Official Trading</color>\nRather than asking for resources, we can provide them to other colonies! \nThe Galactican Empire subsidizes these trades; so we will only be reimbursed with trade receipts showing we are a flourishing colony. \nThese receipts get us access to the greater Civilian Research Archives.\n\nIf only we where not reliant on PX-003's connection to see what trades are even available.\nTrading will be slow until we unlock direct communication.\n\n<color px_purple>Required to unlock next Tier</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>The ''Send\" Tab found at the ''Trading Console''.</color>"),
	DisplayName = T(964305971451, --[[ModItemTech xr_g0_resource DisplayName]] "Donating our Excess"),
	Icon = "Trade/GalacticSchematic.png",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	SortKey = 1,
	TradeDescription = T(998359640468, --[[ModItemTech xr_g0_resource TradeDescription]] "Selling Resources"),
	comment = "Project X\nResearch - Galactic Tier 0 - Resource",
	group = "Trade",
	id = "xr_g0_resource",
	money_value = 100000000,
}),
PlaceObj('ModItemTech', {
	Description = T(527892346984, --[[ModItemTech CyberCrystals Description]] '<color blue>Tier 0 Illegal Trading</color>\nOur researchers state that these are illegal for civilians. The "published" reason is due to the radioactive energy the crystals dispense. However in our experimentation.... it\'s less radioactive than an earth banana. \nIf we can just piece together the recipe from our govt intel, we too could create a synthetic version of the object that is more contained to be used on certain devices.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Synthetic Cyber Crystals</color>\n\n<center>* Can be crafted in the soldering bench, in the criminal tab.'),
	DisplayName = T(550176914077, --[[ModItemTech CyberCrystals DisplayName]] "Synthetic Cyber Crystals"),
	Icon = "CriminalActivity/CyberCrystal.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 5000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "PowerCells",
		}),
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "HackingTerminal",
		}),
	},
	ResearchPoints = 75000,
	SortKey = 1001,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberCrystals",
	money_value = 2000000000,
}),
PlaceObj('ModItemTech', {
	Description = T(705088906230, --[[ModItemTech CyberCrystals_fake Description]] '<color blue>Military Secrets</color>\n"Cyber" is the newest codework in the Galactican\'s Military.\nThis lines up with the blood red armor and weapons we saw on PX-003.\nThe Empire states that we are still a civilian colonizing force.\nSo we are not allowed <em>official</em> access.\n\nI wonder if we could learn some.... less than official ways to learn more?\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>???</color>'),
	DisplayName = T(856826432745, --[[ModItemTech CyberCrystals_fake DisplayName]] "Galactican Military Technology"),
	Icon = "CriminalActivity/CyberCrystal.png",
	LockState = "locked",
	MinSkillLevel = 5,
	ResearchPoints = 75000,
	SortKey = 1001,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberCrystals_fake",
	money_value = 2000000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(727213408668, --[[ModItemTech HaySausage Description]] "<color blue>Tier 1 Trading</color>\nLearning from other colonies is fun! With some culinary experimentation and involving chemistry, we could transform hay into an edible meal. We will use whatever vegetables we have to spice it up.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Hay sausages</color>: 8<image 'UI/Icons/Resources/res_hay' 1100> 2<image 'UI/Icons/Resources/res_vegetables' 1100> -> 2<image 'UI/Icons/Resources/res_hay_sausages' 1100>\n   * cooked on Campfires or Cook stoves"),
	DisplayName = T(438875625505, --[[ModItemTech HaySausage DisplayName]] "Hay Sausages"),
	Icon = "General/HaySausages.png",
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "Hay",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 55,
	group = "Breakthroughs",
	id = "HaySausage",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Food",
		LockState = "hidden",
		PresetId = "HaySausage",
	}),
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(596325461528, --[[ModItemTech CyberProcessor Description]] "<color blue>Tier 1 Illegal Trading</color>\nNow that we can make synthetic cyber crystals, we should start researching how to actually put them to good use. With cyber crystals we can make a processor unit which is capable of speeding up many of our devices.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Cyber Processor</color>\n\n<center>* Can be crafted in the soldering bench, in the criminal tab."),
	DisplayName = T(864308288898, --[[ModItemTech CyberProcessor DisplayName]] "Cyber Processor"),
	Icon = "CriminalActivity/CyberProcessor.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 15000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingTerminal",
		}),
	},
	ResearchPoints = 80000,
	SortKey = 1002,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberProcessor",
	money_value = 2300000000,
}),
PlaceObj('ModItemTech', {
	Description = T(125464801590, --[[ModItemTech VegetableSupply Description]] "Unlocks Vegetable Supply at the Trading Shuttle."),
	DisplayName = T(436614995881, --[[ModItemTech VegetableSupply DisplayName]] "Unique Trade Route (Vegetables)"),
	Icon = "General/Filler.png",
	LockState = "hidden",
	ResearchPoints = 3000000,
	SortKey = 99999,
	group = "x_backgrounds",
	id = "VegetableSupply",
	money_value = 45000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(361246570478, --[[ModItemTech EnergyCrystalSupply Description]] "Unlocks Energy Crystal Supply at the Trading Shuttle."),
	DisplayName = T(363238056352, --[[ModItemTech EnergyCrystalSupply DisplayName]] "Energy Crystal Supply"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 45000,
	SortKey = 99999,
	group = "x_backgrounds",
	id = "EnergyCrystalSupply",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(810572421476, --[[ModItemTech GalacticArmour Description]] "<color blue>Tier 3 Official Trading.</color>\nThe Galactican's are finally allowing us to trade for standard levy armor.\nIt is looking like we send about 1.5 the amount of carbon, leather, and electronics it takes to make it ourselves... but what choice do we have if the empire doesn't let us learn how to make it ourselves?\n\nThis armor is good at helping the wearer survive extreme weather conditions, and prevent status afflictions. But it is not the best at blocking or mitigating hits.\n\nIt's the best armor we can wield without hurting our rapport with the empire.... But Cyber armor absolutely would do better at preventing hits....\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Galactic Helmet</color>\n   <color TextEmphasis>Galactic Chest-Piece</color>\n   <color TextEmphasis>Galactic Legs</color>\n   <color TextEmphasis>Galactic Combat Boots</color>\n\n* Galactic Armour can only be obtained by trade at the 'Trading Console' in the 'Trade' tab once this has been researched."),
	DisplayName = T(419169790042, --[[ModItemTech GalacticArmour DisplayName]] "Galactic Armour Trade Contacts"),
	Icon = "Trade/GalacticArmourRsearch.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonArmors",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "LeatherArmors",
		}),
		PlaceObj('CheckTech', {
			Tech = "SyntheticArmors",
		}),
		PlaceObj('CheckTech', {
			Tech = "VeggieLeatherArmors",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticPower",
		}),
		PlaceObj('CheckTech', {
			Tech = "TradeFortifications",
		}),
	},
	ResearchPoints = 93000,
	SortKey = 7,
	TradeDescription = T(367954172276, --[[ModItemTech GalacticArmour TradeDescription]] "Large Storage Containers"),
	group = "Trade",
	id = "GalacticArmour",
	money_value = 400000000,
}),
PlaceObj('ModItemTech', {
	Description = T(826432631894, --[[ModItemTech ExcavatorSupplyDrop Description]] '<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>PX-003 Supply Variant</color>\n\nYou know, I did some digging on the other side of the planet.\nThat setup was more of a "You live in a 5x5 meter container, food and water coming through a tube.\nJUST AWFUL.\n\nThankfully that contract ended, and I\'m here able to do what I want.\nKinda funny that\'s still digging, but at least I get to keep more of what I dredged up.\nI will alert PX-003 to offer what I got to keep from the last contract to help us all out.\n\n<style TechSubtitleBlue>Unlocks Supply Drop Variant</style>\n   <color TextEmphasis>Excavator Supply Drop</color>'),
	DisplayName = T(613249467689, --[[ModItemTech ExcavatorSupplyDrop DisplayName]] "Excavator Supply Drop"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	SortKey = 10,
	group = "x_backgrounds",
	id = "ExcavatorSupplyDrop",
	money_value = 0,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(565851641846, --[[ModItemTech DENIED Description]] "The foundations of the feature have been added, however the feature is not yet complete and requires some fine tuning before it is implemented. "),
	DisplayName = T(375309846119, --[[ModItemTech DENIED DisplayName]] "Feature Not Yet Complete."),
	Icon = "General/Filler.png",
	LockState = "hidden",
	SortKey = 99999,
	group = "Default",
	id = "DENIED",
	money_value = 1000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Devices",
	},
	Description = T(692918486475, --[[ModItemTech LiquidFuelFromInsectMeat Description]] "<color blue> Level 0 Research Required.</color>\nLearning from other colonies is fun!\nThe rotting meat of the giant alien insects leaks terrible smell and highly flammable substances. We may use this to produce liquid fuel, by placing a lot of raw insect meat in a tightly closed fermentation barrel. Let's hope it doesn't blow up!\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Liquid fuel</color>: 50<image 'UI/Icons/Resources/res_raw_meatt_insect' 1100> -> 20<image 'UI/Icons/Resources/res_oil' 1100>\n   <color TextEmphasis>Wooden fermentation barrel</color>: 25<image 'UI/Icons/Resources/res_wood_trunk' 1100>\n   <color TextEmphasis>Scrap metal fermentation barrel</color>: 25<image 'UI/Icons/Resources/res_scrap_metal' 1100>"),
	DisplayName = T(101670263111, --[[ModItemTech LiquidFuelFromInsectMeat DisplayName]] "Fuel Fermentation"),
	Icon = "General/FuelFermentation.png",
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "RawMeatInsect",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 48000,
	SortKey = 110,
	group = "Breakthroughs",
	id = "LiquidFuelFromInsectMeat",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Devices",
		LockState = "hidden",
		PresetId = "FermentationBarrel",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Devices",
		LockState = "hidden",
		PresetId = "FermentationBarrel_Metal",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Default",
		LockState = "hidden",
		PresetId = "LiquidFuel_FromInsectMeat",
	}),
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(826371007587, --[[ModItemTech AlienSolarPanel Description]] "<color blue>Tier 2 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 4, not Research!</color>\n\nThe amount of energy we can capture from the sun has been largely limited by Glass's refractory efficiency.\nThink of it like a bucket with a few holes near the middle.\nWe can keep filling up the bucket, but we can only capture so much of the incoming water.\n\nMegdeb infused building material, combined with Bitherm's ability to absorb and dissipate 90%+ of incoming energy will remove that limiting factor.\n\nMeaning that as long as it is sunny, we can generate more energy with A LOT less space.\nWhich is turning out to be incredibly needed as this colony grows.\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Advanced Alien Solar Panels</color>"),
	DisplayName = T(901643272620, --[[ModItemTech AlienSolarPanel DisplayName]] "Alien Solar Panels"),
	Icon = "CriminalActivity/AlienSolarPanel.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 25000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 9,
			},
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 180000,
	SortKey = 1500,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "SolarPanels",
		}),
	},
	group = "Nano-Tech",
	id = "AlienSolarPanel",
	money_value = 400000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_StoragePX",
	},
	Description = T(964154233695, --[[ModItemTech GalacticStorage Description]] "<color blue>Tier 1 Official Trading</color>\nUnlocks the Galactic Storage containers which are much larger in size and capacity. Very useful for storing all those trading materials.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Galactic Craft Container</color>\n   <color TextEmphasis>Galactic Tech Container</color>\n   <color TextEmphasis>Galactic Construction Container</color>\n   <color TextEmphasis>Galactic Medicine Container</color>\n   <color TextEmphasis>Galactic Armory Locker</color>\n   <color TextEmphasis>Galactic Large Fridge</color>\n   <color TextEmphasis>Galactic Large Freezer</color>\n   <color TextEmphasis>Galactic Manure Box</color>"),
	DisplayName = T(110681310429, --[[ModItemTech GalacticStorage DisplayName]] "Galactic Storage Containers"),
	Icon = "General/LargeStorageAlien.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 11250000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Freezers",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "Refrigeration",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
	},
	ResearchPoints = 20000,
	SortKey = 16,
	TradeDescription = T(467895368335, --[[ModItemTech GalacticStorage TradeDescription]] "Large Storage Containers"),
	group = "Trade",
	id = "GalacticStorage",
	money_value = 112500000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Science",
	},
	Description = T(115909145621, --[[ModItemTech CyberCore Description]] "<color blue>Tier 1 Illegal Trading.</color>\nThese can be used to create Cyber devices. Cyber technology is far more advanced than Carbon. Capable of powering the entire colony for months on end, you can only imagine what it could do if used as a weapon.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Cyber Core Unit</color>\n\n<center>* Can be crafted on the soldering bench, in the criminal tab."),
	DisplayName = T(734346780038, --[[ModItemTech CyberCore DisplayName]] "Cyber Core Unit"),
	Icon = "CriminalActivity/CyberCore.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 15000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingTerminal",
		}),
	},
	ResearchPoints = 85000,
	SortKey = 1003,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberCore",
	money_value = 3000000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_StoragePX",
	},
	Description = T(457310952103, --[[ModItemTech LaboratoryFridge Description]] "<color blue>Tier 0 Galactic Trading</color>\nWe have heard whispers that alien biology on this planet is largely unexplored.\nLet's figure out a way to store the organs of what we kill.\nI'm sure if we just keep them cold enough, that should work!\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Laboratory Fridge</color>"),
	DisplayName = T(216187373567, --[[ModItemTech LaboratoryFridge DisplayName]] "Laboratory Fridge"),
	Icon = "Biologist/LabFridge.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Freezers",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
	},
	MinSkillLevel = 3,
	ResearchPoints = 20000,
	SortKey = 9,
	TradeDescription = T(758624834990, --[[ModItemTech LaboratoryFridge TradeDescription]] "Laboratory Fridge"),
	group = "Breakthroughs",
	id = "LaboratoryFridge",
	money_value = 10000000,
}),
PlaceObj('ModItemTech', {
	Description = T(737762205198, --[[ModItemTech BlackMarketCyberTech Description]] "<color blue>Tier 2 Illegal Trading</color>\nSome of the trades being offered make more sense now. They are offering cyber equipment! \nThey must have described it in their offer using military terminology and code names....\n\nLet's make contact and see what they want in return. Hopefully it isn't something that jeopardizes our safety.....\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>'Black Market' - Cyber Tech Recipes in the Hacking Terminal.</color>\n\n* The 'Black Market' tab can be found at the Trading Console."),
	DisplayName = T(387417601834, --[[ModItemTech BlackMarketCyberTech DisplayName]] "Black Market - Cyber Tech"),
	Icon = "CriminalActivity/CyberProcessor.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystalGenerator",
		}),
	},
	ResearchPoints = 120000,
	SortKey = 10,
	group = "ContrabandItems",
	id = "BlackMarketCyberTech",
	money_value = 2500000000,
}),
PlaceObj('ModItemTech', {
	Description = T(417341336872, --[[ModItemTech RawMeatPrinting Description]] "<color blue> Level 6 Research Required.</color>\nLearning from other colonies is fun!\nOne can easily print muscle tissues while using dense organic material. We just need liquid fuel and the proper printing elements.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Raw red meat</color> printing: 5<image 'UI/Icons/Resources/res_oil' 1100> -> 10<image 'UI/Icons/Resources/res_raw_meatt' 1100>\n   <color TextEmphasis>Raw poultry meat</color> printing: 3<image 'UI/Icons/Resources/res_oil' 1100> -> 10<image 'UI/Icons/Resources/res_raw_meatt_poultry' 1100>\n   * printed by 3D Printers"),
	DisplayName = T(467829381414, --[[ModItemTech RawMeatPrinting DisplayName]] "Meat Printing"),
	Icon = "General/MeatPrinting.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 70,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
	},
	group = "Breakthroughs",
	id = "RawMeatPrinting",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Default",
		LockState = "hidden",
		PresetId = "RawMeat_Printer",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Default",
		LockState = "hidden",
		PresetId = "RawMeatPoultry_Printer",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(660697884053, --[[ModItemTech CarbonArmors Description]] "<color blue> Level 3 Research Required.</color>\nCarbon nanotubes are extremely efficient at energy distribution. The most important property of armor is how efficient it is in distributing the energy from the point where it's hit to the entire surface of the armor, instead of it caving in.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Carbon helm</color>: 20<image 'UI/Icons/Resources/res_carbon_nanotubes' 1100> -> 1<image 'UI/Icons/Resources/carbon_helm' 1100>\n   <color TextEmphasis>Carbon vest</color>: 40<image 'UI/Icons/Resources/res_carbon_nanotubes' 1100> -> 1<image 'UI/Icons/Resources/carbon_armor' 1100>\n   <color TextEmphasis>Carbon leggings</color>: 30<image 'UI/Icons/Resources/res_carbon_nanotubes' 1100> -> 1<image 'UI/Icons/Resources/carbon_pants' 1100>\n   <color TextEmphasis>Carbon boots</color>: 20<image 'UI/Icons/Resources/res_carbon_nanotubes' 1100> -> 1<image 'UI/Icons/Resources/carbon_boots' 1100>\n   * crafted on Tailor benches"),
	DisplayName = T(719804398123, --[[ModItemTech CarbonArmors DisplayName]] "Carbon Armor"),
	Icon = "General/CarbonArmor.png",
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "CarbonNanotubes",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
	},
	MinSkillLevel = 3,
	ResearchPoints = 144000,
	SortKey = 1005,
	TradePrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "CarbonNanotubes",
		}),
	},
	group = "Breakthroughs",
	id = "CarbonArmors",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Hat_Carbon",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Jacket_Carbon",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Pants_Carbon",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Clothing",
		LockState = "hidden",
		PresetId = "Armor_Shoes_Carbon",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(413367313428, --[[ModItemTech AncientLanguage Description]] "<color blue> Level 10 Research Required.</color>\nWe have enough data from the crashed alien ship to study their language.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Enables reading of the ancient alien language and detection of other tachyon sources.</color>"),
	DisplayName = T(888924754866, --[[ModItemTech AncientLanguage DisplayName]] "Ancient language"),
	Icon = "General/AlienTexts.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 10,
			},
		}),
	},
	MinSkillLevel = 10,
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj) return false end,
		}),
	},
	ResearchPoints = 240000,
	SortKey = 5000,
	group = "Breakthroughs",
	id = "AncientLanguage",
	money_value = 500000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(734263684177, --[[ModItemTech AlienLightningPole Description]] "<color blue>Tier 3 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 4, not Research!</color>\n\nNow that we can place 3+ organs together in the same thing; we have more opportunities!\n\nWe hypothesise that Bitherm, Adricon, and Nuedo on the top of a carbon pole will literally pull the lightning from the sky to it!\n\nHypothetically Bitherm and Nuedo can adjust the electrons in the air.\nWe can rig a trigger via Adricon during lightning storms.\n\nThis means that these poles will force all electricity in the air to coalesce directly above a structure!\nLetting our conventional technology do the rest!\n\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Alien Lightning Rod Device</color>"),
	DisplayName = T(692597112571, --[[ModItemTech AlienLightningPole DisplayName]] "Alien Lightning Rods"),
	Icon = "CriminalActivity/AlienLightningPole.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 40000,
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienProcessor",
		}),
	},
	ResearchPoints = 35000,
	SortKey = 1502,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienLightningPole",
	money_value = 22000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_RanchingPX",
	},
	Description = T(766597123465, --[[ModItemTech GalacticAnimalTaming Description]] "<color blue>Tier 0 Official Trading</color>\nAn advanced version of the standard animal taming equipment, except these have been designed and specifically crafted by the Galactic Authorities to house alien wildlife.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Freezer Animal Feeder\nGalactic Small Bed\nGalactic Large Bed\nGalactic Drying Rack</color>"),
	DisplayName = T(116268810007, --[[ModItemTech GalacticAnimalTaming DisplayName]] "Galactic Animal Taming"),
	Icon = "General/GalacticAnimalBedLarge.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AnimalTaming",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
	},
	ResearchPoints = 30000,
	SortKey = 18,
	group = "Trade",
	id = "GalacticAnimalTaming",
	money_value = 300000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(251633122968, --[[ModItemTech CyberTurbines Description]] "<color blue>Tier 2 Illegal Trading</color>\nWho knew that using cyber technology with Carbon components would create such an efficient energy magnet. The Cyber Turbine will always generate electricity and has less chance of malfunctioning. Also has increased electricity efficiency.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Advanced Cyber Wind Turbines</color>\n"),
	DisplayName = T(371269495390, --[[ModItemTech CyberTurbines DisplayName]] "Cyber Wind Turbines"),
	Icon = "CriminalActivity/CyberTurbine.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 50000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingDevice",
		}),
		PlaceObj('CheckTech', {
			Tech = "CarbonWindTurbines",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberReactor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 1004,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberTurbines",
	money_value = 2300000000,
}),
PlaceObj('ModItemTech', {
	Description = T(982818572924, --[[ModItemTech GalacticFurnace Description]] "<color blue>Tier 1 Official Trading</color>\nI believe that ol'Furnace of yours needs a major facelift. About time we started working towards a better furnace. This will surely improve efficiency, capacity and output. Quicker smelt times with larger output, what could go wrong?\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\nThe Galactican's are loath to let us access this tier of research, and require receipts PLUS a \"donation\" showing our fealty.\n\n<color TextEmphasis>Required to unlock next Galactican Trade Tier</color>\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Galactic Furnace</color>"),
	DisplayName = T(563870577982, --[[ModItemTech GalacticFurnace DisplayName]] "Galactic Furnace"),
	Icon = "General/GalacticFurnace.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 30000000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "ElectricSmelting",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 30000,
	SortKey = 3,
	group = "Trade",
	id = "GalacticFurnace",
	money_value = 300000000,
}),
PlaceObj('ModItemTech', {
	Description = T(481124821295, --[[ModItemTech RepairBayPX Description]] "<color blue> Level 0 Research Required.</color>\nUsing nanite powered consoles and tools we can finally begin to repair some of those delicate materials we have. This repair bay paired with someone with the right expertise will surely be able to repair almost anything!\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Repair Bay</color>\n\n* Found in the terminals tab."),
	DisplayName = T(680690670951, --[[ModItemTech RepairBayPX DisplayName]] "Repair Bay"),
	Icon = "General/RepairBayPX.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
		PlaceObj('CheckTech', {
			Tech = "ElectricSmelting",
		}),
	},
	LockState = "hidden",
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 80000,
	group = "Nano-Tech",
	id = "RepairBayPX",
	money_value = 500000000,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(677507786260, --[[ModItemTech AlienCrystal Description]] "<color blue>Tier 1 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 4, not Research!</color>\nNow that we have learned about Zancer, let's collect a lot and try and force it to take a new form.\nWe most likely want it to closely resemble carbon's atomic structure.\nThis will make the subsequent integrations with known technology easier.\n\n<color TextEmphasis>Required to unlock next Top Secret Tier</color>\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Pure Zancer Cystal @Dissectory</color>\n   <color TextEmphasis>Cyber-Based Zancer Crystal @Soldering Bench</color>"),
	DisplayName = T(286529964306, --[[ModItemTech AlienCrystal DisplayName]] "Crystalized Zancer"),
	Icon = "CriminalActivity/AlienCrystal.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 40000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "EnergyCrystals",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	ResearchPoints = 24000,
	SortKey = 1006,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienCrystal",
	money_value = 80000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(686695855939, --[[ModItemTech AlienCrystal_fake Description]] "<style TechSubtitleBlue>Planetary Secrets</style>\n<color blue>??????? </color>\n\nRandom messages while we where on PX-003.\nWeird notes in our supplies from other colonies.\n\nAll spreading rumors...\nColonies madly raving that the planets conscious.\nUnknown black liquid forming lakes in the blink of an eye. \nCreatures moving and acting after they are dead.\n\nDisconcerting, but our colonies mandate is to research what secrets this planet hides.\nWe must look in the flora, fauna, and deep underground to investigate and report back!\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>???</color>"),
	DisplayName = T(129980337191, --[[ModItemTech AlienCrystal_fake DisplayName]] "Planetary Secrets"),
	Icon = "CriminalActivity/AlienCrystal.png",
	LockState = "locked",
	MinSkillLevel = 9,
	ResearchPoints = 120000,
	SortKey = 1006,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienCrystal_fake",
	money_value = 80000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberTurretsPX",
	},
	Description = T(199109405731, --[[ModItemTech CyberTurrets Description]] "<color blue>Tier 4 Illegal Trading</color>\nWeaponizing Cyber Crystals is probably a disaster coming our way, but mankind has always tried to control power and push boundaries, its how we still exist I suppose, so whats going to stop us now? Lets just say I wouldn't want to be on the receiving end of a cyber turret. Cyber turrets are completely wireless and do not require a power connection, they function from Cyber Crystals.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Wireless Cyber Blaster Turret</color>\n<color TextEmphasis>Wireless Cyber Pulse Turret</color>\n<color TextEmphasis>Wireless Cyber Missile Turret</color>\n<color TextEmphasis>Wired Cyber Blaster Turret</color>\n<color TextEmphasis>Wired Cyber Pulse Turret</color>\n<color TextEmphasis>Wired Cyber Missile Turret</color>"),
	DisplayName = T(884723952950, --[[ModItemTech CyberTurrets DisplayName]] "Wireless Cyber Turrets"),
	Icon = "CriminalActivity/CyberMissileTurret.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingDevice",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 7,
			},
		}),
	},
	MinSkillLevel = 7,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberArmour",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberWeaponry",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 1005,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberTurrets",
	money_value = 2500000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(276526327170, --[[ModItemTech CyberSensor Description]] "<color blue>Tier 2 Illegal Trading</color>\nWith an incredibly strong communication array, and with Cyber technology, we have detected a very low power signal that is being broadcast all over the planet.\nWe need time to attempt to study; but with enough time we should be able to track the patterns.\nAnd with enough towers, tell if there is a large group of creatures nearby.\nPresumably to attack us.\n\nIf we are especially daring (or foolish), we could even have these towers inject signals requesting an immediate attack!\n\n<color TextNegative>I suspect the network will notice our intrusion, so any buildings we bring up may cause an undue increase in aggression.</color>\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Cyber Motion Sensor</color>:"),
	DisplayName = T(194897734382, --[[ModItemTech CyberSensor DisplayName]] "Cyber Sensor"),
	Icon = "CriminalActivity/CyberMotionSensor.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 50000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "Sensors",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 4,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberReactor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
	},
	ResearchPoints = 30000,
	SortKey = 780,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicElectricity",
		}),
	},
	group = "ContrabandItems",
	id = "CyberSensor",
	money_value = 1700000000,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Power",
		LockState = "hidden",
		PresetId = "cyber_motion_sensor_temp",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(191232227782, --[[ModItemTech ZanderPogaa Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Special Tamer</color>\n\nRumors swirl of renowned tamers flocking to this planet ever since the intergalactic cruiser smashed itself against this planets atmosphere.\nGiant claw marks, acid burns, weird splashes of liquid on the walls give credence.\n\nWe wrote down the letters on a particularly beat up blast door we saw.\n"),
	DisplayName = T(512530704950, --[[ModItemTech ZanderPogaa DisplayName]] "Menagerie Access (ZP)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	LockedText = "",
	MinSkillLevel = 8,
	ResearchPoints = 400000,
	SortKey = 8,
	group = "x_backgrounds",
	id = "ZanderPogaa",
	tradable = false,
}),
PlaceObj('ModItemTech', {
	AllowedInScenarios = set( "ProjectXScenario", "Trading" ),
	Description = T(209870741492, --[[ModItemTech CounterfeitingPrint Description]] "<color blue> Level 10 Research Required.</color>\nLearning from other colonies is fun!\nPrint your own money and become rich. It's as easy as that!\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Galacticoins</color> printing: 20<image 'UI/Icons/Resources/res_synthetics' 1100> -> 5000<image 'UI/Icons/Resources/res_money' 1100>\n   * printed by 3D Printers"),
	DisplayName = T(662958455683, --[[ModItemTech CounterfeitingPrint DisplayName]] "Counterfeit Money"),
	Icon = "General/CounterfeitMoney.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 10,
			},
		}),
	},
	MinSkillLevel = 10,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 140000,
	SortKey = 76,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonPrinting",
		}),
	},
	group = "Breakthroughs",
	id = "CounterfeitingPrint",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Printer",
		LockState = "hidden",
		PresetId = "Money_Printer",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(164495214649, --[[ModItemTech ContrabandSupplyDrop Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>PX-003 Supply Variant</color>\n\nSome of us lived in other colonies.\nSome fled when the walls were breached, some got fired.\nSometimes the supply drops do not add up. \nRandom colony members would be wielding a weapon that the Galactical Empire would not approve of RIGHT AFTER a supply drop landed.\nSeems a little suspicious... Although if we found someone with these connections...\n\n<style TechSubtitleBlue>Unlocks Supply Drop Variant</style>\n   <color TextEmphasis>Smuggler Supply Drop</color>"),
	DisplayName = T(594100322145, --[[ModItemTech ContrabandSupplyDrop DisplayName]] "Contraband Supply Drop"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	SortKey = 11,
	group = "x_backgrounds",
	id = "ContrabandSupplyDrop",
	money_value = 0,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(321382991065, --[[ModItemTech AlienAirCon Description]] "<color blue>Tier 2 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 6, not Research!</color>\n\nTake a air con unit, replace the coolant with living bitherm, swap out the electronics with Nuedo.\nMaybe some Megdeb as a buffer, and voila!\nOur own alien air cooling device.\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Alien Air Conditioning Unit</color>:"),
	DisplayName = T(919484685001, --[[ModItemTech AlienAirCon DisplayName]] "Alien Air Conditioning"),
	Icon = "CriminalActivity/AlienAirCon.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 5000,
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienProcessor",
		}),
	},
	ResearchPoints = 100000,
	SortKey = 1504,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienAirCon",
	money_value = 50000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	BuildMenuCategoryHighlights = {
		"sub_AlienPowerPX",
	},
	Description = T(312099778121, --[[ModItemTech AlienTurbines Description]] "<color blue>Tier 2 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 4, not Research!</color>\nWe have a new lightweight material in Sintis.\nAnd Megdeb makes an incredibly solid building base.\n\nCombine the two, we can fully replace any wind turbine with an organ based building.\nThankfully the organs take on a metallic look when fused with metal.\nOtherwise these would... not be a pleasant thing to look at.\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Advanced Cyber Wind Turbines</color>\n"),
	DisplayName = T(690849441269, --[[ModItemTech AlienTurbines DisplayName]] "Alien Wind Turbines"),
	Icon = "CriminalActivity/AlienTurbine.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 20000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CarbonWindTurbines",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienElectronics",
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
		}),
	},
	ResearchPoints = 200000,
	SortKey = 1508,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienTurbines",
	money_value = 400000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_TerminalsPX",
	},
	Description = T(349777708407, --[[ModItemTech LabDesk Description]] "<color blue>Tier 0 Official Trade.</color>\nLearn how to build a interplanatarily licensed Dissectory!\nThis lets our Biologist perform uncontaminated laboratory experiments on the things we kill.\nThis should lead to a better understanding of the flora and fauna on this planet, hopefully letting us better tame this world.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Dissectory</color>"),
	DisplayName = T(654631606524, --[[ModItemTech LabDesk DisplayName]] "Dissectory"),
	Icon = "Biologist/LabDesk.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	MinSkillLevel = 3,
	ResearchPoints = 12000,
	SortKey = 10,
	group = "Trade",
	id = "LabDesk",
	money_value = 200000000,
}),
PlaceObj('ModItemTech', {
	Description = T(424001230686, --[[ModItemTech xr_g0_cheapEle Description]] "<color blue>Tier 0 Official Trading</color>\nIf our traders are skilled enough, we can now sell our resources to dedicated Galactican Factory Worlds. The Galactican Forge World standard require near 0 waste. Rather than make 1 power cell, we can ship some of the resources we would need, and have them make 3 and send us back one of them!\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>'Trade Tab' at the 'Trading Console'.</color>\n\n* The 'trade' tab can be found at the Trading Console below 'supply'."),
	DisplayName = T(574769691680, --[[ModItemTech xr_g0_cheapEle DisplayName]] "Cheaper Electronics"),
	Icon = "Trade/TradeLogo.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
	},
	ResearchPoints = 60000,
	SortKey = 19,
	comment = "Project X\nResearch - Galactic Tier 0 - cheap Electronics",
	group = "Trade",
	id = "xr_g0_cheapEle",
	money_value = 125000000,
}),
PlaceObj('ModItemTech', {
	Description = T(211376161360, --[[ModItemTech MatterGenerators Description]] "<color blue>Tier 1 Official Trading</color>\nLet's download the latest manual on how to produce Fabricator Matrixes. It's now 750 pages, but if someone willing to sit down and read the manual.....\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Fabricator matrix</color>: 50<image 'UI/Icons/Resources/res_metal_ingot' 1100> 5<image 'UI/Icons/Resources/res_cpu_cores' 1100> -> 1<image 'UI/Icons/Resources/res_matter_generator' 1100>\n   * crafted on Soldering benches"),
	DisplayName = T(745557787229, --[[ModItemTech MatterGenerators DisplayName]] "Fabricator Matrixes"),
	Icon = "Trade/MatterResearch.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 15000000,
		}),
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 10000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
		PlaceObj('CheckResourceUnlocked', {
			Resource = "Metal",
		}),
		PlaceObj('CheckResourceUnlocked', {
			Resource = "CPUCore",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 3,
			},
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticRefinery",
		}),
		PlaceObj('CheckTech', {
			Tech = "GalacticFurnace",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 100,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Trade",
	id = "MatterGenerators",
	money_value = 150000000,
	PlaceObj('RemoveLockedState', {
		Class = "Resource",
		Group = "ElectronicComponents",
		LockState = "hidden",
		PresetId = "MatterGenerator",
	}),
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Workbench",
		LockState = "hidden",
		PresetId = "MatterGenerator",
	}),
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_PowerPX",
	},
	Description = T(956342858145, --[[ModItemTech AdvHydroRacks Description]] "<color blue>Tier 2 Official Trading</color>\nWhat could be worse than farming the fields in pouring rain... mud everywhere and vermin destroying everything. I don't know... but I do know what could be better! How about we take advantage of the trade market and get ourselves some advanced hydroponic equipment. I think with a few materials we have laying around we could come up with something better than the box standard.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Advanced Hydroponic Racks</color>"),
	DisplayName = T(210227564977, --[[ModItemTech AdvHydroRacks DisplayName]] "Advanced Hydroponic Racks"),
	Icon = "Trade/HydroRack.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 90000,
		}),
		PlaceObj('ResAmount', {
			'resource', "OrganBox",
			'amount', 100000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 4,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "HydroponicRacks",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Label = "x_ansible",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "GalacticPower",
		}),
		PlaceObj('CheckTech', {
			Tech = "TradeFortifications",
		}),
	},
	ResearchPoints = 90000,
	SortKey = 13,
	group = "Trade",
	id = "AdvHydroRacks",
	money_value = 150000000,
}),
PlaceObj('ModItemTech', {
	Description = T(857152755582, --[[ModItemTech MissileLauncher Description]] "<color blue>Tier 3 Illegal Trading</color>\nWe have contacts to smuggle in weapons. We now know how to handle more explosive munitions. Let's find a benefactor willing to sell us Galactican Missile Launchers. It hsa a slow reload, but a huge explosion. Anything within the blast radius will be effected and blown away.\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Missile Launcher</color>\n\n* 'Missile Launcher' can only be accessed through the 'Trading Console' in the 'Black Market' tab and cannot be crafted."),
	DisplayName = T(360830951990, --[[ModItemTech MissileLauncher DisplayName]] "Missile Launcher"),
	Icon = "Trade/MissileLauncher.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 150000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarketWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberArmour",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BlackMarket",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "Flamethrowers",
		}),
	},
	ResearchPoints = 300000,
	SortKey = 31,
	group = "ContrabandItems",
	id = "MissileLauncher",
	money_value = 2500000000,
}),
PlaceObj('ModItemTech', {
	Description = T(181968808185, --[[ModItemTech CyberReactor Description]] "<color blue>Tier 2 Illegal Trading</color>\nAdvanced versions of the standard battery except it has more capacity to store energy by using cyber technology combined with carbon. The material is capable of withstanding much more than the standard battery. Aswell as assisting technological devices in generating electricity due to a built in reactor.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n<color TextEmphasis>Cyber Reactor Battery</color>"),
	DisplayName = T(174821001819, --[[ModItemTech CyberReactor DisplayName]] "Cyber Reactor Battery"),
	Icon = "CriminalActivity/CyberReactor.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 50000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
	},
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberProcessor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCore",
		}),
	},
	ResearchPoints = 150000,
	SortKey = 892,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberReactor",
	money_value = 2300000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_PlantsPX",
	},
	Description = T(406432847474, --[[ModItemTech CyberCrystalFarm Description]] "<color blue>Tier 4 Illegal Trading</color>\nWe have learned enough about Cyber to realize it is a plant! Or close enough we can conve them to grow in the soil here.\nThough it comes with more risk of course as its quite difficult to hide a Cyber Crystal Farm... I suppose.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n"),
	DisplayName = T(100726671877, --[[ModItemTech CyberCrystalFarm DisplayName]] "Cyber Crystal Farm"),
	Icon = "CriminalActivity/CyberCrystalFarm.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberArmour",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberWeaponry",
		}),
	},
	ResearchPoints = 480000,
	SortKey = 1,
	group = "ContrabandItems",
	id = "CyberCrystalFarm",
	money_value = 2650000000,
}),
PlaceObj('ModItemTech', {
	Description = T(820297232362, --[[ModItemTech ChitinSynthetics Description]] "<color blue>Tier 1 Trading</color>\nLearning from other colonies is fun! The insect shells are made of chitin which is a good alternative to synthetic fibers. The properties of this biobased material makes it an ideal candidate for the production of synthetic cloth.\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Synthetics (insect meat)</color>: 30<image 'UI/Icons/Resources/res_raw_meatt_insect' 1100> -> 10<image 'UI/Icons/Resources/res_synthetics' 1100>\n   * crafted on Workbenches"),
	DisplayName = T(244184898925, --[[ModItemTech ChitinSynthetics DisplayName]] "Chitin Synthetics"),
	Icon = "General/ChitinSynthetics.png",
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "RawMeatInsect",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 1,
			},
		}),
	},
	MinSkillLevel = 1,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 144000,
	SortKey = 50,
	group = "Breakthroughs",
	id = "ChitinSynthetics",
	money_value = 250000000,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Workbench",
		LockState = "hidden",
		PresetId = "SyntheticsFromInsectMeat",
	}),
}),
PlaceObj('ModItemTech', {
	Description = T(613991292635, --[[ModItemTech GalacticSupplyDrop Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>PX-003 Supply Variant</color>\n\nWith the Galactican Empire fully investing, they are always on the lookout for potential levies. All we need to do is get a Galactican Military official, and they can request levy miliatry uniforms for their newly hired subordinates. \n\n<style TechSubtitleBlue>Unlocks Supply Drop Variant</style>\n   <color TextEmphasis>Galactican Supply Drop</color>"),
	DisplayName = T(311635887684, --[[ModItemTech GalacticSupplyDrop DisplayName]] "Galactic Supply Drop"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	SortKey = 12,
	group = "x_backgrounds",
	id = "GalacticSupplyDrop",
	money_value = 0,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(158983768057, --[[ModItemTech SupportSupplyDrop Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>PX-003 Supply Variant</color>\n\nIndividually asking PX-003 for specific things isn't working.\nWe are always denied, but if we collectively group what we want... and have someone who has access to the janitor's closets.\nWe should be able to get that random stuff we want.\n\n<style TechSubtitleBlue>Unlocks Supply Drop Variant</style>\n   <color TextEmphasis>Misc Supply Drop</color>"),
	DisplayName = T(237824271187, --[[ModItemTech SupportSupplyDrop DisplayName]] "Misc Supply Drop"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	SortKey = 13,
	group = "x_backgrounds",
	id = "SupportSupplyDrop",
	money_value = 0,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(774255787503, --[[ModItemTech MedicalSupplyDrop Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>PX-003 Supply Variant</color>\nThere are at least 10 med-bays available on PX-003.\nThere must be someone who has the authority to request some of the medicine for us.....\n\n<style TechSubtitleBlue>Unlocks Supply Drop Variant</style>\n   <color TextEmphasis>Medicinal Supply Drop</color>"),
	DisplayName = T(588463497528, --[[ModItemTech MedicalSupplyDrop DisplayName]] "Medicinal Supply Drop"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 8000,
	SortKey = 14,
	group = "x_backgrounds",
	id = "MedicalSupplyDrop",
	money_value = 0,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_AlienTurretsPX",
	},
	Description = T(984950042150, --[[ModItemTech AlienPlasmaTurret Description]] "<color blue>Tier 4 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 10, not Research!</color>\n\nAlright, we have all the knowledge needed to make extremely durable turrets.\nMegdeb as the foundation, Bitherm heated Sintis.\n\nThis will need more maintenance than most alien tier buildings, as we will be using organs to fire the actual projectiles.\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Alien Plasma Turret</color>"),
	DisplayName = T(534773102336, --[[ModItemTech AlienPlasmaTurret DisplayName]] "Alien Plasma Turret"),
	Icon = "CriminalActivity/AlienPlasmaTurret.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 80000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 60000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 40000,
		}),
	},
	MinSkillLevel = 10,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienCore",
		}),
	},
	ResearchPoints = 500000,
	SortKey = 1011,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienPlasmaTurret",
	money_value = 1000000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(621585211702, --[[ModItemTech AlienCore Description]] '<color blue>Tier 3 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 6, not Research!</color>\n\nThis "core" is as close to a non-human brain as possible. Condensing all organs into one small frame should enable incredibly complex buildings and technology!\nThis may be the first time something like this is ever created!\n\nOrgans don\'t like existing next to each other though.\nSo our focus will be on tricking each organs immune system from fighting each other.\n\n<color TextEmphasis>Required to unlock next Top Secret Tier</color>\n<style TechSubtitleBlue>Unlocks:</style>\n<color TextEmphasis>Alien Core Recipe</color>\n<center>* Crafted on Soldering benches in the criminal tab.'),
	DisplayName = T(962691312526, --[[ModItemTech AlienCore DisplayName]] "Alien Core"),
	Icon = "CriminalActivity/AlienCore.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 5000,
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienProcessor",
		}),
	},
	ResearchPoints = 300000,
	SortKey = 1009,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "Nano-Tech",
	id = "AlienCore",
	money_value = 200000000,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_CyberPowerPX",
	},
	Description = T(528275630239, --[[ModItemTech CyberAirCon Description]] "<color blue>Tier 2 Illegal Trading</color>\nWith a few blueprints and Cyber materials we could probably tweak our air conditioning units to have a better a larger radius of temperature output covering larger areas and stronger more efficient temperature control strength.\n\n<color px_purple>Requires 2 Signal Relays Working to Encrypt and Hide our Research</color>\n\n<style TechSubtitleBlue>Unlocked:</style>\n   <color TextEmphasis>Cyber Air Conditioning Unit</color>:"),
	DisplayName = T(163519594714, --[[ModItemTech CyberAirCon DisplayName]] "Cyber Air Conditioning"),
	Icon = "CriminalActivity/CyberAirCon.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Blueprint",
			'amount', 50000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberCrystals",
		}),
		PlaceObj('CheckTech', {
			Tech = "HackingTerminal",
		}),
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberReactor",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberSolarPanel",
		}),
	},
	ResearchPoints = 50000,
	SortKey = 5,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "CyberAirCon",
	money_value = 1200000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"sub_PowerPX",
	},
	Description = T(128807671389, --[[ModItemTech GalacticRefinery Description]] "<color blue>Tier 1 Official Trading</color>\nRefine certain resources into valuable materials.\n\nThe Galactican's are loath to let us access this tier of research, and require receipts PLUS a \"donation\" showing our fealty.\n\n<color px_purple>Required to unlock next Tier</color>\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Galactic Refinery</color>"),
	DisplayName = T(138927511973, --[[ModItemTech GalacticRefinery DisplayName]] "Galactic Refinery"),
	Icon = "Trade/FuelRefinery.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Money",
			'amount', 5000000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Distillation",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 30000,
	SortKey = 2,
	group = "Trade",
	id = "GalacticRefinery",
	money_value = 50000000,
}),
PlaceObj('ModItemTech', {
	Description = T(454793625591, --[[ModItemTech MechCorePrint Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Special Craft</color>\n\nSecrets swirl that the military has factories filled with printers. Spitting out mech core after mech core.\nThere has got to be a way to use the Galactican Fabricators to print them.... but who would know this?"),
	DisplayName = T(476215476954, --[[ModItemTech MechCorePrint DisplayName]] "Mech Core Printing"),
	Icon = "General/Filler.png",
	LockState = "locked",
	MinSkillLevel = 2,
	ResearchPoints = 45000,
	group = "x_backgrounds",
	id = "MechCorePrint",
	money_value = 3875820019684211712,
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(327698071762, --[[ModItemTech ChipDevice Description]] "<color blue>Tier 3 Illegal Trading</color>\nOne very common sentence for criminals is surgically implanting a control chip in the persons neck. These chips can stop anything the authorities want (ability to walk, talk, etc...). It also acts as a remote kill switch! \nIf we want, we can learn how to safely these chips from the persons neck without alerting the galactic authorities. Use with caution.\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Chip Extraction Device</color>\n\n<center>* Crafted on Soldering benches in the criminal tab."),
	DisplayName = T(183325944155, --[[ModItemTech ChipDevice DisplayName]] "Chip Extraction Device"),
	Icon = "CriminalActivity/ChipReplacement.png",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
		PlaceObj('CheckTech', {
			Tech = "CPUCores",
		}),
		PlaceObj('CheckTech', {
			Tech = "PowerCells",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberArmour",
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberWeaponry",
		}),
	},
	ResearchPoints = 40000,
	SortKey = 909,
	TradePrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	group = "ContrabandItems",
	id = "ChipDevice",
	money_value = 65000000,
}),
PlaceObj('ModItemTech', {
	Description = T(307625613999, --[[ModItemTech LunariaPasker Description]] "<style TechSubtitleBlue>Colonist Triggered Benefit</style>\n<color blue>Special Tamer</color>\n\nRumors swirl of renowned tamers flocking to this planet ever since the intergalactic cruiser smashed itself against this planets atmosphere.\nGiant claw marks, acid burns, weird splashes of liquid on the walls give credence.\n\nWe wrote down the letters on a particularly beat up blast door we saw.\n"),
	DisplayName = T(815157106094, --[[ModItemTech LunariaPasker DisplayName]] "Menagerie Access (LP)"),
	Icon = "General/Filler.png",
	LockState = "locked",
	LockedText = "",
	MinSkillLevel = 5,
	ResearchPoints = 192000,
	SortKey = 5,
	group = "x_backgrounds",
	id = "LunariaPasker",
	tradable = false,
}),
PlaceObj('ModItemTech', {
	Description = T(654690683697, --[[ModItemTech xr_g0_tools Description]] "<color blue>Tier 0 Official Trading</color>\nThis desk has a built in interstellar communicator and an AI assistant. This quickens the speed we can request, correlate, and condense information, and provides a rough estimate on how to make it on planet with what resources we have.\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Unlocks:</style>\n   <color TextEmphasis>Biologist Precision Tool</color>\n   <color TextEmphasis>Cyber Pendant</color>\n   <color TextEmphasis>Info Tablet</color>\n   <color TextEmphasis>Tactical Mask</color>\n   <color TextEmphasis>Medical Kit</color>\n   <color TextEmphasis>Scope</color>\n   <color TextEmphasis>Builders Toolbox</color>\n   <color TextEmphasis>Light Backpack</color>\n\n<center>* Crafted on Workbenches."),
	DisplayName = T(357156541375, --[[ModItemTech xr_g0_tools DisplayName]] "Galactic Tools"),
	Icon = "General/GalacticTools.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "TradingSchematic",
			'amount', 10000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 4,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
		PlaceObj('CheckTech', {
			Tech = "xr_g0_building",
		}),
	},
	ResearchPoints = 10000,
	SortKey = 20,
	comment = "Project X\nResearch - Galactic Tier 0 - Tools",
	group = "Trade",
	id = "xr_g0_tools",
	money_value = 20000000,
}),
PlaceObj('ModItemTech', {
	Description = T(494009617674, --[[ModItemTech NanoTechAnnihilator Description]] "<color blue> Level 8 Research Required.</color>\nThe latest addition to the Nano-Tech line of weaponry is the Annihilator. Though classed as legal, some would argue it is far from the legality borders of being acceptable. This weapon launches fast moving missiles to its target that release an explosion of nanite-energy. Though due to its large design when used will slow the survivor by 70%. Has a very low cooldown however.\n\n<style TechSubtitleBlue>Unlocks</style>\n<style TextPositive>Nano-Tech Annihilator</style>\n\n* Can be crafted on the soldering bench."),
	DisplayName = T(827014815739, --[[ModItemTech NanoTechAnnihilator DisplayName]] "Annihilator"),
	Icon = "NanoTech/PXAnnihilator.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 8,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
	},
	LockState = "hidden",
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienWeaponry",
		}),
	},
	ResearchPoints = 150000,
	SortKey = 1,
	group = "Nano-Tech",
	id = "NanoTechAnnihilator",
	money_value = 900000000,
}),
PlaceObj('ModItemTech', {
	Description = T(976948509473, --[[ModItemTech NanoTechNaniteBlade Description]] "<color blue> Level 5 Research Required.</color>\nA light blade utilizing Nanite technology to create a beam of energy that slices through flesh like butter. With the wielding of light nanite technology it enhances the persons movement speed by 20%.\n\n<style TechSubtitleBlue>Unlocks</style>\n<style TextPositive>Nano-Tech Blade</style>\n\n* Can be crafted on the soldering bench."),
	DisplayName = T(272595787433, --[[ModItemTech NanoTechNaniteBlade DisplayName]] "Nanite Blade"),
	Icon = "NanoTech/PXNaniteBlade.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 5,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
	},
	LockState = "hidden",
	MinSkillLevel = 5,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienWeaponry",
		}),
	},
	ResearchPoints = 50000,
	SortKey = 2,
	group = "Nano-Tech",
	id = "NanoTechNaniteBlade",
	money_value = 500000000,
}),
PlaceObj('ModItemTech', {
	Description = T(665914665404, --[[ModItemTech NanoTechKhopesh Description]] "<color blue> Level 6 Research Required.</color>\nA larger blade using nanite technology to assist the blade in cutting through objects smoothly. Due to its light material it increases the persons movement speed by 30%. Has the ability to stun and burn targets.\n\n<style TechSubtitleBlue>Unlocks</style>\n<style TextPositive>Nano-Tech Khopesh</style>\n\n* Can be crafted on the soldering bench."),
	DisplayName = T(319825360370, --[[ModItemTech NanoTechKhopesh DisplayName]] "Khopesh Blade"),
	Icon = "NanoTech/PXNanoKhopeshLarge.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
	},
	LockState = "hidden",
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienWeaponry",
		}),
	},
	ResearchPoints = 70000,
	SortKey = 3,
	group = "Nano-Tech",
	id = "NanoTechKhopesh",
	money_value = 670000000,
}),
PlaceObj('ModItemTech', {
	Description = T(271035743691, --[[ModItemTech NanoTechPhantom Description]] "<color blue> Level 6 Research Required.</color>\nThe Phantom Rifle was one of the first weapons created to utilize Nanite technology. Though its out-dated, its still quite expensive and for good reason. This rifle can inflict some serious energetic damage to its target and has some nasty side effects with its punch.\n\n<style TechSubtitleBlue>Unlocks</style>\n<style TextPositive>Phantom Rifle</style>\n\n* Can be crafted on the soldering bench."),
	DisplayName = T(872610600687, --[[ModItemTech NanoTechPhantom DisplayName]] "Phantom Rifle"),
	Icon = "NanoTech/PXPhantom.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 6,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
	},
	LockState = "hidden",
	MinSkillLevel = 6,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienWeaponry",
		}),
	},
	ResearchPoints = 90000,
	SortKey = 5,
	group = "Nano-Tech",
	id = "NanoTechPhantom",
	money_value = 870000000,
}),
PlaceObj('ModItemTech', {
	Description = T(700145283678, --[[ModItemTech NanoTechSwarmer Description]] "<color blue> Level 8 Research Required.</color>\nA heavy rifle that emits a swarm of nanites at its target, a wave of nanites capable of shutting down the nervous system and causing brief paralysis. Though its useless if you dont have someone to dish out the finishing blow. A good weapon to keep waves of enemies back, giving you time to set up. Decreases move speed by 30%, has a 90 degree radius of AoE effect to inflict 90% chance of stun/paralysis. No damage.\n\n<style TechSubtitleBlue>Unlocks</style>\n<style TextPositive>Nano-Tech Swarmer</style>\n\n* Can be crafted on the soldering bench."),
	DisplayName = T(888067875469, --[[ModItemTech NanoTechSwarmer DisplayName]] "Nanite-Swarmer"),
	Icon = "NanoTech/PXSwarmer.png",
	LockPrerequisites = {
		PlaceObj('CheckSurvivorsWithSkillLevels', {
			Skills = {
				Intellectual = 8,
			},
		}),
		PlaceObj('CheckTech', {
			Tech = "AdvancedWeaponry",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicWeaponry",
		}),
	},
	LockState = "hidden",
	MinSkillLevel = 8,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienWeaponry",
		}),
	},
	ResearchPoints = 180000,
	SortKey = 4,
	group = "Nano-Tech",
	id = "NanoTechSwarmer",
	money_value = 2700000000,
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Science",
	},
	Description = T(525831230714, --[[ModItemTech xr_start Description]] "We need to study the signals PX-003 uses when it relays our requests to the greater Galactican Empire. That way we can boost the signal ourselves, without needing to rely on PX-003's bandwidth, power, or desire to help.\n\nIt's time for space to know about us! \n\n<color px_purple>Project-X Technology Progress is blocked until we build, defend, and keep 1 or more online!</color>\n\n<style TechSubtitleBlue>Unlocks</style>\n   <color TextEmphasis>Signal Relay</color>"),
	DisplayName = T(486553064813, --[[ModItemTech xr_start DisplayName]] "Signal Relay"),
	Icon = "UI/Icons/Research/orbital_radio",
	LockPrerequisites = {
		PlaceObj('CheckTech', {
			Tech = "BasicElectricity",
		}),
		PlaceObj('CheckTech', {
			Tech = "BasicArchitecture",
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckOR', {
			Conditions = {
				PlaceObj('CheckTech', {
					Tech = "BasicElectricity",
				}),
				PlaceObj('CheckResource', {
					Amount = 1000,
					Condition = ">=",
					Resource = "ScrapElectronics",
					ResourceGroup = "ElectronicComponents",
				}),
				PlaceObj('CheckTech', {
					Tech = "BasicArchitecture",
				}),
			},
		}),
	},
	ResearchPoints = 240000,
	SortKey = 250,
	group = "Construction",
	id = "xr_start",
	money_value = 250000000,
	tradable = false,
}),
PlaceObj('ModItemFolder', {
	'name', "Traits",
}),
PlaceObj('ModItemToolResource', {
	DecayRateOutside = 109,
	DecayTimeOutside = 92160000,
	DirtinessMultiplier = 70,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapMetal",
			'amount', 30000,
		}),
	},
	DismantleVisualRes = "HarvestingTools",
	MaxHealth = 250000,
	MinStorageCondition = 2,
	SortKey = 20,
	alt_icon = "UI/Icons/Items/hunting_knife",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(680183579067, --[[ModItemToolResource BiologistKnife description]] "A set of tools that <color TextPositive>greatly</color> increase butchering speed."),
	display_name = T(153974531600, --[[ModItemToolResource BiologistKnife display_name]] "Biologist Precision Knife"),
	group = "Tools_Human",
	icon = "UI/Icons/Resources/res_hunting_knife",
	id = "BiologistKnife",
	in_groups = {
		"Tools",
	},
	money_value = 10000000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
					efficiency = 10 * efficiency
				end
				return efficiency
			end,
		}),
	},
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DecayRateOutside = 109,
	DecayTimeOutside = 92160000,
	DirtinessMultiplier = 70,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CPUCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "EnergyCrystals",
			'amount', 5000,
		}),
	},
	DismantleVisualRes = "CPUCore",
	MaxHealth = 250000,
	MinStorageCondition = 2,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			self:AddHappinessFactor("InfoTabletPX", false, false and IsKindOf(self.other_social, "Unit") and {other = self.other_social})
		end,
		PlaceObj('ScriptAddHappinessFactor', {
			HappinessFactor = "InfoTabletPX",
			Param1 = "self",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			self:RemoveHappinessFactor("InfoTabletPX", false)
		end,
		PlaceObj('ScriptRemoveHappinessFactor', {
			HappinessFactor = "InfoTabletPX",
			Param1 = "self",
		}),
	}),
	SortKey = 20,
	alt_icon = "General/InfoTablet.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(612651023951, --[[ModItemToolResource PXInfoTablet description]] "A set of tools that <color TextPositive>greatly</color> increase happiness "),
	display_name = T(628602802302, --[[ModItemToolResource PXInfoTablet display_name]] "Info Tablet"),
	group = "Tools_Human",
	icon = "General/InfoTabletSmall.png",
	id = "PXInfoTablet",
	in_groups = {
		"Tools",
	},
	money_value = 16000000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DirtinessMultiplier = 50,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CyberCrystal",
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Ore",
			'amount', 5000,
		}),
	},
	DismantleVisualRes = "AncientTalisman",
	LockState = "hidden",
	MaxHealth = 500000,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			self:AddHappinessFactor("CyberPendantPX", false, false and IsKindOf(self.other_social, "Unit") and {other = self.other_social})
		end,
		PlaceObj('ScriptAddHappinessFactor', {
			HappinessFactor = "CyberPendantPX",
			Param1 = "self",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			self:RemoveHappinessFactor("CyberPendantPX", false)
		end,
		PlaceObj('ScriptRemoveHappinessFactor', {
			HappinessFactor = "CyberPendantPX",
			Param1 = "self",
		}),
	}),
	SortKey = 1000,
	alt_icon = "General/CyberPendant.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(400548442175, --[[ModItemToolResource CyberPendant description]] "A unique pendant that emits an energy, carriers will feel <color TextPositive>greatly</color> increased happiness and a energy boost which increases speed."),
	display_name = T(626759140337, --[[ModItemToolResource CyberPendant display_name]] "Cyber Pendant"),
	group = "Tools_Human",
	icon = "General/CyberPendantSmall.png",
	id = "CyberPendant",
	in_groups = {
		"Tools",
	},
	money_value = 175000000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DecayRateOutside = 109,
	DecayTimeOutside = 92160000,
	DirtinessMultiplier = 70,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "RespiratorMask",
		}),
		PlaceObj('ResAmount', {
			'resource', "NightGoggles",
		}),
	},
	DismantleVisualRes = "RespiratorMask",
	MaxHealth = 250000,
	MinStorageCondition = 2,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:AddModifier("NightGogglesDarknessPenalty", "darkness_penalty", 0, 0, false, 0, 0)
			unit:AddHealthCondition("immune_gtool", "", unit:PickBodyPart("Organs", "TorsoLungs"))
		end,
		PlaceObj('ScriptModifyHuman', {
			Param1 = "unit",
			id = "NightGogglesDarknessPenalty",
			mul = 0,
			prop = "darkness_penalty",
		}),
		PlaceObj('ScriptAddHealthCondition', {
			BodyPart = "TorsoLungs",
			BodyPartGroup = "Organs",
			HealthCond = "immune_gtool",
			HealthCondReason = "",
			HealthCondType = "Buff",
			Param1 = "unit",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:RemoveModifier("NightGogglesDarknessPenalty", "darkness_penalty")
			unit:RemoveHealthCondition("immune_gtool", false)
		end,
		PlaceObj('ScriptCode', {
			Code = function ()
				unit:RemoveModifier("NightGogglesDarknessPenalty", "darkness_penalty")
			end,
		}),
		PlaceObj('ScriptRemoveHealthCondition', {
			HealthCond = "immune_gtool",
			HealthCondType = "Buff",
			Param1 = "unit",
		}),
	}),
	SortKey = 45,
	alt_icon = "General/TacticalMaskPX.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(826290783165, --[[ModItemToolResource TacticalMaskPX description]] "Ensures safe breathing during toxic air events, poisonous clouds, smoke, plasma and toxic chemicals, aswell is fitted with night vision goggles to hit targets in the dark. Will still be effected by the dark when not in combat. "),
	display_name = T(669846118354, --[[ModItemToolResource TacticalMaskPX display_name]] "Tactical Mask"),
	group = "Tools_Human",
	icon = "General/TacticalMaskSmallPX.png",
	id = "TacticalMaskPX",
	in_groups = {
		"Tools",
	},
	money_value = 18000000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DirtinessMultiplier = 70,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Cotton",
			'amount', 30000,
		}),
	},
	DismantleVisualRes = "SurvivalBackpack",
	MaxHealth = 250000,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:AddHappinessFactor("MedicalKitPX", false, false and IsKindOf(unit.other_social, "Unit") and {other = unit.other_social})
		end,
		PlaceObj('ScriptAddHappinessFactor', {
			HappinessFactor = "MedicalKitPX",
			Param1 = "unit",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:RemoveHappinessFactor("MedicalKitPX", false)
		end,
		PlaceObj('ScriptRemoveHappinessFactor', {
			HappinessFactor = "MedicalKitPX",
			Param1 = "unit",
		}),
	}),
	SortKey = 10,
	alt_icon = "General/PXMedicBox.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(339195009498, --[[ModItemToolResource PXMedicKit description]] "Advanced Medic Kit, Increases healing task efficiency and Healing level by 2."),
	display_name = T(556125027705, --[[ModItemToolResource PXMedicKit display_name]] "Medical Kit"),
	group = "Tools_Human",
	icon = "General/PXMedicBoxSmall.png",
	id = "PXMedicKit",
	in_groups = {
		"Tools",
	},
	money_value = 2500000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DirtinessMultiplier = 70,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapMetal",
			'amount', 30000,
		}),
	},
	DismantleVisualRes = "SurvivalBackpack",
	MaxHealth = 250000,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:AddHappinessFactor("BuildersToolBoxPX", false, false and IsKindOf(unit.other_social, "Unit") and {other = unit.other_social})
		end,
		PlaceObj('ScriptAddHappinessFactor', {
			HappinessFactor = "BuildersToolBoxPX",
			Param1 = "unit",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:RemoveHappinessFactor("BuildersToolBoxPX", false)
		end,
		PlaceObj('ScriptRemoveHappinessFactor', {
			HappinessFactor = "BuildersToolBoxPX",
			Param1 = "unit",
		}),
	}),
	SortKey = 10,
	alt_icon = "General/BuildersBoxPX.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(118020539624, --[[ModItemToolResource BuildersToolboxPX description]] "A Builders Toolbox, Increases construction task efficiency and Construction level by 2."),
	display_name = T(749202826698, --[[ModItemToolResource BuildersToolboxPX display_name]] "Builders Toolbox"),
	group = "Tools_Human",
	icon = "General/BuildersBoxSmallPX.png",
	id = "BuildersToolboxPX",
	in_groups = {
		"Tools",
	},
	money_value = 500000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DecayRateOutside = 109,
	DecayTimeOutside = 92160000,
	DirtinessMultiplier = 70,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapMetal",
			'amount', 30000,
		}),
		PlaceObj('ResAmount', {
			'resource', "EnergyCrystals",
			'amount', 4000,
		}),
	},
	DismantleVisualRes = "HarvestingTools",
	MaxHealth = 250000,
	MinStorageCondition = 2,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:AddHappinessFactor("PXScopeBuff", false, false and IsKindOf(unit.other_social, "Unit") and {other = unit.other_social})
		end,
		PlaceObj('ScriptAddHappinessFactor', {
			HappinessFactor = "PXScopeBuff",
			Param1 = "unit",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:RemoveHappinessFactor("PXScopeBuff", false)
		end,
		PlaceObj('ScriptRemoveHappinessFactor', {
			HappinessFactor = "PXScopeBuff",
			Param1 = "unit",
		}),
	}),
	SortKey = 20,
	alt_icon = "General/PXScope.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(414758853583, --[[ModItemToolResource ScopePX description]] "A scope that increased accuracy by 10% and grants +2 levels to combat."),
	display_name = T(718972757106, --[[ModItemToolResource ScopePX display_name]] "Scope"),
	group = "Tools_Human",
	icon = "General/PXScopeSmall.png",
	id = "ScopePX",
	in_groups = {
		"Tools",
	},
	money_value = 7000000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemToolResource', {
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Cotton",
			'amount', 25000,
		}),
	},
	DismantleVisualRes = "SurvivalBackpack",
	KeepDestroyedItem = true,
	MaxHealth = 0,
	OnEquip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:AddHealthCondition("LightBackpack", false, unit:PickBodyPart("", "All"))
		end,
		PlaceObj('ScriptAddHealthCondition', {
			HealthCond = "LightBackpack",
			HealthCondType = "",
			Param1 = "unit",
		}),
	}),
	OnUnequip = PlaceObj('ScriptProgram', {
		Params = "self, unit",
		eval = function (self, unit)
			unit:RemoveHealthCondition("LightBackpack", false)
		end,
		PlaceObj('ScriptRemoveHealthCondition', {
			HealthCond = "LightBackpack",
			HealthCondType = "",
			Param1 = "unit",
		}),
	}),
	SortKey = 10,
	alt_icon = "General/LightBackpackPX.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceBulk_Chest",
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(213245496466, --[[ModItemToolResource LightBackpackPX description]] "Increases movement speed by 25%."),
	display_name = T(226742971539, --[[ModItemToolResource LightBackpackPX display_name]] "Light Backpack"),
	group = "Tools_Human",
	icon = "General/LightBackpackSmall.png",
	id = "LightBackpackPX",
	in_groups = {
		"Tools",
	},
	money_value = 500000,
	stack_entity = "ResourceBulk_Chest",
	stack_scale = 50,
	stack_size = 1000,
	visible = false,
}),
PlaceObj('ModItemTrait', {
	Description = T(165973656619, --[[ModItemTrait GeneticNanites Description]] "The nanites enhance the senses, hearing range, sight range, speed and conciousness."),
	DisplayName = T(787051007535, --[[ModItemTrait GeneticNanites DisplayName |gender-variants]] "Genetically Modified - Nanites"),
	SetupDescription = T(925265832941, --[[ModItemTrait GeneticNanites SetupDescription]] "The nanites enhance the senses, hearing range, sight range, speed and conciousness."),
	group = "PROJECTX",
	id = "GeneticNanites",
}),
PlaceObj('ModItemTrait', {
	Description = T(688792550943, --[[ModItemTrait PhysicallyFit Description]] "+30% Movement Speed and Prolonged Stamina."),
	DisplayName = T(157697829061, --[[ModItemTrait PhysicallyFit DisplayName |gender-variants]] "Physically Fit"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 30000,
			prop = "Movement",
		}),
		PlaceObj('ModifyHuman', {
			mul = 700,
			prop = "EnergyUsePerDay",
		}),
	},
	SetupDescription = T(357385399142, --[[ModItemTrait PhysicallyFit SetupDescription]] "+30% Movement Speed and Prolonged Stamina."),
	group = "PROJECTX",
	id = "PhysicallyFit",
}),
PlaceObj('ModItemTrait', {
	Description = T(134051416596, --[[ModItemTrait CareerPhysique Description]] "+65 Health and 2x Available Energy - Due to his highly active career and strong physique this person has more durability and energy."),
	DisplayName = T(881250287728, --[[ModItemTrait CareerPhysique DisplayName |gender-variants]] "Career Physique"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_I14CxDu",
			mul = 2000,
			prop = "MaxEnergyAvailable",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 65000,
			prop = "MaxHealth",
		}),
	},
	SetupDescription = T(714833132936, --[[ModItemTrait CareerPhysique SetupDescription]] "+65 Health and 2x Available Energy - Due to his highly active career and strong physique this person has more durability and energy."),
	group = "PROJECTX",
	id = "CareerPhysique",
}),
PlaceObj('ModItemTrait', {
	Description = T(199284013992, --[[ModItemTrait TamerGujoBirds Description]] "This person can summon 5 'Tamed Gujo Birds' through the 'Communication Relay'."),
	DisplayName = T(480833779490, --[[ModItemTrait TamerGujoBirds DisplayName |gender-variants]] "Gujo Birds"),
	SetupDescription = T(739153168150, --[[ModItemTrait TamerGujoBirds SetupDescription]] "This person can summon 5 'Tamed Gujo Birds' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerGujoBirds",
}),
PlaceObj('ModItemTrait', {
	Description = T(758785162078, --[[ModItemTrait AnimalWhisperer Description]] "Has knowledge on every discovered species of animal found, knowing the cons and pros of each species, they have less chance of failing a taming attempt. Also trains twice as fast with animals."),
	DisplayName = T(672653403250, --[[ModItemTrait AnimalWhisperer DisplayName |gender-variants]] "Animal Whisperer"),
	OnAddTrait = function (self, unit)
		unit.tamed_animals = 0
	end,
	SetupDescription = T(430738147187, --[[ModItemTrait AnimalWhisperer SetupDescription]] "Has knowledge on every discovered species of animal found, knowing the cons and pros of each species, they have less chance of failing a taming attempt. Also trains twice as fast with animals."),
	group = "PROJECTX",
	id = "AnimalWhisperer",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "AnimalTamed",
			Handler = function (self, unit, animal, success, reason)
				if unit and unit:HasTrait(self.id) and success then
					unit.tamed_animals = (unit.tamed_animals or 0) + 1
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(714139828849, --[[ModItemTrait YearsofExperience Description]] "+45% Manipulation Efficiency - Years of practice have made this person swift and efficient at practical tasks."),
	DisplayName = T(361084608612, --[[ModItemTrait YearsofExperience DisplayName |gender-variants]] "Years Of Experience"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 45000,
			prop = "Manipulation",
		}),
	},
	SetupDescription = T(530001759657, --[[ModItemTrait YearsofExperience SetupDescription]] "+45% Manipulation Efficiency - Years of practice have made this person swift and efficient at practical tasks."),
	group = "PROJECTX",
	id = "YearsofExperience",
}),
PlaceObj('ModItemTrait', {
	Description = T(559004743152, --[[ModItemTrait NaniteExperiment Description]] "-8 Health Per Hour - Due to being half machine, the nanites injected into his body grant him an increased blood clotting function."),
	DisplayName = T(897187108871, --[[ModItemTrait NaniteExperiment DisplayName |gender-variants]] "Nanite Experiment"),
	OnAddTrait = function (self, unit)
		unit:AddModifier("RegeneratingBlood", "Bleeding", 1000, -8000, T(225174320646, "NaniteExperiment"))
	end,
	OnRemoveTrait = function (self, unit)
		unit:RemoveModifier("RegeneratingBlood", "Bleeding")
	end,
	SetupDescription = T(513526710105, --[[ModItemTrait NaniteExperiment SetupDescription]] "-8 Health Per Hour - Due to being half machine, the nanites injected into his body grant him an increased blood clotting function."),
	Weight = 80,
	group = "PROJECTX",
	id = "NaniteExperiment",
}),
PlaceObj('ModItemTrait', {
	Description = T(598234186980, --[[ModItemTrait OutdatedMaintenance Description]] "-60% Skill Learn Rate - Due to being on a foreign planet the software and components required to maintain this persons cybernetics are not easily found or crafted. "),
	DisplayName = T(588244256467, --[[ModItemTrait OutdatedMaintenance DisplayName |gender-variants]] "Outdated Maintenance"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 400,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(958740288753, --[[ModItemTrait OutdatedMaintenance SetupDescription]] "-60% Skill Learn Rate - Due to being on a foreign planet the software and components required to maintain this persons cybernetics are not easily found or crafted. "),
	Weight = 80,
	group = "PROJECTX",
	id = "OutdatedMaintenance",
}),
PlaceObj('ModItemTrait', {
	Description = T(663902461088, --[[ModItemTrait Shadow Description]] "+3 Levels to all skills."),
	DisplayName = T(639010550927, --[[ModItemTrait Shadow DisplayName |gender-variants]] "Shadow"),
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "autoid_fDsBmM1_xoNpXvN",
			Level = 3,
			Skill = "Combat",
		}),
		PlaceObj('ModifySkill', {
			Id = "",
			Level = 3,
			Skill = "Construction",
		}),
		PlaceObj('ModifySkill', {
			Id = "autoid_fDsBmM1_DzR4i7X",
			Level = 3,
			Skill = "Cooking",
		}),
		PlaceObj('ModifySkill', {
			Id = "",
			Level = 3,
			Skill = "Crafting",
		}),
		PlaceObj('ModifySkill', {
			Id = "autoid_fDsBmM1_EKnjUDT",
			Level = 3,
			Skill = "Farming",
		}),
		PlaceObj('ModifySkill', {
			Id = "",
			Level = 3,
			Skill = "Hacking",
		}),
		PlaceObj('ModifySkill', {
			Id = "autoid_fDsBmM1_Rt2ln0V",
			Level = 3,
			Skill = "Healing",
		}),
		PlaceObj('ModifySkill', {
			Id = "",
			Level = 3,
			Skill = "Intellectual",
		}),
		PlaceObj('ModifySkill', {
			Id = "autoid_fDsBmM1_UfiY7s1",
			Level = 3,
			Skill = "Physical",
		}),
	},
	SetupDescription = T(371782614604, --[[ModItemTrait Shadow SetupDescription]] "+3 Levels to all skills."),
	group = "PROJECTX",
	id = "Shadow",
}),
PlaceObj('ModItemTrait', {
	Description = T(661219390536, --[[ModItemTrait GalacticSupplyDrop Description]] "Has authority to request a full levy outfit be assigned to a struggling colony in the Galactical Empire."),
	DisplayName = T(772802360753, --[[ModItemTrait GalacticSupplyDrop DisplayName |gender-variants]] "Galactic Official Contacts"),
	group = "PROJECTX",
	id = "GalacticSupplyDrop",
}),
PlaceObj('ModItemTrait', {
	Description = T(236751804758, --[[ModItemTrait Commander Description]] "+Increase To Accuracy and Critical Chance by 10% - Radius Effect of 40m - All those nearby will gain this trait only when in range of this player. "),
	DisplayName = T(662078108340, --[[ModItemTrait Commander DisplayName |gender-variants]] "Commander"),
	SetupDescription = T(884243903126, --[[ModItemTrait Commander SetupDescription]] "+Increase To Accuracy and Critical Chance by 10% - Radius Effect of 40m - All those nearby will gain this trait only when in range of this player."),
	group = "PROJECTX",
	id = "Commander",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "OnObjUpdate",
			Handler = function (self, target, time, update_interval)
				--DbgClear(true)
				if not IsValidPos(target)
				or not IsAliveAndConscious(target)
				or target:IsSleeping() then
					return
				end
				local radius = 40*guim
				local class = "Human"
				--DbgAddCircle(self, radius)
				MapForEach(target, radius, class, nil, nil, const.gofSyncObject, function(unit, radius)
					if unit == target
					or unit.CombatGroup ~= target.CombatGroup
					or not unit:IsCloser(target, radius)
					or not IsAliveAndConscious(unit)
					or unit:IsSleeping()
					then
						return
					end
					--DbgAddVector(unit)
					local cond = unit:FirstEffectById("Commander")
					if cond then
						unit:RefreshExpiration(cond)
					else
						cond = unit:AddHealthCondition("Commander", "trait")
					end
				end, radius)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(299855828016, --[[ModItemTrait ContrabandSupplyDrop Description]] "Has exclusive access to contraband contacts and can request contraband supply drops."),
	DisplayName = T(612670705283, --[[ModItemTrait ContrabandSupplyDrop DisplayName |gender-variants]] "Contraband Contacts"),
	group = "PROJECTX",
	id = "ContrabandSupplyDrop",
}),
PlaceObj('ModItemTrait', {
	Description = T(873755670750, --[[ModItemTrait Schizophrenia Description]] "This person has been diagnosed with ''Schizophrenia'' and has regular episodes of hallucinations and strange behaviours."),
	DisplayName = T(466682339936, --[[ModItemTrait Schizophrenia DisplayName |gender-variants]] "Schizophrenia"),
	SetupDescription = T(992419005576, --[[ModItemTrait Schizophrenia SetupDescription]] "This person has been diagnosed with ''Schizophrenia'' and has regular episodes of hallucinations and strange behaviours."),
	group = "PROJECTX",
	id = "Schizophrenia",
}),
PlaceObj('ModItemTrait', {
	Description = T(119542020247, --[[ModItemTrait WhackyEngineer Description]] "+3x Repair Speed - Increased work speed when repairing devices only."),
	DisplayName = T(647773647793, --[[ModItemTrait WhackyEngineer DisplayName |gender-variants]] "Whacky Engineer"),
	SetupDescription = T(411387589759, --[[ModItemTrait WhackyEngineer SetupDescription]] "+3x Repair Speed - Increased work speed when repairing devices only."),
	group = "PROJECTX",
	id = "WhackyEngineer",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Repair" then
					local building = activity_obj:GetActivityTarget()
					if not building:CheckLabelName("Structures") then
						efficiency = 3 * efficiency
					end
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(447142525428, --[[ModItemTrait CannotHealNormal Description]] "This person cannot perform medical treatment."),
	DisplayName = T(687014201725, --[[ModItemTrait CannotHealNormal DisplayName |gender-variants]] "Cannot Heal"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "HealSelf",
			FilterBy = "Healing",
			Id = "",
			Reason = "Cannot Heal",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Healing",
			FilterBy = "Healing",
			Id = "autoid_fDsBmM1_mMfAeEI",
			Reason = "Cannot Heal",
		}),
	},
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotHealNormal",
}),
PlaceObj('ModItemTrait', {
	Description = T(138909617760, --[[ModItemTrait SliceNDice Description]] "Is used to slicing and dicing enemies. Has 3x the butchering speed."),
	DisplayName = T(255165016932, --[[ModItemTrait SliceNDice DisplayName |gender-variants]] "Slice N' Dice"),
	SetupDescription = T(241209208090, --[[ModItemTrait SliceNDice SetupDescription]] "Is used to slicing and dicing enemies. Has 3x the butchering speed."),
	group = "PROJECTX",
	id = "SliceNDice",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
							  efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(286293838097, --[[ModItemTrait ExpeditionHacker Description]] "This person knows how to call a Smuggler's Ship to trade"),
	DisplayName = T(927980982891, --[[ModItemTrait ExpeditionHacker DisplayName |gender-variants]] "Smuggler Ship Beacon"),
	SetupDescription = T(150704186872, --[[ModItemTrait ExpeditionHacker SetupDescription]] "This person has access to the Smuggler's Ship"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "ExpeditionHacker",
}),
PlaceObj('ModItemTrait', {
	Description = T(468851146970, --[[ModItemTrait TamerUlfen Description]] "This person can summon 3 'Tamed Ulfen' through the 'Communication Relay'."),
	DisplayName = T(772159971645, --[[ModItemTrait TamerUlfen DisplayName |gender-variants]] "Ulfen"),
	SetupDescription = T(557901849129, --[[ModItemTrait TamerUlfen SetupDescription]] "This person can summon 3 'Tamed Ulfen' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerUlfen",
}),
PlaceObj('ModItemTrait', {
	Description = T(796147162649, --[[ModItemTrait TempTolerance Description]] "+20C Temperature Tolerance - Has a higher tolerance to both negative and positive temperatures."),
	DisplayName = T(451739739393, --[[ModItemTrait TempTolerance DisplayName |gender-variants]] "Temperature Tolerance"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 20000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			add = -20000,
			prop = "TemperatureLow",
		}),
	},
	SetupDescription = T(345081686745, --[[ModItemTrait TempTolerance SetupDescription]] "+20C Temperature Tolerance - Has a higher tolerance to both negative and positive temperatures."),
	group = "PROJECTX",
	id = "TempTolerance",
}),
PlaceObj('ModItemTrait', {
	Description = T(665169930993, --[[ModItemTrait Agriculturalist Description]] "+4x Seeding and Harvesting - Due to expertise in farming, this person is four times as efficient at tending to there crops."),
	DisplayName = T(667459446414, --[[ModItemTrait Agriculturalist DisplayName |gender-variants]] "Agriculturalist"),
	SetupDescription = T(445083551678, --[[ModItemTrait Agriculturalist SetupDescription]] "+4x Seeding and Harvesting - Due to expertise in farming, this person is four times as efficient at tending to there crops."),
	group = "PROJECTX",
	id = "Agriculturalist",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Harvesting" or activity_id == "Planting" then
					efficiency = 4 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(503875726769, --[[ModItemTrait CannotTrade Description]] "This person cannot perform trading activities."),
	DisplayName = T(469511738959, --[[ModItemTrait CannotTrade DisplayName |gender-variants]] "Cannot Trade"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Trade",
			FilterBy = "Trade",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Trade",
		}),
	},
	SetupDescription = T(221612933469, --[[ModItemTrait CannotTrade SetupDescription]] "This person cannot perform trading activities."),
	group = "PROJECTX",
	id = "CannotTrade",
}),
PlaceObj('ModItemTrait', {
	Description = T(986640713150, --[[ModItemTrait InstinctiveObserver Description]] "+Increased Observations - Has chance to field observe unknown species during expeditions due to his intellect and/or implants."),
	DisplayName = T(190512299935, --[[ModItemTrait InstinctiveObserver DisplayName |gender-variants]] "Instinctive Observer"),
	SetupDescription = T(381967415384, --[[ModItemTrait InstinctiveObserver SetupDescription]] "+Increased Observations - Has chance to field observe unknown species during expeditions due to his intellect and/or implants."),
	group = "PROJECTX",
	id = "InstinctiveObserver",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "TravelToExpeditionSite",
			Handler = function (self, target, travel_time, balloon)
				CreateGameTimeThread(function()
					local min_time = const.HourDuration
					local max_time = 3*const.HourDuration
					local time = target:RandRange(min_time, max_time, "InstinctiveObserver")
					Sleep(time)
					if not IsValid(balloon)
					or not balloon.expedition
					or balloon.expedition.interrupted then
						return
					end
					local player = target and target.player
					local research_center = player and player.research_center
					if not research_center then
						return
					end
					local techs = {}
					for _, tech in ipairs(Presets.Tech.Field) do
						if not research_center:IsTechResearched(tech.id) then
							if GetPresetLockStateAndText(tech, player) == "enabled" then
								techs[#techs + 1] = tech
							end
						end
					end
					local tech = target:TableRand(techs, "InstinctiveObserver")
					if tech then
						target:ResearchTech(tech.id, false, T(998310530054, "Expedition discovery: <em><TechName></em>"))
					end
				end)
				return travel_time
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(104601621827, --[[ModItemTrait Jackpot Description]] "+3x Scrap Metal - The ability to find even the hardest of hidden loot. "),
	DisplayName = T(463328089892, --[[ModItemTrait Jackpot DisplayName |gender-variants]] "Jackpot"),
	SetupDescription = T(281759453904, --[[ModItemTrait Jackpot SetupDescription]] "+3x Scrap Metal - The ability to find even the hardest of hidden loot."),
	group = "PROJECTX",
	id = "Jackpot",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherSiteLootModifiers",
			Handler = function (self, target, modifiers, loot_id, action_id)
				if action_id == "Scavenge" or action_id == "Salvage" then
					modifiers = modifiers or {}
					modifiers.ScrapMetal = (modifiers.ScrapMetal or 1000) * 3
				end
				return modifiers
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyExpeditionReward",
			Handler = function (self, target, amount, resource)
				if resource == "ScrapMetal" then
					return amount * 3
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(579658558331, --[[ModItemTrait ScavengerDavid Description]] "The ability to find double scrap metal, medkits and ration packs due to his knowledge of where people hide them for emergency's."),
	DisplayName = T(126564347592, --[[ModItemTrait ScavengerDavid DisplayName |gender-variants]] "Handy Scavenger"),
	group = "PROJECTX",
	id = "ScavengerDavid",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherSiteLootModifiers",
			Handler = function (self, target, modifiers, loot_id, action_id)
				if action_id == "Scavenge" or action_id == "Salvage" then
					modifiers = modifiers or {}
					modifiers.ScrapMetal = (modifiers.ScrapMetal or 1000) * 2
				end
				return modifiers
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyExpeditionReward",
			Handler = function (self, target, amount, resource)
				if resource == "ScrapMetal" or "MedKit" or "EmergencyRation" then
					return amount * 2
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(845011068896, --[[ModItemTrait SanitaryConditions Description]] "Has increased Manipulation efficiency and Happiness while inside, which are decreased outside."),
	DisplayName = T(887046795499, --[[ModItemTrait SanitaryConditions DisplayName |gender-variants]] "Sanitary Conditions"),
	OnAddTrait = function (self, unit)
		local outside = unit:IsOutside()
		for _, reaction in ipairs(self.unit_reactions) do
			if reaction.Event == "OutsideStateChanged" then
				reaction.Handler(self, unit, outside)
			end
		end
	end,
	OnRemoveTrait = function (self, unit)
		CreateGameTimeThread(function(unit)
			SuspendObjModified("Agoraphobia")
			unit:RemoveHealthConditions("Agoraphobia_Inside")
			unit:RemoveHappinessFactors("Agoraphobia_Inside")
			unit:RemoveHealthConditions("Agoraphobia_Outside")
			unit:RemoveHappinessFactors("Agoraphobia_Outside")
			ResumeObjModified("Agoraphobia")
		end, unit)
	end,
	group = "PROJECTX",
	id = "SanitaryConditions",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "OutsideStateChanged",
			Handler = function (self, target, outside)
				CreateGameTimeThread(function(target, outside)
					SuspendObjModified("Agoraphobia")
					if outside then
						target:AddHealthCondition("Agoraphobia_Outside")
						target:AddHappinessFactor("Agoraphobia_Outside")
						target:RemoveHealthConditions("Agoraphobia_Inside")
						target:RemoveHappinessFactors("Agoraphobia_Inside")
					else
						target:AddHealthCondition("Agoraphobia_Inside")
						target:AddHappinessFactor("Agoraphobia_Inside")
						target:RemoveHealthConditions("Agoraphobia_Outside")
						target:RemoveHappinessFactors("Agoraphobia_Outside")
					end
					ResumeObjModified("Agoraphobia")
				end, target, outside)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(412971135249, --[[ModItemTrait HighAsAKite Description]] "+30% Happiness; +10% Movement; +50% Manipulation; +10% Consciousness; +30% Pain Tolerance. - This person is constantly high, harvesting from the environment to get the next kick."),
	DisplayName = T(212474452319, --[[ModItemTrait HighAsAKite DisplayName |gender-variants]] "Throes of Addiction"),
	SetupDescription = T(641860705688, --[[ModItemTrait HighAsAKite SetupDescription]] "+10% Movement; +50% Manipulation; +10% Consciousness; +30% Pain Tolerance. - This person is constantly high, harvesting from the environment to get the next kick."),
	group = "PROJECTX",
	id = "HighAsAKite",
}),
PlaceObj('ModItemTrait', {
	Conditions = {
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "DeliveryActivityObject",
			Time = 40000,
		}),
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "Delivery",
			Time = 40000,
		}),
	},
	Description = T(575776441952, --[[ModItemTrait AccountantsDream Description]] "Gains a small increase in happiness when assigned to do handling or delivering tasks."),
	DisplayName = T(389231016379, --[[ModItemTrait AccountantsDream DisplayName |gender-variants]] "Accountants Dream"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "AccountantsDream",
		}),
	},
	SetupDescription = T(705907546467, --[[ModItemTrait AccountantsDream SetupDescription]] "Gains a small increase in happiness when assigned to do handling or delivering tasks."),
	group = "PROJECTX",
	id = "AccountantsDream",
}),
PlaceObj('ModItemTrait', {
	Description = T(919382571239, --[[ModItemTrait MechCorePrint Description]] "This person knows how to print Mech Cores on the Galactic Printer."),
	DisplayName = T(539269073807, --[[ModItemTrait MechCorePrint DisplayName |gender-variants]] "Knowledge is Power"),
	SetupDescription = T(268750695774, --[[ModItemTrait MechCorePrint SetupDescription]] "This person knows how to print Mech Cores on the Galactic Printer."),
	group = "PROJECTX",
	id = "MechCorePrint",
}),
PlaceObj('ModItemTrait', {
	Description = T(285785989921, --[[ModItemTrait ArchitectsSpeed Description]] "-20% Movement Speed - This person has decreased movement speed as they enjoy to take regular breaks to have a cup of hot tea."),
	DisplayName = T(618656732441, --[[ModItemTrait ArchitectsSpeed DisplayName |gender-variants]] "Architects Speed"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_qBy8nbz",
			add = -20000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(880051769312, --[[ModItemTrait ArchitectsSpeed SetupDescription]] "-20% Movement Speed - This person has decreased movement speed as they enjoy to take regular breaks to have a cup of hot tea."),
	group = "PROJECTX",
	id = "ArchitectsSpeed",
}),
PlaceObj('ModItemTrait', {
	Description = T(937842195576, --[[ModItemTrait ChefsHands Description]] "+75 Max Health - Chefs hands have experienced many burns and cuts, raising this persons pain tolerance by 40%."),
	DisplayName = T(445952423753, --[[ModItemTrait ChefsHands DisplayName |gender-variants]] "Chef's Hands"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 75000,
			prop = "MaxHealth",
		}),
		PlaceObj('ModifyHuman', {
			add = -40000,
			prop = "Pain",
		}),
	},
	SetupDescription = T(236936189092, --[[ModItemTrait ChefsHands SetupDescription]] "+75 Max Health - Chefs hands have experienced many burns and cuts, raising this persons pain tolerance by 40%."),
	group = "PROJECTX",
	id = "ChefsHands",
}),
PlaceObj('ModItemTrait', {
	Description = T(790500468874, --[[ModItemTrait FarmWorker Description]] "<unit.DisplayNameNoStatus> is under a contract."),
	DisplayName = T(181267475556, --[[ModItemTrait FarmWorker DisplayName |gender-variants]] "Hired Contractor"),
	HiddenTrait = true,
	Incompatible = {
		"FarmOwner",
	},
	OnAddTrait = function (self, unit)
		unit:SetFarmerStatus("hired")
	end,
	comment = "Replacement",
	group = "Special and events",
	id = "FarmWorker",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "HumanInit",
			Handler = function (self, unit)
				if Scenario.id == "ProjectXScenario" or Scenario.id == "Trading"  then
					unit:SetTrait(self.id, true)
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(426140412931, --[[ModItemTrait Overweight Description]] "-20% Movement Speed - Due to being overweight."),
	DisplayName = T(304506033106, --[[ModItemTrait Overweight DisplayName |gender-variants]] "Overweight"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = -20000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(499139679842, --[[ModItemTrait Overweight SetupDescription]] "-20% Movement Speed - Due to being overweight"),
	group = "PROJECTX",
	id = "Overweight",
}),
PlaceObj('ModItemTrait', {
	Description = T(479808757030, --[[ModItemTrait Sharpshooter Description]] "+3x Shoot Speed - This person is a skilled sharpshooter, is efficient with ranged weapons and shoots three times as fast."),
	DisplayName = T(239872297311, --[[ModItemTrait Sharpshooter DisplayName |gender-variants]] "Sharpshooter"),
	OnAddTrait = function (self, unit)
		unit.killshots = 0
	end,
	SetupDescription = T(854378119159, --[[ModItemTrait Sharpshooter SetupDescription]] "+3x Shoot Speed - This person is a skilled sharpshooter, is efficient with ranged weapons and shoots three times as fast."),
	group = "PROJECTX",
	id = "Sharpshooter",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyAttackCooldown",
			Handler = function (self, target, cooldown, weapon_def)
				if weapon_def.AttackType ~= "melee" then
					cooldown = cooldown / 3
				end
				return cooldown
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(756819220752, --[[ModItemTrait TechNerd Description]] "+4x Work Speed - Increased work speed when constructing devices, furniture or repairs. "),
	DisplayName = T(898074909874, --[[ModItemTrait TechNerd DisplayName |gender-variants]] "Tech Nerd"),
	SetupDescription = T(814208802563, --[[ModItemTrait TechNerd SetupDescription]] "+4x Work Speed - Increased work speed when constructing devices, furniture or repairs. "),
	group = "PROJECTX",
	id = "TechNerd",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" then
					local building = activity_obj:GetActivityTarget()
					if not building:CheckLabelName("Structures") then
						efficiency = 4 * efficiency
					end
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(875527594272, --[[ModItemTrait FarmOwner Description]] "Does not require a wage."),
	DisplayName = T(836660602432, --[[ModItemTrait FarmOwner DisplayName |gender-variants]] "Colony Member"),
	HiddenTrait = true,
	Incompatible = {
		"FarmWorker",
	},
	UserTags = set( "Android", "Human", "Robot" ),
	comment = "Replacement",
	group = "Special and events",
	id = "FarmOwner",
}),
PlaceObj('ModItemTrait', {
	Description = T(196961960232, --[[ModItemTrait SpecOps Description]] "+60% Movement Speed - Increased stamina and speed from military grade training and conditioning."),
	DisplayName = T(443796809544, --[[ModItemTrait SpecOps DisplayName |gender-variants]] "SpecOps Training"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 60000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(376576399754, --[[ModItemTrait SpecOps SetupDescription]] "+60% Movement Speed - Increased stamina and speed from military grade training and conditioning."),
	group = "PROJECTX",
	id = "SpecOps",
}),
PlaceObj('ModItemTrait', {
	Description = T(183931435984, --[[ModItemTrait AlienTech Description]] "Has Alien Technology built within its mainframe which can attract unwanted visitors and cause the droid to go against its programming. "),
	DisplayName = T(727364179013, --[[ModItemTrait AlienTech DisplayName |gender-variants]] "Alien Technology"),
	SetupDescription = T(638052838696, --[[ModItemTrait AlienTech SetupDescription]] "Has Alien Technology built within its mainframe which can attract unwanted visitors and cause the droid to go against its programming. "),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "AlienTech",
}),
PlaceObj('ModItemTrait', {
	Description = T(350766939527, --[[ModItemTrait ExpertTamer Description]] "Never fails taming attempts and gains triple manipulation during taming activities. Also has increased speed when training animals."),
	DisplayName = T(195211002406, --[[ModItemTrait ExpertTamer DisplayName |gender-variants]] "Expert Tamer"),
	OnAddTrait = function (self, unit)
		unit.tamed_animals = 0
	end,
	SetupDescription = T(367752721969, --[[ModItemTrait ExpertTamer SetupDescription]] "Never fails taming attempts and gains triple manipulation during taming activities. Also has increased speed when training animals."),
	group = "PROJECTX",
	id = "ExpertTamer",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "AnimalTamed",
			Handler = function (self, unit, animal, success, reason)
				if unit and unit:HasTrait(self.id) and success then
					unit.tamed_animals = (unit.tamed_animals or 0) + 1
				end
			end,
		}),
	},
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "FeedingAnimal" or activity_id == "LeadAnimal" or activity_id == "Ranching" or activity_id == "TrainAnimal" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(350478872656, --[[ModItemTrait Infiltrator Description]] "+2x Expedition Speed - Efficient at infiltrating and extracting with the goods."),
	DisplayName = T(923348672686, --[[ModItemTrait Infiltrator DisplayName |gender-variants]] "Efficient Infiltrator"),
	group = "PROJECTX",
	id = "Infiltrator",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "TravelToExpeditionSite",
			Handler = function (self, target, travel_time, balloon)
				target:AddHappinessFactor("WentOnExpedition")
				return travel_time / 2
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(397519094785, --[[ModItemTrait MasterOfCoin Description]] "This person is exceptional at mathematical problems and has increased consciousness."),
	DisplayName = T(477171616252, --[[ModItemTrait MasterOfCoin DisplayName |gender-variants]] "Master Of Coin"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_yY7LznZ",
			add = 50000,
			prop = "Consciousness",
		}),
	},
	SetupDescription = T(838137204332, --[[ModItemTrait MasterOfCoin SetupDescription]] "This person is exceptional at mathematical problems and has increased consciousness."),
	group = "PROJECTX",
	id = "MasterOfCoin",
}),
PlaceObj('ModItemTrait', {
	Description = T(614824843385, --[[ModItemTrait SupplyCake Description]] "Has a special contact with a supplier that can supply ''Cake'' to the colony accessed through the ''Trading Shuttle''."),
	DisplayName = T(538101502781, --[[ModItemTrait SupplyCake DisplayName |gender-variants]] "Cake Supply Contact"),
	SetupDescription = T(536184226880, --[[ModItemTrait SupplyCake SetupDescription]] "Has a special contact with a supplier that can supply ''Cake'' to the colony accessed through the ''Trading Shuttle''."),
	group = "PROJECTX",
	id = "SupplyCake",
}),
PlaceObj('ModItemTrait', {
	Description = T(958299311432, --[[ModItemTrait TamerGuildAccess Description]] "We convinced a renowned Tamer to reveal their guild!"),
	DisplayName = T(834232023513, --[[ModItemTrait TamerGuildAccess DisplayName |gender-variants]] "Tamer's Guild Member"),
	SetupDescription = T(937170688947, --[[ModItemTrait TamerGuildAccess SetupDescription]] "This person has credential access to the Tamer's Guild found at the Communication Relay. "),
	group = "PROJECTX",
	id = "TamerGuildAccess",
}),
PlaceObj('ModItemTrait', {
	Description = T(643389509099, --[[ModItemTrait PercentageAccuracy Description]] "Has 60% kill shot chance due to expertise in bounty collecting contracts. "),
	DisplayName = T(188867587403, --[[ModItemTrait PercentageAccuracy DisplayName |gender-variants]] "60% Accuracy."),
	OnAddTrait = function (self, unit)
		unit.killshots = 0
	end,
	SetupDescription = T(919152877737, --[[ModItemTrait PercentageAccuracy SetupDescription]] "Has 60% kill shot chance due to expertise in bounty collecting contracts."),
	group = "PROJECTX",
	id = "PercentageAccuracy",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherHitEffects",
			Handler = function (self, target, effects, attacked_unit, weapon_def)
				local attacker = target
				if not attacker:IsHunting()
				or not IsKindOf(attacked_unit, "UnitAnimal") then
					return effects
				end
				if attacked_unit:IsDetected(attacker)
				and attacker:Random(100, "KillShot") > 60 then
					return effects
				end
				
				assert(HealthConditions.AnyWeapon_KillShot)
				-- Butchering order is issued only if the animal was killed by (last attacker was) a human.
				-- The animal dies before combat logic kicks in, so we have to explicitly say the animal was attacked by the unit
				attacked_unit:RegisterAttacker(attacker, GameTime())
				
				attacker.killshots = (attacker.killshots or 0) + 1
				
				return table.create_add(effects, {
					effect = "AnyWeapon_KillShot",
					weight = max_int,
				})
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyHitChance",
			Handler = function (self, target, base_chance, attacked_unit, weapon_def, target_dist)
				if target:IsSneaking() and not attacked_unit:IsDetected(target) then
					return 100
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(726778894106, --[[ModItemTrait Implants Description]] "+150 Health - Has cybernetic implants that enhance the persons health and recovery rate."),
	DisplayName = T(123091596473, --[[ModItemTrait Implants DisplayName |gender-variants]] "Cybernetic Implants"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 2000,
			prop = "HealthRegen",
		}),
		PlaceObj('ModifyHuman', {
			add = 150000,
			prop = "MaxHealth",
		}),
	},
	OnAddTrait = function (self, unit)
		unit.Health = unit.MaxHealth
	end,
	OnRemoveTrait = function (self, unit)
		unit.Health = unit.MaxHealth
	end,
	SetupDescription = T(859645442122, --[[ModItemTrait Implants SetupDescription]] "+150 Health - Has cybernetic implants that enhance the persons health and recovery rate."),
	group = "PROJECTX",
	id = "Implants",
}),
PlaceObj('ModItemTrait', {
	Description = T(197241108855, --[[ModItemTrait Thievery Description]] "+40% Movement Speed - The ability to move swiftly and manage stamina efficiently."),
	DisplayName = T(398010652022, --[[ModItemTrait Thievery DisplayName |gender-variants]] "Thieves Wit"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_WQLNIqE",
			add = 40000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(258694364718, --[[ModItemTrait Thievery SetupDescription]] "+40% Movement Speed - The ability to move swiftly and manage stamina efficiently. "),
	group = "PROJECTX",
	id = "Thievery",
}),
PlaceObj('ModItemTrait', {
	Description = T(565191820241, --[[ModItemTrait EnhAwareness Description]] "+2x Sight and Hearing - This person has enhanced awareness, capable of hearing and detecting from a further distance."),
	DisplayName = T(847746361614, --[[ModItemTrait EnhAwareness DisplayName |gender-variants]] "Enhanced Awareness"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 2000,
			prop = "HearingRange",
		}),
		PlaceObj('ModifyHuman', {
			mul = 2000,
			prop = "SightRange",
		}),
	},
	SetupDescription = T(387269059029, --[[ModItemTrait EnhAwareness SetupDescription]] "+2x Sight and Hearing - This person has enhanced awareness, capable of hearing and detecting from a further distance."),
	group = "PROJECTX",
	id = "EnhAwareness",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyCombatEfficiency",
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(162883469287, --[[ModItemTrait TinyMan Description]] "+5x Scrap Metal - The ability to find even the hardest of hidden loot due to there size."),
	DisplayName = T(276110198039, --[[ModItemTrait TinyMan DisplayName |gender-variants]] "Tiny Man"),
	SetupDescription = T(220100308077, --[[ModItemTrait TinyMan SetupDescription]] "+5x Scrap Metal - The ability to find even the hardest of hidden loot due to there size."),
	group = "PROJECTX",
	id = "TinyMan",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherSiteLootModifiers",
			Handler = function (self, target, modifiers, loot_id, action_id)
				if action_id == "Scavenge" or action_id == "Salvage" then
					modifiers = modifiers or {}
					modifiers.ScrapMetal = (modifiers.ScrapMetal or 1000) * 5
				end
				return modifiers
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyExpeditionReward",
			Handler = function (self, target, amount, resource)
				if resource == "ScrapMetal" then
					return amount * 5
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(415071771661, --[[ModItemTrait ArchitectureMastermind Description]] "+5x Construction Efficiency - Due to expert knowledge in the craft, this person constructs structures and devices five times as fast."),
	DisplayName = T(712123125920, --[[ModItemTrait ArchitectureMastermind DisplayName |gender-variants]] "Architecture Mastermind"),
	SetupDescription = T(134670339013, --[[ModItemTrait ArchitectureMastermind SetupDescription]] "+5x Construction Efficiency - Due to expert knowledge in the craft, this person constructs structures and devices five times as fast."),
	group = "PROJECTX",
	id = "ArchitectureMastermind",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" then
					efficiency = 5 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(287479973713, --[[ModItemTrait CannotCook Description]] "This person cannot perform cooking activities."),
	DisplayName = T(803962051027, --[[ModItemTrait CannotCook DisplayName |gender-variants]] "Cannot  Cook"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Cooking",
			FilterBy = "Cooking",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Cook",
		}),
	},
	SetupDescription = T(776998593530, --[[ModItemTrait CannotCook SetupDescription]] "This person cannot perform cooking activities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotCook",
}),
PlaceObj('ModItemTrait', {
	Description = T(361728260595, --[[ModItemTrait ArmoryDuty Description]] "+50% Durability to Weapons. Weapons get dirty at a slower pace."),
	DisplayName = T(582843317647, --[[ModItemTrait ArmoryDuty DisplayName |gender-variants]] "Armory Duty"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 500,
			prop = "WeaponDirtinessRate",
		}),
		PlaceObj('ModifyHuman', {
			mul = 500,
			prop = "WeaponRangedDirtinessRate",
		}),
	},
	SetupDescription = T(284417358525, --[[ModItemTrait ArmoryDuty SetupDescription]] "+50% Durability to Weapons. Weapons get dirty at a slower pace."),
	group = "PROJECTX",
	id = "ArmoryDuty",
}),
PlaceObj('ModItemTrait', {
	Description = T(619096647556, --[[ModItemTrait AI Description]] "-10 Health Per Hour - Due to being a machine, it cannot bleed. However it can leak fluid that it requires to function if damaged extensively."),
	DisplayName = T(268634824066, --[[ModItemTrait AI DisplayName |gender-variants]] "Artificial Intelligence"),
	OnAddTrait = function (self, unit)
		unit:AddModifier("RegeneratingBlood", "Bleeding", 1000, -10000, T(225174320646, "AI"))
	end,
	OnRemoveTrait = function (self, unit)
		unit:RemoveModifier("RegeneratingBlood", "Bleeding")
	end,
	SetupDescription = T(983142020769, --[[ModItemTrait AI SetupDescription]] "-10 Health Per Hour - Due to being a machine, it cannot bleed. However it can leak fluid that it requires to function if damaged extensively."),
	UserTags = set( "Android", "Human", "Robot" ),
	Weight = 80,
	group = "PROJECTX",
	id = "AI",
}),
PlaceObj('ModItemTrait', {
	Description = T(111383546890, --[[ModItemTrait HalfMachineHalfMan Description]] "-50% Pain - Augmented Cybernetic Functions make this person feel less pain."),
	DisplayName = T(969715651395, --[[ModItemTrait HalfMachineHalfMan DisplayName |gender-variants]] "Half Machine, Half Man"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = -50000,
			prop = "Pain",
		}),
	},
	SetupDescription = T(654422081427, --[[ModItemTrait HalfMachineHalfMan SetupDescription]] "-50% Pain - Augmented Cybernetic Functions make this person feel less pain."),
	group = "PROJECTX",
	id = "HalfMachineHalfMan",
}),
PlaceObj('ModItemTrait', {
	Description = T(322536163315, --[[ModItemTrait droid_augmented_sintis Description]] "Sintis grows and flings quills at all times, making even standing near this droid deadly for foes!. (AoE damage field, combat override, Melee Attack speed))"),
	DisplayName = T(655316307459, --[[ModItemTrait droid_augmented_sintis DisplayName |gender-variants]] "Half Machine, Half... insect?"),
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "autoid_ucCehPy_Sybfvof",
			Inclination = "Normal",
			Skill = "Combat",
		}),
	},
	SetupDescription = T(575146185789, --[[ModItemTrait droid_augmented_sintis SetupDescription]] "This droid has been upgraded and fused with Zancer based organs."),
	group = "PROJECTX",
	id = "droid_augmented_sintis",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyAttackCooldown",
			Handler = function (self, target, cooldown, weapon_def)
				if weapon_def.AttackType == "melee" then
					cooldown = cooldown / 3
				end
				return cooldown
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "OnObjUpdate",
			Handler = function (self, target, time, update_interval)
				--DbgClear(true)
				if not IsValidPos(target)
				or not IsAliveAndConscious(target)
				or target:IsSleeping() then
					return
				end
				local weapon_def = Resources["SintisPulse"]
				local radius = 5*guim
				local class = "Animal"
				MapForEach(target, radius, class, nil, nil, const.gofSyncObject, function(unit, radius)
					if unit == target
					or unit.CombatGroup == target.CombatGroup
					or not unit:IsCloser(target, radius)
					or not IsAliveAndConscious(unit)
					or unit:IsSleeping()
					then
						return
					end
					local cond = unit:FirstEffectById("SintisShard")
					if cond then
						unit:RefreshExpiration(cond)
					else
						print("Found someone without a Sintis Spike wound!")
						DoDamageAOE(weapon_def,target,target,nil,nil)
					end
				end,radius)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(760418144240, --[[ModItemTrait droid_augmented_megdev Description]] "Megdeb padded literal under-armor. Nomatter what the user wears. (All Deflect chance, HP, combat override)"),
	DisplayName = T(855898112647, --[[ModItemTrait droid_augmented_megdev DisplayName |gender-variants]] "Half Machine, Half... insect?"),
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "",
			Inclination = "Normal",
			Skill = "Combat",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_WJwuPNa",
			add = 200000,
			prop = "MaxHealth",
		}),
	},
	SetupDescription = T(250103951060, --[[ModItemTrait droid_augmented_megdev SetupDescription]] "This droid has been upgraded and fused with Zancer based organs. (All Deflect chance, HP, combat override)"),
	group = "PROJECTX",
	id = "droid_augmented_megdev",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "AvoidAttackModify",
			Handler = function (self, target, hit_chance, attacker, weapon_def, attacker_dist)
				return hit_chance / 3
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(379708338278, --[[ModItemTrait droid_augmented_Nuedo Description]] "This droid's behavior is... odd after each CPU has a Nuedo growing on it.... It's able to trade, learn, and hack faster than any of us...."),
	DisplayName = T(990411974787, --[[ModItemTrait droid_augmented_Nuedo DisplayName |gender-variants]] "Half Machine, Half... insect?"),
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "",
			Inclination = "Interested",
			Skill = "Trade",
		}),
		PlaceObj('ModifySkill', {
			Id = "autoid_ucCehPy_mi3FitL",
			Inclination = "Interested",
			Skill = "Hacking",
		}),
		PlaceObj('ModifySkill', {
			Id = "",
			Inclination = "Interested",
			Skill = "Intellectual",
		}),
	},
	SetupDescription = T(911816745228, --[[ModItemTrait droid_augmented_Nuedo SetupDescription]] "This droid has been upgraded and fused with Zancer based organs."),
	group = "PROJECTX",
	id = "droid_augmented_Nuedo",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(872353404199, --[[ModItemTrait droid_augmented_Adricon Description]] "Adricon means this droids retina's always switch to the best light spectrum to see. And uses "),
	DisplayName = T(442827960668, --[[ModItemTrait droid_augmented_Adricon DisplayName |gender-variants]] "Half Machine, Half... insect?"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_JtSzSmk",
			mul = 0,
			prop = "darkness_penalty",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_qRMMiWx",
			mul = 250,
			prop = "WholeBodyDirtinessRate",
		}),
	},
	SetupDescription = T(945286198845, --[[ModItemTrait droid_augmented_Adricon SetupDescription]] "This droid has been upgraded and fused with Zancer based organs."),
	group = "PROJECTX",
	id = "droid_augmented_Adricon",
}),
PlaceObj('ModItemTrait', {
	Description = T(847048690161, --[[ModItemTrait droid_augmented_Bitherm Description]] "Bitherm insulation means this droid can acts as a local air heater/cool. Plus now it can touch incredibly hot or cold things! (Soldering speed, Aura of temperature tolerance up."),
	DisplayName = T(753438730715, --[[ModItemTrait droid_augmented_Bitherm DisplayName |gender-variants]] "Half Machine, Half... insect?"),
	SetupDescription = T(982842101704, --[[ModItemTrait droid_augmented_Bitherm SetupDescription]] "This droid has been upgraded and fused with Zancer based organs."),
	group = "PROJECTX",
	id = "droid_augmented_Bitherm",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "OnObjUpdate",
			Handler = function (self, target, time, update_interval)
				--DbgClear(true)
				if not IsValidPos(target)
				or not IsAliveAndConscious(target)
				or target:IsSleeping() then
					return
				end
				local radius = 50*guim
				local class = "Human"
				--DbgAddCircle(self, radius)
				MapForEach(target, radius, class, nil, nil, const.gofSyncObject, function(unit, radius)
					if unit == target
					or unit.CombatGroup ~= target.CombatGroup
					or not unit:IsCloser(target, radius)
					or not IsAliveAndConscious(unit)
					or unit:IsSleeping()
					then
						return
					end
					--DbgAddVector(unit)
					local cond = unit:FirstEffectById("BithermAura")
					if cond then
						unit:RefreshExpiration(cond)
					else
						cond = unit:AddHealthCondition("BithermAura", "trait")
					end
				end, radius)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(135496802322, --[[ModItemTrait droid_augmented_Toco Description]] "Can secrete Toco created chemicals, aiding in situations where pherimones, or specific compounds are useful. (Farming & Taming Speed, Calming)"),
	DisplayName = T(928708076499, --[[ModItemTrait droid_augmented_Toco DisplayName |gender-variants]] "Half Machine, Half... insect?"),
	OnAddTrait = function (self, unit)
		unit:SetTrait("Calming", true)
	end,
	SetupDescription = T(184311749326, --[[ModItemTrait droid_augmented_Toco SetupDescription]] "This droid has been upgraded and fused with Zancer based organs."),
	group = "PROJECTX",
	id = "droid_augmented_Toco",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Biology" or activity_id == "Harvesting" or activity_id == "Planting" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(101931793891, --[[ModItemTrait RocksNStone Description]] "The ability to find double stone, ore and silica from mining activities and expeditions."),
	DisplayName = T(699189934124, --[[ModItemTrait RocksNStone DisplayName |gender-variants]] "Rocks & Stone"),
	group = "PROJECTX",
	id = "RocksNStone",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherSiteLootModifiers",
			Handler = function (self, target, modifiers, loot_id, action_id)
				if action_id == "Mining" then
					modifiers = modifiers or {}
					modifiers.Stone = (modifiers.Stone or 1000) * 2
					modifiers.Ore = (modifiers.Ore or 1000) * 2
					modifiers.Silicon = (modifiers.Silicon or 1000) * 2
				end
				return modifiers
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyExpeditionReward",
			Handler = function (self, target, amount, resource)
				if resource == "Ore" or resource == "Silicon" or resource == "Stone" then
					return amount * 2
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(877525167936, --[[ModItemTrait Untrustworthy Description]] "Can be difficult to trust."),
	DisplayName = T(703019103598, --[[ModItemTrait Untrustworthy DisplayName |gender-variants]] "Untrustworthy"),
	SetupDescription = T(891856457551, --[[ModItemTrait Untrustworthy SetupDescription]] "Can be difficult to trust."),
	group = "PROJECTX",
	id = "Untrustworthy",
}),
PlaceObj('ModItemTrait', {
	Description = T(145396175152, --[[ModItemTrait TargetPractice Description]] "+2x Reload Speed - Shoots twice as fast with ranged weapons."),
	DisplayName = T(806099730776, --[[ModItemTrait TargetPractice DisplayName |gender-variants]] "Target Practice"),
	SetupDescription = T(318331447020, --[[ModItemTrait TargetPractice SetupDescription]] "+2x Reload Speed - Shoots twice as fast with ranged weapons."),
	group = "PROJECTX",
	id = "TargetPractice",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyAttackCooldown",
			Handler = function (self, target, cooldown, weapon_def)
				if weapon_def.AttackType ~= "melee" then
					cooldown = cooldown / 2
				end
				return cooldown
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Conditions = {
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "Trade",
			Time = 40000,
		}),
	},
	Description = T(960978202526, --[[ModItemTrait DelightedTrader Description]] "Gains happiness when trading."),
	DisplayName = T(573848445589, --[[ModItemTrait DelightedTrader DisplayName |gender-variants]] "Delighted Trader"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "DelightedTrader",
		}),
	},
	SetupDescription = T(983324971249, --[[ModItemTrait DelightedTrader SetupDescription]] "Gains happiness when trading."),
	Weight = 90,
	group = "PROJECTX",
	id = "DelightedTrader",
}),
PlaceObj('ModItemTrait', {
	Description = T(750213883073, --[[ModItemTrait CannotCraft Description]] "This person cannot perform any crafting activities."),
	DisplayName = T(367873970067, --[[ModItemTrait CannotCraft DisplayName |gender-variants]] "Cannot Craft"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Assembling",
			FilterBy = "Crafting",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Craft",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Crafting",
			FilterBy = "Crafting",
			Id = "",
			Reason = "Cannot Craft",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Tailoring",
			FilterBy = "Crafting",
			Id = "autoid_fDsBmM1_Ulk8zSY",
			Reason = "Cannot Craft",
		}),
	},
	SetupDescription = T(629479680819, --[[ModItemTrait CannotCraft SetupDescription]] "This person cannot perform any crafting activities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotCraft",
}),
PlaceObj('ModItemTrait', {
	Description = T(161869765704, --[[ModItemTrait ChefsMachete Description]] "Master Chef's are efficient in the usage of blades, giving them increased efficiency when in combat. "),
	DisplayName = T(165850028308, --[[ModItemTrait ChefsMachete DisplayName |gender-variants]] "Chef's Machete"),
	SetupDescription = T(465176207709, --[[ModItemTrait ChefsMachete SetupDescription]] "Master Chef's are efficient in the usage of blades, giving them increased efficiency when in combat. "),
	group = "PROJECTX",
	id = "ChefsMachete",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyCombatEfficiency",
			Handler = function (self, target, efficiency)
				efficiency = efficiency*2
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(368706191777, --[[ModItemTrait ChildProdigy Description]] "+75% Movement Speed - This child has been biologically altered in a lab tube before birth granting them increased abilities."),
	DisplayName = T(776792208463, --[[ModItemTrait ChildProdigy DisplayName |gender-variants]] "Child Prodigy"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 75000,
			prop = "Movement",
		}),
	},
	group = "PROJECTX",
	id = "ChildProdigy",
}),
PlaceObj('ModItemTrait', {
	Description = T(870140542133, --[[ModItemTrait CarbonSupply Description]] "Has a unique contact which grants access to the ''Supply'' of ''Carbon Nanotubes'' at the ''Trading Shuttle''."),
	DisplayName = T(208426496410, --[[ModItemTrait CarbonSupply DisplayName |gender-variants]] "Carbon Supply"),
	SetupDescription = T(199437492826, --[[ModItemTrait CarbonSupply SetupDescription]] "Has a unique contact which grants access to the ''Supply'' of ''Carbon Nanotubes'' at the ''Trading Shuttle''"),
	group = "PROJECTX",
	id = "CarbonSupply",
}),
PlaceObj('ModItemTrait', {
	Description = T(782059303610, --[[ModItemTrait BigBrain Description]] "+Increased Chance of Insights - Has occasional insights that boost the current research progress."),
	DisplayName = T(815107573316, --[[ModItemTrait BigBrain DisplayName |gender-variants]] "Big Brain"),
	SetupDescription = T(269181393170, --[[ModItemTrait BigBrain SetupDescription]] "+Increased Chance of Insights - Has occasional insights that boost the current research progress."),
	group = "PROJECTX",
	id = "BigBrain",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "NewDayStarted",
			Handler = function (self, year, day)
				ForEachHumanWithTrait(self.id, function(survivor)
					survivor.research_insight = survivor:Random(100, self.id) < 25
				end)
			end,
		}),
	},
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "StartResearch",
			Handler = function (self, target, tech_id, research_center)
				if not target.research_insight then
					return
				end
				target.research_insight = nil
				local _, points = target.player:GetTechCostAndPoints(tech_id)
				-- get the amount of points, which can be reserved
				local reserved = research_center:ReserveTechResearchPoints(tech_id, points / 2)
				-- release the reserved points
				research_center:ReserveTechResearchPoints(tech_id, -reserved)
				research_center:AddTechResearchPoints(tech_id, reserved)
				Msg("ResearchInsight", target, tech_id)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(867154377987, --[[ModItemTrait ShortAttentionSpan Description]] "+2x Exhaustion Rate - Needs to relax twice as often, requires more entertainment."),
	DisplayName = T(534026553702, --[[ModItemTrait ShortAttentionSpan DisplayName |gender-variants]] "Short-Attention Span"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 2000,
			prop = "RelaxationLossPerDay",
		}),
	},
	group = "PROJECTX",
	id = "ShortAttentionSpan",
}),
PlaceObj('ModItemTrait', {
	Description = T(582124313475, --[[ModItemTrait CannotCombat Description]] "This person cannot perform combat activities."),
	DisplayName = T(995904460850, --[[ModItemTrait CannotCombat DisplayName |gender-variants]] "Cannot Combat"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Combat",
			FilterBy = "Combat",
			Reason = "Cannot Combat",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Hunting",
			FilterBy = "Combat",
			Reason = "Cannot Combat",
		}),
	},
	SetupDescription = T(759175492707, --[[ModItemTrait CannotCombat SetupDescription]] "This person cannot perform combat activities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotCombat",
}),
PlaceObj('ModItemTrait', {
	Description = T(619813801571, --[[ModItemTrait GeneticallyModified Description]] "+130 Health; Recovers Health three times as quick."),
	DisplayName = T(941330398981, --[[ModItemTrait GeneticallyModified DisplayName |gender-variants]] "Genetically Modified"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 3000,
			prop = "HealthRegen",
		}),
		PlaceObj('ModifyHuman', {
			add = 130000,
			prop = "MaxHealth",
		}),
	},
	OnAddTrait = function (self, unit)
		unit.Health = unit.MaxHealth
	end,
	OnRemoveTrait = function (self, unit)
		unit.Health = unit.MaxHealth
	end,
	group = "PROJECTX",
	id = "GeneticallyModified",
}),
PlaceObj('ModItemTrait', {
	Description = T(629539728638, --[[ModItemTrait AdvEngSpeed Description]] "+40% Movement Speed - Robotic Engineering has come a long way, this person is equipped with the ability to move at an increased rate."),
	DisplayName = T(534592351203, --[[ModItemTrait AdvEngSpeed DisplayName |gender-variants]] "Advanced Engineered Speed"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 40000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(978102247995, --[[ModItemTrait AdvEngSpeed SetupDescription]] "+40% Movement Speed - Robotic Engineering has come a long way, this person is equipped with the ability to move at an increased rate."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "AdvEngSpeed",
}),
PlaceObj('ModItemTrait', {
	Description = T(362182394879, --[[ModItemTrait EnergyCrystalSupply Description]] "Has a unique contact which grants access to the ''Energy Crystal'' supply at the 'Trading Shuttle''."),
	DisplayName = T(291545104395, --[[ModItemTrait EnergyCrystalSupply DisplayName |gender-variants]] "Energy Crystal Supply"),
	SetupDescription = T(795127871870, --[[ModItemTrait EnergyCrystalSupply SetupDescription]] "Has a unique contact which grants access to the ''Energy Crystal'' supply at the 'Trading Shuttle''."),
	group = "PROJECTX",
	id = "EnergyCrystalSupply",
}),
PlaceObj('ModItemTrait', {
	Description = T(820967423997, --[[ModItemTrait Machine Description]] "Sleep & Food are not required. Will not consume food nor sleep. Also cannot be infected by diseases."),
	DisplayName = T(223005182926, --[[ModItemTrait Machine DisplayName |gender-variants]] "Machine"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_htO6BjM",
			add = -9999999,
			add_max = 100,
			add_min = 100,
			prop = "HungryThreshold",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_mH7bYo",
			add = -9999999000,
			add_max = 100000,
			add_min = 100000,
			prop = "SleepTiredThreshold",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_fzoL4cO",
			mul = 0,
			prop = "EnergyUsePerDay",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_eRZPRW",
			mul = 0,
			prop = "FatiguePerDay",
		}),
		PlaceObj('ModifyUnitActivity', {
			Activity = "Sleeping",
			Id = "autoid_ucCehPy_kyEwRuq",
			Reason = "robot",
		}),
	},
	UserTags = set( "Android", "Human", "Robot" ),
	Weight = 80,
	group = "PROJECTX",
	id = "Machine",
}),
PlaceObj('ModItemTrait', {
	Description = T(830454767329, --[[ModItemTrait KillingSpree Description]] "+Increased Happiness on Kill - Gains an increase in adrenaline when killing or observing death."),
	DisplayName = T(534531438173, --[[ModItemTrait KillingSpree DisplayName |gender-variants]] "Killing Spree"),
	OnAddTrait = function (self, unit)
		unit.tamed_animals = 0
	end,
	SetupDescription = T(451813845572, --[[ModItemTrait KillingSpree SetupDescription]] "+Increased Happiness on Kill - Gains an increase in adrenaline when killing or observing death."),
	Weight = 50,
	group = "PROJECTX",
	id = "KillingSpree",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "UnitDied",
			Handler = function (self, unit)
				if not IsValid(unit) then
					return
				end
				for _, survivor in ipairs(AllSurvivors) do
					if survivor ~= unit
					and survivor:HasTrait(self.id)
					and survivor:IsCloser(unit, survivor:GetDetectionRange())
					and survivor:IsAwake()
					and survivor:CanDetect(unit) then
						survivor:AddHappinessFactor("Bloodlust")
					end
				end
			end,
		}),
	},
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "TrainAnimal" or activity_id == "PacifyUnit" then
					efficiency = 2 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Conditions = {
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "Trade",
			Time = 40000,
		}),
	},
	Description = T(135854465085, --[[ModItemTrait TradersDelight Description]] "Gains happiness when performing trading tasks."),
	DisplayName = T(298123846516, --[[ModItemTrait TradersDelight DisplayName |gender-variants]] "Traders Delight"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "TradersDelight",
		}),
	},
	SetupDescription = T(454766862852, --[[ModItemTrait TradersDelight SetupDescription]] "Gains happiness when performing trading tasks."),
	group = "PROJECTX",
	id = "TradersDelight",
}),
PlaceObj('ModItemTrait', {
	Description = T(706520114227, --[[ModItemTrait x2ClothCraft Description]] "2x work speed when crafting stuff from cloth."),
	DisplayName = T(917593677870, --[[ModItemTrait x2ClothCraft DisplayName |gender-variants]] "Cloth Expert"),
	group = "PROJECTX",
	id = "x2ClothCraft",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if IsKindOf(activity_obj, "ProductionActivityObject") then
					local def = Recipes[activity_obj.recipe_id]
					for _, res_amount in ipairs(def.InputResources) do
						local res = res_amount.resource
						if res == "Cotton" then
							efficiency = 2 * efficiency
							break
						end
					end
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(463746076402, --[[ModItemTrait TamerJunoBrute Description]] "This person can summon a 'Tamed Juno Demolisher' through the 'Communication Relay'."),
	DisplayName = T(978813997466, --[[ModItemTrait TamerJunoBrute DisplayName |gender-variants]] "Juno Brute"),
	SetupDescription = T(833023802015, --[[ModItemTrait TamerJunoBrute SetupDescription]] "This person can summon a 'Tamed Juno Demolisher' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerJunoBrute",
}),
PlaceObj('ModItemTrait', {
	Description = T(830494660561, --[[ModItemTrait Cybernetic Description]] "+150 Max Health - Augmented Cybernetic Functions, usage of less energy per day and does not feel pain."),
	DisplayName = T(771133878790, --[[ModItemTrait Cybernetic DisplayName |gender-variants]] "Cybernetic Functions"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_MUw8n2y_bTImnPA",
			mul = 500,
			prop = "EnergyUsePerDay",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_MUw8n2y_bmuu2u",
			mul = 500,
			prop = "FatiguePerDay",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_MUw8n2y_MgqCmAz",
			add = 150000,
			prop = "MaxHealth",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_MUw8n2y_EBbNFmH",
			add = -100000,
			prop = "Pain",
		}),
	},
	SetupDescription = T(342088532230, --[[ModItemTrait Cybernetic SetupDescription]] "+150 Max Health - Augmented Cybernetic Functions, usage of less energy per day and does not feel pain."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "Cybernetic",
}),
PlaceObj('ModItemTrait', {
	Description = T(174774682968, --[[ModItemTrait Mushrooms Description]] "-30% Relaxation Drain - Needs less entertainment as they find entertainment in the smallest of things."),
	DisplayName = T(764148172387, --[[ModItemTrait Mushrooms DisplayName |gender-variants]] "Mushrooms"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 700,
			prop = "RelaxationLossPerDay",
		}),
	},
	SetupDescription = T(622127736974, --[[ModItemTrait Mushrooms SetupDescription]] "-30% Relaxation Drain - Needs less entertainment as they find entertainment in the smallest of things."),
	group = "PROJECTX",
	id = "Mushrooms",
}),
PlaceObj('ModItemTrait', {
	Description = T(431948685582, --[[ModItemTrait Insanity Description]] "Loves the adrenaline rush when killing or observing death."),
	DisplayName = T(621110102422, --[[ModItemTrait Insanity DisplayName |gender-variants]] "Insanity"),
	Weight = 50,
	group = "PROJECTX",
	id = "Insanity",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "UnitDied",
			Handler = function (self, unit, reason)
				if not IsValid(unit) then
					return
				end
				for _, survivor in ipairs(AllSurvivors) do
					if survivor ~= unit
					and survivor:HasTrait(self.id)
					and survivor:IsCloser(unit, survivor:GetDetectionRange())
					and survivor:IsAwake()
					and survivor:CanDetect(unit) then
						survivor:AddHappinessFactor("Insanity")
					end
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(532495933964, --[[ModItemTrait Assassin Description]] "+50% chance to deal kill shot while hunting (100% when the prey is unaware)."),
	DisplayName = T(285409912097, --[[ModItemTrait Assassin DisplayName |gender-variants]] "Assassin"),
	OnAddTrait = function (self, unit)
		unit.killshots = 0
	end,
	SetupDescription = T(548978284891, --[[ModItemTrait Assassin SetupDescription]] "+50% chance to deal kill shot while hunting (100% when the prey is unaware)."),
	group = "PROJECTX",
	id = "Assassin",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherHitEffects",
			Handler = function (self, target, effects, attacked_unit, weapon_def)
				local attacker = target
				if not attacker:IsHunting()
				or not IsKindOf(attacked_unit, "UnitAnimal") then
					return effects
				end
				if attacked_unit:IsDetected(attacker)
				and attacker:Random(100, "KillShot") > 50 then
					return effects
				end
				
				assert(HealthConditions.AnyWeapon_KillShot)
				-- Butchering order is issued only if the animal was killed by (last attacker was) a human.
				-- The animal dies before combat logic kicks in, so we have to explicitly say the animal was attacked by the unit
				attacked_unit:RegisterAttacker(attacker, GameTime())
				
				attacker.killshots = (attacker.killshots or 0) + 1
				
				return table.create_add(effects, {
					effect = "AnyWeapon_KillShot",
					weight = max_int,
				})
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyHitChance",
			Handler = function (self, target, base_chance, attacked_unit, weapon_def, target_dist)
				if target:IsSneaking() and not attacked_unit:IsDetected(target) then
					return 100
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(892459664107, --[[ModItemTrait AdvFirstAid Description]] "+150 Health - +x2 Health Regen - Due to having knowledge in advanced medical treatment, this person is much healthier and can recover from injuries twice as fast."),
	DisplayName = T(326043886568, --[[ModItemTrait AdvFirstAid DisplayName |gender-variants]] "Advanced First Aid"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 2000,
			prop = "HealthRegen",
		}),
		PlaceObj('ModifyHuman', {
			add = 150000,
			prop = "MaxHealth",
		}),
	},
	OnAddTrait = function (self, unit)
		unit.Health = unit.MaxHealth
	end,
	OnRemoveTrait = function (self, unit)
		unit.Health = unit.MaxHealth
	end,
	SetupDescription = T(821818315044, --[[ModItemTrait AdvFirstAid SetupDescription]] "+150 Health - +x2 Health Regen - Due to having knowledge in advanced medical treatment, this person is much healthier and can recover from injuries twice as fast."),
	group = "PROJECTX",
	id = "AdvFirstAid",
}),
PlaceObj('ModItemTrait', {
	Description = T(970162791299, --[[ModItemTrait CannotFarm Description]] "This person cannot perform any farming activities."),
	DisplayName = T(585950046492, --[[ModItemTrait CannotFarm DisplayName |gender-variants]] "Cannot Farm"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Fertilizing",
			FilterBy = "Farming",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Farm",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Harvesting",
			FilterBy = "Farming",
			Id = "",
			Reason = "Cannot Farm",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Planting",
			FilterBy = "Farming",
			Id = "autoid_fDsBmM1_Ulk8zSY",
			Reason = "Cannot Farm",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Ranching",
			FilterBy = "Farming",
			Id = "",
			Reason = "Cannot Farm",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "TrainAnimal",
			FilterBy = "Farming",
			Id = "autoid_fDsBmM1_gwohXg",
			Reason = "Cannot Farm",
		}),
	},
	SetupDescription = T(128636092161, --[[ModItemTrait CannotFarm SetupDescription]] "This person cannot perform any farming activities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotFarm",
}),
PlaceObj('ModItemTrait', {
	Description = T(734879710242, --[[ModItemTrait MarksmanWithin Description]] "This person has a 40% chance to deal a kill shot while hunting prey (100% when the prey is unaware), also twice as fast at butchering a killed prey. Will sometimes teach others Combat skills."),
	DisplayName = T(949466611837, --[[ModItemTrait MarksmanWithin DisplayName |gender-variants]] "Marksman Within"),
	OnAddTrait = function (self, unit)
		unit.killshots = 0
	end,
	SetupDescription = T(233063654599, --[[ModItemTrait MarksmanWithin SetupDescription]] "This person has a 40% chance to deal a kill shot while hunting prey (100% when the prey is unaware), also twice as fast at butchering a killed prey. Will sometimes teach others Combat skills."),
	group = "PROJECTX",
	id = "MarksmanWithin",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "NewDayStarted",
			Handler = function (self, year, day)
				ForEachHumanWithTrait(self.id, function(survivor)
					survivor.research_insight = survivor:Random(100, self.id) < 25
				end)
			end,
		}),
	},
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherHitEffects",
			Handler = function (self, target, effects, attacked_unit, weapon_def)
				local attacker = target
				if not attacker:IsHunting()
				or not IsKindOf(attacked_unit, "UnitAnimal") then
					return effects
				end
				if attacked_unit:IsDetected(attacker)
				and attacker:Random(100, "KillShot") > 25 then
					return effects
				end
				
				assert(HealthConditions.AnyWeapon_KillShot)
				-- Butchering order is issued only if the animal was killed by (last attacker was) a human.
				-- The animal dies before combat logic kicks in, so we have to explicitly say the animal was attacked by the unit
				attacked_unit:RegisterAttacker(attacker, GameTime())
				
				attacker.killshots = (attacker.killshots or 0) + 1
				
				return table.create_add(effects, {
					effect = "AnyWeapon_KillShot",
					weight = max_int,
				})
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyHitChance",
			Handler = function (self, target, base_chance, attacked_unit, weapon_def, target_dist)
				if target:IsSneaking() and not attacked_unit:IsDetected(target) then
					return 100
				end
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
							  efficiency = 2 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(532132503668, --[[ModItemTrait DroidTrade Description]] "Nobody wants to commit business with a droid. Droids cannot trade at all due to this."),
	DisplayName = T(995349481592, --[[ModItemTrait DroidTrade DisplayName |gender-variants]] "Trade - Droid"),
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Trade",
			FilterBy = "Trade",
			Id = "autoid_fDsBmM1_DgLBLCo",
			Reason = "Cannot Trade",
		}),
	},
	SetupDescription = T(767965915811, --[[ModItemTrait DroidTrade SetupDescription]] "Nobody wants to commit business with a droid. Droids cannot trade at all due to this."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "DroidTrade",
}),
PlaceObj('ModItemTrait', {
	Description = T(302713983204, --[[ModItemTrait OneWithNature Description]] "Has +50%  Manipulation and Movement efficiency and increased Happiness while outside, which are decreased inside."),
	DisplayName = T(133146281163, --[[ModItemTrait OneWithNature DisplayName |gender-variants]] "One With Nature"),
	OnAddTrait = function (self, unit)
		local outside = unit:IsOutside()
		for _, reaction in ipairs(self.unit_reactions) do
			if reaction.Event == "OutsideStateChanged" then
				reaction.Handler(self, unit, outside)
			end
		end
	end,
	OnRemoveTrait = function (self, unit)
		CreateGameTimeThread(function(unit)
			SuspendObjModified("OneWithNature")
			unit:RemoveHealthConditions("OneWithNature_Inside")
			unit:RemoveHappinessFactors("OneWithNature_Inside")
			unit:RemoveHealthConditions("OneWithNature_Outside")
			unit:RemoveHappinessFactors("OneWithNature_Outside")
			ResumeObjModified("OneWithNature")
		end, unit)
	end,
	SetupDescription = T(185496409698, --[[ModItemTrait OneWithNature SetupDescription]] "Has +50%  Manipulation and Movement efficiency and increased Happiness while outside, which are decreased inside."),
	group = "PROJECTX",
	id = "OneWithNature",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "OutsideStateChanged",
			Handler = function (self, target, outside)
				CreateGameTimeThread(function(target, outside)
					SuspendObjModified("OneWithNature")
					if outside then
						target:AddHealthCondition("OneWithNature_Outside")
						target:AddHappinessFactor("OneWithNature_Outside")
						target:RemoveHealthConditions("OneWithNature_Inside")
						target:RemoveHappinessFactors("OneWithNature_Inside")
					else
						target:AddHealthCondition("OneWithNature_Inside")
						target:AddHappinessFactor("OneWithNature_Inside")
						target:RemoveHealthConditions("OneWithNature_Outside")
						target:RemoveHappinessFactors("OneWithNature_Outside")
					end
					ResumeObjModified("OneWithNature")
				end, target, outside)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(588063346029, --[[ModItemTrait ArtisticSurgeon Description]] "Experienced in performing surgery, has an increased success rate and 3x the butchering speed."),
	DisplayName = T(952071282828, --[[ModItemTrait ArtisticSurgeon DisplayName |gender-variants]] "Artistic Surgeon"),
	SetupDescription = T(602848417182, --[[ModItemTrait ArtisticSurgeon SetupDescription]] "Experienced in performing surgery, has an increased success rate and 3x the butchering speed."),
	group = "PROJECTX",
	id = "ArtisticSurgeon",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
							  efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(288807072059, --[[ModItemTrait MoneySupplyDrop Description]] "Has exclusive access to investor contacts and can request Galacticoin supply drops."),
	DisplayName = T(948685669902, --[[ModItemTrait MoneySupplyDrop DisplayName |gender-variants]] "Investor Contacts"),
	group = "PROJECTX",
	id = "MoneySupplyDrop",
}),
PlaceObj('ModItemTrait', {
	Description = T(204989029414, --[[ModItemTrait TamerScissorhandBrute Description]] "This person can summon a 'Tamed Scissorhand Demolisher' through the 'Communication Relay'."),
	DisplayName = T(988611666545, --[[ModItemTrait TamerScissorhandBrute DisplayName |gender-variants]] "Scissorhand Demolisher"),
	SetupDescription = T(315477391571, --[[ModItemTrait TamerScissorhandBrute SetupDescription]] "This person can summon a 'Tamed Scissorhand Demolisher' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerScissorhandBrute",
}),
PlaceObj('ModItemTrait', {
	Description = T(676305913963, --[[ModItemTrait BioAdv Description]] "Cannot experience meltdowns and has increased learning speed due to bionic implants."),
	DisplayName = T(945122612490, --[[ModItemTrait BioAdv DisplayName |gender-variants]] "Bionic Advancements "),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 1500,
			prop = "SkillLearning",
		}),
		PlaceObj('ModifyHuman', {
			add = -100000000000,
			prop = "BreakdownChanceHourlyDecrease",
		}),
	},
	group = "PROJECTX",
	id = "BioAdv",
}),
PlaceObj('ModItemTrait', {
	Description = T(799405049483, --[[ModItemTrait SkilledCombat Description]] "+2x Combat Efficiency - Twice as efficient in combat."),
	DisplayName = T(582945038257, --[[ModItemTrait SkilledCombat DisplayName |gender-variants]] "Skilled Combatant"),
	SetupDescription = T(482810657047, --[[ModItemTrait SkilledCombat SetupDescription]] "+2x Combat Efficiency - Twice as efficient in combat."),
	group = "PROJECTX",
	id = "SkilledCombat",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyCombatEfficiency",
			Handler = function (self, target, efficiency)
				efficiency = efficiency*2
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(244378817802, --[[ModItemTrait ExcavatorSupplyDrop Description]] "This person has contacts that allow him to call in a supply crate containing 'Stone', 'Silicon' and 'Ore' materials."),
	DisplayName = T(545761737904, --[[ModItemTrait ExcavatorSupplyDrop DisplayName |gender-variants]] "Excavator's Supply Drop"),
	SetupDescription = T(670727906316, --[[ModItemTrait ExcavatorSupplyDrop SetupDescription]] "This person has contacts that allow him to call in a supply crate containing 'Stone', 'Silicon' and 'Ore' materials."),
	group = "PROJECTX",
	id = "ExcavatorSupplyDrop",
}),
PlaceObj('ModItemTrait', {
	Description = T(861478491237, --[[ModItemTrait BigBoned Description]] "+30% Hunger Rate - Due to this persons large build this person gets hungry 30% quicker."),
	DisplayName = T(142870502219, --[[ModItemTrait BigBoned DisplayName |gender-variants]] "Big Boned"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 1300,
			prop = "EnergyUsePerDay",
		}),
	},
	SetupDescription = T(227564146231, --[[ModItemTrait BigBoned SetupDescription]] "+30% Hunger Rate - Due to this persons large build this person gets hungry 30% quicker."),
	group = "PROJECTX",
	id = "BigBoned",
}),
PlaceObj('ModItemTrait', {
	Description = T(566388240081, --[[ModItemTrait ConcreteSupply Description]] "Has a unique contact which grants access to the ''Concrete'' supply at the 'Trading Shuttle''."),
	DisplayName = T(664971169226, --[[ModItemTrait ConcreteSupply DisplayName |gender-variants]] "Concrete Supply Contacts"),
	SetupDescription = T(242327220798, --[[ModItemTrait ConcreteSupply SetupDescription]] "Has a unique contact which grants access to the ''Concrete'' supply at the 'Trading Shuttle''."),
	group = "PROJECTX",
	id = "ConcreteSupply",
}),
PlaceObj('ModItemTrait', {
	Description = T(488103681252, --[[ModItemTrait CyberCrystalSupply Description]] "Has a unique contact which grants access to the ''Cyber Crystal'' supply at the 'Trading Shuttle''."),
	DisplayName = T(681114516803, --[[ModItemTrait CyberCrystalSupply DisplayName |gender-variants]] "Cyber Crystal Supply Contact"),
	SetupDescription = T(335267066397, --[[ModItemTrait CyberCrystalSupply SetupDescription]] "Has a unique contact which grants access to the ''Cyber Crystal'' supply at the 'Trading Shuttle''."),
	group = "PROJECTX",
	id = "CyberCrystalSupply",
}),
PlaceObj('ModItemTrait', {
	Description = T(201398740779, --[[ModItemTrait HighFocused Description]] "+4x Assembling and Crafting Speed - Works four times faster when assembling or crafting due to being under the influence."),
	DisplayName = T(916678684697, --[[ModItemTrait HighFocused DisplayName |gender-variants]] "'High'ly Focused"),
	group = "PROJECTX",
	id = "HighFocused",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Assembling" or activity_id == "Crafting" then
					efficiency = 4 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(923690315417, --[[ModItemTrait TamerDrakka Description]] "This person can summon 3 'Tamed Drakka's' through the 'Communication Relay'."),
	DisplayName = T(634947121749, --[[ModItemTrait TamerDrakka DisplayName |gender-variants]] "Drakka"),
	SetupDescription = T(815307898460, --[[ModItemTrait TamerDrakka SetupDescription]] "This person can summon 3 'Tamed Drakka's' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerDrakka",
}),
PlaceObj('ModItemTrait', {
	Description = T(989209023994, --[[ModItemTrait AdvGenius Description]] "+3x Learn Speed - This person learns skills three times as fast."),
	DisplayName = T(315075041059, --[[ModItemTrait AdvGenius DisplayName |gender-variants]] "Advanced Genius"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 3000,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(569205574743, --[[ModItemTrait AdvGenius SetupDescription]] "+3x Learn Speed - This person learns skills three times as fast."),
	Weight = 80,
	group = "PROJECTX",
	id = "AdvGenius",
}),
PlaceObj('ModItemTrait', {
	Description = T(392899078436, --[[ModItemTrait ChipImplant Description]] "This person has a chip implant due to criminal activity and is being monitored by the authorities. The implant greatly reduces the hosts entire efficiency and makes every skill <color TextEmphasis>'indifferent'</color>. Attempting to remove the chip is an illegal act."),
	DisplayName = T(422663699371, --[[ModItemTrait ChipImplant DisplayName |gender-variants]] "Chip Implant (Criminal Status)"),
	SetupDescription = T(500276703763, --[[ModItemTrait ChipImplant SetupDescription]] "This person has a chip implant due to criminal activity and is being monitored by the authorities. The implant greatly reduces the hosts entire efficiency and makes every skill <color TextEmphasis>'indifferent'</color>. Attempting to remove the chip is an illegal act."),
	group = "PROJECTX",
	id = "ChipImplant",
}),
PlaceObj('ModItemTrait', {
	Description = T(668576423522, --[[ModItemTrait 50Speed Description]] "50% Increased Movement and Manipulation."),
	DisplayName = T(878363822052, --[[ModItemTrait 50Speed DisplayName |gender-variants]] "Quick & Effective"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_QyMoxk6",
			add = 50000,
			prop = "Movement",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 50000,
			prop = "Manipulation",
		}),
	},
	group = "PROJECTX",
	id = "50Speed",
}),
PlaceObj('ModItemTrait', {
	Description = T(941758787519, --[[ModItemTrait ChefsHeat Description]] "+20C High Temperature Tolerance - Has a higher tolerance to heat due to working in a kitchen."),
	DisplayName = T(464376945352, --[[ModItemTrait ChefsHeat DisplayName |gender-variants]] "Chef's Heat"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 20000,
			prop = "TemperatureHigh",
		}),
	},
	SetupDescription = T(195009148212, --[[ModItemTrait ChefsHeat SetupDescription]] "+20C High Temperature Tolerance - Has a higher tolerance to heat due to working in a kitchen."),
	group = "PROJECTX",
	id = "ChefsHeat",
}),
PlaceObj('ModItemTrait', {
	Description = T(527348694381, --[[ModItemTrait MasterChef Description]] "Always makes exquisite food and teaches others his secrets."),
	DisplayName = T(657207737334, --[[ModItemTrait MasterChef DisplayName |gender-variants]] "Master Chef"),
	SetupDescription = T(766220739530, --[[ModItemTrait MasterChef SetupDescription]] "Always makes exquisite food and teaches others his secrets."),
	group = "PROJECTX",
	id = "MasterChef",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "OnResourceCrafted",
			Handler = function (self, target, device, res, amount, res_info, recipe_def, count)
				if recipe_def.Activity ~= "Cooking" then
					return
				end
				local exquisite = {}
				local res_count = DivCeil(amount, const.ResourceScale)
				for i = 1, res_count do
					exquisite[i] = true
				end
				res_info.exquisite = exquisite
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(103961804663, --[[ModItemTrait BudgetDroidPX Description]] "-80% Skill Learn Rate"),
	DisplayName = T(841928317024, --[[ModItemTrait BudgetDroidPX DisplayName |gender-variants]] "Budget Droid"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 200,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(802136063805, --[[ModItemTrait BudgetDroidPX SetupDescription]] "-80% Skill Learn Rate"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "BudgetDroidPX",
}),
PlaceObj('ModItemTrait', {
	Description = T(669900891690, --[[ModItemTrait EfficientBiologist Description]] "+3x Efficiency at Biology Activities - Is very skilled at Biology tasks. "),
	DisplayName = T(642370875686, --[[ModItemTrait EfficientBiologist DisplayName |gender-variants]] "Efficient Biologist"),
	SetupDescription = T(255780794968, --[[ModItemTrait EfficientBiologist SetupDescription]] "+3x Efficiency at Biology Activities - Is very skilled at Biology tasks."),
	group = "PROJECTX",
	id = "EfficientBiologist",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Biologist" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(957981579220, --[[ModItemTrait Hallucinations Description]] "Due to errors within the strain of DNA used to create Tommy, he can suffer from 'Hallucinations'."),
	DisplayName = T(645679066617, --[[ModItemTrait Hallucinations DisplayName |gender-variants]] "Hallucinations"),
	SetupDescription = T(202389173792, --[[ModItemTrait Hallucinations SetupDescription]] "Due to errors within the strain of DNA used to create Tommy, he can suffer from 'Hallucinations'."),
	group = "PROJECTX",
	id = "Hallucinations",
}),
PlaceObj('ModItemTrait', {
	Conditions = {
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "TrainAnimal",
			Time = 40000,
		}),
	},
	Description = T(492018783121, --[[ModItemTrait AnimalHeaven Description]] "Gains happiness when training animals."),
	DisplayName = T(722136767026, --[[ModItemTrait AnimalHeaven DisplayName |gender-variants]] "Animal Heaven"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "AnimalHeaven",
			Id = "autoid_fDsBmM1_w4huufx",
		}),
	},
	SetupDescription = T(995080352336, --[[ModItemTrait AnimalHeaven SetupDescription]] "Gains happiness when training animals."),
	group = "PROJECTX",
	id = "AnimalHeaven",
}),
PlaceObj('ModItemTrait', {
	Description = T(876669622347, --[[ModItemTrait ElectronicsSpecialist Description]] "Works faster with Electronics and CPU cores, as well find more of them on expeditions."),
	DisplayName = T(769655859164, --[[ModItemTrait ElectronicsSpecialist DisplayName |gender-variants]] "Electronics Specialist"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "ElectronicsSpecialist",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" then
				          local activity_target = activity_obj:GetActivityTarget()
				          for id in pairs(activity_target.desired_resources) do
				            if id == "ScrapElectronics" or "CPUCore" then
				              efficiency = 4 * efficiency
				              break
				            end
				          end
				        elseif IsKindOf(activity_obj, "ProductionActivityObject") then
				          local def = Recipes[activity_obj.recipeid]
				          for _, res_amount in ipairs(def.InputResources) do
				            if res_amount.resource == "ScrapElectronics" or "CPUCore"  then
				              efficiency = 4 * efficiency
				              break
				            end
				          end
				        end
				        return efficiency
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyExpeditionReward",
			Handler = function (self, target, amount, resource)
				if resource == "ScrapElectronics" or resource == "CPUCore" then
					return amount * 10
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(203568895847, --[[ModItemTrait BasicExcavator Description]] "+2x Mining Speed and +30% Chance to find Ore from mining Stone."),
	DisplayName = T(632201723321, --[[ModItemTrait BasicExcavator DisplayName |gender-variants]] "Basic Excavator"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 30,
			prop = "RockProspectingChance",
		}),
	},
	SetupDescription = T(355065641974, --[[ModItemTrait BasicExcavator SetupDescription]] "+2x Mining Speed and +30% Chance to find Ore from mining Stone."),
	group = "PROJECTX",
	id = "BasicExcavator",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Mining" then
				              efficiency = 2 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(612329466249, --[[ModItemTrait Madness Description]] "Can be erratic and chaotic at times. Has double the energy available per day. Will at times talk to the dead."),
	DisplayName = T(757129193854, --[[ModItemTrait Madness DisplayName |gender-variants]] "Madness"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 2000,
			prop = "MaxEnergyAvailable",
		}),
	},
	SetupDescription = T(918525753464, --[[ModItemTrait Madness SetupDescription]] "Can be erratic and chaotic at times. Has double the energy available per day. Will at times talk to the dead."),
	group = "PROJECTX",
	id = "Madness",
}),
PlaceObj('ModItemTrait', {
	Description = T(113063755391, --[[ModItemTrait 4xButcher Description]] "This character has experience in butchering, increasing butchering speed by four times."),
	DisplayName = T(341770610805, --[[ModItemTrait 4xButcher DisplayName |gender-variants]] "Professional Butcher"),
	SetupDescription = T(882488792579, --[[ModItemTrait 4xButcher SetupDescription]] "This character has experience in butchering, increasing butchering speed by four times."),
	group = "PROJECTX",
	id = "4xButcher",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
							  efficiency = 4 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(960308106633, --[[ModItemTrait BrightMind Description]] "This person is capable of hacking or learning to hack and if they gain enough experience in the skill will be capable of accessing technology in the contraband tech tree. (Hacking Lvl 1 is required to access the contraband tech tree)"),
	DisplayName = T(807971392123, --[[ModItemTrait BrightMind DisplayName |gender-variants]] "Bright Mind"),
	SetupDescription = T(740597146191, --[[ModItemTrait BrightMind SetupDescription]] "This person is capable of hacking or learning to hack and if they gain enough experience in the skill will be capable of accessing technology in the contraband tech tree. (Hacking Lvl 1 is required to access the contraband tech tree)"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "BrightMind",
}),
PlaceObj('ModItemTrait', {
	Description = T(653620114402, --[[ModItemTrait ExpeditionMedic Description]] "+3x Medical Treatment and +0 Chance of Failure - Cannot fail any medical treatment, cure patients and feed patients three times as fast."),
	DisplayName = T(391131519541, --[[ModItemTrait ExpeditionMedic DisplayName |gender-variants]] "Expedition Medic"),
	SetupDescription = T(840737096493, --[[ModItemTrait ExpeditionMedic SetupDescription]] "+3x Medical Treatment and +0 Chance of Failure - Cannot fail any medical treatment, cure patients and feed patients three times as fast."),
	group = "PROJECTX",
	id = "ExpeditionMedic",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyMistreatmentChance",
			Handler = return_0,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Healing" or activity_id == "FeedingSurvivor" or activity_id == "HealSelf" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(578878926659, --[[ModItemTrait Euthanasia Description]] "Euthanasia - This character will butcher the lifestock using a more humane method of euthanisation. By doing so has an increased success rate and double the butchering speed."),
	DisplayName = T(694959708564, --[[ModItemTrait Euthanasia DisplayName |gender-variants]] "Euthanasia"),
	SetupDescription = T(366837067638, --[[ModItemTrait Euthanasia SetupDescription]] "Euthanasia - This character will butcher the lifestock using a more humane method of euthanisation. By doing so had an increased success rate and double the butchering speed."),
	group = "PROJECTX",
	id = "Euthanasia",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
							  efficiency = 2 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(106851018180, --[[ModItemTrait VegetableSupply Description]] "Has a unique contact which grants access to the ''Vegetables'' supply at the 'Trading Shuttle''."),
	DisplayName = T(788637735432, --[[ModItemTrait VegetableSupply DisplayName |gender-variants]] "Vegetable Supply Contacts"),
	SetupDescription = T(542630136754, --[[ModItemTrait VegetableSupply SetupDescription]] "Has a unique contact which grants access to the ''Vegetables'' supply at the 'Trading Shuttle''."),
	group = "PROJECTX",
	id = "VegetableSupply",
}),
PlaceObj('ModItemTrait', {
	Description = T(562742644443, --[[ModItemTrait TamerSpeed Description]] "+75% Movement Speed - Prolonged time spent with animals have taught this person to be quick or be a meal."),
	DisplayName = T(859514833440, --[[ModItemTrait TamerSpeed DisplayName |gender-variants]] "Tamer's Speed"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 75000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(227794394275, --[[ModItemTrait TamerSpeed SetupDescription]] "+75% Movement Speed - Prolonged time spent with animals have taught this person to be quick or be a meal."),
	group = "PROJECTX",
	id = "TamerSpeed",
}),
PlaceObj('ModItemTrait', {
	Description = T(302499219098, --[[ModItemTrait CannotPhysical Description]] "This person cannot perform any physical activities."),
	DisplayName = T(966367214854, --[[ModItemTrait CannotPhysical DisplayName |gender-variants]] "Cannot Physical"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Chopping",
			FilterBy = "Physical",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Physical",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Cutting",
			FilterBy = "Physical",
			Id = "",
			Reason = "Cannot Physical",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Mining",
			FilterBy = "Physical",
			Id = "autoid_fDsBmM1_SF7Emqv",
			Reason = "Cannot Physical",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Salvaging",
			FilterBy = "Physical",
			Id = "",
			Reason = "Cannot Physical",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Scavenging",
			FilterBy = "Physical",
			Id = "autoid_fDsBmM1_H8aCOam",
			Reason = "Cannot Physical",
		}),
	},
	SetupDescription = T(361640209258, --[[ModItemTrait CannotPhysical SetupDescription]] "This person cannot perform any physical activities."),
	group = "PROJECTX",
	id = "CannotPhysical",
}),
PlaceObj('ModItemTrait', {
	Conditions = {
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "Hacking",
			Time = 40000,
		}),
	},
	Description = T(192149532178, --[[ModItemTrait HackersPleasure Description]] "Gains happiness when doing hacking tasks."),
	DisplayName = T(899359255112, --[[ModItemTrait HackersPleasure DisplayName |gender-variants]] "Hackers Pleasure"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "HackersPleasure",
			Id = "autoid_fDsBmM1_w4huufx",
		}),
	},
	SetupDescription = T(960985845438, --[[ModItemTrait HackersPleasure SetupDescription]] "Gains happiness when doing hacking tasks."),
	group = "PROJECTX",
	id = "HackersPleasure",
}),
PlaceObj('ModItemTrait', {
	Description = T(675441402962, --[[ModItemTrait TamerVenomousRaptors Description]] "This person can summon 2-5 'Tamed Venomous Raptor's' through the 'Communication Relay'."),
	DisplayName = T(998168282298, --[[ModItemTrait TamerVenomousRaptors DisplayName |gender-variants]] "Venomous Raptor Pack"),
	SetupDescription = T(943413914728, --[[ModItemTrait TamerVenomousRaptors SetupDescription]] "This person can summon 2-5 'Tamed Venomous Raptor's' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerVenomousRaptors",
}),
PlaceObj('ModItemTrait', {
	Description = T(759962870531, --[[ModItemTrait CannotBiology Description]] "This person cannot perform biology activities."),
	DisplayName = T(789582902754, --[[ModItemTrait CannotBiology DisplayName |gender-variants]] "Cannot do skill 'Biology'"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Biologist",
			FilterBy = "Biology",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Biology",
		}),
	},
	SetupDescription = T(702433898400, --[[ModItemTrait CannotBiology SetupDescription]] "This person cannot perform biology activities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotBiology",
}),
PlaceObj('ModItemTrait', {
	Description = T(885053221144, --[[ModItemTrait CombatFit Description]] "+50% Movement Speed and 2x Energy Available - The ability to move swiftly and manage stamina efficiently."),
	DisplayName = T(894925404024, --[[ModItemTrait CombatFit DisplayName |gender-variants]] "Combat Fitness"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 40000,
			prop = "Movement",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_l5Msuue",
			mul = 2000,
			prop = "MaxEnergyAvailable",
		}),
	},
	SetupDescription = T(630021631275, --[[ModItemTrait CombatFit SetupDescription]] "+50% Movement Speed and 2x Energy Available - The ability to move swiftly and manage stamina efficiently. "),
	group = "PROJECTX",
	id = "CombatFit",
}),
PlaceObj('ModItemTrait', {
	Description = T(662098586239, --[[ModItemTrait DissociativeDisorder Description]] "This person suffered such severe prolonged trauma in their early stages of life that changes in their brain development occurred. They may experience panic, memory loss, changes to personality, feeling of isolation, doom and gloom."),
	DisplayName = T(985737739579, --[[ModItemTrait DissociativeDisorder DisplayName |gender-variants]] "Dissociation Disorder"),
	comment = "Still to do. Add side effects.",
	group = "PROJECTX",
	id = "DissociativeDisorder",
}),
PlaceObj('ModItemTrait', {
	Description = T(290582864638, --[[ModItemTrait ThousandIdeas Description]] "+Increased Chance of Insights - Has occasional insights that boost the current research progress. However has -20% Skill Learn Rate."),
	DisplayName = T(865317857721, --[[ModItemTrait ThousandIdeas DisplayName |gender-variants]] "Thousand Ideas"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_ZfZZv5l",
			add = -20,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(518557483588, --[[ModItemTrait ThousandIdeas SetupDescription]] "+Increased Chance of Insights - Has occasional insights that boost the current research progress. However has -20% Skill Learn Rate."),
	group = "PROJECTX",
	id = "ThousandIdeas",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "NewDayStarted",
			Handler = function (self, year, day)
				ForEachHumanWithTrait(self.id, function(survivor)
					survivor.research_insight = survivor:Random(100, self.id) < 25
				end)
			end,
		}),
	},
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "StartResearch",
			Handler = function (self, target, tech_id, research_center)
				if not target.research_insight then
					return
				end
				target.research_insight = nil
				local _, points = target.player:GetTechCostAndPoints(tech_id)
				-- get the amount of points, which can be reserved
				local reserved = research_center:ReserveTechResearchPoints(tech_id, points / 2)
				-- release the reserved points
				research_center:ReserveTechResearchPoints(tech_id, -reserved)
				research_center:AddTechResearchPoints(tech_id, reserved)
				Msg("ResearchInsight", target, tech_id)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(935939131033, --[[ModItemTrait TemperatureControlUnit Description]] "Due to being made of machine, they cannot feel heat or cold."),
	DisplayName = T(889183301942, --[[ModItemTrait TemperatureControlUnit DisplayName |gender-variants]] "Temperature Control Unit"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_XXe3ffG",
			add = 200000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_W0T5QHa",
			add = -200000,
			prop = "TemperatureLow",
		}),
	},
	SetupDescription = T(198679839312, --[[ModItemTrait TemperatureControlUnit SetupDescription]] "Due to being made of machine, they cannot feel heat or cold."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "TemperatureControlUnit",
}),
PlaceObj('ModItemTrait', {
	Description = T(487735771133, --[[ModItemTrait MathematicallyCorrect Description]] "This person has increased awareness and is able to learn skills two times faster."),
	DisplayName = T(703559650262, --[[ModItemTrait MathematicallyCorrect DisplayName |gender-variants]] "Mathematically Correct"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_ABAkC",
			mul = 2000,
			prop = "SkillLearning",
		}),
	},
	group = "PROJECTX",
	id = "MathematicallyCorrect",
}),
PlaceObj('ModItemTrait', {
	Description = T(918208096547, --[[ModItemTrait ArchitectureExpert Description]] "+3x Construction Efficiency - Due to expert knowledge in the craft, this person constructs structures and devices three times as fast."),
	DisplayName = T(411429138612, --[[ModItemTrait ArchitectureExpert DisplayName |gender-variants]] "Architecture Expert"),
	SetupDescription = T(697952578936, --[[ModItemTrait ArchitectureExpert SetupDescription]] "+3x Construction Efficiency - Due to expert knowledge in the craft, this person constructs structures and devices three times as fast."),
	group = "PROJECTX",
	id = "ArchitectureExpert",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(310276786946, --[[ModItemTrait TradersWit Description]] "Has charm and charisma in social interactions and is able to haggle for better deals. Improving trade efficiency by triple."),
	DisplayName = T(207272102947, --[[ModItemTrait TradersWit DisplayName |gender-variants]] "Traders Wit"),
	SetupDescription = T(471277700191, --[[ModItemTrait TradersWit SetupDescription]] "Has charm and charisma in social interactions and is able to haggle for better deals. Improving trade efficiency by triple."),
	group = "PROJECTX",
	id = "TradersWit",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Trade" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(217797453885, --[[ModItemTrait CannotResearch Description]] "This person cannot perform any research activities."),
	DisplayName = T(239148255631, --[[ModItemTrait CannotResearch DisplayName |gender-variants]] "Cannot Research"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "FieldResearch",
			FilterBy = "Intellectual",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Research",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Research",
			FilterBy = "Intellectual",
			Id = "",
			Reason = "Cannot Research",
		}),
	},
	SetupDescription = T(401560996607, --[[ModItemTrait CannotResearch SetupDescription]] "This person cannot perform any research activities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "CannotResearch",
}),
PlaceObj('ModItemTrait', {
	Description = T(778663608780, --[[ModItemTrait SwiftHands Description]] "+50% Manipulation - The ability to perform physical jobs more efficiently."),
	DisplayName = T(143733508000, --[[ModItemTrait SwiftHands DisplayName |gender-variants]] "Swift Hands"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_AA67y1L",
			add = 50000,
			prop = "Manipulation",
		}),
	},
	SetupDescription = T(774392295359, --[[ModItemTrait SwiftHands SetupDescription]] "+50% Manipulation - The ability to perform physical jobs more efficiently."),
	group = "PROJECTX",
	id = "SwiftHands",
}),
PlaceObj('ModItemTrait', {
	Description = T(962794111968, --[[ModItemTrait DeadlyAim Description]] "Has 50% chance to deal kill shot while hunting prey (100% when the prey is unaware). Has 50% increased movement and 25% increased manipulation. Also has +50% Sight Range."),
	DisplayName = T(739487752726, --[[ModItemTrait DeadlyAim DisplayName |gender-variants]] "Deadly Aim & Speed"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_GUWMg2F",
			add = 50000,
			prop = "Movement",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 25000,
			prop = "Manipulation",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_dtgxMnO",
			add = 50000,
			prop = "SightRange",
		}),
	},
	OnAddTrait = function (self, unit)
		unit.killshots = 0
	end,
	SetupDescription = T(594753589731, --[[ModItemTrait DeadlyAim SetupDescription]] "Has 50% chance to deal kill shot while hunting prey (100% when the prey is unaware). Has 50% increased movement and 25% increased manipulation. Also has +50% Sight Range."),
	group = "PROJECTX",
	id = "DeadlyAim",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "GatherHitEffects",
			Handler = function (self, target, effects, attacked_unit, weapon_def)
				local attacker = target
				if not attacker:IsHunting()
				or not IsKindOf(attacked_unit, "UnitAnimal") then
					return effects
				end
				if attacked_unit:IsDetected(attacker)
				and attacker:Random(100, "KillShot") > 50 then
					return effects
				end
				
				assert(HealthConditions.AnyWeapon_KillShot)
				-- Butchering order is issued only if the animal was killed by (last attacker was) a human.
				-- The animal dies before combat logic kicks in, so we have to explicitly say the animal was attacked by the unit
				attacked_unit:RegisterAttacker(attacker, GameTime())
				
				attacker.killshots = (attacker.killshots or 0) + 1
				
				return table.create_add(effects, {
					effect = "AnyWeapon_KillShot",
					weight = max_int,
				})
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyHitChance",
			Handler = function (self, target, base_chance, attacked_unit, weapon_def, target_dist)
				if target:IsSneaking() and not attacked_unit:IsDetected(target) then
					return 100
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(951433427590, --[[ModItemTrait StubbornAttitude Description]] "-30% Skill Learn Rate - Due to having a stubborn attitude, this person is much slower at taking onboard others teachings."),
	DisplayName = T(170213316646, --[[ModItemTrait StubbornAttitude DisplayName |gender-variants]] "Stubborn Attitude"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 700,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(626103316617, --[[ModItemTrait StubbornAttitude SetupDescription]] "-30% Skill Learn Rate - Due to having a stubborn attitude, this person is much slower at taking onboard others teachings."),
	Weight = 80,
	group = "PROJECTX",
	id = "StubbornAttitude",
}),
PlaceObj('ModItemTrait', {
	Description = T(585041066858, --[[ModItemTrait CannotConstruct Description]] "This person cannot perform construction activities."),
	DisplayName = T(428749399468, --[[ModItemTrait CannotConstruct DisplayName |gender-variants]] "Cannot Construct"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Construction",
			FilterBy = "Construction",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Construct",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Repair",
			FilterBy = "Construction",
			Id = "",
			Reason = "Cannot Construct",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Upgrade",
			FilterBy = "Construction",
			Id = "autoid_fDsBmM1_JqcibTV",
			Reason = "Cannot Construct",
		}),
	},
	SetupDescription = T(524877453741, --[[ModItemTrait CannotConstruct SetupDescription]] "This person cannot perform construction activities."),
	group = "PROJECTX",
	id = "CannotConstruct",
}),
PlaceObj('ModItemTrait', {
	Description = T(181449662275, --[[ModItemTrait BrickSupply Description]] "Has a unique contact which grants access to the ''Bricks'' supply at the 'Trading Shuttle''."),
	DisplayName = T(925657087346, --[[ModItemTrait BrickSupply DisplayName |gender-variants]] "Brick Supply Contacts"),
	SetupDescription = T(742221434113, --[[ModItemTrait BrickSupply SetupDescription]] "Has a unique contact which grants access to the ''Bricks'' supply at the 'Trading Shuttle''."),
	group = "PROJECTX",
	id = "BrickSupply",
}),
PlaceObj('ModItemTrait', {
	Description = T(933306984189, --[[ModItemTrait ThoughtnDreams Description]] "This droid is experiencing thoughts and dreams, this can make crew members uneasy and paranoid when around the droid."),
	DisplayName = T(541772418703, --[[ModItemTrait ThoughtnDreams DisplayName |gender-variants]] "Thoughts and Dreams"),
	SetupDescription = T(992426309504, --[[ModItemTrait ThoughtnDreams SetupDescription]] "This droid is experiencing thoughts and dreams, this can make crew members uneasy and paranoid when around the droid."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "ThoughtnDreams",
}),
PlaceObj('ModItemTrait', {
	Description = T(157143524449, --[[ModItemTrait DroidLancer Description]] "Gives a droid +80% Movement Speed, +50% Manipulation and +300 Health to better fight."),
	DisplayName = T(126234572687, --[[ModItemTrait DroidLancer DisplayName |gender-variants]] "Lancer Module"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 80000,
			prop = "Movement",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_Jt2Kdbh",
			add = 50000,
			prop = "Manipulation",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 300000,
			prop = "MaxHealth",
		}),
		PlaceObj('ModifyUnitActivity', {
			Action = "allow",
			Activity = "Combat",
			FilterBy = "Combat",
			Id = "autoid_ucCehPy_fAbR6tD",
			Reason = "Is a combat droid now",
		}),
	},
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "DroidLancer",
}),
PlaceObj('ModItemTrait', {
	Description = T(447026029298, --[[ModItemTrait BionicExperiment Description]] "The memory of this person has recently been wiped due to a classified experiment. Partial skills have been wiped from this person and cannot be learnt. Remaining skills begin at 0. "),
	DisplayName = T(777903240471, --[[ModItemTrait BionicExperiment DisplayName |gender-variants]] "Bionic Experiment"),
	SetupDescription = T(423572144940, --[[ModItemTrait BionicExperiment SetupDescription]] "The memory of this person has recently been wiped due to a classified experiment. Partial skills have been wiped from this person and cannot be learnt. Remaining skills begin at 0. "),
	group = "PROJECTX",
	id = "BionicExperiment",
}),
PlaceObj('ModItemTrait', {
	Description = T(758136583346, --[[ModItemTrait OutdatedSoftware Description]] "-80% Skill Learn Rate - Due to being on a foreign planet the software and components that are required are not easily obtainable. "),
	DisplayName = T(878009900921, --[[ModItemTrait OutdatedSoftware DisplayName |gender-variants]] "Outdated Software"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 200,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(264639090635, --[[ModItemTrait OutdatedSoftware SetupDescription]] "-80% Skill Learn Rate - Due to being on a foreign planet the software and components that are required are not easily obtainable."),
	UserTags = set( "Android", "Human", "Robot" ),
	Weight = 80,
	group = "PROJECTX",
	id = "OutdatedSoftware",
}),
PlaceObj('ModItemTrait', {
	Description = T(509553056698, --[[ModItemTrait BiologistDissect Description]] "This character has experience in Biology and Organisms, able to dissect a body for the valuable organs. Has an increased success rate and 5x the butchering speed."),
	DisplayName = T(600453206290, --[[ModItemTrait BiologistDissect DisplayName |gender-variants]] "Biologist Dissection"),
	SetupDescription = T(127228633892, --[[ModItemTrait BiologistDissect SetupDescription]] "This character has experience in Biology and Organisms, able to dissect a body for the valuable organs. Has an increased success rate and 5x the butchering speed."),
	group = "PROJECTX",
	id = "BiologistDissect",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Butchering" then
							  efficiency = 5 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Conditions = {
		PlaceObj('CheckRecentEvent', {
			Player = true,
			RecentEvent = "Mining",
			Time = 40000,
		}),
	},
	Description = T(477813637161, --[[ModItemTrait CheerfulMiner Description]] "Gains happiness when mining."),
	DisplayName = T(725073372596, --[[ModItemTrait CheerfulMiner DisplayName |gender-variants]] "Cheerful Miner"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "CheerfulMiner",
		}),
	},
	SetupDescription = T(468537003854, --[[ModItemTrait CheerfulMiner SetupDescription]] "Gains happiness when mining."),
	Weight = 90,
	group = "PROJECTX",
	id = "CheerfulMiner",
}),
PlaceObj('ModItemTrait', {
	Description = T(596337851927, --[[ModItemTrait ExpertExcavator Description]] "+3x Mining Speed and +50% Chance to find Ore from mining Stone."),
	DisplayName = T(621679137014, --[[ModItemTrait ExpertExcavator DisplayName |gender-variants]] "Expert Excavator"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 50,
			prop = "RockProspectingChance",
		}),
	},
	SetupDescription = T(410057881751, --[[ModItemTrait ExpertExcavator SetupDescription]] "+3x Mining Speed and +50% Chance to find Ore from mining Stone."),
	group = "PROJECTX",
	id = "ExpertExcavator",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Mining" then
				              efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(590017245638, --[[ModItemTrait EncryptionExpert Description]] "Has expertise in hacking encrypted files, starts with advanced knowledge in the contraband tech tree."),
	DisplayName = T(812362915690, --[[ModItemTrait EncryptionExpert DisplayName |gender-variants]] "Encryption Expert"),
	SetupDescription = T(156080689284, --[[ModItemTrait EncryptionExpert SetupDescription]] "Has expertise in hacking encrypted files, starts with advanced knowledge in the contraband tech tree."),
	group = "PROJECTX",
	id = "EncryptionExpert",
}),
PlaceObj('ModItemTrait', {
	Description = T(267117513192, --[[ModItemTrait AdvEngEfficiency Description]] "+65% Manipulation Efficiency - Advanced technology implanted into the person to enhance abilities."),
	DisplayName = T(875642551548, --[[ModItemTrait AdvEngEfficiency DisplayName |gender-variants]] "Advanced Engineered Efficiency"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 1650,
			prop = "Manipulation",
		}),
	},
	SetupDescription = T(597432373994, --[[ModItemTrait AdvEngEfficiency SetupDescription]] "+65% Manipulation Efficiency - Advanced technology implanted into the person to enhance abilities."),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "AdvEngEfficiency",
}),
PlaceObj('ModItemTrait', {
	Description = T(936300977263, --[[ModItemTrait TamerShriekerQueen Description]] "This person can summon a 'Tamed Shrieker Queen' through the 'Communication Relay'."),
	DisplayName = T(288736412907, --[[ModItemTrait TamerShriekerQueen DisplayName |gender-variants]] "Shrieker Queen"),
	SetupDescription = T(556118172584, --[[ModItemTrait TamerShriekerQueen SetupDescription]] "This person can summon a 'Tamed Shrieker Queen' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerShriekerQueen",
}),
PlaceObj('ModItemTrait', {
	Description = T(643226572658, --[[ModItemTrait MercsImplant Description]] "An implant only obtained by the Mercenary Legion. +200 Health, +3 Health Regen and +100 Conciousness."),
	DisplayName = T(206488084675, --[[ModItemTrait MercsImplant DisplayName |gender-variants]] "Mercenaries Implant"),
	SetupDescription = T(861749232925, --[[ModItemTrait MercsImplant SetupDescription]] "An implant only obtained by the Mercenary Legion. +200 Health, +3 Health Regen and +100 Conciousness."),
	group = "PROJECTX",
	id = "MercsImplant",
}),
PlaceObj('ModItemTrait', {
	Description = T(414998042208, --[[ModItemTrait HackerInstructor Description]] "This person is capable of teaching others Hacking."),
	DisplayName = T(429145933097, --[[ModItemTrait HackerInstructor DisplayName |gender-variants]] "Hacking Instructor"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "HackerInstructor",
}),
PlaceObj('ModItemTrait', {
	Description = T(983055848448, --[[ModItemTrait MedicInstructor Description]] "This person is capable of teaching others Healing."),
	DisplayName = T(832628288707, --[[ModItemTrait MedicInstructor DisplayName |gender-variants]] "Medical Instructor"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "MedicInstructor",
}),
PlaceObj('ModItemTrait', {
	Description = T(172216979690, --[[ModItemTrait CannotHeal Description]] "This person cannot perform medical treatment due to risk of stealing the narcotics. (Medicine)"),
	DisplayName = T(562594708628, --[[ModItemTrait CannotHeal DisplayName |gender-variants]] "Medicine?!? What medicine...?"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "HealSelf",
			FilterBy = "Healing",
			Id = "",
			Reason = "Cannot Heal",
		}),
		PlaceObj('ForbidActivity', {
			Activity = "Healing",
			FilterBy = "Healing",
			Id = "autoid_fDsBmM1_mMfAeEI",
			Reason = "Cannot Heal",
		}),
	},
	SetupDescription = T(412786292013, --[[ModItemTrait CannotHeal SetupDescription]] "This person cannot perform medical treatment due to risk of stealing the narcotics. (Medicine)"),
	group = "PROJECTX",
	id = "CannotHeal",
}),
PlaceObj('ModItemTrait', {
	Description = T(932163444201, --[[ModItemTrait ChefSinger Description]] "Sings Whilst Cooking - Raises others happiness when playing instruments."),
	DisplayName = T(331706346796, --[[ModItemTrait ChefSinger DisplayName |gender-variants]] "Cooking & Music"),
	SetupDescription = T(350834833138, --[[ModItemTrait ChefSinger SetupDescription]] "Sings Whilst Cooking - Raises others happiness when playing instruments."),
	group = "PROJECTX",
	id = "ChefSinger",
}),
PlaceObj('ModItemTrait', {
	Description = T(745349710304, --[[ModItemTrait ArmoryDutyV2 Description]] "+50% Durability to Armor. Armor get dirty at a slower pace."),
	DisplayName = T(740983943735, --[[ModItemTrait ArmoryDutyV2 DisplayName |gender-variants]] "Armory Duty V2"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 500,
			prop = "WholeBodyDirtinessRate",
		}),
		PlaceObj('ModifyHuman', {
			mul = 500,
			prop = "HatDirtinessRate",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_LwkCaaq",
			mul = 500,
			prop = "JacketDirtinessRate",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 500,
			prop = "PantsDirtinessRate",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_EH84lv7",
			mul = 500,
			prop = "ShirtDirtinessRate",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 500,
			prop = "ShoesDirtinessRate",
		}),
	},
	SetupDescription = T(743513101437, --[[ModItemTrait ArmoryDutyV2 SetupDescription]] "+50% Durability to Armor. Armor get dirty at a slower pace."),
	group = "PROJECTX",
	id = "ArmoryDutyV2",
}),
PlaceObj('ModItemTrait', {
	Description = T(246792137479, --[[ModItemTrait CannotHack Description]] "This person cannot perform hacking activities."),
	DisplayName = T(492212535685, --[[ModItemTrait CannotHack DisplayName |gender-variants]] "Cannot Hack"),
	HiddenTrait = true,
	Modifiers = {
		PlaceObj('ForbidActivity', {
			Activity = "Hacking",
			FilterBy = "Hacking",
			Id = "autoid_fDsBmM1_vKUYTcb",
			Reason = "Cannot Hack",
		}),
	},
	SetupDescription = T(312074941428, --[[ModItemTrait CannotHack SetupDescription]] "This person cannot perform hacking activities."),
	group = "PROJECTX",
	id = "CannotHack",
}),
PlaceObj('ModItemTrait', {
	Description = T(118025335591, --[[ModItemTrait BionicEyes Description]] "+3x Sight and Hearing - This person has enhanced awareness, capable of hearing and detecting from a further distance due to having bionic eye implants."),
	DisplayName = T(486619826868, --[[ModItemTrait BionicEyes DisplayName |gender-variants]] "Bionic Eyes"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 3000,
			prop = "HearingRange",
		}),
		PlaceObj('ModifyHuman', {
			mul = 3000,
			prop = "SightRange",
		}),
	},
	SetupDescription = T(778837642450, --[[ModItemTrait BionicEyes SetupDescription]] "+3x Sight and Hearing - This person has enhanced awareness, capable of hearing and detecting from a further distance due to having bionic eye implants."),
	group = "PROJECTX",
	id = "BionicEyes",
}),
PlaceObj('ModItemTrait', {
	Description = T(962545157845, --[[ModItemTrait EmoStable Description]] "Cannot feel emotions, cannot have meltdowns."),
	DisplayName = T(719880607419, --[[ModItemTrait EmoStable DisplayName |gender-variants]] "Emotionally Stable AI"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 2,
			prop = "BreakdownChanceHourlyDecrease",
		}),
	},
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "EmoStable",
}),
PlaceObj('ModItemTrait', {
	Description = T(747487834564, --[[ModItemTrait MinersPhysique Description]] "Movement speed and Manipulation is increased by 25% and tires slower."),
	DisplayName = T(715995409521, --[[ModItemTrait MinersPhysique DisplayName |gender-variants]] "Miners Physique"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 25000,
			prop = "Movement",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_sVt6wnY",
			add = 25000,
			prop = "Manipulation",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 2000,
			prop = "MaxEnergyAvailable",
		}),
	},
	group = "PROJECTX",
	id = "MinersPhysique",
}),
PlaceObj('ModItemTrait', {
	Description = T(629414008349, --[[ModItemTrait GhostInfiltrator Description]] "+3x Hacking Efficiency - Capable of hacking consoles faster than the average hacker, capable of infiltrating compounds unseen."),
	DisplayName = T(709610690645, --[[ModItemTrait GhostInfiltrator DisplayName |gender-variants]] "Ghost Infiltrator"),
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "autoid_fDsBmM1_OPdJEIT",
			Inclination = "Interested",
			Level = 2,
			Skill = "Hacking",
		}),
	},
	SetupDescription = T(794450493245, --[[ModItemTrait GhostInfiltrator SetupDescription]] "+3x Hacking Efficiency - Capable of hacking consoles faster than the average hacker, capable of infiltrating compounds unseen."),
	Weight = 80,
	group = "PROJECTX",
	id = "GhostInfiltrator",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Hacking" then
					efficiency = 2 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(464353559078, --[[ModItemTrait TechCriminal Description]] "Works faster with Electronics and CPU cores, able to criminally modify technology more efficiently; also is able to find extra assembly components on expeditions."),
	DisplayName = T(766817838002, --[[ModItemTrait TechCriminal DisplayName |gender-variants]] "Tech-Geek Criminal"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 25000,
			prop = "Manipulation",
		}),
		PlaceObj('ModifyHuman', {
			add = 25000,
			prop = "Movement",
		}),
	},
	SetupDescription = T(341793646450, --[[ModItemTrait TechCriminal SetupDescription]] "Works faster with Electronics and CPU cores, able to criminally modify technology more efficiently; also is able to find extra assembly components on expeditions."),
	group = "PROJECTX",
	id = "TechCriminal",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" or activity_id == "Assembly" or activity_id == "CriminalActivity"  then
				          local activity_target = activity_obj:GetActivityTarget()
				          for id in pairs(activity_target.desired_resources) do
				            if id == "ScrapElectronics" or "CPUCore" or "ChipDevice" then
				              efficiency = 4 * efficiency
				              break
				            end
				          end
				        elseif IsKindOf(activity_obj, "ProductionActivityObject") then
				          local def = Recipes[activity_obj.recipeid]
				          for _, res_amount in ipairs(def.InputResources) do
				            if res_amount.resource == "ScrapElectronics" or "CPUCore" then
				              efficiency = 4 * efficiency
				              break
				            end
				          end
				        end
				        return efficiency
			end,
		}),
		PlaceObj('UnitReaction', {
			Event = "ModifyExpeditionReward",
			Handler = function (self, target, amount, resource)
				if resource == "ScrapElectronics" or resource == "CPUCore" then
					return amount * 10
				end
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(267920525804, --[[ModItemTrait ShortTermMemory Description]] "-50% Learning Speed - This person has short term memory loss, making learning of abilities slower by half."),
	DisplayName = T(871835152356, --[[ModItemTrait ShortTermMemory DisplayName |gender-variants]] "Short Term Memory-Loss"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			mul = 500,
			prop = "SkillLearning",
		}),
	},
	SetupDescription = T(567195077978, --[[ModItemTrait ShortTermMemory SetupDescription]] "-50% Learning Speed - This person has short term memory loss, making learning of abilities slower by half."),
	Weight = 80,
	group = "PROJECTX",
	id = "ShortTermMemory",
}),
PlaceObj('ModItemTrait', {
	Description = T(424749244224, --[[ModItemTrait HackerExpertise Description]] "Is capable of hacking into specific software to boost research speed by extracting data from encrypted files. Hacking is valuable and required to research contraband items."),
	DisplayName = T(159828959060, --[[ModItemTrait HackerExpertise DisplayName |gender-variants]] "Hacker Expertise"),
	SetupDescription = T(429487169713, --[[ModItemTrait HackerExpertise SetupDescription]] "Is capable of hacking into specific software to boost research speed by extracting data from encrypted files. Hacking is valuable and required to research contraband items."),
	group = "PROJECTX",
	id = "HackerExpertise",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "NewDayStarted",
			Handler = function (self, year, day)
				ForEachHumanWithTrait(self.id, function(survivor)
					survivor.research_insight = survivor:Random(100, self.id) < 25
				end)
			end,
		}),
	},
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "StartResearch",
			Handler = function (self, target, tech_id, research_center)
				if not target.research_insight then
					return
				end
				target.research_insight = nil
				local _, points = target.player:GetTechCostAndPoints(tech_id)
				-- get the amount of points, which can be reserved
				local reserved = research_center:ReserveTechResearchPoints(tech_id, points / 2)
				-- release the reserved points
				research_center:ReserveTechResearchPoints(tech_id, -reserved)
				research_center:AddTechResearchPoints(tech_id, reserved)
				Msg("ResearchInsight", target, tech_id)
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(604996477998, --[[ModItemTrait TamerCamels Description]] "This person can summon 3 'Tamed Dromaddas' through the 'Communication Relay'."),
	DisplayName = T(494674971047, --[[ModItemTrait TamerCamels DisplayName |gender-variants]] "Dromaddas"),
	SetupDescription = T(374609765735, --[[ModItemTrait TamerCamels SetupDescription]] "This person can summon 3 'Tamed Dromaddas' through the 'Communication Relay'."),
	group = "PROJECTX",
	id = "TamerCamels",
}),
PlaceObj('ModItemTrait', {
	Description = T(558940330879, --[[ModItemTrait EmoUnstable Description]] "Can feel emotions and have meltdowns more regularly which could result in injuries to crew members."),
	DisplayName = T(738834008786, --[[ModItemTrait EmoUnstable DisplayName |gender-variants]] "Emotionally <style red>Unstable</style> AI"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			add = 2,
			prop = "BreakdownChanceHourlyIncrease",
		}),
	},
	SetupDescription = T(493649405642, --[[ModItemTrait EmoUnstable SetupDescription]] "Can feel emotions and have meltdowns more regularly which could result in injuries to crew members."),
	group = "PROJECTX",
	id = "EmoUnstable",
}),
PlaceObj('ModItemTrait', {
	Description = T(193801480494, --[[ModItemTrait HighRisk Description]] "This person frequently suffers from withdrawals that debuff them temporarily. "),
	DisplayName = T(322629236005, --[[ModItemTrait HighRisk DisplayName |gender-variants]] "High Risk, High Reward."),
	SetupDescription = T(191664243673, --[[ModItemTrait HighRisk SetupDescription]] "This person frequently suffers from withdrawals that debuff them temporarily."),
	group = "PROJECTX",
	id = "HighRisk",
}),
PlaceObj('ModItemTrait', {
	Description = T(177610577687, --[[ModItemTrait G8Helper Description]] "Has increased manipulations of 50% and increased speed of 25%."),
	DisplayName = T(971634288883, --[[ModItemTrait G8Helper DisplayName |gender-variants]] "G8-Helper"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_nH0oHWk",
			add = 50000,
			prop = "Manipulation",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 25000,
			prop = "Movement",
		}),
	},
	UserTags = set( "Robot" ),
	group = "PROJECTX",
	id = "G8Helper",
}),
PlaceObj('ModItemTrait', {
	Description = T(346874794504, --[[ModItemTrait SupportSupplyDrop Description]] "Has the ability to call in a 'Support' supply drop from the communications relay."),
	DisplayName = T(927304995739, --[[ModItemTrait SupportSupplyDrop DisplayName |gender-variants]] "Support Supply Drop"),
	UserTags = set( "Android", "Human", "Robot" ),
	group = "PROJECTX",
	id = "SupportSupplyDrop",
}),
PlaceObj('ModItemTrait', {
	Description = T(882982085820, --[[ModItemTrait MedicalSupplyDrop Description]] "Has the ability to call in a 'Medical' supply drop from the communications relay."),
	DisplayName = T(846596343876, --[[ModItemTrait MedicalSupplyDrop DisplayName |gender-variants]] "Medical Supply Drop"),
	group = "PROJECTX",
	id = "MedicalSupplyDrop",
}),
PlaceObj('ModItemTrait', {
	Description = T(307659905438, --[[ModItemTrait x_inspiredTrait Description]] "Even though life is hard, it is now my home. Loses less happiness each day and learns faster"),
	DisplayName = T(147647711887, --[[ModItemTrait x_inspiredTrait DisplayName |gender-variants]] "Feels like home"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_LWbPcdx",
			add = 25,
			prop = "SkillLearning",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_d7HPw3z",
			mul = 800,
			prop = "RelaxationLossPerDay",
		}),
	},
	group = "PROJECTX",
	id = "x_inspiredTrait",
}),
PlaceObj('ModItemTrait', {
	Description = T(211376718290, --[[ModItemTrait x_secret_trait Description]] "This colonist is still malleable in unique ways. If certain events coincide, this character will gain unique traits"),
	DisplayName = T(179788735175, --[[ModItemTrait x_secret_trait DisplayName |gender-variants]] "Secrets"),
	group = "PROJECTX",
	id = "x_secret_trait",
}),
PlaceObj('ModItemTrait', {
	Description = T(354109803462, --[[ModItemTrait BlackMarket Description]] "This character bought, sold, or knows of the black market. And our way in!"),
	DisplayName = T(834178100324, --[[ModItemTrait BlackMarket DisplayName |gender-variants]] "Contacts in the Black Market"),
	id = "BlackMarket",
}),
PlaceObj('ModItemTrait', {
	Description = T(749663541553, --[[ModItemTrait x_Haunted Description]] "Haunted not by a creature, but a memory of a prior colony. Now works extra hard, in an attempt to have this colony not suffer the same fate"),
	DisplayName = T(146733857799, --[[ModItemTrait x_Haunted DisplayName |gender-variants]] "Haunted"),
	Modifiers = {
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "x_haunted",
			Id = "autoid_fDsBmM1_VcxqyRj",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_ef36CAS",
			mul = 1500,
			prop = "Manipulation",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 1500,
			prop = "EnergyUsePerDay",
		}),
	},
	group = "PROJECTX",
	id = "x_Haunted",
}),
PlaceObj('ModItemTrait', {
	Description = T(186704378870, --[[ModItemTrait x_hopefull Description]] "Having reflected on life on the planet, and the relative failure of all colonies, has one last glimmer of hope with this colony. Will not break down nomatter the situation."),
	DisplayName = T(313612012470, --[[ModItemTrait x_hopefull DisplayName |gender-variants]] "Hopeful"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_FVuf7p6",
			add = -100000000000,
			prop = "BreakdownChanceHourlyDecrease",
		}),
	},
	group = "PROJECTX",
	id = "x_hopefull",
}),
PlaceObj('ModItemUnitAnimalCompositeDef', {
	'Group', "Dogs",
	'Id', "RabidDog",
	'object_class', "DogBase",
	'SpeciesGroup', "dogs",
	'RoamRadius', 15000,
	'RoamIntervalMin', 40000,
	'RoamIntervalMax', 120000,
	'composite_part_target', "Weirmaraner",
	'composite_part_groups', {
		"Dog_Weirmaraner",
	},
	'PainMask', "PainMask",
	'EventProgressValue', 50,
	'SpawnDefWeight', 8,
	'SightRange', 40000,
	'CombatGroup', "Dogs",
	'CombatHostile', true,
	'DistressEnrageChance', 100,
	'DistressEnrageCount', 10,
	'DistressCallRange', 25000,
	'DistressCallRangeFirst', 25000,
	'AttackMemory', 45000,
	'CombatGiveUpNoHit', 30000,
	'CombatFleeAccuracy', 0,
	'ButcherDuration', 40000,
	'ObservationDistanceMin', 12000,
	'ObservationDistanceMax', 18000,
	'Icon', "UI/Icons/Resources/res_dog_weirmaraner",
	'DisplayName', T(110641339256, --[[ModItemUnitAnimalCompositeDef RabidDog DisplayName]] "Rabid Dog"),
	'DisplayNamePl', T(778122131885, --[[ModItemUnitAnimalCompositeDef RabidDog DisplayNamePl]] "Rabid Dogs"),
	'Description', T(218816624627, --[[ModItemUnitAnimalCompositeDef RabidDog Description]] "A pack of dogs that appear to be rabid, very aggressive. "),
	'BaseMaxHealth', 50000,
	'FoodResources', {
		"FoodAnimalCarnivore",
		"Slop",
	},
	'DailyEatingAmount', 5000,
	'Diet', "Carnivore",
	'EatingDuration', 4000,
	'ButcherResources', {
		PlaceObj('ButcherResAmount', {
			'resource', "RawMeat",
			'min_amount', 10000,
			'max_amount', 30000,
		}),
		PlaceObj('ButcherResAmount', {
			'resource', "LeatherRaw",
			'min_amount', 10000,
		}),
	},
	'ChanceToBeMale', 50,
	'BodySize', "small",
	'AnimalPerks', {
		"DraftableAnimal",
	},
	'radius', 400,
	'pfclass_tamed', 12,
	'pfclass_tamed_lead', 12,
	'EnrageChanceOtherAnimals', 50,
	'IntimidationRange', 20000,
	'EatStartAnim', "eat_Start",
	'EatIdleAnim', {
		"eat_Idle",
	},
	'EatEndAnim', "eat_End",
	'anim_idle', {
		"idle",
		"idle_Active",
	},
	'anim_idle_nervous', {
		"idle_Nervous",
	},
	'anim_idle_playful', {
		"idle_Playfull",
	},
	'SleepStartAnim', "sleep_Start",
	'SleepIdleAnim', "sleep_Idle",
	'SleepEndAnim', "sleep_End",
	'Tameable', true,
	'Petable', true,
	'TamingFood', "DryMeat",
	'TamingFoodAmount', 10000,
	'TamingChance', 90,
	'TamingAggressiveChance', 5,
	'TamingDistance', 10000,
	'TamedLifetimeMin', 1920000000,
	'TamedLifetimeMax', 3840000000,
	'CombatSkillInitial', range(0, 2),
	'BondingChance', 20,
	'ReproductionType', "two sexes",
	'ReproductionGroup', "Dogs",
	'DailyPregnancyChance', 10,
	'PregnancyDuration', 7680000,
	'MinGrownScale', 110,
	'FieldVisibilityCold', 0,
	'FieldVisibilityWarm', 0,
	'MoveSpeedCold', 1000,
	'PlantsToEatMin', 0,
	'PlantsToEatMax', 0,
	'GrazingChance', 3,
	'HerdMergeClass', "Dog",
}),
PlaceObj('ModItemUnitAnimalCompositeDef', {
	'Group', "Temperate",
	'Id', "AlphaRaptorPX",
	'object_class', "TecatliBase",
	'SpeciesGroup', "hoofed",
	'RoamRadius', 40000,
	'RoamIntervalMin', 2000,
	'RoamIntervalMax', 3000,
	'BypassTrapsChance', 80,
	'pfclass', 3,
	'composite_part_target', "AlphaRaptorPX",
	'composite_part_groups', {
		"Tecatli",
	},
	'PainMask', "PainMask",
	'SpecialOrientation', 8,
	'EventProgressValue', 400,
	'SpawnDefWeight', 6,
	'SightRange', 100000,
	'CombatGroup', "Insects",
	'CombatHostile', true,
	'CombatUseCover', true,
	'HitNegationChance', {
		blunt = 25,
		energy = 25,
		gas = 100,
		pacify = 25,
		piercing = 25,
	},
	'HitNegationChance_blunt', 25,
	'HitNegationChance_piercing', 25,
	'HitNegationChance_energy', 25,
	'HitNegationChance_gas', 100,
	'HitNegationChance_pacify', 25,
	'HumanThreat', true,
	'EnrageChanceCooldown', 30000,
	'DistressEnrageChance', 100,
	'DistressEnrageCount', 10,
	'DistressCallRange', 50000,
	'DistressCallRangeFirst', 100000,
	'CombatGiveUpNoHit', 30000,
	'CombatFleeAccuracy', 0,
	'ButcherDuration', 80000,
	'ObservationDistanceMin', 17000,
	'ObservationDistanceMax', 21000,
	'Icon', "UI/Icons/Resources/res_tecatli",
	'DisplayName', T(500781650032, --[[ModItemUnitAnimalCompositeDef AlphaRaptorPX DisplayName]] "Alpha Raptor"),
	'DisplayNamePl', T(397980318625, --[[ModItemUnitAnimalCompositeDef AlphaRaptorPX DisplayNamePl]] "Alpha Raptor"),
	'DisplayNameUnknown', T(350488100821, --[[ModItemUnitAnimalCompositeDef AlphaRaptorPX DisplayNameUnknown]] "Unknown Large Raptor"),
	'DisplayNameUnknownPL', T(470035967746, --[[ModItemUnitAnimalCompositeDef AlphaRaptorPX DisplayNameUnknownPL]] "Unknown Large Raptor"),
	'Description', T(265290577395, --[[ModItemUnitAnimalCompositeDef AlphaRaptorPX Description]] "Hunts during the night. Is an Alpha-species of the Tecatli. Has venomous glands and good awareness, appears to be quite intelligent. Has good defense to poison and gas chemicals, however is weak against piercing, blunt, energy and pacify attacks. If tamed can bring meat from hunting wildlife."),
	'BaseMaxHealth', 850000,
	'FoodResources', {
		"FoodAnimalCarnivore",
		"Slop",
	},
	'DailyEatingAmount', 5000,
	'Diet', "Carnivore",
	'EatingDuration', 4000,
	'ButcherResources', {
		PlaceObj('ButcherResAmount', {
			'resource', "RawMeat",
			'min_amount', 100000,
			'max_amount', 200000,
		}),
		PlaceObj('ButcherResAmount', {
			'resource', "RaptorBlood",
			'min_amount', 0,
			'max_amount', 25000,
		}),
		PlaceObj('ButcherResAmount', {
			'resource', "RaptorHeart",
			'min_amount', 0,
			'max_amount', 2000,
		}),
		PlaceObj('ButcherResAmount', {
			'resource', "RaptorLung",
			'min_amount', 0,
			'max_amount', 4000,
		}),
		PlaceObj('ButcherResAmount', {
			'resource', "RaptorClawPX",
			'min_amount', 5000,
			'max_amount', 10000,
		}),
	},
	'SelectionRadius', 2000,
	'ChanceToBeMale', 70,
	'BodySize', "large",
	'ProduceResources', {
		PlaceObj('ResAmount', {
			'resource', "RawMeatPoultry",
			'amount', 100000,
		}),
	},
	'ProduceResInterval', 1920000,
	'AnimalPerks', {
		"DraftableAnimal",
		"BloodFrenzy",
		"SmartPredator",
	},
	'radius', 1000,
	'pfclass_tamed', 10,
	'pfclass_tamed_lead', 13,
	'attack_weapon', "AlphaRaptorPX",
	'CombatSkill', 7,
	'IntimidationRange', 40000,
	'anim_idle', {
		"idle",
	},
	'anim_idle_playful', {
		"idle_Playfull",
		"idle_Playfull2",
	},
	'SleepStartAnim', "sleep_Start",
	'SleepIdleAnim', "sleep_Idle",
	'SleepEndAnim', "sleep_End",
	'Tameable', true,
	'TamingFood', "RawMeat",
	'TamingFoodAmount', 100000,
	'TamingMinimumSkill', 7,
	'TamingChance', 20,
	'TamingAggressiveChance', 65,
	'TamingDistance', 15000,
	'TamedLifetimeMin', 1920000000,
	'TamedLifetimeMax', 5760000000,
	'CombatSkillInitial', range(2, 4),
	'BondingChance', 5,
	'ReproductionType', "two sexes",
	'NewbornClass', "VenomousRaptors",
	'MinNewbornScale', 35,
	'MaxNewbornScale', 35,
	'MinGrownScale', 65,
	'MaxGrownScale', 75,
	'RoamRadiusStarving', 50000,
	'SightRangeStarving', 40000,
	'MovementSpeedStarving', 1250,
	'NestDestroyedRange', 50000,
	'UnitPerkFrenzy', true,
	'FrenzyHealthPct', 70,
	'FrenzyEffects', {
		"RaptorInstinct",
		"Frenzy",
	},
}),
PlaceObj('ModItemUnitSpeciesGroup', {
	id = "PROJECTX",
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AreaOfEffect = 5000,
	AttackType = "ranged",
	CritChance = 30,
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Concussion_Critical",
			weight = 25,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrainDamage_Slight",
			weight = 5,
		}),
	},
	DamageTypes = {
		blunt = true,
		energy = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Explosion",
			weight = 15,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Bruise_Common",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Pain_1",
			weight = 70,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ShatteredBone_Common",
		}),
	},
	LaunchUnits = true,
	SortKey = 99900,
	display_name = T(462743006797, --[[ModItemWeaponResource PulseEnergyMine display_name]] "Trap"),
	id = "PulseEnergyMine",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 18000,
	AttackCooldownMaxSkill = 15000,
	AttackRange = 75000,
	AttackType = "ranged",
	AvailableOnStart = 5,
	BodyMale = "CyberSniperPX",
	CritChance = 45,
	CritChanceMaxSkill = 65,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "RailgunSniper_PuncturedOrgan",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "InflictHeavyBleed",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Critical",
			weight = 50,
		}),
	},
	DamageToBuildings = 10000,
	DamageTypes = {
		blunt = true,
		piercing = true,
	},
	DecayRateOutside = 434,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 85,
	HitChanceMaxSkill = 95,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CyberSuperDamage",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "AdvancedSniperWound",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "InflictHeavyBleed",
			weight = 100,
		}),
	},
	HitNegation = {
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "blunt",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "piercing",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "energy",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "gas",
			'NegationChance', 10,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 500000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "autoid_ucCehPy_ahz6LwG",
			Level = 1,
			Skill = "Combat",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_nUxMXFp",
			add = -10000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_rHQpLYa",
			add = 10000,
			prop = "TemperatureLow",
		}),
	},
	ProductionTech = "CyberWeaponry",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "RailgunProjectile_Improved",
	ProjectileSpeed = 80000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 4002,
	alt_icon = "CriminalActivity/CyberSniperRifle.png",
	alt_icon_outlined = "CriminalActivity/CyberSniperRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "CyberSniperv2PX",
	carry_rotation = 1800,
	carry_scale = 70,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Countered by Shrieker",
	description = T(939389064984, --[[ModItemWeaponResource CyberSniperRifle description]] "Intergalactic Military Rifle. High damage and gives some armor, but has a slow attack rate."),
	display_name = T(582865809613, --[[ModItemWeaponResource CyberSniperRifle display_name]] "Cyber Frag Rifle"),
	display_name_pl = T(597116203980, --[[ModItemWeaponResource CyberSniperRifle display_name_pl]] "Cyber Frag Rifle"),
	group = "Weapons_Human",
	icon = "CriminalActivity/CyberSniperRifleSmall.png",
	id = "CyberSniperRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 2600000000,
	progress = 100000,
	stack_entity = "CyberSniperv2PX",
	stack_scale = 70,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_railgun_sniper",
	visible = false,
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			param_bindings = false,
		}),
	},
	AffectedArea = "outline",
	BleedingModifier = 6000,
	Description = T(812655674756, --[[ModItemHealthCondition CyberSuperDamage Description]] "This person or unit has been hit by a Cyber Blaster Bolt that has caused burns."),
	DisplayName = T(989025099343, --[[ModItemHealthCondition CyberSuperDamage DisplayName]] "Cyber Blaster Burn"),
	FloatingTextIcon = "UI/Hud/float_hit",
	FloatingTextType = "Display name",
	HealthLoss = 45000,
	ManipulationModifierOpt = -5000,
	MistreatmentChance = 50,
	MistreatmentCond = {
		PlaceObj('HealthConditionOption', {
			effect = "Infection_1_Mild",
			param_bindings = false,
		}),
	},
	MistreatmentNoCondChance = 10,
	MovementModifierOpt = -5000,
	PainModifier = 40000,
	TreatmentCond = {
		PlaceObj('HealthConditionOption', {
			effect = "Burn_Treated",
			param_bindings = false,
			weight = 100,
		}),
	},
	TreatmentDuration = 20000,
	TreatmentMaxSkillLevel = 5,
	TreatmentMedicineAmount = 1000,
	TreatmentMedicineResource = "MedHealingBalm",
	TreatmentStatus = "requires treatment",
	Type = "Injury",
	group = "PROJECTX",
	id = "CyberSuperDamage",
}),
PlaceObj('ModItemWeaponResource', {
	AnimTestEntity = "Tecatli",
	AttackAngleTolerance = 1200,
	AttackAnim = "attack_Bite",
	AttackAnimAlt = "attack_Tail",
	AttackCooldown = 3000,
	AttackCooldownMaxSkill = 2000,
	AttackCooldownRand = 20,
	AttackRange = 2400,
	CritChance = 25,
	CritChanceMaxSkill = 35,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "ShatteredBone_Critical",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "AlphaRaptorClawPuncturePX",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ToxicPoisoning",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Critical",
			weight = 3,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "CrackedSkull_Critical",
			weight = 1,
		}),
	},
	DamageToBuildings = 50000,
	DamageTypes = {
		gas = true,
		piercing = true,
	},
	HitChance = 70,
	HitChanceMaxSkill = 90,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Bite_Common",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ShatteredBone_Common",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Common",
			weight = 3,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "CrackedSkull_Common",
			weight = 1,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "RaptorTailSwipePX",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 20,
		}),
	},
	MinAttackRange = 1500,
	SortKey = 999967,
	carry_amount = 0,
	display_name = T(436305196890, --[[ModItemWeaponResource AlphaRaptorPX display_name]] "Alpha Raptor Weapon"),
	group = "Weapons_Animal",
	id = "AlphaRaptorPX",
	progress = 0,
	stack_size = 0,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimIdle = "attack_Idle",
	AnimTestEntity = "Juno",
	AttackAngleTolerance = 1200,
	AttackAnimAlt = "attack2",
	AttackCooldown = 4000,
	AttackCooldownMaxSkill = 3000,
	AttackCooldownRand = 20,
	AttackRange = 3000,
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Juno_ShatteredBones",
		}),
	},
	DamageCone = 2400,
	DamageToBuildings = 50000,
	DamageTypes = {
		piercing = true,
	},
	FriendlyFire = false,
	HitChance = 70,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Juno_Slash",
		}),
	},
	MinAttackRange = 2500,
	SortKey = 99990,
	carry_amount = 0,
	display_name = T(260280951914, --[[ModItemWeaponResource JunoMelee_Brute display_name]] "Juno Melee"),
	group = "Weapons_Animal",
	id = "JunoMelee_Brute",
	progress = 0,
	stack_size = 0,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AlwaysFace = false,
	AnimTestEntity = "Turret_Gun",
	AnimateWeapon = true,
	AttackCooldown = 1300,
	AttackCooldownMaxSkill = 1300,
	AttackMoments = {
		"hit",
		"hit2",
	},
	AttackRange = 70000,
	AttackType = "ranged",
	CritChance = 25,
	CritChanceMaxSkill = 25,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Paralyzed",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_4_Extreme",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_5_Death",
			weight = 1,
		}),
	},
	DamageToBuildings = 20000,
	DamageTypes = {
		gas = true,
	},
	FriendlyFire = false,
	HitChance = 70,
	HitChanceMaxSkill = 70,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "ToxicPoisoning",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_3_Severe",
		}),
	},
	LockState = "hidden",
	MinAttackRange = 1000,
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "Shrieker_Projectile",
	ProjectileSpeed = 80000,
	ProjectileSpot = "Weaponsight",
	RangeTerrainDistortion = "always",
	ScaleRangeWithUnit = false,
	SortKey = 99998,
	carry_amount = 1000,
	display_name = T(144139043920, --[[ModItemWeaponResource GalacticToxicTurret display_name]] "Galactic Toxic Turret"),
	group = "Weapons_AutomatedTurret",
	id = "GalacticToxicTurret",
	money_value = 2000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimEnd = "attackGun_AimIdle",
	AimAnimIdle = "attackGun_AimIdle",
	AimAnimStart = "attackGun_AimStart",
	AnimDoor = "standing_OpenDoor_Gun",
	AnimIdle = "standing_Idle_Gun",
	AnimMove = "standing_Run_Gun",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackGun_AimFire",
	AttackCooldown = 2000,
	AttackCooldownMaxSkill = 2000,
	AttackRange = 22000,
	AttackType = "ranged",
	AvailableOnStart = 50,
	BodyMale = "PXDartGun",
	CritChance = 25,
	CritChanceMaxSkill = 45,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Paralyzed",
			weight = 100,
		}),
	},
	DamageToBuildings = 25000,
	DamageTypes = {
		gas = true,
	},
	DecayRateOutside = 174,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapMetal",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 20000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 55,
	HitChanceMaxSkill = 68,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Paralyzed",
			weight = 100,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 200000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "AdvancedWeaponry",
	ProjectileEntity = "ShortBow_Arrow",
	ProjectileGravity = true,
	ProjectileSpeed = 30000,
	ProjectileSpeedRand = 20000,
	ProjectileSpot = "Muzzle",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 3324,
	alt_icon = "General/Dartgun2.png",
	alt_icon_outlined = "General/Dartgun2.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXDartGuns",
	carry_scale = 70,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(715075098326, --[[ModItemWeaponResource DartGunPX description]] "Short-ranged weapon. Shoots darts imbued with substance that paralyzes the bodies nerve system temporarily. "),
	display_name = T(406050643726, --[[ModItemWeaponResource DartGunPX display_name]] "Dart Gun - Paralyze"),
	display_name_pl = T(220038089409, --[[ModItemWeaponResource DartGunPX display_name_pl]] "Dart Gun - Paralyze"),
	group = "Weapons_Human",
	icon = "General/DartGun2Small.png",
	id = "DartGunPX",
	in_groups = {
		"Weapons",
	},
	money_value = 65500000,
	progress = 50000,
	stack_entity = "PXDartGuns",
	stack_scale = 70,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_laser_blaster",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AlwaysFace = false,
	AnimTestEntity = "Turret_MisslePod",
	AnimateWeapon = true,
	AreaOfEffect = 20000,
	AttackAngleTolerance = 1800,
	AttackAnim = "",
	AttackCooldown = 20000,
	AttackCooldownMaxSkill = 20000,
	AttackMoments = {},
	AttackRange = 110000,
	AttackType = "missile",
	BodyFemale = "",
	BodyMale = "",
	CanAttackBelowMinRange = false,
	CritChance = 100,
	CritChanceMaxSkill = 100,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "TurretMissilePod_BlastWound",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "CyberExplosion",
			weight = 100,
		}),
	},
	DamageToBuildings = 100000,
	DamageTypes = {
		blunt = true,
		energy = true,
		piercing = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CyberExplosion",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "TurretMissilePod_BlastWound",
			weight = 40,
		}),
	},
	IlluminateTime = 20000,
	LaunchUnits = true,
	LockState = "hidden",
	MinAttackRange = 20000,
	ProjectileEntity = "Turret_Missle",
	ProjectileSpeed = 5000,
	ProjectileSpeedLim = 40000,
	ProjectileSpeedRand = 5000,
	ProjectileSpot = "Missle",
	ScaleRangeWithUnit = false,
	SortKey = 80900,
	WeaponTags = set( "MissileBarrage" ),
	alt_icon = "CriminalActivity/CyberMissileTurret.png",
	alt_icon_outlined = "CriminalActivity/CyberMissileTurret.png",
	carry_amount = 1000,
	display_name = T(276300232966, --[[ModItemWeaponResource CyberMissileTurret display_name]] "Cyber Missile Turret"),
	display_name_pl = T(890519139756, --[[ModItemWeaponResource CyberMissileTurret display_name_pl]] "Cyber Missile Turret"),
	group = "Weapons_AutomatedTurret",
	icon = "CriminalActivity/CyberMissileTurret.png",
	id = "CyberMissileTurret",
	money_value = 2000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimIdle = "attackSpear_Idle",
	AnimDoor = "standing_OpenDoor_Tool",
	AnimIdle = "standing_Idle_Tool",
	AnimMove = "standing_Run_Spear",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 420,
	AttackAnim = "attackSpear_Hit",
	AttackCooldown = 2000,
	AttackRange = 2000,
	AvailableOnStart = 30,
	BodyMale = "LaserPike",
	CritChance = 5,
	CritChanceMaxSkill = 10,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Critical",
			weight = 25,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
			weight = 8,
		}),
	},
	DamageToBuildings = 20000,
	DamageTypes = {
		blunt = true,
		energy = true,
		gas = true,
		pacify = true,
		piercing = true,
	},
	DecayRateOutside = 608,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 10000,
		}),
	},
	DismantleVisualRes = "Weapons",
	FriendlyFire = false,
	HitChance = 85,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Common",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Wound_Scar",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 2,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 700000,
	MinAttackRange = 500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 20000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -20000,
			prop = "TemperatureLow",
		}),
	},
	ProductionTech = "GalacticWeaponry",
	ScaleDamageWithUnit = false,
	SortKey = 3321,
	alt_icon = "Trade/GalacticSpear.png",
	alt_icon_outlined = "Trade/GalacticSpear.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceWeapon_LaserPike",
	carry_scale = 90,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(954780940067, --[[ModItemWeaponResource GalacticSpear description]] "A spear who's tip changes based on the defenses of the target. Low chance to stun. "),
	display_name = T(645719035326, --[[ModItemWeaponResource GalacticSpear display_name]] "Galactic Spear"),
	display_name_pl = T(658060929885, --[[ModItemWeaponResource GalacticSpear display_name_pl]] "Galactic Spear"),
	group = "Weapons_Human",
	icon = "Trade/GalacticSpearSmall.png",
	id = "GalacticSpear",
	in_groups = {
		"Weapons",
	},
	money_value = 300000000,
	progress = 60000,
	stack_entity = "ResourceWeapon_LaserPike",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_laser_pike",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AlwaysFace = false,
	AnimTestEntity = "Turret_Gun",
	AnimateWeapon = true,
	AttackCooldown = 5000,
	AttackCooldownMaxSkill = 5000,
	AttackMoments = {
		"hit",
		"hit2",
	},
	AttackRange = 70000,
	AttackType = "ranged",
	CritChance = 60,
	CritChanceMaxSkill = 60,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Pacifier_Pacify",
			weight = 100,
		}),
	},
	DamageToBuildings = 0,
	DamageTypes = {
		pacify = true,
	},
	FriendlyFire = false,
	HitChance = 60,
	HitChanceMaxSkill = 60,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Pacifier_Pacify",
			weight = 100,
		}),
	},
	LockState = "hidden",
	MinAttackRange = 1000,
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "Dragonfly_Projectile",
	ProjectileSpeed = 80000,
	ProjectileSpot = "Weaponsight",
	RangeTerrainDistortion = "always",
	ScaleRangeWithUnit = false,
	SortKey = 99977,
	carry_amount = 1000,
	display_name = T(652135577532, --[[ModItemWeaponResource GalacticPacifierTurret display_name]] "Galactic Pacifier Turret"),
	group = "Weapons_AutomatedTurret",
	id = "GalacticPacifierTurret",
	money_value = 2000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AlwaysFace = false,
	AnimateWeapon = true,
	AttackAnim = "",
	AttackMoments = {
		"hit",
		"hit2",
	},
	AttackRange = 80000,
	AttackType = "ranged",
	CritChance = 0,
	CritChanceMaxSkill = 0,
	DamageToBuildings = 20000,
	DamageTypes = {
		energy = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "TurretLaserBurnAdv",
		}),
	},
	LockState = "hidden",
	MinAttackRange = 1000,
	RangeTerrainDistortion = "always",
	ScaleRangeWithUnit = false,
	SortKey = 99990,
	carry_amount = 1000,
	display_name = T(150832323288, --[[ModItemWeaponResource GalacticLaserTurret display_name]] "Galactic Laser Turret"),
	group = "Weapons_AutomatedTurret",
	id = "GalacticLaserTurret",
	money_value = 2000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 2000,
	AttackRange = 45000,
	AttackType = "ranged",
	AvailableOnStart = 5,
	BodyMale = "GalacticRiflePX",
	CritChance = 5,
	CritChanceMaxSkill = 10,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_RetinalBurn",
		}),
	},
	DamageToBuildings = 20000,
	DamageTypes = {
		blunt = true,
		energy = true,
		gas = true,
		pacify = true,
		piercing = true,
	},
	DecayRateOutside = 521,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 10000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 85,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Wound_Scar",
			weight = 100,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 600000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_k7XHokQ",
			add = 20000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_Sp3K3H",
			add = -20000,
			prop = "TemperatureLow",
		}),
	},
	ProductionTech = "GalacticWeaponry",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "Blaster_Pistol_Projectile",
	ProjectileSpeed = 40000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 3322,
	alt_icon = "Trade/GalacticRifle.png",
	alt_icon_outlined = "Trade/GalacticRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "GalacticRiflePX",
	carry_rotation = 1800,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(268812737460, --[[ModItemWeaponResource GalacticRifle description]] "Recently decommissioned from Military Service, this weapon is very accurate. Prior military philosophy was to use a large projectile creation module that loaded whatever type of damage is best against the target."),
	display_name = T(709317997870, --[[ModItemWeaponResource GalacticRifle display_name]] "Galactic Rifle"),
	display_name_pl = T(357381733031, --[[ModItemWeaponResource GalacticRifle display_name_pl]] "Galactic Rifle"),
	group = "Weapons_Human",
	icon = "Trade/GalacticRifleSmall.png",
	id = "GalacticRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 500000000,
	progress = 90000,
	stack_entity = "GalacticRiflePX",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 2000,
	AttackRange = 55000,
	AttackType = "ranged",
	AvailableOnStart = 5,
	BodyMale = "PXNanitePhantom",
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_PuncturedArtery",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_RetinalBurn",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteBurnPX",
			weight = 100,
		}),
	},
	DamageToBuildings = 35000,
	DamageTypes = {
		energy = true,
	},
	DecayRateOutside = 868,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CPUCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 5000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 75,
	HitChanceMaxSkill = 95,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_Burn",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteBurnPX",
			weight = 50,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 1000000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_F65uTr",
			add = 15000,
			prop = "SightRange",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -15000,
			prop = "Manipulation",
		}),
	},
	ProductionTech = "NanoTechPhantom",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "Blaster_Pistol_Projectile",
	ProjectileSpeed = 40000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 3322,
	alt_icon = "NanoTech/PXPhantom.png",
	alt_icon_outlined = "NanoTech/PXPhantom.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXNanoPhantom",
	carry_rotation = 1800,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(521398831202, --[[ModItemWeaponResource PhantomRiflePX description]] "The Phantom Rifle was one of the first weapons created to utilize Nanite technology. Though its out-dated, its still quite expensive and for good reason. This rifle can inflict some serious energetic damage to its target and has some nasty side effects with its punch. Increases range of vision by 15 meters when equipped but reduces manipulation by -15."),
	display_name = T(323074634232, --[[ModItemWeaponResource PhantomRiflePX display_name]] "Phantom Rifle"),
	display_name_pl = T(301151376521, --[[ModItemWeaponResource PhantomRiflePX display_name_pl]] "Phantom Rifle"),
	group = "Weapons_Human",
	icon = "NanoTech/PXPhantomSmaller.png",
	id = "PhantomRiflePX",
	in_groups = {
		"Weapons",
	},
	money_value = 1850000000,
	progress = 90000,
	stack_entity = "PXNanoPhantom",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 5000,
	AttackAngleTolerance = 1800,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 0,
	AttackCooldownMaxSkill = 0,
	AttackRange = 100000,
	AttackType = "missile",
	AvailableOnStart = 5,
	BodyMale = "AnnihilatorPX",
	CanAttackBelowMinRange = false,
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Explosion",
			weight = 60,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteExplosionPX",
			weight = 60,
		}),
	},
	DamageToBuildings = 50000,
	DamageTypes = {
		blunt = true,
		energy = true,
		piercing = true,
	},
	DecayRateOutside = 1042,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 100000,
		}),
		PlaceObj('ResAmount', {
			'resource', "MechCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "CPUCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 50000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 70,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Common",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Concussion_Critical",
			weight = 25,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "TornOff_Skin",
			weight = 25,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "TornOff_Fingers",
			weight = 25,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteBurnPX",
			weight = 45,
		}),
	},
	IlluminateTime = 20000,
	IsDoubleHanded = true,
	LaunchUnits = true,
	LockState = "hidden",
	MaxHealth = 1200000,
	MinAttackRange = 15000,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_iAOED1R",
			add = -70000,
			prop = "Movement",
		}),
	},
	ProductionTech = "NanoTechAnnihilator",
	ProjectileEntity = "Turret_Missle",
	ProjectileSpeed = 15000,
	ProjectileSpeedLim = 40000,
	ProjectileSpeedRand = 5000,
	ProjectileSpot = "Origin",
	ScaleRangeWithUnit = false,
	SortKey = 1,
	WeaponTags = set( "MissileBarrage" ),
	alt_icon = "NanoTech/PXAnnihilator.png",
	alt_icon_outlined = "NanoTech/PXAnnihilator.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXNanoTechGun",
	carry_rotation = 1800,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(202224556077, --[[ModItemWeaponResource NanoTechAnnihilator description]] "The latest addition to the Nano-Tech line of weaponry is the Annihilator. Though classed as legal, some would argue it is far from the legality borders of being acceptable. This weapon launches fast moving missiles to its target that release an explosion of nanite-energy. Though due to its large design when used will slow the survivor by 70%. Has a very low cooldown."),
	display_name = T(879445581005, --[[ModItemWeaponResource NanoTechAnnihilator display_name]] "Nano-Tech Annihilator"),
	display_name_pl = T(931527726001, --[[ModItemWeaponResource NanoTechAnnihilator display_name_pl]] "Nano-Tech Annihilator"),
	group = "Weapons_Human",
	icon = "NanoTech/PXAnnihilatorSmall.png",
	id = "NanoTechAnnihilator",
	in_groups = {
		"Weapons",
	},
	money_value = 2300000000,
	progress = 90000,
	stack_entity = "PXNanoTechGun",
	stack_scale = 150,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 20000,
	AttackAngleTolerance = 1800,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 20000,
	AttackCooldownMaxSkill = 15000,
	AttackRange = 60000,
	AttackType = "ranged",
	AvailableOnStart = 5,
	BodyMale = "PXNaniteSwarmer",
	CanAttackBelowMinRange = false,
	CritChance = 0,
	CritChanceMaxSkill = 0,
	DamageCone = 5400,
	DamageToBuildings = 0,
	DamageTypes = {
		energy = true,
		pacify = true,
	},
	DecayRateOutside = 1128,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 100000,
		}),
		PlaceObj('ResAmount', {
			'resource', "MechCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "CPUCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 50000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 90,
	HitChanceMaxSkill = 90,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Paralyzed",
			weight = 99999999,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 1300000,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -30000,
			prop = "Movement",
		}),
	},
	ProductionTech = "NanoTechSwarmer",
	ProjectileSpeed = 15000,
	ProjectileSpeedLim = 40000,
	ProjectileSpeedRand = 5000,
	ProjectileSpot = "Origin",
	ScaleRangeWithUnit = false,
	SortKey = 1,
	alt_icon = "NanoTech/PXSwarmer.png",
	alt_icon_outlined = "NanoTech/PXSwarmer.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXNanoSwarmer",
	carry_rotation = 1800,
	carry_scale = 80,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(949077114331, --[[ModItemWeaponResource NanoTechSwarmer description]] "A heavy rifle that emits a swarm of nanites at its target, a wave of nanites capable of shutting down the nervous system and causing brief paralysis. Though its useless if you dont have someone to dish out the finishing blow. A good weapon to keep waves of enemies back, giving you time to set up. Decreases move speed by 30%, has a 90 degree radius of AoE effect to inflict 90% chance of stun. No damage."),
	display_name = T(293893126892, --[[ModItemWeaponResource NanoTechSwarmer display_name]] "Nano-Tech Swarmer"),
	display_name_pl = T(951890889840, --[[ModItemWeaponResource NanoTechSwarmer display_name_pl]] "Nano-Tech Swarmer"),
	group = "Weapons_Human",
	icon = "NanoTech/PXSwarmerSmaller.png",
	id = "NanoTechSwarmer",
	in_groups = {
		"Weapons",
	},
	money_value = 2600000000,
	progress = 90000,
	stack_entity = "PXNanoSwarmer",
	stack_scale = 80,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AimAnimIdle = "attackKnife_Idle",
	AnimDoor = "standing_OpenDoor_Tool",
	AnimIdle = "standing_Idle_Tool",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 420,
	AttackAnim = "attackKnife_Hit",
	AttackAnimAlt = "attackKnife_Hit2",
	AttackCooldownMaxSkill = 100,
	AttackRange = 1500,
	AvailableOnStart = 5,
	BodyMale = "PXNaniteBlade",
	CanAttackBelowMinRange = false,
	CritChance = 70,
	CritChanceMaxSkill = 90,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Critical",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Cut_Critical",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 20,
		}),
	},
	DamageCone = 1800,
	DamageToBuildings = 30000,
	DamageTypes = {
		energy = true,
		piercing = true,
	},
	DecayRateOutside = 608,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "MechCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "EnergyCrystals",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 2000,
		}),
	},
	DismantleVisualRes = "Weapons",
	FriendlyFire = false,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Cut_Common",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Common",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Common",
			weight = 2,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteBurnPX",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
		}),
	},
	IlluminateTime = 20000,
	IsDoubleHanded = true,
	LaunchUnits = true,
	LockState = "hidden",
	MaxHealth = 700000,
	MinAttackRange = 400,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 20000,
			prop = "Movement",
		}),
	},
	ProductionTech = "NanoTechNaniteBlade",
	ProjectileEntity = "Turret_Missle",
	ProjectileSpeed = 15000,
	ProjectileSpeedLim = 40000,
	ProjectileSpeedRand = 5000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 2,
	alt_icon = "NanoTech/PXNaniteBlade.png",
	alt_icon_outlined = "NanoTech/PXNaniteBlade.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXNanoBlade",
	carry_rotation = 1800,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(295049295699, --[[ModItemWeaponResource NanoTechBlade description]] "A light blade utilizing Nanite technology to create a beam of energy that slices through flesh like butter. With the wielding of light nanite technology it enhances the persons movement speed by 20%. Has high crit chance and can stun."),
	display_name = T(189779053297, --[[ModItemWeaponResource NanoTechBlade display_name]] "Nanite Blade"),
	display_name_pl = T(274606016757, --[[ModItemWeaponResource NanoTechBlade display_name_pl]] "Nanite Blade"),
	group = "Weapons_Human",
	icon = "NanoTech/PXNaniteBladeSmall.png",
	id = "NanoTechBlade",
	in_groups = {
		"Weapons",
	},
	money_value = 1200000000,
	progress = 0,
	stack_entity = "PXNanoBlade",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AimAnimIdle = "attackKnife_Idle",
	AnimDoor = "standing_OpenDoor_Tool",
	AnimIdle = "standing_Idle_Tool",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 420,
	AttackAnim = "attackKnife_Hit",
	AttackAnimAlt = "attackKnife_Hit2",
	AttackCooldown = 2000,
	AttackRange = 2000,
	AvailableOnStart = 5,
	BodyMale = "PXNaniteKhopesh",
	CanAttackBelowMinRange = false,
	CritChance = 70,
	CritChanceMaxSkill = 90,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Critical",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Cut_Critical",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteBurnPX",
			weight = 80,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 70,
		}),
	},
	DamageCone = 3000,
	DamageToBuildings = 40000,
	DamageTypes = {
		energy = true,
		piercing = true,
	},
	DecayRateOutside = 868,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "MechCore",
		}),
		PlaceObj('ResAmount', {
			'resource', "EnergyCrystals",
			'amount', 40000,
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 2000,
		}),
	},
	DismantleVisualRes = "Weapons",
	FriendlyFire = false,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Cut_Common",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Common",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Common",
			weight = 7,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "NaniteBurnPX",
			weight = 70,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 30,
		}),
	},
	IlluminateTime = 40000,
	IsDoubleHanded = true,
	LaunchUnits = true,
	LockState = "hidden",
	MaxHealth = 1000000,
	MinAttackRange = 400,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_r0lBnPS",
			add = 30000,
			prop = "Movement",
		}),
	},
	ProductionTech = "NanoTechKhopesh",
	ProjectileEntity = "Turret_Missle",
	ProjectileSpeed = 15000,
	ProjectileSpeedLim = 40000,
	ProjectileSpeedRand = 5000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 3,
	alt_icon = "NanoTech/PXNanoKhopeshLarge.png",
	alt_icon_outlined = "NanoTech/PXNanoKhopeshLarge.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXNanoKhopesh2",
	carry_rotation = 1800,
	carry_scale = 75,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(187701467864, --[[ModItemWeaponResource NanoTechKhopesh description]] "A larger blade using nanite technology to assist the blade in cutting through objects smoothly. Due to its light material it increases the persons movement speed by 30%. Has the ability to stun and burn targets."),
	display_name = T(343308379149, --[[ModItemWeaponResource NanoTechKhopesh display_name]] "Nanite Khopesh"),
	display_name_pl = T(733793887196, --[[ModItemWeaponResource NanoTechKhopesh display_name_pl]] "Nanite Khopesh"),
	group = "Weapons_Human",
	icon = "NanoTech/PXNanoKhopesh.png",
	id = "NanoTechKhopesh",
	in_groups = {
		"Weapons",
	},
	money_value = 1600000000,
	progress = 0,
	stack_entity = "PXNanoKhopesh2",
	stack_scale = 75,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AlwaysFace = false,
	AnimTestEntity = "Turret_MisslePod",
	AnimateWeapon = true,
	AreaOfEffect = 10000,
	AttackAngleTolerance = 600,
	AttackAnim = "",
	AttackCooldown = 15000,
	AttackCooldownMaxSkill = 15000,
	AttackMoments = {},
	AttackRange = 90000,
	AttackType = "missile",
	BodyFemale = "",
	BodyMale = "",
	CanAttackBelowMinRange = false,
	CritChance = 10,
	CritChanceMaxSkill = 10,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "TurretMissilePod_BlastWound",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "FireSpread",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
		}),
	},
	DamageToBuildings = 100000,
	DamageTypes = {
		energy = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "FireSpread",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 100,
		}),
	},
	IlluminateTime = 20000,
	LaunchUnits = true,
	LockState = "hidden",
	MinAttackRange = 10000,
	ProjectileAttachMoment = "",
	ProjectileEntity = "Turret_Missle",
	ProjectileFXClass = "",
	ProjectileSpeed = 5000,
	ProjectileSpeedLim = 40000,
	ProjectileSpeedRand = 5000,
	ProjectileSpot = "Missle",
	ScaleRangeWithUnit = false,
	SortKey = 80901,
	WeaponTags = set( "MissileBarrage" ),
	carry_amount = 1000,
	display_name = T(220874524699, --[[ModItemWeaponResource GalacticIncendiaryTurret display_name]] "Galactic Incendiary Turret"),
	display_name_pl = T(801521541157, --[[ModItemWeaponResource GalacticIncendiaryTurret display_name_pl]] "Galactic Incendiary Turret"),
	group = "Weapons_AutomatedTurret",
	id = "GalacticIncendiaryTurret",
	money_value = 2000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimIdle = "attack_Idle",
	AnimTestEntity = "Juno",
	AttackAngleTolerance = 1200,
	AttackAnimAlt = "attack2",
	AttackCooldown = 4000,
	AttackCooldownMaxSkill = 3000,
	AttackCooldownRand = 20,
	AttackRange = 3000,
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Juno_ShatteredBones",
		}),
	},
	DamageCone = 2400,
	DamageToBuildings = 35000,
	DamageTypes = {
		piercing = true,
	},
	FriendlyFire = false,
	HitChance = 70,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Juno_Slash",
		}),
	},
	MinAttackRange = 2500,
	SortKey = 99990,
	carry_amount = 0,
	display_name = T(479382303237, --[[ModItemWeaponResource JunoMelee display_name]] "Juno Melee"),
	group = "Weapons_Animal",
	id = "JunoMelee",
	progress = 0,
	stack_size = 0,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AreaOfEffect = 2000,
	AttackRange = 2000,
	AttackType = "ranged",
	CritChance = 50,
	CritChanceMaxSkill = 50,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "DamagedLungs",
		}),
	},
	DamageTypes = {
		blunt = true,
		piercing = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Explosion",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "TornOff_Skin",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 80,
		}),
	},
	LaunchUnits = true,
	SortKey = 99920,
	display_name = T(612680859313, --[[ModItemWeaponResource LethalityMine display_name]] "Trap"),
	id = "LethalityMine",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AreaOfEffect = 2000,
	AttackType = "ranged",
	CreatesOpenWounds = false,
	CritChance = 60,
	CritChanceMaxSkill = 60,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 100,
		}),
	},
	DamageTypes = {
		pacify = true,
	},
	FriendlyFire = false,
	HitChance = 60,
	HitChanceMaxSkill = 60,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Pacifier_Pacify",
			weight = 60,
		}),
	},
	SortKey = 99902,
	display_name = T(821571327566, --[[ModItemWeaponResource PacifyMine display_name]] "Trap"),
	id = "PacifyMine",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AlwaysFace = false,
	AnimTestEntity = "Glutch",
	AreaOfEffect = 2000,
	AttackAngleTolerance = 10800,
	AttackCooldown = 8000,
	AttackCooldownMaxSkill = 8000,
	AttackCooldownRand = 20,
	AttackRange = 2500,
	AttackType = "ranged",
	CritChance = 30,
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Glutch_LungDamage",
			weight = 15,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_2_Moderate",
			weight = 5,
		}),
	},
	DamageCone = 21600,
	DamageToBuildings = 15000,
	DamageTypes = {
		gas = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Glutch_ChemicalBurn",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 40,
		}),
	},
	MinAttackRange = 1500,
	SortKey = 99990,
	carry_amount = 0,
	display_name = T(528080031116, --[[ModItemWeaponResource GlutchWeapon display_name]] "Glutch Weapon"),
	group = "Weapons_Animal",
	id = "GlutchWeapon",
	progress = 0,
	stack_size = 0,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimEnd = "attackGun_AimIdle",
	AimAnimIdle = "attackGun_AimIdle",
	AimAnimStart = "attackGun_AimStart",
	AnimDoor = "standing_OpenDoor_Gun",
	AnimIdle = "standing_Idle_Gun",
	AnimMove = "standing_Run_Gun",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackGun_AimFire",
	AttackCooldown = 500,
	AttackCooldownMaxSkill = 250,
	AttackRange = 22000,
	AttackType = "ranged",
	AvailableOnStart = 50,
	BodyMale = "GalacticPistolPX",
	CritChanceMaxSkill = 30,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_PuncturedArtery",
			weight = 15,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_RetinalBurn",
			weight = 7,
		}),
	},
	DamageToBuildings = 10000,
	DamageTypes = set( "blunt", "energy", "gas", "pacify", "piercing" ),
	DecayRateOutside = 434,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapMetal",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "PowerCell",
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 15000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 75,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "weak_gunshot",
			weight = 15,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 5,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 500000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 20000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -20000,
			prop = "TemperatureLow",
		}),
	},
	ProductionTech = "GalacticWeaponry",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "Blaster_Pistol_Projectile",
	ProjectileSpeed = 40000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 3323,
	alt_icon = "Trade/GalacticPistol.png",
	alt_icon_outlined = "Trade/GalacticPistol.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "GalacticPistolPX",
	carry_scale = 70,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(194027612777, --[[ModItemWeaponResource GalacticPistol description]] "Fast firing and highly accurate. When you really need to land a lot of hits really fast!"),
	display_name = T(738439503160, --[[ModItemWeaponResource GalacticPistol display_name]] "Galactic SMG"),
	display_name_pl = T(360957086962, --[[ModItemWeaponResource GalacticPistol display_name_pl]] "Galactic SMG"),
	group = "Weapons_Human",
	icon = "Trade/GalacticPistolSmall.png",
	id = "GalacticPistol",
	in_groups = {
		"Weapons",
	},
	money_value = 200500000,
	progress = 50000,
	stack_entity = "GalacticPistolPX",
	stack_scale = 70,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_laser_blaster",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimEnd = "attackGun_AimIdle",
	AimAnimIdle = "attackGun_AimIdle",
	AimAnimStart = "attackGun_AimStart",
	AnimDoor = "standing_OpenDoor_Gun",
	AnimIdle = "standing_Idle_Gun",
	AnimMove = "standing_Run_Gun",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackGun_AimFire",
	AttackCooldown = 2000,
	AttackCooldownMaxSkill = 2000,
	AttackRange = 22000,
	AttackType = "ranged",
	AvailableOnStart = 50,
	BodyMale = "PXDartGun",
	CritChance = 25,
	CritChanceMaxSkill = 45,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "InflictHeavyBleed",
			weight = 100,
		}),
	},
	DamageToBuildings = 25000,
	DamageTypes = {
		pacify = true,
	},
	DecayRateOutside = 174,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapMetal",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 20000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 55,
	HitChanceMaxSkill = 68,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "InflictHeavyBleed",
			weight = 100,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 200000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "AdvancedWeaponry",
	ProjectileEntity = "ShortBow_Arrow",
	ProjectileGravity = true,
	ProjectileSpeed = 30000,
	ProjectileSpeedRand = 20000,
	ProjectileSpot = "Muzzle",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 3325,
	alt_icon = "General/Dartgun.png",
	alt_icon_outlined = "General/Dartgun.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXDartGuns",
	carry_scale = 70,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(110612074156, --[[ModItemWeaponResource DartGunBleedPX description]] "Short-ranged weapon. Shoots darts imbued with substance that travels through the bloodstream, thinning the blood and causing heavy bleeding that stacks.."),
	display_name = T(178071472205, --[[ModItemWeaponResource DartGunBleedPX display_name]] "Dart Gun - Bleed"),
	display_name_pl = T(322623121254, --[[ModItemWeaponResource DartGunBleedPX display_name_pl]] "Dart Gun - Bleed"),
	group = "Weapons_Human",
	icon = "General/DartGunSmall.png",
	id = "DartGunBleedPX",
	in_groups = {
		"Weapons",
	},
	money_value = 75500000,
	progress = 50000,
	stack_entity = "PXDartGuns",
	stack_scale = 70,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_laser_blaster",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 3000,
	AttackCooldownMaxSkill = 2000,
	AttackRange = 40000,
	AttackType = "ranged",
	AvailableOnStart = 5,
	BodyMale = "CyberPulseRiflePX",
	CritChance = 25,
	CritChanceMaxSkill = 50,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Critical",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ShatteredBone_Critical",
		}),
	},
	DamageCone = 2400,
	DamageToBuildings = 10000,
	DamageTypes = {
		energy = true,
		gas = true,
	},
	DecayRateOutside = 868,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 10000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 75,
	HitChanceMaxSkill = 85,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "PulseRifle_ShatteredBone",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 40,
		}),
	},
	HitNegation = {
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "blunt",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "piercing",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "energy",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "gas",
			'NegationChance', 10,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 1000000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "",
			Level = 1,
			Skill = "Combat",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -10000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 10000,
			prop = "TemperatureLow",
		}),
	},
	ProductionTech = "CyberWeaponry",
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 4001,
	alt_icon = "CriminalActivity/CyberPlasmaRifle.png",
	alt_icon_outlined = "CriminalActivity/CyberPlasmaRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "CyberPulseRiflePX",
	carry_rotation = 1800,
	carry_scale = 90,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Countered by Tecatli",
	description = T(705345508646, --[[ModItemWeaponResource CyberPlasmaRifle description]] "Superheated plasma, thanks to Cyber Crystals ability to focus more energy. The frame is meant to survive the near-instant dissipation without breaking."),
	display_name = T(511644586078, --[[ModItemWeaponResource CyberPlasmaRifle display_name]] "Cyber Plasma Rifle"),
	display_name_pl = T(677346346092, --[[ModItemWeaponResource CyberPlasmaRifle display_name_pl]] "Cyber Plasma Rifle"),
	group = "Weapons_Human",
	icon = "CriminalActivity/CyberPlasmaRifleSmall.png",
	id = "CyberPlasmaRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 2500000000,
	progress = 90000,
	stack_entity = "CyberPulseRiflePX",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 3000,
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 14000,
	AttackCooldownMaxSkill = 11000,
	AttackRange = 15000,
	AttackType = "ranged",
	BodyMale = "PXShockRifle",
	CritChance = 20,
	CritChanceMaxSkill = 35,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Electrocution_2",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Zapped",
			weight = 30,
		}),
	},
	DamageCone = 600,
	DamageToBuildings = 30000,
	DamageTypes = {
		energy = true,
	},
	DecayRateOutside = 781,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 75,
	HitChanceMaxSkill = 95,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "ChainLightning",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Electrocution",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 100,
		}),
	},
	IlluminateTime = 120000,
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 900000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "BlackMarketWeaponry",
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 2445,
	alt_icon = "Trade/BMShockRifle.png",
	alt_icon_outlined = "Trade/BMShockRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXShockRifle1",
	carry_rotation = 1800,
	carry_scale = 70,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(695816345866, --[[ModItemWeaponResource ShockRifle description]] "Blackmarket Item - Shock Rifle - Electrocute Enemies, chains to nearby enemies. Does high damage, very slow reload, normal accuracy and short range."),
	display_name = T(864049858006, --[[ModItemWeaponResource ShockRifle display_name]] "Shock Rifle"),
	display_name_pl = T(152532152981, --[[ModItemWeaponResource ShockRifle display_name_pl]] "Shock Rifle"),
	group = "Weapons_Human",
	icon = "Trade/BMShockRifleSmall.png",
	id = "ShockRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 700000000,
	progress = 90000,
	stack_entity = "PXShockRifle1",
	stack_scale = 70,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 5000,
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 20000,
	AttackCooldownMaxSkill = 15000,
	AttackRange = 125000,
	AttackType = "ranged",
	BodyMale = "AlienSniperRiflePX",
	CanAttackBelowMinRange = false,
	CritChance = 85,
	CritChanceMaxSkill = 95,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "InflictHeavyBleed",
			weight = 100,
		}),
	},
	DamageToBuildings = 100000,
	DamageTypes = {
		blunt = true,
		gas = true,
	},
	DecayRateOutside = 1128,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "AlienProcessor",
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	HitChance = 100,
	HitChanceMaxSkill = 125,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "ZancerConversion",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "toco_damage",
		}),
	},
	HitNegation = {
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "gas",
			'NegationChance', 40,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 1300000,
	MinAttackRange = 20000,
	MinStorageCondition = 2,
	ProductionTech = "AlienWeaponry",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "RailgunProjectile_Improved",
	ProjectileSpeed = 40000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 4008,
	TriggerResponse = false,
	alt_icon = "CriminalActivity/AlienSniperRifle.png",
	alt_icon_outlined = "CriminalActivity/AlienSniperRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXAlienSniperRifle",
	carry_rotation = 1800,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "REALLY bad against Glutch",
	description = T(873187173117, --[[ModItemWeaponResource AlienSniperRifle description]] "A Toco organ creates deadly toxins, and Adricon condenses it in a thin membrane. This allow the frame to fire these orbs and it erupts and infects all around the enemy. Warning, will cause friendly fire!"),
	display_name = T(428656711233, --[[ModItemWeaponResource AlienSniperRifle display_name]] "BioNade Launcher"),
	display_name_pl = T(102370004631, --[[ModItemWeaponResource AlienSniperRifle display_name_pl]] "BioNade Launchers"),
	group = "Weapons_Human",
	icon = "CriminalActivity/AlienSniperRifleSmall.png",
	id = "AlienSniperRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 6380000000,
	progress = 200000,
	stack_entity = "PXAlienSniperRifle",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_railgun_sniper",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 1000,
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 18000,
	AttackCooldownMaxSkill = 15000,
	AttackRange = 90000,
	AttackType = "ranged",
	BodyMale = "ToxicSniperRiflePX",
	CritChance = 25,
	CritChanceMaxSkill = 35,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "RailgunSniper_PuncturedOrgan",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Hypothermia_3_Severe",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Critical",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ShatteredBone_Critical",
			weight = 30,
		}),
	},
	DamageToBuildings = 40000,
	DamageTypes = {
		blunt = true,
		gas = true,
		piercing = true,
	},
	DecayRateOutside = 781,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "AdvancedSniperWound",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ToxicAir_ShortnessOfBreath",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_2_Moderate",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_PuncturedArtery",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Common",
			weight = 20,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 900000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "BlackMarketWeaponry",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "RailgunProjectile_Improved",
	ProjectileSpeed = 40000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 2446,
	alt_icon = "Trade/BMSniper.png",
	alt_icon_outlined = "Trade/BMSniper.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ToxicSniperPX",
	carry_rotation = 1800,
	carry_scale = 70,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(967327365880, --[[ModItemWeaponResource ToxicSniperRifle description]] "Normal attack speed, medium damage, long range, can inflict poison and toxic health conditions, can effect anyone in a 1 meter distance of the target."),
	display_name = T(931209156249, --[[ModItemWeaponResource ToxicSniperRifle display_name]] "Toxic Sniper Rifle"),
	display_name_pl = T(652765949637, --[[ModItemWeaponResource ToxicSniperRifle display_name_pl]] "Toxic Sniper Rifle"),
	group = "Weapons_Human",
	icon = "Trade/BMSniperSmall.png",
	id = "ToxicSniperRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 700000000,
	progress = 100000,
	stack_entity = "ToxicSniperPX",
	stack_scale = 70,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_railgun_sniper",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimIdle = "attackSpear_Idle",
	AnimDoor = "standing_OpenDoor_Tool",
	AnimIdle = "standing_Idle_Tool",
	AnimMove = "standing_Run_Spear",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 420,
	AttackAnim = "attackSpear_Hit",
	AttackCooldown = 2000,
	AttackRange = 2000,
	AvailableOnStart = 15,
	BodyMale = "LaserPike",
	CritChance = 40,
	CritChanceMaxSkill = 70,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
		}),
	},
	DamageToBuildings = 10000,
	DamageTypes = {
		pacify = true,
		piercing = true,
	},
	DecayRateOutside = 694,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "PowerCell",
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 10000,
		}),
	},
	DismantleVisualRes = "Weapons",
	FriendlyFire = false,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserStab_Critical",
			weight = 25,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
			weight = 8,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
		}),
	},
	HitNegation = {
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "blunt",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "piercing",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "energy",
			'NegationChance', 10,
		}),
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "gas",
			'NegationChance', 10,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 800000,
	MinAttackRange = 500,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifySkill', {
			Id = "",
			Level = 1,
			Skill = "Combat",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -10000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 10000,
			prop = "TemperatureLow",
		}),
	},
	ProductionTech = "CyberWeaponry",
	ScaleDamageWithUnit = false,
	SortKey = 5555,
	alt_icon = "CriminalActivity/CyberLaserPike.png",
	alt_icon_outlined = "CriminalActivity/CyberLaserPike.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceWeapon_LaserPike",
	carry_scale = 90,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Countered by Skarabei",
	description = T(406313976960, --[[ModItemWeaponResource CyberLaserPike description]] "Serrated Cyber Crystals, at the end of a carbon pole. How simple, but so deadly. Most wildlife is risky to fight in melee, hopefully this gives us a fighting chance."),
	display_name = T(512984843982, --[[ModItemWeaponResource CyberLaserPike display_name]] "Cyber Laser Pike"),
	display_name_pl = T(502966221899, --[[ModItemWeaponResource CyberLaserPike display_name_pl]] "Cyber Laser Pikes"),
	group = "Weapons_Human",
	icon = "CriminalActivity/CyberLaserPikeSmall.png",
	id = "CyberLaserPike",
	in_groups = {
		"Weapons",
	},
	money_value = 1450000000,
	progress = 60000,
	stack_entity = "ResourceWeapon_LaserPike",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_laser_pike",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AlwaysFace = false,
	AnimTestEntity = "Turret_Gun",
	AnimateWeapon = true,
	AttackCooldown = 1,
	AttackCooldownMaxSkill = 1,
	AttackMoments = {
		"hit",
		"hit2",
	},
	AttackRange = 80000,
	AttackType = "ranged",
	CritChance = 5,
	CritChanceMaxSkill = 5,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_PuncturedArtery",
			weight = 5,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_RetinalBurn",
			weight = 3,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "CyberBlasterBurn",
			weight = 100,
		}),
	},
	DamageToBuildings = 5000,
	DamageTypes = {
		energy = true,
		piercing = true,
	},
	FriendlyFire = false,
	HitChance = 60,
	HitChanceMaxSkill = 60,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CyberBlasterBurn",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_Burn",
			weight = 5,
		}),
	},
	LockState = "hidden",
	MinAttackRange = 1000,
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "Blaster_Pistol_Improved_Projectile",
	ProjectileSpeed = 100000,
	ProjectileSpot = "Weaponsight",
	RangeTerrainDistortion = "always",
	ScaleRangeWithUnit = false,
	SortKey = 99996,
	carry_amount = 1000,
	display_name = T(179455809554, --[[ModItemWeaponResource CyberBlasterTurret display_name]] "Cyber Blaster Turret"),
	group = "Weapons_AutomatedTurret",
	id = "CyberBlasterTurret",
	money_value = 2000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 9000,
	AttackCooldownMaxSkill = 9000,
	AttackRange = 30000,
	AttackType = "ranged",
	BodyMale = "PXCryoRifle",
	CreatesOpenWounds = false,
	CritChance = 20,
	CritChanceMaxSkill = 35,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Pneumonia_3_Severe",
			weight = 15,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "CryoFreeze",
			weight = 100,
		}),
	},
	DamageCone = 600,
	DamageToBuildings = 5000,
	DamageTypes = {
		energy = true,
	},
	DecayRateOutside = 781,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 60,
	HitChanceMaxSkill = 65,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CryoFreeze",
			weight = 60,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Pneumonia_1_Mild",
			weight = 30,
		}),
	},
	IlluminateTime = 120000,
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 900000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "BlackMarketWeaponry",
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 2444,
	alt_icon = "Trade/BMCryoRifle.png",
	alt_icon_outlined = "Trade/BMCryoRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXCryoRifle",
	carry_rotation = 1800,
	carry_scale = 80,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(386408148521, --[[ModItemWeaponResource CryoFreezeRifle description]] "Blackmarket Item - Cryo-Freeze Rifle - Cryogenically Freeze Enemies. Does low damage, slow reload, low accuracy but can freeze enemies in a 10 degree cone."),
	display_name = T(531864927475, --[[ModItemWeaponResource CryoFreezeRifle display_name]] "Cryo-Freeze Rifle"),
	display_name_pl = T(855542594695, --[[ModItemWeaponResource CryoFreezeRifle display_name_pl]] "Cryo-Freeze Rifle"),
	group = "Weapons_Human",
	icon = "Trade/BMCryoRifleSmall.png",
	id = "CryoFreezeRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 700000000,
	progress = 90000,
	stack_entity = "PXCryoRifle",
	stack_scale = 80,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimEnd = "attackShortBow_Aim_End",
	AimAnimIdle = "attackShortBow_Aim_Idle",
	AimAnimStart = "attackShortBow_Aim_Start",
	AnimDoor = "standing_OpenDoor_ShortBow",
	AnimIdle = "standing_Idle_ShortBow",
	AnimMove = "standing_Run_ShortBow",
	AnimTestEntity = "HumanMale",
	AnimateWeapon = "both",
	AttackAngleTolerance = 600,
	AttackAnim = "attackShortBow_Aim_Fire",
	AttackCooldown = 6000,
	AttackCooldownMaxSkill = 4000,
	AttackRange = 35000,
	AttackType = "ranged",
	AvailableOnStart = 50,
	BodyMale = "CompoundBowPX",
	CritChance = 30,
	CritChanceMaxSkill = 50,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Arrow_PuncturedOrgan",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ToxicPoisoning",
			weight = 50,
		}),
	},
	DamageToBuildings = 10000,
	DamageTypes = {
		gas = true,
	},
	DecayRateOutside = 217,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Sticks",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Cotton",
			'amount', 15000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 50,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Poison",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_1_Mild",
			weight = 50,
		}),
	},
	IlluminateTime = 160000,
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 250000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "AdvancedWeaponry",
	ProjectileAttachMoment = "hit",
	ProjectileAttachOnAim = true,
	ProjectileEntity = "ShortBow_Arrow",
	ProjectileGravity = true,
	ProjectileSpeed = 20000,
	ProjectileSpeedRand = 10000,
	ProjectileSpot = "Muzzle",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 312,
	alt_icon = "General/PoisonBow.png",
	alt_icon_outlined = "General/PoisonBow.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXCompoundBow",
	carry_rotation = 19500,
	carry_scale = 90,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(751728702042, --[[ModItemWeaponResource PoisonBowPX description]] "Crude medium-ranged poisonous bow, inappropriate for inexperienced fighters. Inflicts serious poison effects. Has increased range to the standard bow."),
	display_name = T(794080767571, --[[ModItemWeaponResource PoisonBowPX display_name]] "Poison Bow"),
	display_name_pl = T(294099470032, --[[ModItemWeaponResource PoisonBowPX display_name_pl]] "Poison Bows"),
	group = "Weapons_Human",
	icon = "General/PoisonBowSmall.png",
	id = "PoisonBowPX",
	in_groups = {
		"Weapons",
	},
	money_value = 20000000,
	progress = 30000,
	stack_entity = "PXCompoundBow",
	stack_scale = 90,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_short_bow",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AttackCooldown = 5000,
	AttackType = "ranged",
	CreatesOpenWounds = false,
	CritChance = 50,
	CritChanceMaxSkill = 50,
	DamageToBuildings = 0,
	FriendlyFire = false,
	Harmless = true,
	HitChance = 40,
	HitChanceMaxSkill = 95,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "AnimalLured",
			weight = 70,
		}),
	},
	InstantResponse = true,
	SortKey = 99990,
	display_name = T(784206358799, --[[ModItemWeaponResource GalacticMeatLure display_name]] "Tough Meat Lure"),
	group = "Weapons_Building",
	id = "GalacticMeatLure",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AreaOfEffect = 3000,
	AttackType = "ranged",
	CritChance = 20,
	CritChanceMaxSkill = 20,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
		}),
	},
	DamageTypes = {
		piercing = true,
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Cut_Critical",
			weight = 35,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Cut_Common",
			weight = 35,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "CrackedSkull_Common",
			weight = 35,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Scratch_Common",
			weight = 35,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Bruise_Common",
			weight = 35,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Common",
			weight = 35,
		}),
	},
	SortKey = 99895,
	display_name = T(672827394399, --[[ModItemWeaponResource SplinterMine display_name]] "Trap"),
	id = "SplinterMine",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AlwaysFace = false,
	AnimTestEntity = "Turret_Gun",
	AnimateWeapon = true,
	AttackAngleTolerance = 1800,
	AttackCooldown = 6000,
	AttackCooldownMaxSkill = 6000,
	AttackMoments = {
		"hit",
		"hit2",
	},
	AttackRange = 60000,
	AttackType = "ranged",
	CreatesOpenWounds = false,
	CritChance = 10,
	CritChanceMaxSkill = 10,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CyberParalysis",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Concussion_Critical",
		}),
	},
	DamageCone = 5400,
	DamageToBuildings = 0,
	DamageTypes = {
		energy = true,
	},
	FriendlyFire = false,
	HitChance = 200,
	HitChanceMaxSkill = 200,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CyberParalysis",
			weight = 100,
		}),
	},
	LockState = "hidden",
	MinAttackRange = 1000,
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "PulseRifle",
	ProjectileSpot = "Weaponsight",
	RangeTerrainDistortion = "always",
	ScaleRangeWithUnit = false,
	SortKey = 98990,
	carry_amount = 1000,
	carry_scale = 80,
	display_name = T(774015406381, --[[ModItemWeaponResource CyberPulseTurret display_name]] "Pulse"),
	group = "Weapons_AutomatedTurret",
	id = "CyberPulseTurret",
	money_value = 2000000000,
	progress = 0,
	stack_scale = 80,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 1000,
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 6000,
	AttackCooldownMaxSkill = 5000,
	AttackRange = 90000,
	AttackType = "ranged",
	BodyMale = "PXPacifierSniper",
	CreatesOpenWounds = false,
	CritChance = 60,
	CritChanceMaxSkill = 80,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Pacifier_Pacify",
			weight = 100,
		}),
	},
	DamageToBuildings = 0,
	DamageTypes = {
		pacify = true,
	},
	DecayRateOutside = 434,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 20000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChanceMaxSkill = 95,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Pacifier_Pacify",
			weight = 80,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 500000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "BlackMarketWeaponry",
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "RailgunProjectile_Improved",
	ProjectileSpeed = 30000,
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 2447,
	alt_icon = "Trade/PacifierSniper.png",
	alt_icon_outlined = "Trade/PacifierSniper.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXCyberSniper",
	carry_rotation = 1800,
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(491508709200, --[[ModItemWeaponResource PacifierSniper description]] "No damage, animal friendly sniper rifle that has a 80% chance to pacify animals temporarily."),
	display_name = T(122795002791, --[[ModItemWeaponResource PacifierSniper display_name]] "Pacifier Sniper Rifle"),
	display_name_pl = T(102413631991, --[[ModItemWeaponResource PacifierSniper display_name_pl]] "Pacifier Sniper Rifle"),
	group = "Weapons_Human",
	icon = "Trade/PacifierSniperSmall.png",
	id = "PacifierSniper",
	in_groups = {
		"Weapons",
	},
	money_value = 400000000,
	progress = 100000,
	stack_entity = "PXCyberSniper",
	stack_scale = 50,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_railgun_sniper",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AlwaysFace = false,
	AnimTestEntity = "Turret_Gun",
	AnimateWeapon = true,
	AttackCooldown = 200,
	AttackCooldownMaxSkill = 200,
	AttackMoments = {
		"hit",
		"hit2",
	},
	AttackRange = 85000,
	AttackType = "ranged",
	BodyFemale = "",
	BodyMale = "",
	CritChance = 10,
	CritChanceMaxSkill = 10,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_PuncturedArtery",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "TurretLaser_Burn",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "AlienRadiationBurn",
		}),
	},
	DamageToBuildings = 55000,
	DamageTypes = {
		energy = true,
		piercing = true,
	},
	FriendlyFire = false,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "LaserBlaster_Burn",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "AlienPlasmaInhalation",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "AlienPlasmaWound",
			weight = 80,
		}),
	},
	LockState = "hidden",
	MinAttackRange = 1000,
	ProjectileEntity = "InvisibleObject",
	ProjectileFXClass = "RailgunProjectile_Improved",
	ProjectileSpeed = 40000,
	ProjectileSpot = "Weaponsight",
	RangeTerrainDistortion = "always",
	ScaleRangeWithUnit = false,
	SortKey = 80804,
	WeaponTags = set( "RotatingMuzzle" ),
	alt_icon = "CriminalActivity/AlienPlasmaTurret.png",
	alt_icon_outlined = "CriminalActivity/AlienPlasmaTurret.png",
	carry_amount = 1000,
	description = T(970702304956, --[[ModItemWeaponResource AlienPlasmaTurret description]] "Alien Energy Enhanced Automated Laser Turret."),
	display_name = T(674194772941, --[[ModItemWeaponResource AlienPlasmaTurret display_name]] "Alien Plasma Turret"),
	display_name_pl = T(847266860737, --[[ModItemWeaponResource AlienPlasmaTurret display_name_pl]] "Alien Plasma Turret"),
	group = "Weapons_AutomatedTurret",
	icon = "CriminalActivity/AlienPlasmaTurret.png",
	id = "AlienPlasmaTurret",
	money_value = 6000000000,
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AreaOfEffect = 3000,
	AttackType = "ranged",
	CreatesOpenWounds = false,
	CritChance = 20,
	CritChanceMaxSkill = 20,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_3_Severe",
			weight = 20,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_4_Extreme",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_5_Death",
			weight = 2,
		}),
	},
	DamageTypes = {
		gas = true,
	},
	DmgPropagationTime = 10000,
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "DamagedLungs",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ToxicAir_ShortnessOfBreath",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Pain_1",
			weight = 70,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Poisoning_2_Moderate",
			weight = 80,
		}),
	},
	SortKey = 99901,
	display_name = T(477103315466, --[[ModItemWeaponResource GasMine display_name]] "Trap"),
	id = "GasMine",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AreaOfEffect = 1000,
	AttackType = "ranged",
	CreatesOpenWounds = false,
	CritChance = 60,
	CritChanceMaxSkill = 60,
	DamageTypes = {
		gas = true,
	},
	FriendlyFire = false,
	HitChance = 60,
	HitChanceMaxSkill = 60,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "CryoFreeze",
			weight = 60,
		}),
	},
	SortKey = 99904,
	display_name = T(998400344780, --[[ModItemWeaponResource CryoFreezeMine display_name]] "Trap"),
	id = "CryoFreezeMine",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 2000,
	AttackRange = 35000,
	AttackType = "ranged",
	BodyMale = "PXAlienPlasmaRifle",
	CritChance = 50,
	CritChanceMaxSkill = 75,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "PulseRifle_ShatteredBone",
			weight = 80,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "BrokenRib_Critical",
			weight = 40,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PulseRifle_BrainConcussion",
			weight = 60,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
			weight = 60,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "ShatteredBone_Critical",
			weight = 20,
		}),
	},
	DamageCone = 3900,
	DamageToBuildings = 40000,
	DamageTypes = {
		energy = true,
		piercing = true,
	},
	DecayRateOutside = 1128,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "AlienProcessor",
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 90,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Shrieker_Brute_SpikePuncturePX",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Shrieker_spike_heated",
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 1300000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "AlienWeaponry",
	ProjectileSpot = "Origin",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 4009,
	alt_icon = "CriminalActivity/AlienPlasmaRifle.png",
	alt_icon_outlined = "CriminalActivity/AlienPlasmaRifle.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXAlienPlasmaRifle1",
	carry_rotation = 1800,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "REALLY bad against Skarabei",
	description = T(787570847341, --[[ModItemWeaponResource AlienPlasmaRifle description]] "Who knew we would be wielding the same spike weapons Shiekers have?!? Unfortunately for them, we are also superheating them thanks to Bitherm"),
	display_name = T(850814197518, --[[ModItemWeaponResource AlienPlasmaRifle display_name]] "Spiker"),
	display_name_pl = T(309463555911, --[[ModItemWeaponResource AlienPlasmaRifle display_name_pl]] "Spikers"),
	group = "Weapons_Human",
	icon = "CriminalActivity/AlienPlasmaRifleSmall.png",
	id = "AlienPlasmaRifle",
	in_groups = {
		"Weapons",
	},
	money_value = 6300000000,
	progress = 200000,
	stack_entity = "PXAlienPlasmaRifle1",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimEnd = "attackShortBow_Aim_End",
	AimAnimIdle = "attackShortBow_Aim_Idle",
	AimAnimStart = "attackShortBow_Aim_Start",
	AnimDoor = "standing_OpenDoor_ShortBow",
	AnimIdle = "standing_Idle_ShortBow",
	AnimMove = "standing_Run_ShortBow",
	AnimTestEntity = "HumanMale",
	AnimateWeapon = "both",
	AreaOfEffect = 1000,
	AttackAngleTolerance = 600,
	AttackAnim = "attackShortBow_Aim_Fire",
	AttackCooldown = 6000,
	AttackCooldownMaxSkill = 4000,
	AttackRange = 50000,
	AttackType = "ranged",
	AvailableOnStart = 50,
	BodyMale = "CompoundBowPX",
	CritChance = 30,
	CritChanceMaxSkill = 50,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Arrow_PuncturedOrgan",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "FireSpread",
			weight = 100,
		}),
	},
	DamageToBuildings = 10000,
	DamageTypes = {
		energy = true,
	},
	DecayRateOutside = 217,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "Sticks",
			'amount', 20000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Cotton",
			'amount', 15000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 50,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Arrow_Shot",
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 50,
		}),
	},
	IlluminateTime = 160000,
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 250000,
	MinAttackRange = 1500,
	MinStorageCondition = 2,
	ProductionTech = "AdvancedWeaponry",
	ProjectileAttachMoment = "hit",
	ProjectileAttachOnAim = true,
	ProjectileEntity = "ShortBow_Arrow",
	ProjectileGravity = true,
	ProjectileSpeed = 20000,
	ProjectileSpeedRand = 10000,
	ProjectileSpot = "Muzzle",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 311,
	alt_icon = "General/FireBow.png",
	alt_icon_outlined = "General/FireBow.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXCompoundBow",
	carry_rotation = 19500,
	carry_scale = 90,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(145389158973, --[[ModItemWeaponResource FireLongBowPX description]] "Crude medium-ranged fire bow, inappropriate for inexperienced fighters. Inflicts serious burning effects. Will illuminate targets in the dark. Has increased range to the standard bow. 1 meter fire spread around the target."),
	display_name = T(887246457078, --[[ModItemWeaponResource FireLongBowPX display_name]] "Fire LongBow"),
	display_name_pl = T(820379803717, --[[ModItemWeaponResource FireLongBowPX display_name_pl]] "Fire LongBows"),
	group = "Weapons_Human",
	icon = "General/FireBowSmall.png",
	id = "FireLongBowPX",
	in_groups = {
		"Weapons",
	},
	money_value = 20000000,
	progress = 30000,
	stack_entity = "PXCompoundBow",
	stack_scale = 90,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_short_bow",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AimAnimIdle = "attackSpear_Idle",
	AnimDoor = "standing_OpenDoor_Tool",
	AnimIdle = "standing_Idle_Tool",
	AnimMove = "standing_Run_Spear",
	AnimTestEntity = "HumanMale",
	AttackAngleTolerance = 600,
	AttackAnim = "attackSpear_Hit",
	AttackCooldownMaxSkill = 500,
	AttackRange = 2000,
	BodyMale = "LaserPike",
	CritChance = 80,
	CritChanceMaxSkill = 100,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Critical",
			weight = 60,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Critical",
			weight = 16,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn_2",
			weight = 30,
		}),
	},
	DamageToBuildings = 80000,
	DamageTypes = {
		energy = true,
		piercing = true,
	},
	DecayRateOutside = 1128,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "PowerCell",
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 10000,
		}),
	},
	DismantleVisualRes = "Weapons",
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 150,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Stab_Common",
			weight = 50,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "PuncturedChestOrgan_Common",
			weight = 16,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 30,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Stun",
			weight = 100,
		}),
	},
	HitNegation = {
		PlaceObj('EquipResourceHitNegation', {
			'DamageType', "piercing",
			'NegationChance', 40,
		}),
	},
	IsDoubleHanded = true,
	LockState = "hidden",
	MaxHealth = 1300000,
	MinAttackRange = 500,
	MinStorageCondition = 2,
	ProductionTech = "AlienWeaponry",
	ScaleDamageWithUnit = false,
	SelfCleaningRate = 200000,
	SortKey = 5556,
	alt_icon = "CriminalActivity/AlienLaserPike.png",
	alt_icon_outlined = "CriminalActivity/AlienLaserPike.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "ResourceWeapon_LaserPike",
	carry_scale = 90,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Pure Piercing",
	description = T(702666351349, --[[ModItemWeaponResource AlienLaserPike description]] "Scissorhand's Sintis, fused with our own carbon frame. The frame also was designed to deflect blows!"),
	display_name = T(354145693096, --[[ModItemWeaponResource AlienLaserPike display_name]] "Scythe Blade Arm"),
	display_name_pl = T(454177040900, --[[ModItemWeaponResource AlienLaserPike display_name_pl]] "Scythe Blade Arm"),
	group = "Weapons_Human",
	icon = "CriminalActivity/AlienLaserPikeSmall.png",
	id = "AlienLaserPike",
	in_groups = {
		"Weapons",
	},
	money_value = 5000000000,
	progress = 200000,
	stack_entity = "ResourceWeapon_LaserPike",
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_laser_pike",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByDarkness = false,
	AimAnimEnd = "attackRifle_AimIdle",
	AimAnimIdle = "attackRifle_AimIdle",
	AimAnimStart = "attackRifle_AimStart",
	AnimDoor = "standing_OpenDoor_Rifle",
	AnimIdle = "standing_Idle_Rifle",
	AnimMove = "standing_Run_Rifle",
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 10000,
	AttackAngleTolerance = 5400,
	AttackAnim = "attackRifle_AimFire",
	AttackCooldown = 26000,
	AttackCooldownMaxSkill = 22000,
	AttackRange = 50000,
	AttackType = "ranged",
	AvailableOnStart = 5,
	BodyMale = "PXMissileLauncher",
	CanAttackBelowMinRange = false,
	CritChance = 50,
	CritChanceMaxSkill = 50,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Destroyed_ChestOrgans_Death",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Destroyed_Head_Death",
			weight = 100,
		}),
	},
	DamageCone = 5400,
	DamageToBuildings = 50000,
	DamageTypes = {
		blunt = true,
	},
	DecayRateOutside = 868,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmount', {
			'resource', "ScrapElectronics",
			'amount', 15000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 50000,
		}),
		PlaceObj('ResAmount', {
			'resource', "CarbonNanotubes",
			'amount', 20000,
		}),
	},
	DismantleVisualRes = "Weapons",
	EquipSlot = "WeaponRanged",
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "Burning",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Burn",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "TurretMissilePod_BlastWound",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Explosion",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "Explosion_Wound",
			weight = 100,
		}),
		PlaceObj('HealthConditionOption', {
			effect = "InflictHeavyBleed",
			weight = 50,
		}),
	},
	IsDoubleHanded = true,
	LaunchUnits = true,
	LockState = "hidden",
	MaxHealth = 1000000,
	MinAttackRange = 20000,
	MinStorageCondition = 2,
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_fDsBmM1_BnyYq3f",
			add = -20000,
			prop = "Movement",
		}),
	},
	ProductionTech = "BlackMarketWeaponry",
	ProjectileAttachMoment = "start",
	ProjectileEntity = "Turret_Missle",
	ProjectileGravity = true,
	ProjectileSpeed = 10000,
	ProjectileSpot = "Missle",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 4500,
	WeaponTags = set( "MissileBarrage" ),
	alt_icon = "Trade/MissileLauncher.png",
	alt_icon_outlined = "Trade/MissileLauncher.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 1000,
	carry_entity = "PXMissileLauncher",
	carry_rotation = 1800,
	carry_scale = 120,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(410103654867, --[[ModItemWeaponResource MissileLauncher description]] "The missile launcher, a deadly weapon in the hands of an accurate shooter. Has a large blast radius, sends anything within its projectile range flying and inflicts deadly damage. Shame about the slow reload. Reduces movement speed by -20."),
	display_name = T(278536810302, --[[ModItemWeaponResource MissileLauncher display_name]] "Missile Launcher"),
	display_name_pl = T(987337277126, --[[ModItemWeaponResource MissileLauncher display_name_pl]] "Missile Launcher"),
	group = "Weapons_Human",
	icon = "Trade/MissileLauncherSmall.png",
	id = "MissileLauncher",
	in_groups = {
		"Weapons",
	},
	money_value = 1000000000,
	progress = 90000,
	stack_entity = "PXMissileLauncher",
	stack_scale = 120,
	stack_size = 1000,
	status_icon = "UI/Hud/weapon_pulse_riffle",
	visible = false,
}),
PlaceObj('ModItemWeaponResource', {
	AffectedByCover = false,
	AffectedByDarkness = false,
	AttackCooldown = 5000,
	AttackType = "ranged",
	CreatesOpenWounds = false,
	CritChance = 50,
	CritChanceMaxSkill = 50,
	DamageToBuildings = 0,
	FriendlyFire = false,
	Harmless = true,
	HitChance = 50,
	HitChanceMaxSkill = 90,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "AnimalLured",
			weight = 70,
		}),
	},
	InstantResponse = true,
	SortKey = 99990,
	display_name = T(482060680085, --[[ModItemWeaponResource GalacticSiren display_name]] "Siren lure"),
	group = "Weapons_Building",
	id = "GalacticSiren",
	progress = 0,
	stack_size = 1000,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemXTemplate', {
	RequireActionSortKeys = true,
	SortKey = 100,
	group = "Infopanel Sections",
	id = "tabOverview_TradingPod",
	PlaceObj('XTemplateGroup', {
		'__context_of_kind', "TradingPodBuilding",
	}, {
		PlaceObj('XTemplateAction', {
			'RolloverTemplate', "Rollover",
			'RolloverText', T(923820276761, --[[ModItemXTemplate tabOverview_TradingPod RolloverText]] "Initialize trade."),
			'ActionId', "idTrade",
			'ActionSortKey', "10",
			'ActionName', T(772156596059, --[[ModItemXTemplate tabOverview_TradingPod ActionName]] "Trade"),
			'ActionIcon', "UI/Icons/Infopanels/trade",
			'ActionToolbar', "ip_actions",
			'ActionState', function (self, host)
				return IsTradeInitialized() and "hidden" or (not CheckForTradingShip() or not GetTradingPodBuilding() or HasTradingPodDeparted()) and "disabled"
			end,
			'OnAction', function (self, host, source, ...)
				OpenTradingDialog()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'RolloverTemplate', "Rollover",
			'RolloverText', T(384526168049, --[[ModItemXTemplate tabOverview_TradingPod RolloverText]] "Renegotiated current trade deal, as long as the trade pod is still on the ground."),
			'ActionId', "idRenegotiateTrade",
			'ActionSortKey', "10",
			'ActionName', T(791734229172, --[[ModItemXTemplate tabOverview_TradingPod ActionName]] "Renegotiate"),
			'ActionIcon', "UI/Icons/Infopanels/trade",
			'ActionToolbar', "ip_actions",
			'ActionState', function (self, host)
				return not IsTradeInitialized() and "hidden" or HasTradingPodDeparted() and "disabled"
			end,
			'OnAction', function (self, host, source, ...)
				OpenTradingDialog()
			end,
		}),
		PlaceObj('XTemplateAction', {
			'RolloverTemplate', "Rollover",
			'RolloverText', T(470363354825, --[[ModItemXTemplate tabOverview_TradingPod RolloverText]] "Contact the Automated Ansible Relay to post job offers or to request additional information."),
			'ActionId', "idInitiateCall",
			'ActionSortKey', "20",
			'ActionName', T(449834403699, --[[ModItemXTemplate tabOverview_TradingPod ActionName]] "Contact"),
			'ActionIcon', "UI/Icons/Infopanels/radio_contact",
			'ActionToolbar', "ip_actions",
			'ActionState', function (self, host)
				return not GetTradingPodBuilding() and "disabled"
			end,
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("ForceActivateStoryBit", "InitiatedCall", SelectedObj, "immediate", nil, true)
			end,
		}),
		PlaceObj('XTemplateAction', {
			'RolloverTemplate', "Rollover",
			'RolloverText', T(318059178251, --[[ModItemXTemplate tabOverview_TradingPod RolloverText]] "<ToggleAllowedRefuellingTextRollover>"),
			'ActionId', "idToggleAllowedRefuelling",
			'ActionSortKey', "30",
			'ActionName', T(579951206331, --[[ModItemXTemplate tabOverview_TradingPod ActionName]] "<ToggleAllowedRefuellingText>"),
			'ActionIcon', "UI/Icons/Infopanels/consumer_allow_refuelling",
			'ActionToolbar', "ip_actions",
			'ActionState', function (self, host)
				local obj = ResolvePropObj(host.context)
				self.ActionIcon = obj.refuelling_allowed and "UI/Icons/Infopanels/consumer_allow_refuelling" or "UI/Icons/Infopanels/consumer_forbid_refuelling"
			end,
			'OnAction', function (self, host, source, ...)
				local obj = ResolvePropObj(host.context)
				NetSyncEvent("ObjFunc", obj, "rfnToggleAllowedRefuelling")
			end,
		}),
		PlaceObj('XTemplateAction', {
			'RolloverTemplate', "Rollover",
			'RolloverText', T(236610377627, --[[ModItemXTemplate tabOverview_TradingPod RolloverText]] "Cancel trade, as long as the trade pod is still on the ground."),
			'ActionId', "idCancelTrade",
			'ActionSortKey', "100",
			'ActionName', T(730188404380, --[[ModItemXTemplate tabOverview_TradingPod ActionName]] "Cancel trade"),
			'ActionIcon', "UI/Icons/Infopanels/common_cancel",
			'ActionToolbar', "ip_actions",
			'ActionState', function (self, host)
				return not IsTradeInitialized() and "hidden" or HasTradingPodDeparted() and "disabled"
			end,
			'OnAction', function (self, host, source, ...)
				NetSyncEvent("ObjFunc", host.context, "rfnCancelTrade")
			end,
		}),
		}),
	PlaceObj('XTemplateTemplate', {
		'comment', "fuel",
		'__context_of_kind', "TradingPodBuilding",
		'__template', "InfopanelSection",
	}, {
		PlaceObj('XTemplateWindow', {
			'__class', "FrameProgress",
			'Id', "idFuelBar",
			'BindTo', "IPFuel",
			'BarColor', RGBA(96, 116, 127, 255),
			'Text', T(401205624117, --[[ModItemXTemplate tabOverview_TradingPod Text]] "<FuelText>"),
		}),
		PlaceObj('XTemplateCode', {
			'comment', "reset fuel bar text context",
			'run', function (self, parent, context)
				local fuel_bar = parent:ResolveId("idFuelBar")
				local text = fuel_bar:ResolveId("idText")
				text:SetContext(context)
			end,
		}),
		}),
	PlaceObj('XTemplateWindow', {
		'__context_of_kind', "TradingPodBuilding",
		'Id', "idStorageSection",
		'LayoutMethod', "VList",
	}, {
		PlaceObj('XTemplateTemplate', {
			'comment', "selling",
			'__condition', function (parent, context) return IsTradeInitialized() end,
			'__template', "InfopanelSection",
			'OnContextUpdate', function (self, context, ...)
				XSection.OnContextUpdate(self, context, ...)
				self:SetVisible(IsTradeInitialized() or HasTradingPodDeparted())
			end,
			'Title', T(128587804524, --[[ModItemXTemplate tabOverview_TradingPod Title]] "Selling"),
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XContextWindow",
				'IdNode', true,
				'GridStretchX', false,
				'GridStretchY', false,
				'LayoutMethod', "Grid",
				'LayoutVSpacing', 6,
				'UniformColumnWidth', true,
				'UniformRowHeight', true,
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					XContextWindow.OnContextUpdate(self, context, ...)
					local pod_building = ResolvePropObj(context)
					local pod = pod_building:GetPod()
					local input_selling = pod_building:GetSoldResAmounts()
					
					local slot_idx = 1
					for res, amount in sorted_pairs(input_selling) do
						local child = self[slot_idx]
						if not child then
							local child_context = SubContext(context, {resource = res, amount = amount})
							child = XTemplateSpawn("VisStorageSlot", self, child_context)
							child:Open()
						end
						
						local available = pod:GetResAvailable(res)
						child:Setup(res, available, amount, nil, nil, nil, nil, nil, "delivering", "amount_short")
						child:SetGridX((slot_idx - 1) % 5 + 1)
						child:SetGridY((slot_idx - 1) / 5 + 1)
						
						local bar_container = child.idSlotBarContainer
						local bar = bar_container:ResolveId("idDeliveryBar")
						if bar then
							bar:OnContextUpdate(bar.context)
						end
						
						slot_idx = slot_idx + 1
					end
					
					-- remove unneeded slots if any
					for i = #self, slot_idx, -1 do
						self[i]:delete()
					end
				end,
			}),
			}),
		PlaceObj('XTemplateTemplate', {
			'comment', "buying",
			'__condition', function (parent, context) return IsTradeInitialized() end,
			'__template', "InfopanelSection",
			'OnContextUpdate', function (self, context, ...)
				XSection.OnContextUpdate(self, context, ...)
				self:SetVisible(IsTradeInitialized() or HasTradingPodDeparted())
			end,
			'Title', T(824122947554, --[[ModItemXTemplate tabOverview_TradingPod Title]] "Buying"),
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XText",
				'Visible', false,
				'FoldWhenHidden', true,
				'HandleMouse', false,
				'TextStyle', "InfopanelText",
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					XText.OnContextUpdate(self, context, ...)
					local pod_building = ResolvePropObj(context)
					self:SetVisible(next(pod_building:GetBoughtResAmounts()))
				end,
				'Translate', true,
				'Text', T(188555612088, --[[ModItemXTemplate tabOverview_TradingPod Text]] "Resources"),
				'ImageScale', 800,
			}),
			PlaceObj('XTemplateWindow', {
				'__class', "XContextWindow",
				'IdNode', true,
				'GridStretchX', false,
				'GridStretchY', false,
				'LayoutMethod', "Grid",
				'LayoutVSpacing', 6,
				'UniformColumnWidth', true,
				'UniformRowHeight', true,
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					XContextWindow.OnContextUpdate(self, context, ...)
					local pod_building = ResolvePropObj(context)
					local input_buying = pod_building:GetBoughtResAmounts()
					
					local slot_idx = 1
					for res, amount in sorted_pairs(input_buying) do
						local child = self[slot_idx]
						if not child then
							local child_context = SubContext(context, {resource = res, amount = amount})
							child = XTemplateSpawn("VisStorageSlot", self, child_context)
							child:Open()
							child:SetEnabled(false)
							local icon = child:ResolveId("idIcon")
							if icon then icon:SetEnabled(false) end
						end
						
						child:Setup(res, amount, nil, nil, nil, nil, nil, nil, nil, "amount_short")
						child:SetGridX((slot_idx - 1) % 5 + 1)
						child:SetGridY((slot_idx - 1) / 5 + 1)
						
						slot_idx = slot_idx + 1
					end
				end,
			}),
			PlaceObj('XTemplateWindow', {
				'__class', "XText",
				'Visible', false,
				'FoldWhenHidden', true,
				'HandleMouse', false,
				'TextStyle', "InfopanelText",
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					XText.OnContextUpdate(self, context, ...)
					local pod_building = ResolvePropObj(context)
					self:SetVisible(next(pod_building:GetBoughtTechnologies()))
				end,
				'Translate', true,
				'Text', T(594040382254, --[[ModItemXTemplate tabOverview_TradingPod Text]] "Technologies"),
				'ImageScale', 800,
			}),
			PlaceObj('XTemplateWindow', {
				'__class', "XContextWindow",
				'IdNode', true,
				'GridStretchX', false,
				'GridStretchY', false,
				'LayoutMethod', "Grid",
				'LayoutVSpacing', 6,
				'UniformColumnWidth', true,
				'UniformRowHeight', true,
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					XContextWindow.OnContextUpdate(self, context, ...)
					local pod_building = ResolvePropObj(context)
					local input_technologies = pod_building:GetBoughtTechnologies()
					
					local slot_idx = 1
					if not input_technologies and self[slot_idx]  then 
						self[slot_idx] :delete()
					end
					
					for _, tech_id in ipairs(input_technologies) do
						local tech = Techs[tech_id]
						local child = self[slot_idx]
						if not child then
							local child_context = SubContext(context, {tech = tech})
							child = XTemplateSpawn("TechSlot", self, child_context)
							child:Open()
							child:SetEnabled(false)
						end
						
						child:SetGridX((slot_idx - 1) % 5 + 1)
						child:SetGridY((slot_idx - 1) / 5 + 1)
						
						slot_idx = slot_idx + 1
					end
					
					-- remove unneeded slots if any
					for i = #self, slot_idx, -1 do
						self[i]:delete()
					end
				end,
			}),
			}),
		PlaceObj('XTemplateTemplate', {
			'comment', "cargo",
			'__template', "InfopanelSection",
			'Title', T(421102720781, --[[ModItemXTemplate tabOverview_TradingPod Title]] "Cargo"),
		}, {
			PlaceObj('XTemplateWindow', {
				'__class', "XContextWindow",
				'IdNode', true,
				'GridStretchX', false,
				'GridStretchY', false,
				'LayoutMethod', "Grid",
				'LayoutVSpacing', 6,
				'UniformColumnWidth', true,
				'UniformRowHeight', true,
				'ContextUpdateOnOpen', true,
				'OnContextUpdate', function (self, context, ...)
					XContextWindow.OnContextUpdate(self, context, ...)
					local pod_building = ResolvePropObj(context)
					local input = pod_building:Getres_amounts()
					
					local slot_idx = 1
					if not input and self[slot_idx]  then 
						self[slot_idx] :delete()
					end
					
					for res, amount in sorted_pairs(input) do
						local child = self[slot_idx]
						if amount == 0 then 
							if child then child:delete() end
							goto skip
						end
						if not child then
							local child_context = SubContext(context, {resource = res, amount = amount})
							child = XTemplateSpawn("VisStorageSlot", self, child_context)
							child:Open()
						end
						
						child:Setup(res, amount,nil, nil, nil, nil, nil, nil, nil, "amount_short")
						child:SetGridX((slot_idx - 1) % 5 + 1)
						child:SetGridY((slot_idx - 1) / 5 + 1)
						
						slot_idx = slot_idx + 1
						::skip::
					end
				end,
			}),
			}),
		}),
}),
PlaceObj('ModItemFolder', {
	'name', "Char Growth",
}),
PlaceObj('ModItemCooldownDef', {
	DisplayName = T(814857853674, --[[ModItemCooldownDef x_char_change DisplayName]] "Cooldown to avoid all colonists spamming new trait messages"),
	ExpireMsg = true,
	MaxTime = 30720000,
	TimeMax = 15360000,
	TimeMin = 7680000,
	TimeScale = "days",
	group = "StoryBits",
	id = "x_char_change",
}),
PlaceObj('ModItemCooldownDef', {
	DisplayName = T(266582013128, --[[ModItemCooldownDef x_gal_attack_timer DisplayName]] "Cooldown determining Galactican Scans"),
	MaxTime = 3840000,
	TimeMax = 3840000,
	TimeMin = 1920000,
	TimeScale = "days",
	group = "StoryBits",
	id = "x_gal_attack_timer",
}),
PlaceObj('ModItemCooldownDef', {
	DisplayName = T(152275298841, --[[ModItemCooldownDef x_hint DisplayName]] "Cooldown determining how often hints are sent to the player"),
	MaxTime = 57600000,
	TimeMax = 38400000,
	TimeMin = 24000000,
	TimeScale = "days",
	group = "StoryBits",
	id = "x_hint",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Midnight",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_hint",
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	Enabled = true,
	NotificationPriority = "Important",
	NotificationTitle = T(425199973730, --[[ModItemStoryBit x_hint_early NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckObjectCount', {
			Amount = 0,
			Condition = "==",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
					param_bindings = false,
				}),
				PlaceObj('CheckIsDeviceWorking', {
					param_bindings = false,
				}),
			},
			Label = "Buildings",
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckIsAlive', {
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "x_hint",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(670158537608, --[[ModItemStoryBit x_hint_early Text]] "The Galactican Empire will help us if we show we are aiding the greater colonialisation efforts.\nBeaming our surplus resources for free to another colony will give us trade receipts.\nGet enough of those, and we can spend them for a Galactican technology.\n\nAt least that is what they offered.\nIn reality, PX-003 is overwhelmed with inter-colony chatter.\nThis is throttling our communication with not just other colonies, but the Galactican Empire at large!\n\nLet's focus on researching and building a signal relay.\nThis will let us directly connect to other settlements, to send or receive resources.\n\nAnd able to download technology from others without it taking 100 years.\n\n<style TextEmphasis>Research and build a signal relay.\nResearch Trade Station and Selling our Surplus\nTraders will need to work at the trade station creating trade receipts.\nSpend trade receipts for officially sanctioned technology</style>\n\n<style TextNegative>NOTE: 90% of Project-X tech is hidden by default.\nPay attention to techs with \"Required to unlock next <something> Tier\nAs you must continue to complete these to get the cool new weapons/armor/toys"),
	Title = T(223444431925, --[[ModItemStoryBit x_hint_early Title]] "Rumors from other colonies"),
	Trigger = "Midnight",
	UseObjectImage = true,
	group = "Midnight",
	id = "x_hint_early",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('SpawnResourceCrate', {
			ScavengeLootDef = "x_inspired_loot",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(822091655787, --[[ModItemStoryBit x_inspired_gen_1 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(127052351800, --[[ModItemStoryBit x_inspired_gen_1 Text]] "I don't know half of you half as well as I should like, and I like less than half of you half as well as you deserve.\n\nWorrying about your own life, wondering if our defenses will hold... it takes it's toll.\n\nGotta be honest... I took some resources from storage just in case.\nI was delusional. Thinking I could escape if the walls fell.\nBut we are attacked from all angles.\n\nAnd resources are so tight, and waiting for them to come in can cost us....\nLet me call in my bug out bag; lets put it to good use.\n\n<style TextPositive>\nResource Crate drop at landing pad\n</style>"),
	Title = T(691264287491, --[[ModItemStoryBit x_inspired_gen_1 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_1",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Trait = "x_hopefull",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(455370915742, --[[ModItemStoryBit x_inspired_gen_2 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(612369843115, --[[ModItemStoryBit x_inspired_gen_2 Text]] "There is never a dull moment is there?!?\n\nAt least I found some time to enjoy the things I like, before something gets to us.\nI say that because it's been a few years since the colonization efforts started....\nAnd no good news have gone out that a single colony is succeeding.\n\nYes there are some sites that havn't been lost.\nBut those are fortified bunkers manned by one person and 3 roombas!\nI'm talking about places where tons of people live with no need to have walls.\nLet alone get woken up 2 into their sleep to defend the walls!!\n\nNo? Just me?\nAlright, well before you feel like I'm all doom and gloom I got one last thing.\nThis place gives me hope.\nI think we got the right people, and are able to get what we need.\n\nAnd if that's still not enough.... I promise I'll be one of the few that doesn't ding dong ditch if the worst starts.\n\n<style TextPositive>\nNon-Project X secret character gains hopeful\n</style>"),
	Title = T(654887575735, --[[ModItemStoryBit x_inspired_gen_2 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_2",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Trait = "x_Haunted",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(345919020213, --[[ModItemStoryBit x_inspired_gen_3 NotificationTitle]] "Project-X Progression Hint"),
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(380806232819, --[[ModItemStoryBit x_inspired_gen_3 Text]] "To be honest, bouncing from colony to colony is getting too tiring.\nThis is my last one, I'll defend it until something finally ends me.\n\nLike some of the ones from the last colony I was at.\nDied on the walls, buying seconds while the rest of us took the shuttle or fled on foot.\n\nSaw one poor sap killed by a group of gigantic Shriekers that shimmered silver in the sun.\nTried to hold the breach with their favorite mech.\nHad to shoot a rocket point blank as a shimmering queen flew into the new path.\nI stuck around just until the dust settled\n\nThere the queen was, standing over the mech; the pilot's body melting in her mouth.\nThe silver shimmer had retreated; leaving a kind of hole showing her exoskeleton.\nI could only recoil in horror as the silver... water? metal? magic?!?!? quickly encapsulated her again.\n\n\nThat haunts me to this day.\nThat's what really roams the planet, snuffing out some of our best.\n\n<style TextNegative>\nNon-Project X secret character gains Haunted\n</style>"),
	Title = T(555262159539, --[[ModItemStoryBit x_inspired_gen_3 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_3",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Trait = "x_Haunted",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(135922459974, --[[ModItemStoryBit x_inspired_gen_4 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(903114546821, --[[ModItemStoryBit x_inspired_gen_4 Text]] "For my first colony, it isn't nearly as bad as the rumors make it out to be!\nAll my crazy relatives kept telling me I would be captured by raiders, or disintegrated into a puddle of slop.\n\nOne crazy fake video gets \"leaked\" showing man sized Scorpions attacking a core world, and all of a sudden everyone has a friend of a friend who died colonizing this \"hell world\".\nI paid it no mind. \nThe Galactican's would never let something like that happen!\nCan you imagine! Man sized scorpions attacking..... \n<style TextEmphasis>You see a wave of realization wash over their face</style>\nWait a second...\nThat video has to be fake right? RIGHT?\n\nI had originally meant for me to tell you that the public is slowly turning against this push to colonize this planet.\nNOT to realize that the a core world was attacked!\n\nAfter all, the creatures are agitated by human technology and signals....\nAll it takes is one semi-intelligent one to slip onto a shuttle and then grow...\n\n<style TextNegative>\nNon-Project X secret character gains \"What have we done?\"\n</style>"),
	Title = T(347799885474, --[[ModItemStoryBit x_inspired_gen_4 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_4",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "reap_rewards",
			param_bindings = false,
		}),
		PlaceObj('SpawnResourceCrate', {
			ScavengeLootDef = "bp_inspired",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(394189538291, --[[ModItemStoryBit x_inspired_gen_5 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(908846048063, --[[ModItemStoryBit x_inspired_gen_5 Text]] "Did I ever tell you how I managed to get here?\nThe Galactic Colonial Council reached out to me!\nThey practically had to beg me to come here, and I got to dictate my terms.\n\nOne thing I negotiated was picking which colony I went too.\nThe GCC gave me a list of active colonies and their estimated success\nI got my hands on the list when I pushed to choose which one to pick.\n\nFrom what I could tell, this one will always be the easiest.\nWe have the widest variety of foods & lowest density of predators.\n\nMakes me glad I'm not anywhere else really!\nAnd look at me, living my best life.\n\nHere take the colony info I \"kept\", I don't have any need for it anymore.\n\n<style TextNegative>\nNon-Project X secret character gains \"Reaping the Rewards\"\nGovernment Secrets incoming at landing pad\n</style>"),
	Title = T(599229335144, --[[ModItemStoryBit x_inspired_gen_5 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_5",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "zancer_hearing",
			param_bindings = false,
		}),
		PlaceObj('SpawnResourceCrate', {
			ScavengeLootDef = "bp_inspired_1",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(381061485331, --[[ModItemStoryBit x_inspired_gen_6 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(350235646549, --[[ModItemStoryBit x_inspired_gen_6 Text]] "I have really liked this place, it really shows how much we are not only surviving but thriving!\n\nSometimes a good change of view, new foods, and making new friends does one good!\n\nI do have something small to confess.\nSome of the food... whispers to me.\n\nI don't know why, but I can hear what foods taste the best.\nIt has really helped me stay sane in some of the intense defenses we have needed.\n\nCan... you look into this? \nI don't think this is very normal.\n\nI'll tell you which foods are whispering right now.\nYou crack it open and see what could be causing that.\n\n<style TextNegative>\nNon-Project X secret character gains \"Zancer Hearing\"\n</style>\n<style TextPositive>Incoming Zancer cell at landing pad\n</style>"),
	Title = T(792436814416, --[[ModItemStoryBit x_inspired_gen_6 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_6",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "zancer_hearing",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(593687963797, --[[ModItemStoryBit x_inspired_gen_7 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
				PlaceObj('CheckSkillLevel', {
					Amount = 5,
					Condition = ">=",
					Skill = "Physical",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(385570335131, --[[ModItemStoryBit x_inspired_gen_7 Text]] 'Oh man, I have really turned a new leaf since I joined the colony!\n\nNever have I ever done so much physical labor!\nSo much to do, so much walking!\n\nCan we get one of those little gadgets that counts how many steps you take in a day?\nMe and a friend are trying to prove that the other moves more each day.\n\nI have a secret weapon, my family has a history of breaking marathon records.\nAnd as I have been moving around, I bet I could break one.\n\nRunning because you fear for your life is a really good training regime after all!\n\n<style TextPositive>\nNon-Project X secret character gains "Marathon Genes"\n</style>\n<style TextPositive>Colonist gains the "Marathon Genes" trait.\n</style>'),
	Title = T(767766992208, --[[ModItemStoryBit x_inspired_gen_7 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_7",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationPriority = "Important",
	NotificationTitle = T(320574366919, --[[ModItemStoryBit x_inspired_gen_8 NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(171710136806, --[[ModItemStoryBit x_inspired_gen_8 Text]] "PX-003 is getting sketchier and sketchier each day.\nI talked with some of the others who went through it before me.\n\nThey remember a pristine gem of the empire.\nEverything clean, completely organized and on time.\n\nBut that is absolutely not the case anymore.\nPatrols are non-existent, people disappearing everyday.\n\nBribery, and therefore crime, abounds....\nAn easy way to get approved for an on-planet is to just bribe the right people....\n\nI am not saying that I did that.\nBut what I will say is that I have made some new friends.\nThey are very interested in getting some of the things we are making.\nThey promised to get us some of the more... difficult things to get in return.\n\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(284263224896, --[[ModItemStoryBit x_inspired_gen_8 Title]] "Colonist Announcement"),
	UseObjectImage = true,
	group = "Midnight",
	id = "x_inspired_gen_8",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Midnight",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_hint",
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	Enabled = true,
	NotificationTitle = T(125325424244, --[[ModItemStoryBit x_hint_middle NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckOR', {
			Conditions = {
				PlaceObj('CheckObjectCount', {
					Amount = 1,
					Condition = "==",
					Filters = {
						PlaceObj('IsBuildingClass', {
							BuildingClass = "ProjectX_start",
							param_bindings = false,
						}),
						PlaceObj('CheckIsDeviceWorking', {
							param_bindings = false,
						}),
					},
					Label = "Buildings",
					param_bindings = false,
				}),
				PlaceObj('CheckTech', {
					Tech = "xr_g0_resource",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckIsAlive', {
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "x_hint",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(399417985366, --[[ModItemStoryBit x_hint_middle Text]] "We must maintain and defend the signal relay from the wider threats.\nOtherwise we will go back to being reliant on PX-003!\n\nWe should also continue to be on the lookout for opportunities to research not just civilian technology.\n\nI'm sure if we put our minds to it, we can learn about military grade weapons, armor, and defenses!\n\nMaybe if we had a hacker with a dedicated station, similar to our traders.....\nAnd maybe another signal relay.\nThat will let us group 2 connections in one signal, hiding less-than-legal communications.\n\n<style TextEmphasis>Defend Signal Relay.\nUnlock higher tiers of Official Trade Techs\nResearch hacking device.\nBuild a hacking device.</style>"),
	Title = T(242403480864, --[[ModItemStoryBit x_hint_middle Title]] "Civilian only tech is limiting"),
	Trigger = "Midnight",
	UseObjectImage = true,
	group = "Midnight",
	id = "x_hint_middle",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Midnight",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_hint",
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	Enabled = true,
	NotificationTitle = T(581042770572, --[[ModItemStoryBit x_hint_late NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckOR', {
			Conditions = {
				PlaceObj('CheckObjectCount', {
					Amount = 2,
					Condition = "==",
					Filters = {
						PlaceObj('IsBuildingClass', {
							BuildingClass = "ProjectX_start",
							param_bindings = false,
						}),
						PlaceObj('CheckIsDeviceWorking', {
							param_bindings = false,
						}),
					},
					Label = "Buildings",
					param_bindings = false,
				}),
				PlaceObj('CheckTech', {
					Tech = "xr_g0_resource",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckIsAlive', {
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "x_hint",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(902262752281, --[[ModItemStoryBit x_hint_late Text]] "We are thriving!\nBut our pillaging of the military archives will not go unnoticed.\nThe Galactican's may start to routinely scan us for contraband.\nWho knows what they will do if they find enough illegal substances....\nChipping is all the rage, and I for one really don't like the thought of a disable switch being flipped while I'm staring down a Juno!\n\nIf we ever run out of Galactical Military technologies, we will need to look inward.\nOur biologists should be making breakthrough's as they learn and experiment on the fauna.\n\nI for one would love to have a masking pheromone like the shriekers...\nForce part of the insect horde to fight the other....\nI can dream.....\n"),
	Title = T(674279483228, --[[ModItemStoryBit x_hint_late Title]] "Next Steps"),
	Trigger = "Midnight",
	UseObjectImage = true,
	group = "Midnight",
	id = "x_hint_late",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Midnight",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_hint",
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	Enabled = true,
	NotificationTitle = T(945676987813, --[[ModItemStoryBit x_hint_Black_Market NotificationTitle]] "Project-X Progression Hint"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckIsAlive', {
					param_bindings = false,
				}),
				PlaceObj('CheckIsConscious', {
					param_bindings = false,
				}),
				PlaceObj('CheckIsOnExpedition', {
					Negate = true,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckTech', {
			Negate = true,
			Tech = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('CheckTech', {
			Tech = "CyberCrystalFarm",
			param_bindings = false,
		}),
		PlaceObj('CheckTech', {
			Tech = "AlienCrystal",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "x_hint",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(564999041335, --[[ModItemStoryBit x_hint_Black_Market Text]] "The Military Archives are not the only source of knowledge you know.\nRebellion's are always breaking out in the worlds, and they are never armed with just galactical gear.\n\nThey have found out how to make more.... customized technology.\nOur signal relays keep picking up coded communications or encrypted missives being sent to other colonies.\n\nThat means some less reputable individuals made it onto the planet.\nIf we focus our recruitment efforts on those with a criminal past....\nAND convince them to reveal their sources and contacts....\n\nWe could start to use the same tactics and technology the rebels use!\nAlthough the last thing the Galactical Empire wants to see is the possibility of a rebellion on a brand new world....\nSo they will react accordingly.\n\n"),
	Title = T(225411153296, --[[ModItemStoryBit x_hint_Black_Market Title]] "Idle Musings"),
	Trigger = "Midnight",
	UseObjectImage = true,
	group = "Midnight",
	id = "x_hint_Black_Market",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Tick",
	Effects = {
		PlaceObj('StoryBitActivateRandom', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_BrunoRainer",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_ChazRelioo",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_DavidKincaid",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_DianaVoss",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_EonLouise",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_FlokiLee",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_GaleSenario",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_GalenosYaskk",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_Gizmo",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_KarlTheMiner",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_KassandraInkk",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_KhanFredrick",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_LunariaPasker",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_LeonardoKexx",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_OldManJohn",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_OrlandoJunior",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_PogoDainer",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_RayyPasker",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_SamuelJonesPX",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_TannerOzk",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_TarraStones",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_TzukUnn",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_ToddMasco",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_WillianAllen",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_XayahFayy",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_XyraLee",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_ZackarieOzk",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_ZanderPogaa",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_secret_char_FioraJasmin",
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_char_change",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasPopup = false,
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	NotificationPriority = "Important",
	NotificationTitle = T(735484504070, --[[ModItemStoryBit x_secret_char_up_parent NotificationTitle]] "Colonist Announcement!"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "x_char_change",
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	Title = T(332652179666, --[[ModItemStoryBit x_secret_char_up_parent Title]] "test_parent"),
	comment = "trigger when specific char should have their special traits unlocked\nPlease do not judge me too harshly with the logic in here\nI am not a Lua coder, otherwise I would have build a dict with key:pair being name:story_snippet and looped through it to make the below",
	id = "x_secret_char_up_parent",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "ConcreteSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ConcreteSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BrickSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BrickSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705911, --[[ModItemStoryBit x_secret_char_ToddMasco NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "ToddMasco",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705911, --[[ModItemStoryBit x_secret_char_ToddMasco Text]] "This looks to be the biggest and best colony on planet!.\nI like to think I had a pretty big hand making it happen. At least regarding the layout of our little town\n\nThis is much better than my last colony. A quarry digging into the mountain. The beurocrats decided to build that one on the side of a mountain... Only one way we could get in or out. Those idiots thought that would protect us\nSpent all my time building pitfall traps hewn into the side of the mountain!\n\nEnough complaining, I'll give them a call and tell them they can send us some concrete or bricks for some govt cred.\n\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Brick Requests</style>\n<style TextPositive>Concrete Requests</style>"),
	Title = T(301319705911, --[[ModItemStoryBit x_secret_char_ToddMasco Title]] "Todd Masco's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	group = "PROJECTX",
	id = "x_secret_char_ToddMasco",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "ConcreteSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ConcreteSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BrickSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "CarbonSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BrickSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "CarbonSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705911, --[[ModItemStoryBit x_secret_char_FioraJasmin NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "FioraJasmin",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(529414106147, --[[ModItemStoryBit x_secret_char_FioraJasmin Text]] "As much as I love hauling things out of the ground to ship to some other colony....\nIt does get old really fast.\nEspecially whatever critter lives under that rock has poison capable of killing an elephant!\n\nI do got a good thing going.\nIt would be a shame not to let my network know where I'm at.\nEveryone owes me, so they will be falling over themselves trying to give me things.\n\nSo ask away!\nThankfully the Galactican's are footing this bill.\nThey get something as close to Galactican's as possible, I still hold the debt.\n\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Brick Requests</style>\n<style TextPositive>Concrete Requests</style>\n<style TextPositive>Carbon Requests</style>\n<style TextPositive>Vegetable Requests</style>"),
	Title = T(335724083018, --[[ModItemStoryBit x_secret_char_FioraJasmin Title]] "Fiora Jasmin's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_FioraJasmin",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705912, --[[ModItemStoryBit x_secret_char_EonLouise NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "EonLouise",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705912, --[[ModItemStoryBit x_secret_char_EonLouise Text]] "Did you know that the acidity of the soil changes 100 times quicker than earth standards?!?!\nAmazingly this is what's lets so many crops grow. The dirt almost responds to the plants, and somehow finds the right level of minerals, nutrients for the thing growing!\nMakes me wonder... what else could this planet do? I know my crops, but not any of that fancy smchancy \"doctor\" science.\nIf we do figure out some stuff, just give me the notes, I'm interested.\n\nOh yeah! I wanted to let you know my last colony managed to set up industrial scale crop growing! Let me get you the call sign and we can start officially requesting their surplus!<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Vegetable Requests</style>"),
	Title = T(301319705912, --[[ModItemStoryBit x_secret_char_EonLouise Title]] "Eon Lousie's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_EonLouise",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	NotificationTitle = T(301419705913, --[[ModItemStoryBit x_secret_char_OldManJohn NotificationTitle]] "test"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "OldManJohn",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705913, --[[ModItemStoryBit x_secret_char_OldManJohn Text]] "Yall youngin's ain't half bad!\nGot me feelin 50 again! Or I am 50.\nAh I don sweat the small stuff.\n\nLook-e-here I ain't tryingt o learn more tricks; so I stick to what I know. And what I know is plants.\nLet me talk with some of the other old geezers. I'll let em know that this here place be respectin wiser members of the communiteee.\nAfter that I don't gotta work so hard to keep yall fed.\nI remember when I could eat a whole elk by meself after I popped it.... good times.........\n\n\nWhat was I saying?\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Vegetable Requests</style>"),
	Title = T(301319705913, --[[ModItemStoryBit x_secret_char_OldManJohn Title]] "Old Man Johns's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_OldManJohn",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705914, --[[ModItemStoryBit x_secret_char_OrlandoJunior NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "OrlandoJunior",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705914, --[[ModItemStoryBit x_secret_char_OrlandoJunior Text]] "Hic, did I eva tttell ya I used to be great?!?!?! Peeps would liiiiine upp tryin to get ma cookin.\n\nOld J gotta get ma mooojoooo back.\n\n<style TextNegative>HIC</style>I loooovoeeee yaalllll!!!!!\nAnd cus I luv ya, Imma let us in on a secret.\n\nI got the call sign for veggies. Yeeeee the fresh stuff!!\n\nGet me that, and when I sober up, I promise to getcha some of the best food u eva been ate.\n\n<style TextNegative>BLARRGRHHHHHH\n\nBURRRRRPPPPP\n\nUhhh, whatcha waitin fur?<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Vegetable Requests</style>"),
	Title = T(301319705911, --[[ModItemStoryBit x_secret_char_OrlandoJunior Title]] "Orlando Junior's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_OrlandoJunior",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705915, --[[ModItemStoryBit x_secret_char_RayyPasker NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "RayyPasker",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705915, --[[ModItemStoryBit x_secret_char_RayyPasker Text]] "I feel like I have more freedom than ever at this colony.\n And I get to do what I want, when I want.\nThat means a lot to me, because the Galactican Empire loves to try and force people to do things they may not like....\n\nBut I digress, I wanted to let you know the galactican's entrusted me with the vegetable request call sign.\nThey need whatever my sister convinves to come home with her well fed.\n\nAnd if we start to call them in... that's one less crop I need to pull up. Win win!<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Vegetable Requests</style>"),
	Title = T(301319705915, --[[ModItemStoryBit x_secret_char_RayyPasker Title]] "Rayy Pasker's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_RayyPasker",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "GalacticSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "GalacticSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "CyberCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "CyberCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705916, --[[ModItemStoryBit x_secret_char_ChazRelioo NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "ChazRelioo",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705916, --[[ModItemStoryBit x_secret_char_ChazRelioo Text]] "This is the first colony I have audited. And I can say with confidence that the powers that be do not understand what it takes to survive here.\nI used to think that we where giving enough support to the colonies. But noone in command figure out why the colony failure rate is so high.... we should have made the connection.\n...\n...\n\nI have changed and made up my mind, the leaders in the Galactican Empire are out of touch. Let me get you some military call signs and secrets. That should give us the edge to succeed here.\nIf the Galactican's learn I am aiding you, I will be excommunicated. But that will matter not if we can rival their power!\n\nOh I forget, most of you do not understand how politics are played.\nLet me be VERY clear. I am helping you so I am rewarded accordingly.\nDecadence, power, authority; it matters little what form it takes. I am not picky. Just make sure you remember you gave you a leg up against the empire.\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Cyber Crystal Requests</style>\n   <style TextNegative>Requires knowledge of Cyber Crystals</style>\n<style TextPositive>Unlocked Background Research Enabling new Supply Drop Variant</style>\n<style TextPositive>Galactic Supply Drop</style>"),
	Title = T(301319705916, --[[ModItemStoryBit x_secret_char_ChazRelioo Title]] "Chazz Relioo's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_ChazRelioo",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "CyberCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "CyberCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "ContrabandSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ContrabandSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705917, --[[ModItemStoryBit x_secret_char_GaleSenario NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "GaleSenario",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705917, --[[ModItemStoryBit x_secret_char_GaleSenario Text]] "<color TextEmphasis>Gale hands a note to another colonist to read.</style>Thank you for treating me with respect and letting me live here. Getting run out of each colony was becoming too much. Is was always followed by a hide and seek game with the local wildlife.\nI've picked up a few things the Galactical Empire doesn't want me, or anyone else on planet, to know. Let me share like you have shared with me.\n<style TextPositive>Unlocked Background Research Enabling new Supply Drop Variant</style>\n<style TextPositive>Contraband Supply Drop</style>\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Energy Crystal Requests</style>\n<style TextPositive>Cyber Crystal Requests</style>\n   <style TextNegative>Requires knowledge of Cyber Crystals</style>"),
	Title = T(301319705917, --[[ModItemStoryBit x_secret_char_GaleSenario Title]] "Gale Senario's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_GaleSenario",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "ConcreteSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ConcreteSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705918, --[[ModItemStoryBit x_secret_char_LeonardoKexx NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "LeonardoKexx",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705918, --[[ModItemStoryBit x_secret_char_LeonardoKexx Text]] 'Let me see that file!\n<style TextEmphasis>He snatches the datapad another colonist was holding, showing his profile.\nHis eyes dart over his Ex-Wives warning</style>THAT **** *****!!\nNo wonder I was stuck on PX-003 for a whole ****ing year!\nThat makes me want to show her.... show them all....\n"Acting like I did\'nt risk my life DAY AFTER *** **** ****ING DAY TO KEEP HER ASS ALIVE! Did she question why a "Trader" was able to afford better life standards than a military general?!?!\nNo she was too dumb to make the connection, instead thinking that\'s how EVERYONE in the corrupt empire lives.\n\n<Style TextEmphasis>He takes many deep breathes, almost like a mini-meditation. If meditions included a narcotic cigarette and crushing stimulants into nose.</style>\nYou still picked me, even through her slander. So I will repay the kindness.\nTune your radios to this frequency. Use this cypher key. You will find every single part of the "glorious" empire is willing to sell things for the right information. Now to find out where my Ex-Wife went to give her a piece of my mind.\n<style TextPositive>Unlocked Background Research Enabling the Black Market!</style>\n<style TextPositive>Black Market Access</style>\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Energy Crystal Requests</style>\n'),
	Title = T(301319705918, --[[ModItemStoryBit x_secret_char_LeonardoKexx Title]] "Leonardo Kexx's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_LeonardoKexx",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "ExcavatorSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExcavatorSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705919, --[[ModItemStoryBit x_secret_char_KarlTheMiner NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "KarlTheMiner",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705919, --[[ModItemStoryBit x_secret_char_KarlTheMiner Text]] "It's all still very fuzzy....\n\nIt worries me I may not know exactly who I was before I was found....\n\nI did overhear some of the chats we've had about PX-003. And I think I know the right access code to request raw stone from PX-003.\nDon't ask how I know.... Because I don't know either.... I just hope it works and helps us.\nPlug them into PX-003 and see if they are still valid.\n\n<style TextPositive>Unlocked Background Research Enabling new Supply Drop Variant</style>\n<style TextPositive>Excavator Supply Drop</style>"),
	Title = T(301319705919, --[[ModItemStoryBit x_secret_char_KarlTheMiner Title]] "Karl's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_KarlTheMiner",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "MoneySupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "MoneySupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705920, --[[ModItemStoryBit x_secret_char_QuraDunn NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "QuraDunn",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705920, --[[ModItemStoryBit x_secret_char_QuraDunn Text]] "Most in the empire just see me as a pencil pusher. Stamping a stack of papers, then send them another office. But there is meaning to these papers! You can trace the history of the entire empire!\nAnd if you are good at it, you are rewarded. At least that's what it used to be.....\nBut with the latest elections, the papers are no longer a true record. If you know, you can guess which office added information and act like nothing has changed. It makes it impossible to tell who or what is where.\nI spoke up, called out those offices. But next thing I knew, I was \"volunteered\" for the colonist corps.\nBut that's in the past, let me show you what happens if you fill out the right form. Afterall, PX-003 is still following the G.2.AV4.T4 standard requisition forms.\n\n<style TextPositive>Unlocked Background Research Enabling new Supply Drop Variant</style>\n<style TextPositive>Money Supply Drop</style>"),
	Title = T(301319705920, --[[ModItemStoryBit x_secret_char_QuraDunn Title]] "Qura Dunn's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_QuraDunn",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "CarbonSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "CarbonSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705921, --[[ModItemStoryBit x_secret_char_KhanFredrick NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "KhanFredrick",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705921, --[[ModItemStoryBit x_secret_char_KhanFredrick Text]] "New colonies are always the best! Always so much that need building!! Especially after the little bugger starts trying to get in. Reminds me of the duplexes I lived in as a kid, makin my own barriers to make sure the Rad Roaches couldn't get in.\n\nI see where this place is headed though, and I think there is still a lot of building to do! Especially with some of the harder to get materials.\n\nLet me call in some favors, I set up some defenses and hyroponic farms for the last colony. Luckily I got to see the call sign for it too!\n\n\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Energy Crystal Requests</style>\n<style TextPositive>Carbon Requests</style>"),
	Title = T(301319705921, --[[ModItemStoryBit x_secret_char_KhanFredrick Title]] "Khan's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_KhanFredrick",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "EnergyCrystalSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705922, --[[ModItemStoryBit x_secret_char_XayahFayy NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "XayahFayy",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705922, --[[ModItemStoryBit x_secret_char_XayahFayy Text]] "Now that I have gotten to know everyone personally, and your dossiers; I feel that we are all on the same page. The Galactical Empire needs to fall. They want us to succeed in our mission, and no more. And for as little as they can give us.\n\nMark my words, they have plans in case a colony gets too big for it's britches.\n\nI can get us in contact with like minded individuals, they know how to get us things the Empire keeps trying to keep secret.\n\nAll that to say, if you get this ****ing chip out of my skull, I would even be willing to be the boot!\n\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Energy Crystal Requests</style>"),
	Title = T(301319705922, --[[ModItemStoryBit x_secret_char_XayahFayy Title]] "Xayah Fayy's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_XayahFayy",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "CarbonSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "CarbonSupply",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "CakeSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "SupplyCake",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705923, --[[ModItemStoryBit x_secret_char_TarraStones NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "TarraStones",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705923, --[[ModItemStoryBit x_secret_char_TarraStones Text]] "Did you know you can apply engineering principles to Cakes?!?!\nI know, I know, but hear me out!\nTall cakes and skyscrapers need something in the middle of them giving them structural stability. You cannot pick something too heavy on the outside, so not metal plates or thick fondant. The ore and dough needs to be exposed to a VERY specific heat for a specific amount of time for maximum structural stability.....\n\nThere I go again, getting lost in the topic. I could go on forever.....\nI had meant to bring this up because I made a bunch of cake and carbon fabricators in my last colony. They both should last for another 3 years without breaking or spoiling. Here are the call signs I filled out and sent to PX-003.\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Cake Requests</style>\n<style TextPositive>Carbon Requests</style>"),
	Title = T(301319705923, --[[ModItemStoryBit x_secret_char_TarraStones Title]] "Tarra's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_TarraStones",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "GalacticSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "GalacticSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705924, --[[ModItemStoryBit x_secret_char_DianaVoss NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "DianaVoss",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705924, --[[ModItemStoryBit x_secret_char_DianaVoss Text]] "This planet is the bloodiest place in the entire galaxy.\nThe ground itself is unsecure, as it seems like every *** **** bugger can dig through the soil. I took a shovel and started digging, and I could have sworn the earth itself got softer as I got deeper....\n\nWe need to really keep this place secure, and our armaments just aren't cutting it.\nI'm green lightning the deputization of this entire colony, as it is one of the top colonies currently.\nAbsolutely insane top brass didn't give that to anyone who touches down, as these are all expeditionary forces....\nRegardless a foothold like ours needs to experiment with different defense strategies should help make the next colony deployment easier.\n\n<style TextPositive>Unlocked Background Research Enabling new Supply Drop Variant</style>\n<style TextPositive>Galactic Supply Drop</style>"),
	Title = T(301319705924, --[[ModItemStoryBit x_secret_char_DianaVoss Title]] "Diana Voss's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_DianaVoss",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705925, --[[ModItemStoryBit x_secret_char_DavidKincaid NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "DavidKincaid",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705925, --[[ModItemStoryBit x_secret_char_DavidKincaid Text]] "It wasn't painful, in case you where wondering. The ships always have a few layers of oxygen shielding, and expects unexploded munitions.\nI just happened to roll low that day. Hehe, just a little game joke in case you don't get it.\nA little more serious... my medicine that stops my body from rejecting my more metalic parts ran out a while back. I've had to resort to... less than official means since the way I was dismissed from the military didn't let me extend it.\nLet's start talking with them about some of these, as some of these animals hurt even worse when they getcha!!\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705925, --[[ModItemStoryBit x_secret_char_DavidKincaid Title]] "David Kincaid's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_DavidKincaid",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705926, --[[ModItemStoryBit x_secret_char_GalenosYaskk NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "GalenosYaskk",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705926, --[[ModItemStoryBit x_secret_char_GalenosYaskk Text]] "Never did I think I would be living it up next to yall regular civvies.\nI kinda like it here..... It's a pretty sure bet that the things outside of the walls want to kill you, and the things inside don't.\nSome of the more aggressive tames give the same look my mom's landlord gaves us; but there's no way that thing knows enough to make that emotion.\nLet's chat with some of my.... acquaintances. They are more than wiling to get us some tech from the Galacticans, as long as we are willing to pay up.<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705926, --[[ModItemStoryBit x_secret_char_GalenosYaskk Title]] "Galenos Yaskk's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_GalenosYaskk",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705911, --[[ModItemStoryBit x_secret_char_Gizmo NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "Gizmo",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705927, --[[ModItemStoryBit x_secret_char_Gizmo Text]] "Gizmo helps non-Gizmos.\nNon-Gizmo's help Gizmo.\nGizmo feels safe here.\nGizmo not safe in empire now.\nBig and stupid Empire man tried to hide things from Gizmo.\nThings Gizmo doesn't like.\nGizmo use hidden things to keep non-Gizmo's tech safe.n\nGizmo's tech already safe. More tech for Gizmo makes Gizmo better.\nGizmo knows bad people market. He open channel and look at any trader non-Gizmos.\n\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705927, --[[ModItemStoryBit x_secret_char_Gizmo Title]] "Gizmo Rassk's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_Gizmo",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705911, --[[ModItemStoryBit x_secret_char_PogoDainer NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "PogoDainer",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705928, --[[ModItemStoryBit x_secret_char_PogoDainer Text]] "You picked me for one reason.\nOpen up these bugs and get their secrets. Man those little buggers are tough though. Makes me want some electrical saws, but that would ruin their precious bodies.\n\nI expected a frosty reception, but everyone at this colony seems to not try to start things.\nGood thing too, as finding buyers for human bodies are very difficult nowadays. Everyone on the market wants my job.\n\nOh right, the Black Market is live and well down here. Nomatter what the Galactican's tell you about how \"secure\" It is\n\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705928, --[[ModItemStoryBit x_secret_char_PogoDainer Title]] "Pogo Dainer's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_PogoDainer",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705911, --[[ModItemStoryBit x_secret_char_TannerOzk NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "TannerOzk",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705929, --[[ModItemStoryBit x_secret_char_TannerOzk Text]] "I hypothesised that I would be encapsulated by a drivel of imbecciles when I first heard the clarion call of adventure.\nThe call was incredibly alluring.\nAnd now that I have acquiested to the call I can finally write my abstract!\nMy null hypothesis was indeed false. Substantiated by every single interaction I had on PX-003.\n\nNot one egalitarian principle can be found by any of those in authority. My temperment was tested immensly until I came here.\n\nGranted, the quality of the accompaniment I find myself in is no different. But at least now I can rely on the effects of trauma bonding to forestall a desire to lobotomize myself.\n\nOnto a more personal ask. If you happen to see my brother, please bring him here and keep him safe.\nHe does not know how to behave, and I fear his head desires to be free from his neck.\n\nTake this decryption algorithm I just wrote while I was regaling you with this sordid tale.\nUse it to contact the Ne'er-do-well he languishes with.\n\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705929, --[[ModItemStoryBit x_secret_char_TannerOzk Title]] "Tanner Ozk'euun's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_TannerOzk",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705930, --[[ModItemStoryBit x_secret_char_TzukUnn NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "TzukUnn",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705930, --[[ModItemStoryBit x_secret_char_TzukUnn Text]] "This is a nice place, but don't you think there isn't enough to keep ourselves distracted from our immenent demise?\nJust me?\nOk well lemme put it to you a different way.\nIf I don't get any more ways to see the individual wires outside of a tech box (And how the universe truly makes us all insignificant); I can't make whatever doo-hicky you want me too.\nLet's chat with some of my ahem.... dealers... to make sure there's always a good supply to get me in the zoooonnnneeeee.\n\n <style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705930, --[[ModItemStoryBit x_secret_char_TzukUnn Title]] "Tzuk Unn's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_TzukUnn",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705931, --[[ModItemStoryBit x_secret_char_XyraLee NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "XyraLee",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705931, --[[ModItemStoryBit x_secret_char_XyraLee Text]] "2 things I need you to know. These creatures are using tactics they should not be smart enough to do. That begs the question. Are they indeed smart enough? Or is something working or controlling them to achieve these tactics....\nThe moon's that orbit this planet seem to change how they operate.... we may want to get some people there to check eventually.\nSecond is these Galactic weapons are not cutting it, and we are definately wasting time and resources trying to make them. Let me introduce to some of my... less than official arms dealers. You never know when you need a James Bond kind of weapon.\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705931, --[[ModItemStoryBit x_secret_char_XyraLee Title]] "Xyra Lee's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_XyraLee",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "VegetableSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705931, --[[ModItemStoryBit x_secret_char_ZackarieOzk NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "ZackarieOzk",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705931, --[[ModItemStoryBit x_secret_char_ZackarieOzk Text]] "Have you seen how cool this world is?!?!? Gigantic Scorpians! Cacti that get you high! I mean yeah sure everything wants to kill you here, but that's what we have the space station for right?\nI wanted to let everyone know I got put in the slammer a few times while we where awaiting deployment. Nothing serious, just teaching some idiots some lessons. But I did learn while I was in there how to contact and see some requests for more... unique resources.\nWe should probably trade for what we need through them. Afterall there's not much meat on these scorpions, especially with half of it needing to go into the magical science lab.\nBy the way, when do I get to start examining them?!?\n\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705931, --[[ModItemStoryBit x_secret_char_ZackarieOzk Title]] "Zackarie Ozk'euun's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_ZackarieOzk",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BrickSupply",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BrickSupply",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705932, --[[ModItemStoryBit x_secret_char_BrunoRainer NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "BrunoRainer",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705932, --[[ModItemStoryBit x_secret_char_BrunoRainer Text]] "This place isn't as stone rich as some other colonies I've helped prop up.\n\nLet me call in a few favors from those quarry colonies.\nI'm sure we can coordinate everything between us.\nAnd then let the authorities know to credit the other colony appropriately.\n\n<style TextPositive>Unlocked new resource request in trade terminal</style>\n<style TextPositive>Brick Requests</style>"),
	Title = T(301319705932, --[[ModItemStoryBit x_secret_char_BrunoRainer Title]] "Bruno Rainer's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_BrunoRainer",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "MedicalSupplyDrop",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "MedicalSupplyDrop",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705933, --[[ModItemStoryBit x_secret_char_SamuelJonesPX NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "SamuelJonesPX",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705933, --[[ModItemStoryBit x_secret_char_SamuelJonesPX Text]] "I guess now is as good of a time as any.\nPX-003 hired me to work in their medbay for a few years before this whole colonization effort went underway.\n\nThanks to my expertise, I quickly rose up the ranks.\nLogistically, they are running a surplus of medical supplies.\n\nThe exact opposite down here....\nLet me talk with the medbay staff, I'm sure we can work something out with them.\nAfterall, they care about our survival.\n\n<style TextPositive>Unlocked Background Research Enabling new Supply Drop Variant</style>\n<style TextPositive>Medical Supply Drop</style>"),
	Title = T(301319705933, --[[ModItemStoryBit x_secret_char_SamuelJonesPX Title]] "Samuel Jone's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_SamuelJonesPX",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Ulfen"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Gujo"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Gujo"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Gujo"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "WillianAllen",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGuildAccess",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerUlfen",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGujoBirds",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705934, --[[ModItemStoryBit x_secret_char_WillianAllen NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "WillianAllen",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705934, --[[ModItemStoryBit x_secret_char_WillianAllen Text]] "All the Galacticans had to do was tell me a new colony was being spun up; and I signed right up!\nLo and behold, we got ourselves a nice little homestead!\n\nWe gotta bring Bessy and the Cluckettes thought.\nHearing her join in when the quartet start their morning clucking is all I need to know I'm home.\n\nThe taming guild keeps the herd managed for me; but with enough time we could get all of them here!\nAfterall, Bessy would be quite sad without Ginger.\nGinger would be sad without Muffin, I could go on all night.\n\n\n<style TextPositive>Unlocked Background Research Enabling Deployment of Ulfen and Gujo</style>\n<style TextPositive>1 Ulfen and 3 Gujo Birds are being deployed now</style>"),
	Title = T(301319705934, --[[ModItemStoryBit x_secret_char_WillianAllen Title]] "Willian Allen's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_WillianAllen",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting_Mother"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "FlokiLee",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "ExpeditionHacker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "BlackMarket",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGuildAccess",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerJunoBrute",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerDrakka",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705935, --[[ModItemStoryBit x_secret_char_FlokiLee NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "FlokiLee",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705935, --[[ModItemStoryBit x_secret_char_FlokiLee Text]] "I know the Galactican's are the ones that sent us down here...\n\nSome of us didn't really have a choice in the matter.\nOne day I'm just living my life, the next my animals are impounded and the Galactican's got me in a holding cell with no charges.\n\nThe deal said I get to live out my life here, and now that doesn't seem so bad.\nAll you need to do is alert the Galactican's that I am reformed, and they will slowly release my animals to the colony.\n\nI promise everyone, I will not use my skills to hurt the colony. \nOnly against our enemies.\nAnd I hope that the Galactican's give me a reason to punish them for taking away my life.\n\nLet me give you the numbers of some of my friends that are still free.\nThey may take pity on me, or make you pay even more....\n\n<style TextPositive>Unlocked Background Research Enabling Deployment of Juno Brutes and Drakkas</style>\n<style TextPositive>1 Juno Brute deployed within 100 meters of the colony</style>\n<style TextPositive>Unlocked Background Research Enabling access to the Black Market</style>\n<style TextPositive>Black Market Access</style>"),
	Title = T(301319705935, --[[ModItemStoryBit x_secret_char_FlokiLee Title]] "Floki Lee's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_FlokiLee",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Scissorhands_Brute"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "VenomousRaptors"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "VenomousRaptors"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "KassandraInk",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGuildAccess",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerScissorhandBrute",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerVenomousRaptors",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705936, --[[ModItemStoryBit x_secret_char_KassandraInkk NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "KassandraInkk",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705936, --[[ModItemStoryBit x_secret_char_KassandraInkk Text]] "Hello Everyone,\n\nAs I've walked among you, I appreciate that we do not perform live dissections or experiments.\nIt's almost like we all read my treatise on how to humanely treat other living beings.\nAlthough I am not fully comfortable with the death on this planet, I understand that some things are required to survive and thrive.\n\nI had prepared and paid for a custom shipment from PX-003 in case.... I found only more cruelty.\nLet me call it down now.\nI feel reassured that I don't need to burn down another slave encampment.\n\nIf you let the guild know I am here, we can bring some of my more aggressive tames.\nLetting them revel in their predatory nature in service of defending our lives are... probably the most moral way of living for them.\n\n<style TextPositive>Unlocked Background Research Enabling Deployment of Scissorhand Brutes and Venomous Raptors</style>\n<style TextPositive>1 Scissorhand Brute and 2 Venomous Raptors are deployed within 100 meters of the colony</style>\n"),
	Title = T(301319705936, --[[ModItemStoryBit x_secret_char_KassandraInkk Title]] "Kassandra Inkk's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_KassandraInkk",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting_Mother"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "LunariaPasker",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGuildAccess",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerShriekerQueen",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerCamels",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705937, --[[ModItemStoryBit x_secret_char_LunariaPasker NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "LunariaPasker",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705937, --[[ModItemStoryBit x_secret_char_LunariaPasker Text]] ".......\n\nEverything went so terribly wrong when I came planetside.\nAlone, starving, surrounded by the new plants and animals.\n\nIt's a wonder I was able to survive, let alone tame Lucy.\nShe is the real reason I am alive today.\n\nI am calling her down with my emergency beacon.\nShe should be here to enjoy the home we have built together.\nJust promise to take good care of her.\n\nWhen we tame any shriekers, their own body changes their scent.\nMarking them as traitors to their own parents, to their own siblings, to their own children!\nThankfully evolution has not caught up, and \"traitors\" still recognize each other as friends.\n\nOnce we talk with the guild, we can bring down her tamed family.\nOr if we want, we can bring down some pack animals I have been breeding on the station.\n\n<style TextPositive>Unlocked Background Research Enabling Deployment of Shrieker Queens and Dromados</style>\n"),
	Title = T(301319705937, --[[ModItemStoryBit x_secret_char_LunariaPasker Title]] "Lunaris Paskar's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_LunariaPasker",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				instance.SpawnClass = "Shrieker_Manhunting_Mother"
			end,
			ProgressMul = 0,
			SpawnDefId = "ProjectX_Tamed",
			param_bindings = false,
		}),
		PlaceObj('RemoveLockedState', {
			Class = "Tech",
			Group = "x_backgrounds",
			LockState = "locked",
			PresetId = "ZanderPogaa",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Action = "Remove",
			Trait = "x_secret_trait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "x_inspiredTrait",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGuildAccess",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerShriekerQueen",
			param_bindings = false,
		}),
		PlaceObj('AddRemoveTrait', {
			Forced = true,
			Trait = "TamerGujoBirds",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	InheritsObject = false,
	NotificatiTitle = T(301419705938, --[[ModItemStoryBit x_secret_char_ZanderPogaa NotificatiTitle]] "test"),
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckCharacter', {
					Character = "ZanderPogaa",
					param_bindings = false,
				}),
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(301219705938, --[[ModItemStoryBit x_secret_char_ZanderPogaa Text]] "The dead speak to me.\nThey know not our language, but it has become clear.\n\nMost are puppets, clay that has long been molded and fired.\nTheir minds fought their flesh, and now they are free.\n\nWe must break the cycle.\nLearn from the flesh, learn from the spirit.\n\nSpeak to the minds of these creatures.\nUndo the damage, shatter the pots today.\nRebuild and re-fire them how they where. \nThat is the only way the spirits shall feel peace.\n\nI have spoken to some that have not yet passed, bring them here.\nWhen their flesh relinquishes it's grip; we must read the bones and gristle.\n\n<style TextPositive>Unlocked Background Research Enabling Deployment of Shrieker Queens and Dromados</style>\n"),
	Title = T(301319705938, --[[ModItemStoryBit x_secret_char_ZanderPogaa Title]] "Zander Pogaa's message to the colony"),
	UseObjectImage = true,
	comment = "Specific character is happy",
	id = "x_secret_char_ZanderPogaa",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "Tick",
	Effects = {
		PlaceObj('StoryBitActivateRandom', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_2",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_1",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_3",
					'Weight', 50,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_4",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_5",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_6",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_7",
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_inspired_gen_8",
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_char_change",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasPopup = false,
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	NotificationPriority = "Important",
	NotificationTitle = T(450413636719, --[[ModItemStoryBit x_secret_char_up_gen_parent NotificationTitle]] "Colonist Announcement!"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "x_char_change",
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckTrait', {
							Trait = "x_secret_trait",
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckTrait', {
							Trait = "x_secret_trait",
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Negate = true,
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_secret_trait",
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_secret_trait",
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(512360719482, --[[ModItemStoryBit x_secret_char_up_gen_parent Text]] "test1"),
	Title = T(572747256446, --[[ModItemStoryBit x_secret_char_up_gen_parent Title]] "test1"),
	comment = "No unique chars to upgrade\nBut there is a gen char to upgrade",
	id = "x_secret_char_up_gen_parent",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "SelfTalk",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_char_change",
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	Enabled = true,
	NotificationTitle = T(976717783919, --[[ModItemStoryBit x_s_char_up_hint_named NotificationTitle]] "A colonists has a message for all!"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "x_char_change",
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Negate = true,
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							Negate = true,
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							Negate = true,
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Negate = true,
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Trait = "x_secret_trait",
					param_bindings = false,
				}),
				PlaceObj('CheckHealthCondition', {
					HealthCond = "Inspired",
					Negate = true,
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "OrbitalOffer",
			Negate = true,
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(666487761069, --[[ModItemStoryBit x_s_char_up_hint_named Text]] "Whether I like it or not, my life is tied to this colonies success.\nI have shown I'm more than willing to do what is necessary.\n\nWhat if I knew how to help more?\nWould I be shown amnesty, as long as it does help?\n\nEveryone is out for themselves after all, me included.\nI need to be sure I won't get kicked out if I tell!\n\nIf we focus on my happiness, and show I have a place here.\nThat'll show me you trust and value my contributions. \n\nAnd we all will be better off from my contributions."),
	Title = T(693892441122, --[[ModItemStoryBit x_s_char_up_hint_named Title]] "Worried"),
	UseObjectImage = true,
	comment = "trigger if no named char needs to have their specific benefits + inspired trait added + no gen char needs to have a random bonus + inspired trait added\n(Does not trigger if chars have the inspired trait already)",
	id = "x_s_char_up_hint_named",
	max_reply_id = 1,
}),
PlaceObj('ModItemStoryBit', {
	Category = "SelfTalk",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "x_char_change",
			TimeScale = "days",
			param_bindings = false,
		}),
	},
	NotificationTitle = T(782950429548, --[[ModItemStoryBit x_s_char_up_hint_gen NotificationTitle]] "A colonists has a message for all!"),
	OneTime = false,
	Prerequisites = {
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Negate = true,
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "x_char_change",
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Negate = true,
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							Negate = true,
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Negate = true,
							Trait = "x_inspiredTrait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							param_bindings = false,
						}),
						PlaceObj('CheckOR', {
							Conditions = {
								PlaceObj('CheckCharacter', {
									Character = "FioraJasmin",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ToddMasco",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "EonLouise",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OldManJohn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "OrlandoJunior",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "RayyPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ChazRelioo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GaleSenario",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LeonardoKexx",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KarlTheMiner",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "QuraDunn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KhanFredrick",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XayahFayy",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TarraStones",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DianaVoss",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "DavidKincaid",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "GalenosYaskk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "Gizmo",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "PogoDainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TannerOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "TzukUnn",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "XyraLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZackarieOzk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "BrunoRainer",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "SamuelJonesPX",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "WillianAllen",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "FlokiLee",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "KassandraInkk",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "LunariaPasker",
									param_bindings = false,
								}),
								PlaceObj('CheckCharacter', {
									Character = "ZanderPogaa",
									param_bindings = false,
								}),
							},
							Negate = true,
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Negate = true,
			param_bindings = false,
		}),
		PlaceObj('PickFromLabel', {
			Filters = {
				PlaceObj('CheckTrait', {
					Trait = "x_inspiredTrait",
					param_bindings = false,
				}),
			},
			Label = "Survivors",
			param_bindings = false,
		}),
		PlaceObj('CheckAND', {
			Conditions = {
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Trait = "x_secret_trait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							Negate = true,
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
				PlaceObj('PickFromLabel', {
					Filters = {
						PlaceObj('CheckTrait', {
							Trait = "x_secret_trait",
							param_bindings = false,
						}),
						PlaceObj('CheckHealthCondition', {
							HealthCond = "Inspired",
							Negate = true,
							param_bindings = false,
						}),
					},
					Label = "Survivors",
					param_bindings = false,
				}),
			},
			Negate = true,
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(894875446448, --[[ModItemStoryBit x_s_char_up_hint_gen Text]] 'Like me, there are those with secrets.\nStolen technology.\nHidden stashes.\nPeople outside the colony willing to help.\n\nIf you treat everyone the way you treated me...\nThey will gladly tell you anything!\n\nUp to and including the awkward moment they called their primary school teacher "Mom".\nTHAT ONE\'S HYPOTHETICAL'),
	Title = T(206086643839, --[[ModItemStoryBit x_s_char_up_hint_gen Title]] "Secrets are hidden"),
	UseObjectImage = true,
	comment = "trigger if there is noone ready to have inspired trait added & no secret characters are still secret & a sec doesn't the project x inspired trait",
	id = "x_s_char_up_hint_gen",
	max_reply_id = 1,
}),
PlaceObj('ModItemBuildingCompositeDef', {
	BrokenStateAt = 10,
	BuildMenuCategory = "Leisure",
	BuildMenuIcon = "UI/Icons/Build Menu/punching_bag",
	BuildMenuPos = 5010,
	CustomMaterial = "Carpet",
	DamagedStateAt = 90,
	EntityHeight = 1941,
	Health = 2000000,
	MaxHealth = 2000000,
	OwnedComponent = true,
	RelaxationDeviceComponent = true,
	SkirtSize = 363,
	access_range = 1800,
	attack_attraction = 10,
	construction_cost = PlaceObj('ConstructionCost', {
		Hay = 10000,
		Leathers = 20000,
		Wood = 20000,
	}),
	construction_points = 10000,
	damage_reduction = {
		blunt = 99,
		energy = 99,
		gas = 99,
		piercing = 99,
	},
	description = T(458254958107, --[[ModItemBuildingCompositeDef PunchingPole description]] "Used for relaxation. Grants Physical and Combat experience on use."),
	display_name = T(263703011987, --[[ModItemBuildingCompositeDef PunchingPole display_name]] "Durable Punching pole"),
	display_name_pl = T(323237528856, --[[ModItemBuildingCompositeDef PunchingPole display_name_pl]] "Punching poles"),
	enable_overlay_on_placement = {
		RoomsOverlay = true,
	},
	entity = "PunchingPole",
	group = "Relaxatation",
	id = "PunchingPole",
	labels = {
		"BerserkTargets",
		"Buildings",
		"PunchingPole",
		"RelaxationDevices",
	},
	lock_block_box = box(-600, -600, 0, 600, 600, 1750),
	object_class = "Building",
	prefer_in_buildmenu = true,
	repair_cost = PlaceObj('ConstructionCost', {
		Hay = 10000,
	}),
	show_damage_notification = false,
	update_interval = 5000,
}),
PlaceObj('ModItemBuildingCompositeDef', {
	BrokenStateAt = 10,
	BuildMenuCategory = "Leisure",
	BuildMenuIcon = "UI/Icons/Build Menu/shooting_target",
	BuildMenuPos = 5020,
	CustomMaterial = "Canvas",
	DamagedStateAt = 90,
	EntityHeight = 1892,
	Health = 2000000,
	MaxHealth = 2000000,
	OwnedComponent = true,
	RelaxationDeviceComponent = true,
	SkirtSize = 229,
	UseTargetSpot = true,
	attack_attraction = 10,
	construction_cost = PlaceObj('ConstructionCost', {
		Hay = 30000,
		Wood = 30000,
	}),
	construction_points = 10000,
	damage_reduction = {
		blunt = 99,
		energy = 99,
		gas = 99,
		piercing = 99,
	},
	description = T(502249865347, --[[ModItemBuildingCompositeDef ShootingTarget description]] "Used for relaxation. Grants Combat experience on use."),
	display_name = T(628877797389, --[[ModItemBuildingCompositeDef ShootingTarget display_name]] "Durable Shooting target"),
	display_name_pl = T(463081479955, --[[ModItemBuildingCompositeDef ShootingTarget display_name_pl]] "Shooting targets"),
	enable_overlay_on_placement = {
		RoomsOverlay = true,
	},
	entity = "ShootingTarget",
	group = "Relaxatation",
	id = "ShootingTarget",
	labels = {
		"BerserkTargets",
		"Buildings",
		"RelaxationDevices",
		"ShootingTarget",
	},
	lock_block_box = box(-600, -600, 0, 600, 600, 1750),
	object_class = "Building",
	prefer_in_buildmenu = true,
	repair_cost = PlaceObj('ConstructionCost', {
		Hay = 30000,
	}),
	show_damage_notification = false,
	update_interval = 5000,
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_ration",
	'TargetId', "ScavengeRationsResources",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 6000,
			Resource = "EmergencyRation",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_scrapmeta",
	'TargetId', "ScavengeScrapMetalResource",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			MinAmount = 10000,
			Resource = "ScrapMetal",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_synth_cloth",
	'TargetId', "ScavengeSyntheticTextilesResources",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			MinAmount = 10000,
			Resource = "Synthetics",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_alloy",
	'TargetId', "ScavengeMetalAlloysResources",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 10000,
			MinAmount = 5000,
			Resource = "Metal",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			weight = 100000,
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_first",
	'TargetId', "ScavengeMedKitResources",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 4000,
			Resource = "MedKit",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_ladning",
	'TargetId', "ScavengeLadningPod",
	'TargetValue', {
		PlaceObj('LootEntryLootDef', {
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			loot_def = "ScavengeCargo_Items",
			weight = 15000,
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_gen_debris",
	'TargetId', "ScavengeGenericDebris",
	'TargetValue', {
		PlaceObj('LootEntryLootDef', {
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			loot_def = "ScavengeCargo_Items",
			weight = 5000,
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_fuel",
	'TargetId', "ScavengeFuelResource",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 50000,
			MinAmount = 20000,
			Resource = "LiquidFuel",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_electronic",
	'TargetId', "ScavengeElectronicsResource",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 4000,
			Resource = "ScrapElectronics",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_default",
	'TargetId', "ScavengeDefault",
	'TargetValue', {
		PlaceObj('LootEntryLootDef', {
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			loot_def = "ScavengeCPUPower",
			weight = 5000,
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_cloth",
	'TargetId', "ScavengeClothResources",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			MaxAmount = 15000,
			MinAmount = 5000,
			Resource = "Cotton",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_decon_gen",
	'TargetId', "DeconstructGeneric",
	'TargetValue', {
		PlaceObj('LootEntryLootDef', {
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			loot_def = "ScavengeCPUPower",
			weight = 15000,
		}),
	},
}),
PlaceObj('ModItemLootDefEdit', {
	'name', "x_scav_cpuPower",
	'TargetId', "ScavengeCPUPower",
	'TargetValue', {
		PlaceObj('LootEntryResource', {
			Resource = "PowerCell",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			weight = 10000,
		}),
		PlaceObj('LootEntryResource', {
			Resource = "CPUCore",
			game_conditions = {
				PlaceObj('CheckDifficulty', {
					Difficulty = "Easy",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Hard",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Insane",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "Medium",
					Negate = true,
				}),
				PlaceObj('CheckDifficulty', {
					Difficulty = "VeryHard",
					Negate = true,
				}),
			},
			weight = 10000,
		}),
	},
}),
PlaceObj('ModItemStoryBit', {
	Effects = {
		PlaceObj('StoryBitActivateRandom', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_test_child_1",
					'NoCooldown', true,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "x_test_child_2",
					'NoCooldown', true,
				}),
			},
			param_bindings = false,
		}),
	},
	HasPopup = false,
	NotificationCanDismiss = false,
	NotificationExpirationBar = true,
	NotificationTitle = T(493981573747, --[[ModItemStoryBit x_test_parent NotificationTitle]] "testparent"),
	SuppressTime = 40000,
	id = "x_test_parent",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	NotificationCanDismiss = false,
	NotificationTitle = T(737808661084, --[[ModItemStoryBit x_test_child_1 NotificationTitle]] "testchild"),
	OneTime = false,
	SelectObject = false,
	Text = T(470811291963, --[[ModItemStoryBit x_test_child_1 Text]] "testpop2"),
	Title = T(796116160435, --[[ModItemStoryBit x_test_child_1 Title]] "test pop"),
	UseObjectImage = true,
	id = "x_test_child_1",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Enabled = true,
	HasNotification = false,
	NotificationCanDismiss = false,
	NotificationTitle = T(882591420998, --[[ModItemStoryBit x_test_child_2 NotificationTitle]] "testchild2"),
	OneTime = false,
	Text = T(547518625729, --[[ModItemStoryBit x_test_child_2 Text]] "testpop2"),
	Title = T(286384112826, --[[ModItemStoryBit x_test_child_2 Title]] "testpop2 "),
	id = "x_test_child_2",
}),
PlaceObj('ModItemTech', {
	Description = T(390582409305, --[[ModItemTech xr_g0_resource_fast Description]] "<style TechSubtitleBlue>Schematic Selling Contacts</style>\n<color blue>Tier 0 Official Trading</color>\nThere has to be some other colonies with Signal Relays too!\nLet's build a static connection from Signal Relays to Signal Relay.\nThat way if either end drops, we don't lose the connection (Or need to go back to PX-003)\n\n\n<color px_purple>Requires 1 Signal Relay Working to Download</color>\n\n<style TechSubtitleBlue>Effects:</style>\n   <color TextEmphasis>All Donate Tab recipes in trade terminal take 75% less time.</color>"),
	DisplayName = T(100196598254, --[[ModItemTech xr_g0_resource_fast DisplayName]] "Throttled Selling"),
	Icon = "Trade/GalacticSchematic.png",
	LockPrerequisites = {
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
				}),
				PlaceObj('CheckIsDeviceWorking', {}),
			},
			Label = "Buildings",
		}),
	},
	MinSkillLevel = 2,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource",
		}),
	},
	ResearchPoints = 140000,
	SortKey = 1,
	TradeDescription = T(383515091450, --[[ModItemTech xr_g0_resource_fast TradeDescription]] "Super Connections"),
	comment = "Project X\nResearch - Galactic Tier 0 - Resource",
	group = "Trade",
	id = "xr_g0_resource_fast",
	money_value = 100000000,
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeWood",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeMetal",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeStone",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeVegetables",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeOre",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeSilicon",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeEnergyCrystals",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeCarbon",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "TradeBricks",
		Reason = "not needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Supply",
		LockState = "hidden",
		PresetId = "PX_supply_droidrepair",
		Reason = "not needed",
	}),
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 4167,
	DecayRateOutside = 8333,
	DecayRateRefrigerated = 595,
	DecayTimeInside = 960000,
	DecayTimeOutside = 480000,
	DecayTimeRefrigerated = 6720000,
	LockState = "hidden",
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_alt.png",
	alt_icon_outlined = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_outlined.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 25000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_rotation = 5400,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	consumption_type = "",
	decay_fx = true,
	description = T(626847854606, --[[ModItemResource livingMetal description]] "A microscopic genetic sample that defies normal science!"),
	display_name = T(922623719614, --[[ModItemResource livingMetal display_name]] "Zancer Mutation"),
	display_name_pl = T(546361589605, --[[ModItemResource livingMetal display_name_pl]] "Zancer Mutations"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_small.png",
	id = "livingMetal",
	in_groups = {
		"base_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	progress = 100000,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_scale = 150,
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 298,
	DecayRateOutside = 833,
	DecayRateRefrigerated = 347,
	DecayTimeInside = 13440000,
	DecayTimeOutside = 4800000,
	DecayTimeRefrigerated = 11520000,
	LockState = "hidden",
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/Sintis.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Damage Organ",
	consumption_type = "",
	decay_fx = true,
	description = T(517884767555, --[[ModItemResource Sintis description]] "This is a grouping of Zancer Cells that collectively agree they should pierce, cut, or break whatever they come into contact with. Further investigation is needed to make this usable by us."),
	display_name = T(409821076121, --[[ModItemResource Sintis display_name]] "Sintis"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/Sintis_Small.png",
	id = "Sintis",
	in_groups = {
		"base_organs",
		"non_zancer_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 694,
	DecayRateOutside = 1042,
	DecayRateRefrigerated = 347,
	DecayTimeInside = 5760000,
	DecayTimeOutside = 3840000,
	DecayTimeRefrigerated = 11520000,
	LockState = "hidden",
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/Megdeb.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Defense Organ",
	consumption_type = "",
	decay_fx = true,
	description = T(787748678148, --[[ModItemResource Megdeb description]] "This is a grouping of Zancer Cells that collectively agree they should be as obstinate as possible. Further investigation is needed to make this usable by us."),
	display_name = T(370487985754, --[[ModItemResource Megdeb display_name]] "Megdeb"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/Megdeb_Small.png",
	id = "Megdeb",
	in_groups = {
		"base_organs",
		"non_zancer_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 833,
	DecayRateOutside = 1042,
	DecayRateRefrigerated = 595,
	DecayTimeInside = 4800000,
	DecayTimeOutside = 3840000,
	DecayTimeRefrigerated = 6720000,
	LockState = "hidden",
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/Toco.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Chemical Organ",
	consumption_type = "",
	decay_fx = true,
	description = T(103043894262, --[[ModItemResource Toco description]] "This is a grouping of Zancer Cells that collectively agree they should be as acidic or toxic as possible. Further investigation is needed to make this usable by us."),
	display_name = T(380199301299, --[[ModItemResource Toco display_name]] "ToCo"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/Toco_small.png",
	id = "Toco",
	in_groups = {
		"base_organs",
		"non_zancer_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 694,
	DecayRateOutside = 1042,
	DecayRateRefrigerated = 347,
	DecayTimeInside = 5760000,
	DecayTimeOutside = 3840000,
	DecayTimeRefrigerated = 11520000,
	LockState = "hidden",
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/Bitherm.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Energy Organ",
	consumption_type = "",
	decay_fx = true,
	description = T(517248043497, --[[ModItemResource Bitherm description]] "This is a grouping of Zancer Cells that collectively agree they should be both cold and hot at the same time! Further investigation is needed to make this usable by us."),
	display_name = T(853457336358, --[[ModItemResource Bitherm display_name]] "Bitherm"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/Bitherm_small.png",
	id = "Bitherm",
	in_groups = {
		"base_organs",
		"non_zancer_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 694,
	DecayRateOutside = 1042,
	DecayRateRefrigerated = 347,
	DecayTimeInside = 5760000,
	DecayTimeOutside = 3840000,
	DecayTimeRefrigerated = 11520000,
	LockState = "hidden",
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/Neudo.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Brain Organ",
	consumption_type = "",
	decay_fx = true,
	description = T(635996418061, --[[ModItemResource Nuedo description]] "This is a grouping of Zancer Cells that collectively agree they should be a mini-brain. Further investigation is needed to make this usable by us."),
	display_name = T(667768800188, --[[ModItemResource Nuedo display_name]] "Nuedo"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/Neudo_small.png",
	id = "Nuedo",
	in_groups = {
		"base_organs",
		"non_zancer_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 694,
	DecayRateOutside = 1042,
	DecayRateRefrigerated = 347,
	DecayTimeInside = 5760000,
	DecayTimeOutside = 3840000,
	DecayTimeRefrigerated = 11520000,
	MinStorageCondition = 4,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/new/Adricon.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	comment = "Logic/Trigger Organ",
	consumption_type = "",
	decay_fx = true,
	description = T(686447932996, --[[ModItemResource Adricon description]] "This is a grouping of Zancer Cells that collectively agree they should make signalling instantaneous! Further investigation is needed to make this usable by us."),
	display_name = T(612739773136, --[[ModItemResource Adricon display_name]] "Adricon"),
	group = "CraftingMaterials",
	grouped_as = "Organs",
	icon = "Mod/ucCehPy/Biologist/new/Adricon_Small.png",
	id = "Adricon",
	in_groups = {
		"base_organs",
		"non_zancer_organs",
	},
	money_value = 1000000000,
	preference = -99999,
	stack_entity = "ResourceBulk_MeatRaw",
	stack_size = 200000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 4167,
	DecayRateOutside = 8333,
	DecayRateRefrigerated = 595,
	DecayTimeInside = 960000,
	DecayTimeOutside = 480000,
	DecayTimeRefrigerated = 6720000,
	LockState = "hidden",
	MinStorageCondition = 4,
	ShowDiscoveryNotification = false,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/BiologistLogo.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 100000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	consumption_type = "",
	decay_fx = true,
	description = T(281515247083, --[[ModItemResource base_organs description]] "Any and all base organs, that we can make more complex things from!"),
	display_name = T(956142782101, --[[ModItemResource base_organs display_name]] "Individual Organs"),
	group = "CraftingMaterials",
	icon = "Mod/ucCehPy/Biologist/BiologistLogoSmall.png",
	id = "base_organs",
	in_groups = {
		"Organs",
	},
	is_group = true,
	money_value = 1000000000,
	preference = -99999,
	stack_size = 30000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateInside = 4167,
	DecayRateOutside = 8333,
	DecayRateRefrigerated = 595,
	DecayTimeInside = 960000,
	DecayTimeOutside = 480000,
	DecayTimeRefrigerated = 6720000,
	LockState = "hidden",
	MinStorageCondition = 4,
	ShowDiscoveryNotification = false,
	SortKey = 9876,
	alt_icon = "Mod/ucCehPy/Biologist/BiologistLogo.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 2000,
	carry_entity = "ResourceBulk_MeatRaw",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	consumption_type = "",
	decay_fx = true,
	description = T(541169911328, --[[ModItemResource non_zancer_organs description]] "All basic organs except the building block they all share."),
	display_name = T(480089967444, --[[ModItemResource non_zancer_organs display_name]] "Non-Zancer Organs"),
	group = "CraftingMaterials",
	icon = "Mod/ucCehPy/Biologist/BiologistLogoSmall.png",
	id = "non_zancer_organs",
	in_groups = {
		"Organs",
	},
	is_group = true,
	money_value = 1000000000,
	preference = -99999,
	stack_size = 30000,
	tags = {
		topSecret = true,
		"topSecret",
	},
	visible = false,
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 120000,
	BuildCategory = "Study",
	Description = T(897481003865, --[[ModItemRecipe x_bio_Experiment Description]] "Take a bunch of meat from the fauna, and see what you can find!"),
	DisplayName = T(616088466687, --[[ModItemRecipe x_bio_Experiment DisplayName]] "Experiment (Meat)"),
	FailChance = 70,
	GuaranteedSuccessLevel = 8,
	Icon = "Mod/ucCehPy/Biologist/new/bio_experiment.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "RawMeat",
			'amount', 250000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 3000,
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 100,
	group = "Workbench",
	id = "x_bio_Experiment",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 20000,
	BuildCategory = "Study",
	Description = T(734178826755, --[[ModItemRecipe x_bio_convert_base Description]] "Take a bunch of meat from the fauna, and see what you can find!"),
	DisplayName = T(497109268359, --[[ModItemRecipe x_bio_convert_base DisplayName]] "Experiment (Meat)"),
	GuaranteedSuccessLevel = 8,
	Icon = "Mod/ucCehPy/Biologist/new/bio_experiment.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "RawMeats",
		}),
	},
	LockState = "hidden",
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 3000,
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 100,
	comment = "Not live, it's a recipe that \"works\" so I copy from this one",
	group = "Workbench",
	id = "x_bio_convert_base",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 120000,
	BuildCategory = "Study",
	Description = T(682216786286, --[[ModItemRecipe x_bio_Experiment_organ Description]] "Let's see if we can discover why there are similar organs in the wildlife!"),
	DisplayName = T(890603898276, --[[ModItemRecipe x_bio_Experiment_organ DisplayName]] "Experiment (Organs)"),
	FailChance = 75,
	GuaranteedSuccessLevel = 8,
	Icon = "Mod/ucCehPy/Biologist/new/bio_experiment.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "non_zancer_organs",
			'amount', 5000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 3000,
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 101,
	group = "Workbench",
	id = "x_bio_Experiment_organ",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 200000,
	BuildCategory = "Study",
	Description = T(990252299719, --[[ModItemRecipe x_bio_Experiment_fast Description]] "Trigger a Zancer mutation with sufficient bio-fuel"),
	DisplayName = T(116803752610, --[[ModItemRecipe x_bio_Experiment_fast DisplayName]] "Isolate Zancer"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/bio_experiment.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "RawMeats",
			'amount', 500000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 10000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "livingMetal",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = -2,
	group = "Workbench",
	id = "x_bio_Experiment_fast",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	BuildCategory = "Study",
	Description = T(989128286756, --[[ModItemRecipe x_bio_convert_Sintis Description]] "Convert an organ into another"),
	DisplayName = T(819073641722, --[[ModItemRecipe x_bio_convert_Sintis DisplayName]] "Adricon into Sintis"),
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/Sintis.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 3000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 1,
	group = "Workbench",
	id = "x_bio_convert_Sintis",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 200000,
	BuildCategory = "Study",
	Description = T(328395225215, --[[ModItemRecipe x_bio_convert_Zancer Description]] "Spend our Zancer and create a bunch of organs!"),
	DestroyOnFail = false,
	DisplayName = T(364736850206, --[[ModItemRecipe x_bio_convert_Zancer DisplayName]] "Mass Evolution"),
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_alt.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 24000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 4000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 4000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 4000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 4000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 4000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 4000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = -1,
	group = "Workbench",
	id = "x_bio_convert_Zancer",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	BuildCategory = "Study",
	Description = T(139845068715, --[[ModItemRecipe x_bio_convert_Megdeb Description]] "Convert an organ into another"),
	DisplayName = T(221100865749, --[[ModItemRecipe x_bio_convert_Megdeb DisplayName]] "Sintis into Megdeb"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/Megdeb.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Sintis",
			'amount', 3000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 2,
	group = "Workbench",
	id = "x_bio_convert_Megdeb",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	BuildCategory = "Study",
	Description = T(588341212387, --[[ModItemRecipe x_bio_convert_Toco Description]] "Convert an organ into another"),
	DisplayName = T(266811558696, --[[ModItemRecipe x_bio_convert_Toco DisplayName]] "Megdeb into Toco"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/Toco.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Megdeb",
			'amount', 3000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 3,
	group = "Workbench",
	id = "x_bio_convert_Toco",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	BuildCategory = "Study",
	Description = T(840297798812, --[[ModItemRecipe x_bio_convert_Nuedo Description]] "Convert an organ into another"),
	DisplayName = T(907796609918, --[[ModItemRecipe x_bio_convert_Nuedo DisplayName]] "Bitherm into Nuedo"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/Neudo.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 3000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 4,
	group = "Workbench",
	id = "x_bio_convert_Nuedo",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	BuildCategory = "Study",
	Description = T(191427398726, --[[ModItemRecipe x_bio_convert_Bitherm Description]] "Convert an organ into another"),
	DisplayName = T(541273496687, --[[ModItemRecipe x_bio_convert_Bitherm DisplayName]] "Toco into Bitherm"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/Bitherm.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Toco",
			'amount', 3000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Bitherm",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 5,
	group = "Workbench",
	id = "x_bio_convert_Bitherm",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	BuildCategory = "Study",
	Description = T(706919456219, --[[ModItemRecipe x_bio_convert_Adricon Description]] "Convert an organ into another"),
	DisplayName = T(603632510600, --[[ModItemRecipe x_bio_convert_Adricon DisplayName]] "Nuedo into Adricon"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/Adricon.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Nuedo",
			'amount', 3000,
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 6,
	group = "Workbench",
	id = "x_bio_convert_Adricon",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 240000,
	BuildCategory = "Study",
	Description = T(359451940351, --[[ModItemRecipe x_bio_create_living Description]] "Convert any organ into Zancer"),
	DisplayName = T(790780293390, --[[ModItemRecipe x_bio_create_living DisplayName]] "Distill down to Zancer"),
	GuaranteedSuccessLevel = 4,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_small.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "non_zancer_organs",
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 2000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 6,
	group = "Workbench",
	id = "x_bio_create_living",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 40000,
	BuildCategory = "Study",
	Description = T(790871931930, --[[ModItemRecipe x_bio_convert_old Description]] "Take depreciated organs, turn into Zancer"),
	DisplayName = T(991827529230, --[[ModItemRecipe x_bio_convert_old DisplayName]] "Convert into Zancer"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_alt.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "x_org_old",
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "x_org_old",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 6,
	group = "Workbench",
	id = "x_bio_convert_old",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Biologist",
	ActivityDuration = 40000,
	BuildCategory = "Boxing",
	Description = T(325110486721, --[[ModItemRecipe x_bio_convert_old_box Description]] "Take depreciated boxes, turn into Zancer"),
	DisplayName = T(671183093774, --[[ModItemRecipe x_bio_convert_old_box DisplayName]] "Convert into Zancer"),
	GuaranteedSuccessLevel = 10,
	HasIntermediateResult = false,
	Icon = "Mod/ucCehPy/Biologist/SmallBox.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "x_org_box_old",
		}),
	},
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 15000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "x_org_box_old",
		}),
	},
	RequiredDeviceInterfaces = {
		"Biology",
	},
	SortKey = 6,
	group = "Workbench",
	id = "x_bio_convert_old_box",
}),
PlaceObj('ModItemTrait', {
	Description = T(339342005846, --[[ModItemTrait what_have_we_done Description]] "Core World's are under attack by Shriekers... There's no way colonization isn't partly responsible! Will no longer go to animals for relaxation, but also is now interested in dissection research!"),
	DisplayName = T(917157830946, --[[ModItemTrait what_have_we_done DisplayName |gender-variants]] "What have we done?"),
	Modifiers = {
		PlaceObj('ForbidRelaxationRoutine', {
			Id = "autoid_ucCehPy_cbcXNFc",
			Routine = "VisitAnimal",
		}),
		PlaceObj('ModifySkill', {
			Id = "autoid_ucCehPy_hdeUkD6",
			Inclination = "Interested",
			Level = 3,
			Skill = "Biology",
		}),
	},
	group = "PROJECTX",
	id = "what_have_we_done",
}),
PlaceObj('ModItemTrait', {
	Description = T(856443804483, --[[ModItemTrait reap_rewards Description]] "It's great to be in high demand! Was able to reroute the colony to this one, and doesn't want to miss out on a single second. Needs to sleep even less than sleep training gives!"),
	DisplayName = T(752768801870, --[[ModItemTrait reap_rewards DisplayName |gender-variants]] "Reaping the Rewards"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_LEJhDbt",
			mul = 1500,
			prop = "RestPerDaySleeping",
		}),
	},
	group = "PROJECTX",
	id = "reap_rewards",
}),
PlaceObj('ModItemTrait', {
	Description = T(425558864312, --[[ModItemTrait zancer_hearing Description]] "I didn't know I could tell which food had mutated?!? What does that say about me?!? Bonus to conscious and enemy detection."),
	DisplayName = T(455101857452, --[[ModItemTrait zancer_hearing DisplayName |gender-variants]] "Zancer Hearing"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 1200,
			prop = "Consciousness",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_hws57X",
			mul = 2000,
			prop = "SightRange",
		}),
	},
	group = "PROJECTX",
	id = "zancer_hearing",
}),
PlaceObj('ModItemLootDef', {
	group = "Orbital",
	id = "bp_inspired",
	PlaceObj('LootEntryResource', {
		MaxAmount = 50000,
		MinAmount = 20000,
		Resource = "Blueprint",
		weight = 25000,
	}),
}),
PlaceObj('ModItemLootDef', {
	group = "Orbital",
	id = "bp_inspired_1",
	PlaceObj('LootEntryResource', {
		Resource = "livingMetal",
		weight = 25000,
	}),
}),
PlaceObj('ModItemResource', {
	PerItemHealth = true,
	ShowDiscoveryNotification = false,
	SortKey = 1000000,
	alt_icon = "Mod/ucCehPy/CriminalActivity/AlienBlueprint.png",
	carry_entity = "ResourceBulk_SmallBox",
	description = T(834723626112, --[[ModItemResource BlueprintsInfoPanel description]] "List of collected blueprints"),
	display_name = T(576543233254, --[[ModItemResource BlueprintsInfoPanel display_name]] "Blueprints"),
	group = "InfobarUsable",
	icon = "Mod/ucCehPy/CriminalActivity/AlienBlueprint_Small.png",
	id = "BlueprintsInfoPanel",
	is_group = true,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 99,
	DecayTimeOutside = 40320000,
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/Blueprint.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 300000,
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	consumption_type = "",
	description = T(400899666938, --[[ModItemResource CyberBlueprint description]] "Stolen from hidden military laboratories across the universe. So hidden most govt officials don't even know they exist!"),
	display_name = T(304870353627, --[[ModItemResource CyberBlueprint display_name]] "Top Secret Military Fragment"),
	display_name_pl = T(924320536888, --[[ModItemResource CyberBlueprint display_name_pl]] "Top Secret Military Fragments"),
	group = "OtherItems",
	icon = "Mod/ucCehPy/CriminalActivity/Blueprint_Small.png",
	id = "CyberBlueprint",
	in_groups = {
		"BlueprintsInfoPanel",
	},
	money_value = 7500000,
	progress = 10000,
	show_on_second_row = true,
	stack_entity = "ResourceBulk_Electronics",
	stack_idle_state_count = 5,
	stack_scale = 50,
	stack_size = 500000,
	trade_amount_multiplier = 0,
	visible = false,
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPart = "TorsoLungs",
			BodyPartGroup = "Organs",
			param_bindings = false,
		}),
	},
	AffectedArea = "inside",
	Description = T(244404199397, --[[ModItemHealthCondition immune_gtool Description]] "Are you my mummy? Protects the user from the following: Toxic Cloud Disaster, smoke inhalation, alien plasma inhalation, & glutch based lung damage"),
	DisplayName = T(564892627273, --[[ModItemHealthCondition immune_gtool DisplayName]] "Protected"),
	FloatingTextType = "Display name",
	Incompatible = {
		"ToxicPoisoning",
		"ToxicAir_ShortnessOfBreath",
		"Glutch_LungDamage",
	},
	RemoveStatusEffects = {
		"ToxicAir_ShortnessOfBreath",
		"ToxicPoisoning",
		"Glutch_LungDamage",
	},
	Type = "Buff",
	comment = 'Health condition that makes a player immune to "most" poison things, including the toxic air disaster',
	id = "immune_gtool",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Midnight",
	Delay = 480000,
	Image = "Mod/ucCehPy/Events/ProjectXRelayStation.png",
	NotificationAction = "nothing",
	NotificationExpirationBar = true,
	NotificationRolloverText = T(189997932966, --[[ModItemStoryBit galactican_vassal_upset NotificationRolloverText]] "Please allow the Galactican Authorities to scan your colony for review"),
	NotificationRolloverTitle = T(460044436976, --[[ModItemStoryBit galactican_vassal_upset NotificationRolloverTitle]] "Scanning for contraband"),
	NotificationTitle = T(881149300637, --[[ModItemStoryBit galactican_vassal_upset NotificationTitle]] "Galactican Scan in Progress"),
	Prerequisites = {
		PlaceObj('CheckExpression', {
			EditorViewComment = "Check illegal count",
			Expression = function (self, obj)
				if ( const.Gameplay.x_galactican_rapport -  const.Gameplay.x_black_market_rapport ) < 900 and const.galactical_diplo_state == 1 then 
				  return true
				else
				  return false
				end
			end,
			param_bindings = false,
		}),
		PlaceObj('CheckRandom', {
			Chance = 25,
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Text = T(166266065785, --[[ModItemStoryBit galactican_vassal_upset Text]] '<center><color TextEmphasis>::Incoming Transmission::\n::Transmission Received::</color>\n\nThis is Space Station PX-003, the routine scan of your colony results are ready.\n\nThere are:\n<style TextEmphasis>Traces of Illegal Activity</style>\n\nPlease note that colonies must conform to charter section GR.6.T "Lawful Compliance and Jurisdiction" paragraph 9:\n\nAll colonists still maintain citizenship of the Galactican Empire, and are subject to all rules and regulations applying to any planet classified as a "Core World".\nThe "Colonist" hereby agrees and accepts that the Galactican Empire has complete jurisdiction over their activities on the "Planet".\nDue to logistical concerns, they allow the Empire to conduct "Fair" trials hosted in any "Core World". \n\nPlease note that at this time, PX-003 policy states that this scan will <style TextPositive>not be reported to the empire</style>.\nDue to the success of your colony, we will be providing you methods to show these traces are not systemic.\n\nYour non-standard trade station will be receiving counter-intelligence work items.\nComplete them, and send the counter-intelligence report back to us.\n\nOther methods that show the empire you are loyal citizens are as follows:\n- Donating to other colonies\n- Fueling Empire Factory Worlds by sending component resources\n- Trading for Galactic Armour and Weapons\n- Surviving and culling the aggressive fuana'),
	Title = T(144224258787, --[[ModItemStoryBit galactican_vassal_upset Title]] "Scan results troubling"),
	Trigger = "Midnight",
	UseObjectImage = true,
	comment = "As player pisses off the empire\none-time unlock of hacking black market/spies\nClearly states how to increase rapport",
	id = "galactican_vassal_upset",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Pseudo",
	Image = "Mod/ucCehPy/ProjectXBanner.png",
	NotificationRolloverText = T(382237855882, --[[ModItemStoryBit factions_intro NotificationRolloverText]] "Please allow the Galactican Authorities to scan your colony for review"),
	NotificationRolloverTitle = T(427877034915, --[[ModItemStoryBit factions_intro NotificationRolloverTitle]] "Scanning for contraband"),
	NotificationTitle = T(280323937748, --[[ModItemStoryBit factions_intro NotificationTitle]] "Faction Tutorial!"),
	SelectObject = false,
	Text = T(842714770538, --[[ModItemStoryBit factions_intro Text]] "<style TextPositive>Congratulations!</style>\n\nYou have started to change how a faction see's your colony!\nDisclaimer, this content is still a WiP\n\n<em>Factions can be Allied, Neutral, at War</em>\n\nCertain Recipes, Expeditions, & event selections will change a factions opinion of you.\n<style TextPositive>Faction opinions can be checked in the Signal Relay's \"Factions\"</style>\n\nAllying will enable a faction specific wonder.\nWonders unlocks faction bonuses.\n\nEx. The empire wonder gives:\n- Fast supply drops\n- Special recruitment method\n\n<em>This is the sandbox part in Project-X</em>\nHere are some helpful hints\nFactions are envious & jealous.\nActions may effect multiple factions.\nOpinions can be directly effected by another faction's opinion.\nWonders hurt all other opinions.\n\n<style TextNegative>Attacks sent are strengthened by opinions!\nWoe to those who ignores a faction entirely!</style>"),
	Title = T(485325258245, --[[ModItemStoryBit factions_intro Title]] "Faction Tutorial!"),
	UseObjectImage = true,
	comment = "As player pisses off the empire\none-time unlock of hacking black market/spies\nClearly states how to increase rapport",
	id = "factions_intro",
}),
PlaceObj('ModItemFolder', {
	'name', "Folder ChangeProps",
}, {
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "Trait",
		'TargetId', "FarmingInstructor",
		'TargetProp', "UserTags",
		'TargetValue', set( "Android", "Human", "Robot" ),
		'TargetFunc', function (self, value, default)
			value.Robot = true
		end,
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "Trait",
		'TargetId', "CombatInstructor",
		'TargetProp', "UserTags",
		'TargetValue', set( "Android", "Human", "Robot" ),
		'TargetFunc', function (self, value, default)
			value.Robot = true
		end,
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "Trait",
		'TargetId', "ConstructionInstructor",
		'TargetProp', "UserTags",
		'TargetValue', set( "Android", "Human", "Robot" ),
		'TargetFunc', function (self, value, default)
			value.Robot = true
		end,
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "Trait",
		'TargetId', "CraftingInstructor",
		'TargetProp', "UserTags",
		'TargetValue', set( "Android", "Human", "Robot" ),
		'TargetFunc', function (self, value, default)
			value.Robot = true
		end,
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Skarabei_Manhunting_Starving",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 2000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 0,
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Skarabei",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Skarabei_Manhunting",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Skarabei_Manhunting_Poisonous",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Skarabei_Manhunting_Explosive",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 25000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Skarabei_Manhunting_Brute",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 25000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 2000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "PEx_Skarabei",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "PEx_Skarabei_Brute",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Mutated_PEx_Skarabei_Brute",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 3000,
				'max_amount', 7000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Heavily_Mutated_PEx_Skarabei_Brute",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 8000,
				'max_amount', 15000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Glutch",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Glutch_Manhunting",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Glutch_Stitcher",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Bloated_Glutch",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "BadTrip_Bloated_Glutch",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "BadTrip_Bloated_Glutch_Stitcher",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Dragonfly",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 8000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Frenzied_Dragonfly",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 8000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Frenzied_Bomber_Dragonfly",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 8000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Frenzied_Fortified_Bomber_Dragonfly",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 8000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Fast_Frenzied_Fortified_Bomber_Dragonfly",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 8000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Tecatli",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 20000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "VenomousRaptors",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Entombed_Tecatli",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 20000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Heat_Reinforced_Tecatli",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 20000,
				'max_amount', 30000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Intelligent_Tecatli",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 20000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Spellsword_Tecatli",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 20000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands_Nesting",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 25000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands_Hatchling_Starving",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands_Hatchling_Nesting",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 15000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands_Hatchling",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 15000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 25000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands_Brute",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Scissorhands_Brute_Nesting",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Brutal_Duelist_Scissorhands",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Rage_Fueled_Scissorhand_Duelist",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Rage_Focused_Scissorhands",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Juno",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Juno_Brute",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 75000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Hulk_Juno",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 75000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Too_Angry_Too_Die_Juno",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 75000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Junoskar",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 280000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shrieker_Hatchling",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shrieker_Manhunting_Hatchling",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 5000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shrieker",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 15000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shrieker_Manhunting",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 15000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shrieker_Mother",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shrieker_Manhunting_Mother",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Entropic_Shrieker",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 75000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Plague_Sniper_Shrieker",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 75000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Sniping_Entropy_Shielded_Shrieker",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatInsect",
				'min_amount', 75000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Draka",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Draka_T2",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Draka_T3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Draka_T4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Draka_T5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Camel",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Camel_T2",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Camel_T3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Camel_T4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Camel_T5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "dog_T1",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "dog_T3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Nuedo",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "dog_T4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "dog_T5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Boxer",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "GreatDane",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Weirmaraner",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Gujo",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatPoultry",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "GujoT2",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatPoultry",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "GujoT3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatPoultry",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 6000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "GujoT4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatPoultry",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "GujoT5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeatPoultry",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Toco",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Adricon",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Ulfen",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Ulfen_T2",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Ulfen_T3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Ulfen_T4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Ulfen_T5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 20000,
				'max_amount', 40000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Sintis",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shogu",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shogu_T2",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shogu_T3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "livingMetal",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shogu_T4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Slop",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "livingMetal",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Shogu_T5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "Slop",
				'min_amount', 30000,
				'max_amount', 50000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "livingMetal",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Noth",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Noth_T2",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Noth_T3",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "RawMeat",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "LeatherRaw",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'max_amount', 1000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Noth_T4",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "ScrapMetal",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Metal",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 11000,
				'max_amount', 20000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 2000,
				'max_amount', 4000,
			}),
		},
	}),
	PlaceObj('ModItemChangeProp', {
		'TargetClass', "UnitAnimalCompositeDef",
		'TargetId', "Noth_T5",
		'TargetProp', "ButcherResources",
		'TargetValue', {
			PlaceObj('ButcherResAmount', {
				'resource', "ScrapMetal",
				'min_amount', 40000,
				'max_amount', 60000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Metal",
				'min_amount', 10000,
				'max_amount', 30000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Bitherm",
				'min_amount', 35000,
				'max_amount', 35000,
			}),
			PlaceObj('ButcherResAmount', {
				'resource', "Megdeb",
				'min_amount', 5000,
				'max_amount', 10000,
			}),
		},
	}),
	}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(310735270140, --[[ModItemTech organ_swap Description]] '<color blue>Tier 0 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 3, not Research!</color>\nEach creature has an organ or two that is.... very unique.\nSkin as durable as steel, poison deadlier than the blue-ringed Octopus of Earth, etc....\n\nWhat we have found is that Zancer cells are more prolific in these unique organs.\nWhich leads us to believe that Zancer Cells mutate into these organs, based on the creature!\n\nWe need to learn how the Zancer Cells "know" which organ to turn into.\nOnce we do, we could learn how to convert organs into Zancer Cells, or into other organs....\n\n<color TextEmphasis>Required to unlock next Top Secret Tier</color>\n<style TechSubtitleBlue>Effects:</style>\n   <color TextEmphasis>Dissectory Experiment replaced with gaurunteed Zancer Collection</color>\n   <color TextEmphasis>Distill Zancer or another organ into another organ @Dissectory</color>'),
	DisplayName = T(918975283903, --[[ModItemTech organ_swap DisplayName]] "Organ Swap"),
	Icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_alt.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "livingMetal",
		}),
	},
	ResearchPoints = 240000,
	group = "Nano-Tech",
	id = "organ_swap",
	tradable = false,
	PlaceObj('RemoveLockedState', {
		Class = "Recipe",
		Group = "Workbench",
		LockState = "hidden",
		PresetId = "x_bio_Experiment_fast",
		Reason = "needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Workbench",
		LockState = "hidden",
		PresetId = "x_bio_Experiment",
		Reason = "No longer needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Recipe",
		Group = "Workbench",
		LockState = "hidden",
		PresetId = "x_bio_Experiment_organ",
		Reason = "No longer needed",
	}),
	PlaceObj('SetLockedState', {
		Class = "Tech",
		Group = "Nano-Tech",
		LockState = "hidden",
		PresetId = "AlienCrystal_fake",
	}),
}),
PlaceObj('ModItemTech', {
	Activity = "Biologist",
	Description = T(254426501634, --[[ModItemTech organ_consumes Description]] "<color blue>Tier 1 Top Secret!</color>\n<color TextNegative>Requires Biologist Level 5, not Research!</color>\n\nAdricon has shown to be amazing at triggering a host of behaviors in the local fauna.\nWe must spend time researching and determining how to imbue our colonists with these boosts.\n\nIt will take a non-zero amount of time and resources, but I'm sure we will find a way to make something useful!\n\n<style TechSubtitleBlue>Effects:</style>\n   <color TextEmphasis>New craft menu creating pills that give temporary buffs when consumed</color>"),
	DisplayName = T(932801282973, --[[ModItemTech organ_consumes DisplayName]] "Adricon Pills"),
	Icon = "Mod/ucCehPy/Biologist/new/LivingMetal_icon_alt.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Adricon",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "livingMetal",
			'amount', 5000,
		}),
		PlaceObj('ResAmount', {
			'resource', "non_zancer_organs",
			'amount', 10000,
		}),
	},
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "Adricon",
		}),
	},
	MinSkillLevel = 3,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "organ_swap",
		}),
	},
	ResearchPoints = 400000,
	group = "Nano-Tech",
	id = "organ_consumes",
	tradable = false,
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("Skarabei",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_sca_flag = true
				UnlockedInsectMinions["Skarabei"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/Scarabei.png",
	Text = T(217369955476, --[[ModItemStoryBit AnimalAttack_Init_Skarab Text]] "<color TextEmphasis>A crew member has returned with a scout report that a group of Skarabei are heading this direction. From our studies of this specific species is that it has a tough exo-skeleton that can be difficult to penetrate. We best prepare our defenses. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Swarming Insects.\n\n<color red>Weaknesses:</color>\n- Low Health.\n- Not Intelligent. (0% Chance to Avoid Traps)"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Skarab",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("Glutch_Manhunting",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_glu_flag = true
				UnlockedInsectMinions["Glutch"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/Glutch.png",
	Text = T(941531181165, --[[ModItemStoryBit AnimalAttack_Init_Glutch Text]] "<color TextEmphasis>Some usually passive Glutch's have been driven insane not far from here. We've been observing them for a few days now and they have been behaving in a aggressive manner. Our concern is that they're heading straight towards us. Perhaps our presence has enraged them or they have just been driven mad. Regardless if they continue heading this way we estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Gas/Poison attacks.\n- Radius of 5 Meter Poison Clouds.\n- High defense from poison/gas attacks.\n- Large HP pool\n\n<color red>Weaknesses:</color>\n- Not a Intelligent Species. (0% Chance to avoid traps)\n- Piercing Attacks.\n- Energy Attacks."),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Glutch",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("Dragonfly",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_fly_flag = true
				UnlockedInsectMinions["Dragonfly"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/Dragonflies.png",
	Text = T(474798589520, --[[ModItemStoryBit AnimalAttack_Init_Dragonfly Text]] "<color TextEmphasis>A swarm of flying insects are heading this way, though they don't appear to be much of a threat but they definitely can pose a risk to our defenses. We best get some air defense as our walls are not going to do much. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Can fly over walls.\n- Swarming Insects.\n\n<color red>Weaknesses:</color>\n- Low Health.\n- Not Intelligent. (0% Chance to Avoid Traps)\n- Weak to all elements."),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Dragonfly",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("Juno",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_jun_flag = true
				UnlockedInsectMinions["Juno"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/Juno.png",
	Text = T(760361282486, --[[ModItemStoryBit AnimalAttack_Init_Juno Text]] "<color TextEmphasis>One of our sensors have been triggered far North from here, it appears to be Juno readings. We should prepare some kind've gas or poisonous defense and utilize as much range as we can, these things are vicious if they get close. Hopefully they dont come this way. Regardless if they continue heading this way we estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Genus is largely offensive focused.\n- Deep lacerating melee strikes.\n\n<color red>Weaknesses:</color>\n- Non-health damage (Consciousness, bleeding, slowing/stunning)"),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Juno",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("VenomousRaptors",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_tec_flag = true
				UnlockedInsectMinions["Tecatli"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/VenomRaptor.png",
	Text = T(147379393600, --[[ModItemStoryBit AnimalAttack_Init_Tecatli Text]] "<color TextEmphasis>Warning, Tecatli are migrating. Galactican reports state that when migrating, they attempt to destroy any competitor Genus. Based on how most other species are viewing us as hostile invaders, we must assume the Tecatli will as well.</color>\n\n<color blue>Strengths:</color>\n- Smarter than most species (Trap Avoidance)\n- Pack Creatures\n\n<color red>Weaknesses:</color>\n- Weak against Piercing and Blunt attacks."),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Tecatli",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("Scissorhands_Hatchling",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_sci_flag = true
				UnlockedInsectMinions["Scissorhands"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Events/Scissorhands.png",
	Text = T(641426901126, --[[ModItemStoryBit AnimalAttack_Init_Scissor Text]] "<color TextEmphasis>Disgusting! A bunch of them Scissorhand insects are heading this direction. We need to prepare some defense because I'm not becoming an insects meal tonight! Thankfully they seem rather small. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Strengths:</color>\n- Sharp hands that can cut and pierce deeply.\n- Enrage multiple nearby insects.\n\n<color red>Weaknesses:</color>\n- Not a Intelligent Species. (0% Chance to avoid traps)\n- Weak against Piercing and Gas attacks."),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Scissor",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	Category = "AttackSpawns",
	Effects = {
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade("Shrieker_Manhunting_Hatchling",{},50)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 50,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				const.Gameplay.atk_shr_flag = true
				UnlockedInsectMinions["Shrieker"] = true
			end,
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "NewInsectSpeciesUnlock",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ShriekerAttack.png",
	Text = T(881422436433, --[[ModItemStoryBit AnimalAttack_Init_Shriek Text]] "<color TextEmphasis>A crew member has returned with a scout report that a group of Shrieker's are coming this direction. From our studies of this specific group species is that they have two types of attacks, one being melee the other range. They use long tails that can fabricate spikes and launch them a good twenty meters. Shrieker's are not something we should simply brush off and we definitely need to prepare some form of defense if they steer this way. We estimated that they could take (12 Hours) to reach us.</color>\n\n<color blue>Species Knowledge:</color>\n- Utilizes Ranged and Melee attacks.\n- Durable Chitin Shell, Special Adrenaline based Aura.\n\n<color red>Weaknesses:</color>\n- Weak to Gas/Poison.\n- Weak to Pacify attacks.\n- Weak to Energy attacks."),
	group = "AttackControllers_Spawners",
	id = "AnimalAttack_Init_Shriek",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Jul-07\nModified by Ivan on 2022-Aug-02",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario" ),
	Category = "Attacks",
	Effects = {
		PlaceObj('StoryBitActivateRandom', {
			StoryBits = {
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Skarab",
					'NoCooldown', true,
					'Weight', 200,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Glutch",
					'NoCooldown', true,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Dragonfly",
					'NoCooldown', true,
					'Weight', 50,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Scissor",
					'NoCooldown', true,
					'Weight', 50,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Tecatli",
					'NoCooldown', true,
					'Weight', 50,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Juno",
					'NoCooldown', true,
					'Weight', 10,
				}),
				PlaceObj('StoryBitWithWeight', {
					'StoryBitId', "AnimalAttack_Init_Shriek",
					'NoCooldown', true,
					'Weight', 10,
				}),
			},
			param_bindings = false,
		}),
		PlaceObj('SetCooldownEffect', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckGameRule', {
			Negate = true,
			Rule = "PeacefulMode",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('CheckExpression', {
			EditorViewComment = "at least 1 init left",
			Expression = function (self, obj)
				if (not UnlockedInsectMinions["Dragonfly"])
				    or (not UnlockedInsectMinions["Juno"])
				    or (not UnlockedInsectMinions["Scissorhands"])
					or (not UnlockedInsectMinions["Skarabei"])
					or (not UnlockedInsectMinions["Glutch"])
					or (not UnlockedInsectMinions["Shrieker"])
					or (not UnlockedInsectMinions["Tecatli"]) then 
				return true 
				else
				return false
				end
			end,
			param_bindings = false,
		}),
	},
	Sets = set( "Attack" ),
	group = "AttackControllers",
	id = "AnimalAttack_Controller_Init_ProjectX",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Vihar on 2022-May-23\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Oct-20\nModified by Ivan on 2023-Feb-14",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario" ),
	Category = "Attacks",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				print("New Attack Wave")
				--[[instance.SpawnClass = minion
				if boss1 then
					instance.AdditionalClassList = {
						{ boss1, AnimalDefs[boss1]:GetProperty("SpawnDefWeight") },
						{ boss2, AnimalDefs[boss2]:GetProperty("SpawnDefWeight") }
					}
				]]
				local seed = InteractionRand(nil, "AttackWave")
				local rand = BraidRandomCreate(seed)
				local species = {"PEx_Skarabei",
					"Glutch_Manhunting",
					"Juno",
					"Entombed_Tecatli",
					"Frenzied_Dragonfly",
					"Shrieker_Manhunting",
					"Scissorhands"}
				local minion = table.rand(species, rand())
				print("Checking for overrides")
				if table.find(MapVars,'animal_override') then
					print("animal override MapVar found")
					if animal_override then
						minion = animal_override
						animal_override = false
						print("Override detected & reset, new base animal: ",minion)
					end
				end
				if table.find(MapVars,'animal_override_attempted') then
					print("animal override attempted MapVar found")
					animal_override_attempted = false
					print("Player can now try and influence the next wave")
				end
				species[#species+1]="dog_T3"
				local minion2 = table.rand(species, rand())
				while minion2 == minion do
					minion2 = table.rand(species, rand())
				end
				local minion3 = table.rand(species, rand())
				while minion3 == minion or minion3 == minion2 do
					minion3 = table.rand(species,rand())
				end
				local temp_list = {}
				print("Main Animal: ",minion)
				print('Added Animal 1: ',minion2)
				print('Added Animal 2: ',minion3)
				temp_list[1]={ minion2, AnimalDefs[minion2]:GetProperty("SpawnDefWeight")}
				temp_list[2]={ minion3, AnimalDefs[minion3]:GetProperty("SpawnDefWeight")}
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade(minion,temp_list)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXRelay.png",
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckGameRule', {
			Negate = true,
			Rule = "PeacefulMode",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('CheckExpression', {
			EditorViewComment = "all init attacks complete",
			Expression = function (self, obj)
				if UnlockedInsectMinions["Dragonfly"]
				    and UnlockedInsectMinions["Juno"]
				    and UnlockedInsectMinions["Scissorhands"]
					and UnlockedInsectMinions["Skarabei"]
					and UnlockedInsectMinions["Glutch"]
					and UnlockedInsectMinions["Shrieker"]
					and UnlockedInsectMinions["Tecatli"] then 
				return true 
				else
				return false
				end
			end,
			param_bindings = false,
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 0,
			Condition = "==",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
					param_bindings = false,
				}),
				PlaceObj('CheckIsDeviceWorking', {
					param_bindings = false,
				}),
			},
			Label = "Buildings",
			param_bindings = false,
		}),
	},
	SelectObject = false,
	Sets = set( "Attack" ),
	Text = T(562335939642, --[[ModItemStoryBit AnimalAttack_Controller_earlyAll_ProjectX Text]] "The attacks are intensifying!\nThe creatures of this planet are coordinating!\n\nThey are now marching on our position, and will be attacking in 12 hours!"),
	Title = T(296463470899, --[[ModItemStoryBit AnimalAttack_Controller_earlyAll_ProjectX Title]] "Scout Report: Attack Incoming"),
	group = "AttackControllers",
	id = "AnimalAttack_Controller_earlyAll_ProjectX",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Vihar on 2022-May-23\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Oct-20\nModified by Ivan on 2023-Feb-14",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario" ),
	Category = "Attacks",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				print("New Attack Wave")
				--[[instance.SpawnClass = minion
				if boss1 then
					instance.AdditionalClassList = {
						{ boss1, AnimalDefs[boss1]:GetProperty("SpawnDefWeight") },
						{ boss2, AnimalDefs[boss2]:GetProperty("SpawnDefWeight") }
					}
				]]
				local seed = InteractionRand(nil, "AttackWave")
				local rand = BraidRandomCreate(seed)
				local species = {"PEx_Skarabei_Brute",
					"Glutch_Stitcher",
					"Juno_Brute",
					"Heat_Reinforced_Tecatli",
					"Frenzied_Bomber_Dragonfly",
					"Shrieker_Manhunting_Mother",
					"Scissorhands_Brute"}
				local minion = table.rand(species, rand())
				print("Checking for overrides")
				if table.find(MapVars,'animal_override') then
					print("animal override MapVar found")
					if animal_override then
						minion = animal_override
						animal_override = false
						print("Override detected & reset, new base animal: ",minion)
					end
				end
				if table.find(MapVars,'animal_override_attempted') then
					print("animal override attempted MapVar found")
					animal_override_attempted = false
					print("Player can now try and influence the next wave")
				end
				species[#species+1]="dog_T3"
				local minion2 = table.rand(species, rand())
				while minion2 == minion do
					minion2 = table.rand(species, rand())
				end
				local minion3 = table.rand(species, rand())
				while minion3 == minion or minion3 == minion2 do
					minion3 = table.rand(species,rand())
				end
				local temp_list = {}
				print("Main Animal: ",minion)
				print('Added Animal 1: ',minion2)
				print('Added Animal 2: ',minion3)
				temp_list[1]={ minion2, AnimalDefs[minion2]:GetProperty("SpawnDefWeight")}
				temp_list[2]={ minion3, AnimalDefs[minion3]:GetProperty("SpawnDefWeight")}
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade(minion,temp_list)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXExpeditionCrew.png",
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckGameRule', {
			Negate = true,
			Rule = "PeacefulMode",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('CheckExpression', {
			EditorViewComment = "all init attacks complete",
			Expression = function (self, obj)
				if UnlockedInsectMinions["Dragonfly"]
				    and UnlockedInsectMinions["Juno"]
				    and UnlockedInsectMinions["Scissorhands"]
					and UnlockedInsectMinions["Skarabei"]
					and UnlockedInsectMinions["Glutch"]
					and UnlockedInsectMinions["Shrieker"]
					and UnlockedInsectMinions["Tecatli"] then 
				return true 
				else
				return false
				end
			end,
			param_bindings = false,
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 1,
			Condition = "==",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
					param_bindings = false,
				}),
				PlaceObj('CheckIsDeviceWorking', {
					param_bindings = false,
				}),
			},
			Label = "Buildings",
			param_bindings = false,
		}),
	},
	Sets = set( "Attack" ),
	Text = T(377990556962, --[[ModItemStoryBit AnimalAttack_Controller_sig1_ProjectX Text]] "Our signal relays have slowly caused all creatures to become single-minded.\nSpecifically to try and destroy our burgeoning colony!\n\nPrepare our defenses, because they will be attacking in 12 hours!"),
	Title = T(574513985571, --[[ModItemStoryBit AnimalAttack_Controller_sig1_ProjectX Title]] "Scout Report: Attack Incoming"),
	group = "AttackControllers",
	id = "AnimalAttack_Controller_sig1_ProjectX",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Vihar on 2022-May-23\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Oct-20\nModified by Ivan on 2023-Feb-14",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	AllowedInScenarios = set( "ProjectXScenario" ),
	Category = "Attacks",
	Effects = {
		PlaceObj('SetCooldownEffect', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('ActivateSpawnDef', {
			CreateInstance = true,
			FillInstance = function (self, instance)
				print("New Attack Wave")
				--[[instance.SpawnClass = minion
				if boss1 then
					instance.AdditionalClassList = {
						{ boss1, AnimalDefs[boss1]:GetProperty("SpawnDefWeight") },
						{ boss2, AnimalDefs[boss2]:GetProperty("SpawnDefWeight") }
					}
				]]
				local seed = InteractionRand(nil, "AttackWave")
				local rand = BraidRandomCreate(seed)
				local species = {"Mutated_PEx_Skarabei_Brute",
					"Bloated_Glutch",
					"Angry_Juno",
					"Intelligent_Tecatli",
					"Frenzied_Fortified_Bomber_Dragonfly",
					"Entropic_Shrieker",
					"Rage_Fueled_Scissorhand_Duelist"}
				local minion = table.rand(species, rand())
				print("Checking for overrides")
				if table.find(MapVars,'animal_override') then
					print("animal override MapVar found")
					if animal_override then
						minion = animal_override
						animal_override = false
						print("Override detected & reset, new base animal: ",minion)
					end
				end
				if table.find(MapVars,'animal_override_attempted') then
					print("animal override attempted MapVar found")
					animal_override_attempted = false
					print("Player can now try and influence the next wave")
				end
				species[#species+1]="dog_T4"
				local minion2 = table.rand(species, rand())
				while minion2 == minion do
					minion2 = table.rand(species, rand())
				end
				local minion3 = table.rand(species, rand())
				while minion3 == minion or minion3 == minion2 do
					minion3 = table.rand(species,rand())
				end
				local temp_list = {}
				print("Main Animal: ",minion)
				print('Added Animal 1: ',minion2)
				print('Added Animal 2: ',minion3)
				temp_list[1]={ minion2, AnimalDefs[minion2]:GetProperty("SpawnDefWeight")}
				temp_list[2]={ minion3, AnimalDefs[minion3]:GetProperty("SpawnDefWeight")}
				local spawnClassBest = ''
				local addedClassList = {}
				spawnClassBest, addedClassList =check_count_and_upgrade(minion,temp_list)
				instance.SpawnClass = spawnClassBest
				instance.AdditionalClassList = {}
				print(spawnClassBest)
				print(addedClassList)
				for i=1,#addedClassList do
					instance.AdditionalClassList[#instance.AdditionalClassList+1] ={addedClassList[i]['id'], addedClassList[i]['weight']}
				end
			end,
			ProgressMul = 150,
			SpawnDefId = "ProjectX_Attack",
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXExpeditionCrew.png",
	OneTime = false,
	Prerequisites = {
		PlaceObj('CheckGameRule', {
			Negate = true,
			Rule = "PeacefulMode",
			param_bindings = false,
		}),
		PlaceObj('CheckCooldown', {
			Cooldown = "MinTimeBetweenAttacks",
			param_bindings = false,
		}),
		PlaceObj('CheckExpression', {
			EditorViewComment = "all init attacks complete",
			Expression = function (self, obj)
				if UnlockedInsectMinions["Dragonfly"]
				    and UnlockedInsectMinions["Juno"]
				    and UnlockedInsectMinions["Scissorhands"]
					and UnlockedInsectMinions["Skarabei"]
					and UnlockedInsectMinions["Glutch"]
					and UnlockedInsectMinions["Shrieker"]
					and UnlockedInsectMinions["Tecatli"] then 
				return true 
				else
				end
				return false
			end,
			param_bindings = false,
		}),
		PlaceObj('CheckObjectCount', {
			Amount = 2,
			Condition = ">=",
			Filters = {
				PlaceObj('IsBuildingClass', {
					BuildingClass = "ProjectX_start",
					param_bindings = false,
				}),
				PlaceObj('CheckIsDeviceWorking', {
					param_bindings = false,
				}),
			},
			Label = "Buildings",
			param_bindings = false,
		}),
	},
	Sets = set( "Attack" ),
	Text = T(677977257853, --[[ModItemStoryBit AnimalAttack_Controller_sig2_ProjectX Text]] "Our signal relays have slowly caused all creatures to become single-minded.\nSpecifically to try and destroy our burgeoning colony!\n\nPrepare our defenses, because they will be attacking in 12 hours!"),
	Title = T(818768410314, --[[ModItemStoryBit AnimalAttack_Controller_sig2_ProjectX Title]] "Scout Report: Attack Incoming"),
	group = "AttackControllers",
	id = "AnimalAttack_Controller_sig2_ProjectX",
	max_reply_id = 2,
	qa_info = PlaceObj('PresetQAInfo', {
		Log = "Modified by Ivan on 2021-Feb-25\nModified by Ivan on 2021-Mar-02\nModified by Gaby on 2021-Mar-25\nModified by Ivan on 2021-Apr-13\nModified by Ivan on 2021-May-10\nModified by Ivan on 2021-Jun-07\nModified by Ivan on 2021-Aug-10\nModified by Gaby on 2021-Sep-24\nModified by Gaby on 2021-Sep-28\nModified by Ivan on 2021-Nov-03\nModified by Gaby on 2021-Nov-08\nModified by Ivan on 2022-Mar-08\nModified by Ivan on 2022-Apr-06\nModified by Ivan on 2022-May-21\nModified by Vihar on 2022-May-23\nModified by Ivan on 2022-May-23\nModified by Ivan on 2022-May-30\nModified by Ivan on 2022-Jul-04\nModified by Ivan on 2022-Oct-20\nModified by Ivan on 2023-Feb-14",
		param_bindings = false,
	}),
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "CyberProcessor",
			'amount', range(1000, 1000),
		}),
		PlaceObj('ResAmountRange', {
			'resource', "Metal",
			'amount', range(50000, 50000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(541722174957, --[[ModItemResource CyberCore description]] "Cyber Core's are the culmination of cyber technology, unlocking the most complicated Cyber tech!"),
	display_name = T(805301384417, --[[ModItemResource CyberCore display_name]] "Cyber Core"),
	display_name_pl = T(722427751481, --[[ModItemResource CyberCore display_name_pl]] "Cyber Core's"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/CyberCoreMedium.png",
	id = "CyberCore",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 1130000000,
	progress = 50000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "PowerCell",
			'amount', range(3000, 3000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/CyberCrystal.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(902597136706, --[[ModItemResource CyberCrystal description]] "A newly discovered resource, the foundation of the Galactican Empire's power."),
	display_name = T(289613381541, --[[ModItemResource CyberCrystal display_name]] "Cyber Crystal"),
	display_name_pl = T(457931694218, --[[ModItemResource CyberCrystal display_name_pl]] "Cyber Crystal's"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/CyberCrystalMedium.png",
	id = "CyberCrystal",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 1130000000,
	progress = 50000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "CyberCrystal",
			'amount', range(1000, 1000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/CyberProcessor.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(705688010653, --[[ModItemResource CyberProcessor description]] "Cyber Crystals and electronics are better than Carbon based components!"),
	display_name = T(678392862053, --[[ModItemResource CyberProcessor display_name]] "Cyber Processor"),
	display_name_pl = T(540596275941, --[[ModItemResource CyberProcessor display_name_pl]] "Cyber Processor's"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/CyberProcessorMedium.png",
	id = "CyberProcessor",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 85000000,
	progress = 50000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "livingMetal",
			'amount', range(12000, 12000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/AlienCrystal.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(355248150133, --[[ModItemResource AlienCrystal description]] "Pure Crystalized Zancer!"),
	display_name = T(559703714503, --[[ModItemResource AlienCrystal display_name]] "Alien Crystal"),
	display_name_pl = T(600123808812, --[[ModItemResource AlienCrystal display_name_pl]] "Alien Crystal's"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/AlienCrystalSmall.png",
	id = "AlienCrystal",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 6150000000,
	progress = 200000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "livingMetal",
			'amount', range(8000, 8000),
		}),
		PlaceObj('ResAmountRange', {
			'resource', "ScrapElectronics",
			'amount', range(1000, 1000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/AlienElectronics.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(784766617489, --[[ModItemResource AlienElectronics description]] "Zancer infused Electronics for higher voltages in our tech"),
	display_name = T(624455259205, --[[ModItemResource AlienElectronics display_name]] "Alien Electronics"),
	display_name_pl = T(920045683222, --[[ModItemResource AlienElectronics display_name_pl]] "Alien Electronics"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/AlienElectronicsMedium.png",
	id = "AlienElectronics",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 660000000,
	progress = 200000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "livingMetal",
			'amount', range(15000, 15000),
		}),
		PlaceObj('ResAmountRange', {
			'resource', "AlienElectronics",
			'amount', range(1000, 1000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/AlienProcessor.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(420233381495, --[[ModItemResource AlienProcessor description]] "Added logic abilities for complex creations"),
	display_name = T(200996140134, --[[ModItemResource AlienProcessor display_name]] "Alien Processor"),
	display_name_pl = T(132270855411, --[[ModItemResource AlienProcessor display_name_pl]] "Alien Processors"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/AlienProcessorMedium.png",
	id = "AlienProcessor",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 6100000000,
	progress = 200000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "livingMetal",
			'amount', range(30000, 30000),
		}),
		PlaceObj('ResAmountRange', {
			'resource', "ScrapElectronics",
			'amount', range(3000, 3000),
		}),
		PlaceObj('ResAmountRange', {
			'resource', "EnergyCrystals",
			'amount', range(10000, 10000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/AlienCore.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 150,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(308453550100, --[[ModItemResource AlienCore description]] "The pinnacle of technology! As close to a brain without consciousness we can achieve."),
	display_name = T(868992337784, --[[ModItemResource AlienCore display_name]] "Alien Core"),
	display_name_pl = T(137010524874, --[[ModItemResource AlienCore display_name_pl]] "Alien Cores"),
	group = "ElectronicComponents",
	icon = "Mod/ucCehPy/CriminalActivity/AlienCoreMedium.png",
	id = "AlienCore",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 6200000000,
	progress = 450000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemResource', {
	DecayRateOutside = 174,
	DecayTimeOutside = 23040000,
	LockState = "hidden",
	MinStorageCondition = 2,
	ShowDiscoveryNotification = false,
	alt_icon = "Mod/ucCehPy/CriminalActivity/AlienBlueprint.png",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 300000,
	carry_entity = "ResourceBulk_SmallBox",
	carry_rotation = 5400,
	carry_scale = 50,
	carry_spot = "Tool",
	carry_type = "HandsClose",
	description = T(501227030587, --[[ModItemResource AlienBlueprint description]] "Political Secrets that could disrupt Galactican Politics? Proof a long-dead cult has arisen and trying to conquer the empire? Who knows!"),
	display_name = T(818913155922, --[[ModItemResource AlienBlueprint display_name]] "Political Secret"),
	display_name_pl = T(177353670533, --[[ModItemResource AlienBlueprint display_name_pl]] "Political Secret"),
	group = "OtherItems",
	icon = "Mod/ucCehPy/CriminalActivity/AlienBlueprint_Small.png",
	id = "AlienBlueprint",
	in_groups = {
		"BlueprintsInfoPanel",
	},
	money_value = 20000000,
	progress = 10000,
	stack_entity = "ResourceBulk_SmallBox",
	stack_idle_state_count = 2,
	stack_scale = 150,
	visible = false,
}),
PlaceObj('ModItemChangeProp', {
	'TargetClass', "ActivitySet",
	'TargetId', "Work",
	'TargetProp', "Activities",
	'EditType', "Code",
	'TargetFunc', function (self, value, default)
		value.Hacking=true
		value.Trade=true
		value.Biologist=true
		return value
	end,
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			param_bindings = false,
		}),
	},
	BleedingModifier = 10000,
	Description = T(758240736077, --[[ModItemHealthCondition ZancerConversion Description]] "This creature has had Zancer cells forcibly injected, and they are fighting the host's body!"),
	DisplayName = T(905903732937, --[[ModItemHealthCondition ZancerConversion DisplayName]] "Zancer Damage"),
	HealthLoss = 1000,
	PainModifier = 25000,
	StackLimit = 10,
	Type = "Injury",
	group = "PROJECTX",
	id = "ZancerConversion",
}),
PlaceObj('ModItemHappinessFactor', {
	Description = T(763971250229, --[[ModItemHappinessFactor zancer_whispers_1 Description]] "My skin is tingling where it touches those zancer organs...."),
	DisplayName = T(249801211222, --[[ModItemHappinessFactor zancer_whispers_1 DisplayName]] "Touching Living Organs"),
	Happiness = -20,
	StackLimit = 4,
	group = "PROJECTX",
	id = "zancer_whispers_1",
}),
PlaceObj('ModItemTrait', {
	Description = T(292677274860, --[[ModItemTrait Zancer_Touched Description]] "This colonist has had a very high level of Zancer Exposure. Who knows what this means?!?"),
	DisplayName = T(688672666875, --[[ModItemTrait Zancer_Touched DisplayName |gender-variants]] "Zancer Touched"),
	id = "Zancer_Touched",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			param_bindings = false,
		}),
	},
	BleedingModifier = 20000,
	ConsciousnessModifier = 20000,
	Description = T(458198804383, --[[ModItemHealthCondition toco_damage Description]] "Exposed to extremely potent chemicals, quickly disintegrating the poor soul effected."),
	DisplayName = T(423380704648, --[[ModItemHealthCondition toco_damage DisplayName]] "Toco Corrosion"),
	DisplayNameTreatment = T(496502748815, --[[ModItemHealthCondition toco_damage DisplayNameTreatment]] "Stabilizing Chemical"),
	LifeTreatening = true,
	TreatmentMaxSkillLevel = 8,
	TreatmentMedicineAmount = 1000,
	TreatmentMedicineResource = "MedHealingBalm",
	TreatmentMinSkillLevel = 2,
	TreatmentStatus = "requires treatment",
	Type = "Injury",
	id = "toco_damage",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPartGroup = "WholeBody",
			param_bindings = false,
		}),
	},
	BleedingModifier = 10000,
	DirtinessModifier = 5000,
	DirtinessTarget = "WholeBody",
	DisplayName = T(923360819907, --[[ModItemHealthCondition Shrieker_spike_heated DisplayName]] "Superheated Spike Puncture"),
	HealthLoss = 35000,
	ManipulationModifierOpt = -10000,
	MovementModifierOpt = -10000,
	PainModifier = 8000,
	id = "Shrieker_spike_heated",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPartGroup = "WholeBody",
			param_bindings = false,
		}),
	},
	BleedingModifier = 20000,
	DirtinessModifier = 5000,
	DirtinessTarget = "WholeBody",
	DisplayName = T(165073016147, --[[ModItemHealthCondition Shrieker_spike_heated_crit DisplayName]] "Superheated Spike Critical Puncture"),
	HealthLoss = 70000,
	ManipulationModifierOpt = -20000,
	MovementModifierOpt = -20000,
	PainModifier = 20000,
	id = "Shrieker_spike_heated_crit",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPartGroup = "WholeBody",
			param_bindings = false,
		}),
	},
	AffectedArea = "outline",
	BleedingModifier = 10000,
	Description = T(313021761577, --[[ModItemHealthCondition SintisShard Description]] "Sintis created shards are continuing to pierce this characters dermis!"),
	DisplayName = T(584427050581, --[[ModItemHealthCondition SintisShard DisplayName]] "Slicing Shards"),
	DisplayNameAndroid = T(835462864705, --[[ModItemHealthCondition SintisShard DisplayNameAndroid]] "Slicing Shards"),
	Expiration = true,
	ExpirationTime = 20000,
	Type = "Injury",
	id = "SintisShard",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPart = "All",
			BodyPartGroup = "WholeBody",
			param_bindings = false,
		}),
	},
	BleedingModifier = 10000,
	Description = T(417943114762, --[[ModItemHealthCondition BithermAura Description]] "A nearby droid with Bitherm installed is making the temperature easier to tolerate!"),
	DisplayName = T(540870716014, --[[ModItemHealthCondition BithermAura DisplayName]] "Bitherm Temperature Control"),
	DisplayNameAndroid = T(983937278579, --[[ModItemHealthCondition BithermAura DisplayNameAndroid]] "Bitherm Temperature Control"),
	Expiration = true,
	ExpirationTime = 20000,
	FloatingTextType = "Display name",
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_ntHurMs",
			add = 40000,
			param_bindings = false,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -40000,
			param_bindings = false,
			prop = "TemperatureLow",
		}),
	},
	Type = "Buff",
	id = "BithermAura",
}),
PlaceObj('ModItemWeaponResource', {
	AnimTestEntity = "HumanMale",
	AreaOfEffect = 30000,
	AttackAngleTolerance = 420,
	AttackAnim = "pain",
	AttackMoments = {
		"start",
	},
	CritChance = 0,
	CritChanceMaxSkill = 0,
	CritHitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "SintisShard",
		}),
	},
	DamageToBuildings = 5000,
	DamageTypes = {
		piercing = true,
	},
	DefaultHitEffect = {
		PlaceObj('UnitTagHealthConditionId', {
			'health_condition', "SintisShard",
		}),
	},
	FriendlyFire = false,
	HitChance = 100,
	HitChanceMaxSkill = 100,
	HitEffect = {
		PlaceObj('HealthConditionOption', {
			effect = "SintisShard",
		}),
	},
	ProjectileEntity = "Shrieker_Projectile",
	ProjectileGravity = true,
	ProjectileSpeed = 20000,
	ProjectileSpeedRand = 10000,
	ProjectileSpot = "Muzzle",
	ScaleDamageWithUnit = false,
	ScaleRangeWithUnit = false,
	SortKey = 99990,
	TriggerResponse = false,
	carry_amount = 0,
	description = T(109913859155, --[[ModItemWeaponResource SintisPulse description]] "A Sintis Spike thrown from a droid, impaled in an enemy"),
	display_name = T(680860620835, --[[ModItemWeaponResource SintisPulse display_name]] "Sintis Spike Wound"),
	display_name_pl = T(525498653778, --[[ModItemWeaponResource SintisPulse display_name_pl]] "Sintis Spike"),
	id = "SintisPulse",
	progress = 0,
	stack_size = 0,
	transportable = false,
	visible = false,
}),
PlaceObj('ModItemStoryBit', {
	Prerequisites = {
		PlaceObj('CheckExpression', {
			Expression = function (self, obj)
				local count = 0
				for _, v in ipairs(AllSurvivors) do
					for _, t in ipairs(v['traits']) do
						if t == "baseDroid" then
							count = count + 1
						end
					end
				end
				local needed = (count+1) * 5
				print("I need to see ",needed," repair kits!")
				local actual = UIPlayer:GetSuppliedResAmount("PX_droidRepair") / 1000
				print("There are ",actual," repair kits in the colony atm")
				if needed > actual then
					return false
				else
					return true
				end
			end,
			param_bindings = false,
		}),
	},
	comment = "Logic checking # of survivors with trait and requiring a resource to be higher than that # (edited to scale)",
	id = "testStoryBit",
}),
PlaceObj('ModItemTrait', {
	Description = T(124923972346, --[[ModItemTrait baseDroid Description]] "Droids are always working, but limited by their programming and this planet is particularly hostile to them. Each is built with one or more components."),
	DisplayName = T(848136634650, --[[ModItemTrait baseDroid DisplayName |gender-variants]] "Galactican Droid"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -9999999,
			add_max = 100,
			add_min = 100,
			prop = "HungryThreshold",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -9999999000,
			add_max = 100000,
			add_min = 100000,
			prop = "SleepTiredThreshold",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 0,
			prop = "EnergyUsePerDay",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			mul = 0,
			prop = "FatiguePerDay",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 150000,
			prop = "MaxHealth",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -1000000,
			prop = "Pain",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = 200000,
			prop = "TemperatureHigh",
		}),
		PlaceObj('ModifyHuman', {
			Id = "",
			add = -200000,
			prop = "TemperatureLow",
		}),
		PlaceObj('ModifyHuman', {
			add = 2,
			prop = "BreakdownChanceHourlyDecrease",
		}),
		PlaceObj('AddHappinessFactorEffect', {
			HappinessFactor = "RobotHappiness",
			Id = "autoid_ucCehPy_PFWwpdu",
		}),
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_prqU3tD",
			mul = 333,
			prop = "SkillLearning",
		}),
	},
	OnAddTrait = function (self, unit)
		print("Trying to do Droid Rework to this robit!")
		unit:SetTrait("BudgetDroidPX", false)
		unit:SetTrait("AI", false)
		unit:SetTrait("EmoStable", false)
		unit:SetTrait("Cybernetic", false)
		unit:SetTrait("Machine", false)
		unit:SetTrait("TemperatureControlUnit", false)
		unit:SetTrait("OutdatedMaintenance", false)
		unit:SetTrait("OutdatedSoftware", false)
		unit:SetTrait("DroidTrade", false)
		unit:AddHealthCondition("DroidDegradation")
	end,
	OnRemoveTrait = function (self, unit)
		unit:RemoveModifier("Degradation", "Bleeding")
	end,
	UserTags = set( "Robot" ),
	group = "PROJECTX",
	id = "baseDroid",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPart = "All",
			param_bindings = false,
		}),
	},
	BleedingModifier = 10000,
	DisplayName = T(733223336998, --[[ModItemHealthCondition DroidDegradation DisplayName]] "Degradation"),
	DisplayNameAndroid = T(278972809243, --[[ModItemHealthCondition DroidDegradation DisplayNameAndroid]] "Degradation"),
	DisplayNameTreatment = T(767654046981, --[[ModItemHealthCondition DroidDegradation DisplayNameTreatment]] "Repairing to Full"),
	MistreatmentChance = 100,
	MistreatmentCond = {
		PlaceObj('HealthConditionOption', {
			effect = "DroidDegradation",
			param_bindings = false,
		}),
	},
	OnAdd = function (self, owner, ...)
		owner.Health = owner.MaxHealth
	end,
	StackLimit = 1,
	TreatmentDuration = 40000,
	TreatmentMaxSkillLevel = 11,
	TreatmentMedicineAmount = 5000,
	TreatmentMedicineResource = "PX_droidRepair",
	TreatmentMedicineResourceAlt = "AndroidMedicine",
	TreatmentStatus = "requires treatment",
	Type = "Debuff",
	UnitTags = set( "Robot" ),
	id = "DroidDegradation",
}),
PlaceObj('ModItemHappinessFactor', {
	Description = T(962645161790, --[[ModItemHappinessFactor RobotHappiness Description]] "Unable to feel negative or positive emotions."),
	DisplayName = T(537299407350, --[[ModItemHappinessFactor RobotHappiness DisplayName]] "Mood Stabilizers"),
	Happiness = 75,
	ShockHappiness = 75,
	UnitTags = set( "Robot" ),
	id = "RobotHappiness",
}),
PlaceObj('ModItemCode', {
	'CodeFileName', "Code/Script.lua",
}),
PlaceObj('ModItemResource', {
	ConsumerTags = set( "Robot" ),
	DecayRateOutside = 87,
	DecayTimeOutside = 46080000,
	DismantleResources = {
		PlaceObj('ResAmountRange', {
			'resource', "ScrapMetal",
			'amount', range(2000, 5000),
		}),
		PlaceObj('ResAmountRange', {
			'resource', "Silicon",
			'amount', range(0, 2000),
		}),
	},
	LockState = "hidden",
	MinStorageCondition = 2,
	SortKey = 560,
	alt_icon = "UI/Icons/Items/spare_parts",
	anim_pile_load = "standing_PickUp_HandsClose",
	anim_pile_unload = "standing_DropDown_HandsClose_High",
	carry_amount = 50000,
	carry_entity = "ResourceBulk_Electronics",
	carry_spot = "Tool",
	carry_type = "HandsClose",
	consumption_type = "AndroidEat",
	description = T(108958222765, --[[ModItemResource PX_droidRepair description]] "Spare parts used for repairing droids"),
	display_name = T(928604309124, --[[ModItemResource PX_droidRepair display_name]] "Droid Repair Parts"),
	group = "ElectronicComponents",
	icon = "UI/Icons/Resources/res_spare_parts",
	id = "PX_droidRepair",
	in_groups = {
		"ElectronicComponents",
		"Construction",
	},
	money_value = 1750000,
	progress = 10000,
	stack_entity = "ResourceBulk_Electronics",
	stack_idle_state_count = 5,
	stack_size = 25000,
	use_unfinished_item = "UnfinishedComponent",
	visible = false,
}),
PlaceObj('ModItemRecipe', {
	Activity = "Crafting",
	ActivityDuration = 40000,
	ActivityXPGrade = "Crafting_Low",
	ApplyResRequirements = false,
	BuildCategory = "CraftResources",
	Description = T(668492311166, --[[ModItemRecipe PX_recipe_droidrepair Description]] "Build some repair parts to sustain Droids!"),
	DisplayName = T(949676737308, --[[ModItemRecipe PX_recipe_droidrepair DisplayName]] "Droid Repair Parts"),
	FailChance = 10,
	GuaranteedSuccessLevel = 3,
	Icon = "UI/Icons/Items/spare_parts",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "Metal",
			'amount', 10000,
		}),
		PlaceObj('ResAmount', {
			'resource', "Silicon",
			'amount', 5000,
		}),
	},
	MakeUntilMultiplier = 5,
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "PX_droidRepair",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "Electronics",
		}),
	},
	ProficiencyLevel = 6,
	RequiredDeviceInterfaces = {
		"BasicCraftingInterface",
	},
	SortKey = 90,
	id = "PX_recipe_droidrepair",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Trade",
	ActivityDuration = 160000,
	ActivityXPGrade = "Crafting_Low",
	BuildCategory = "Supply",
	Description = T(702862452093, --[[ModItemRecipe PX_supply_droidrepair Description]] "Ask for some repair parts to sustain Droids!"),
	DestroyOnFail = false,
	DisplayName = T(734207166602, --[[ModItemRecipe PX_supply_droidrepair DisplayName]] "Droid Repair Parts"),
	FailChance = 5,
	GuaranteedSuccessLevel = 3,
	HasIntermediateResult = false,
	Icon = "UI/Icons/Items/spare_parts",
	MakeUntilMultiplier = 5,
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "PX_droidRepair",
			'amount', 3000,
		}),
	},
	ProficiencyLevel = 6,
	RequiredDeviceInterfaces = {
		"Trading",
	},
	SortKey = 90,
	group = "Supply",
	id = "PX_supply_droidrepair",
}),
PlaceObj('ModItemRecipe', {
	Activity = "Trade",
	ActivityDuration = 320000,
	ActivityXPGrade = "Crafting_Low",
	BuildCategory = "Supply",
	Description = T(515537906599, --[[ModItemRecipe PX_supply_droidrepair_fast Description]] "Build some repair parts to sustain Droids!"),
	DestroyOnFail = false,
	DisplayName = T(383608344848, --[[ModItemRecipe PX_supply_droidrepair_fast DisplayName]] "Droid Repair Parts"),
	FailChance = 5,
	GuaranteedSuccessLevel = 3,
	HasIntermediateResult = false,
	Icon = "UI/Icons/Items/spare_parts",
	MakeUntilMultiplier = 5,
	ManualWork = true,
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "PX_droidRepair",
			'amount', 3000,
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_resource_fast",
		}),
	},
	ProficiencyLevel = 6,
	RequiredDeviceInterfaces = {
		"Trading",
	},
	SortKey = 90,
	group = "Supply_fast",
	id = "PX_supply_droidrepair_fast",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Exploration",
	Enabled = true,
	HasNotification = false,
	Image = "Events/ProjectXRelayDroidShop.png",
	OneTime = false,
	Text = T(343931509522, --[[ModItemStoryBit DroidCandidatesPX_1 Text]] "<center>Welcome to the Galactican Droid Market!\nHere you will find a luxury of slav- \n<color TextEmphasis>Hm!*</color> \nI mean droids to help destro- \nI mean... serve you!\nLet's make those handling tasks a little easier.\n\nColony ID FRC012 eh?\nLast scans indicate you can sustain a new droid.\nWe got you as having <em><DroidRepairKits()></em> repair kits ready.\n<MaxRoomLevels()>\n\nLucky you! Still gotta pay though\nPlease select what model you want:\n"),
	Title = T(569121153682, --[[ModItemStoryBit DroidCandidatesPX_1 Title]] "Droid Candidates"),
	group = "PROJECTX",
	id = "DroidCandidatesPX_1",
	max_reply_id = 30,
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(356611485210, --[[ModItemStoryBit DroidCandidatesPX_1 CustomOutcomeText]] "Cheaper, but you get what you pay for!"),
		OutcomeText = "custom",
		Text = T(224254035937, --[[ModItemStoryBit DroidCandidatesPX_1 Text]] "Refurbished G8"),
		param_bindings = false,
		unique_id = 24,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG8Helper",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(419581368683, --[[ModItemStoryBit DroidCandidatesPX_1 CustomOutcomeText]] "Standard Droid, outfitted with 1 of 4 civilian modules"),
		OutcomeText = "custom",
		Text = T(366173514940, --[[ModItemStoryBit DroidCandidatesPX_1 Text]] 'New Civilian Droid G7-B model "Bumble"'),
		param_bindings = false,
		unique_id = 20,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B003",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B223",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B9028",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG7B97",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		CustomOutcomeText = T(510708097020, --[[ModItemStoryBit DroidCandidatesPX_1 CustomOutcomeText]] "Droid designed for combat, with melee or ranged combat modules"),
		HideIfDisabled = true,
		OutcomeText = "custom",
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckTech', {
				Tech = "CyberCore",
				param_bindings = false,
			}),
		},
		Text = T(154665516647, --[[ModItemStoryBit DroidCandidatesPX_1 Text]] 'G8-L model "Lancer"'),
		param_bindings = false,
		unique_id = 21,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG8L33PX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesG8L49PX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		HideIfDisabled = true,
		PrerequisiteText = "",
		Prerequisites = {
			PlaceObj('CheckExpression', {
				Expression = function (self, obj) return false end,
				param_bindings = false,
			}),
		},
		Text = T(445636100829, --[[ModItemStoryBit DroidCandidatesPX_1 Text]] '"Special Stock"'),
		param_bindings = false,
		unique_id = 23,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesB2V9PX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "DroidCandidatesCodeX",
				NoCooldown = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(881874056124, --[[ModItemStoryBit DroidCandidatesPX_1 Text]] "Go Back"),
		param_bindings = false,
		unique_id = 29,
	}),
}),
PlaceObj('ModItemTrait', {
	Description = T(585737900929, --[[ModItemTrait px_droid_craft_feature Description]] "The Crafting Module allows droid to maneuver their appendages with more dexterity."),
	DisplayName = T(841372864208, --[[ModItemTrait px_droid_craft_feature DisplayName |gender-variants]] "Crafting Module"),
	Modifiers = {
		PlaceObj('ModifyHuman', {
			Id = "autoid_ucCehPy_izkHX6j",
			add = 150000,
			prop = "Manipulation",
		}),
	},
	UserTags = set( "Android", "Human", "Robot" ),
	id = "px_droid_craft_feature",
}),
PlaceObj('ModItemTrait', {
	Description = T(576296643211, --[[ModItemTrait px_droid_construct_feature Description]] "The Building Module allows droids to construct and repair things faster."),
	DisplayName = T(431589102375, --[[ModItemTrait px_droid_construct_feature DisplayName |gender-variants]] "Builders Module"),
	UserTags = set( "Android", "Human", "Robot" ),
	id = "px_droid_construct_feature",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(123333941939, --[[ModItemTrait px_droid_teaching_feature Description]] "The Teaching Module allows droids to teach others certain topics"),
	DisplayName = T(559228506585, --[[ModItemTrait px_droid_teaching_feature DisplayName |gender-variants]] "Teacher Module"),
	OnAddTrait = function (self, unit)
		unit:SetTrait("CombatInstructor", true)
		unit:SetTrait("CraftingInstructor", true)
		unit:SetTrait("CraftingInstructor", true)
		unit:SetTrait("FarmingInstructor", true)
		unit:SetTrait("MedicInstructor", true)
	end,
	UserTags = set( "Android", "Human", "Robot" ),
	id = "px_droid_teaching_feature",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "ModifyActivityEfficiency",
			Handler = function (self, target, efficiency, activity_id, activity_obj, skill_level)
				if activity_id == "Construction" or activity_id == "Repair" then
					efficiency = 3 * efficiency
				end
				return efficiency
			end,
		}),
	},
}),
PlaceObj('ModItemTrait', {
	Description = T(785572344465, --[[ModItemTrait px_droid_explore_feature Description]] "The Exploring Module allows droids to travel faster, and discovers unknown flora or fauna on the trip."),
	DisplayName = T(922056248630, --[[ModItemTrait px_droid_explore_feature DisplayName |gender-variants]] "Exploring Module"),
	UserTags = set( "Android", "Human", "Robot" ),
	id = "px_droid_explore_feature",
	unit_reactions = {
		PlaceObj('UnitReaction', {
			Event = "TravelToExpeditionSite",
			Handler = function (self, target, travel_time, balloon)
				CreateGameTimeThread(function()
					local min_time = const.HourDuration
					local max_time = 3*const.HourDuration
					local time = target:RandRange(min_time, max_time, "NaturalCuriosity")
					Sleep(time)
					if not IsValid(balloon)
					or not balloon.expedition
					or balloon.expedition.interrupted then
						return
					end
					local player = target and target.player
					local research_center = player and player.research_center
					if not research_center then
						return
					end
					local techs = {}
					for _, tech in ipairs(Presets.Tech.Field) do
						if not research_center:IsTechResearched(tech.id) then
							if GetPresetLockStateAndText(tech, player) == "enabled" then
								techs[#techs + 1] = tech
							end
						end
					end
					local tech = target:TableRand(techs, "NaturalCuriosity")
					if tech then
						target:ResearchTech(tech.id, false, T(998310530054, "Expedition discovery: <em><TechName></em>"))
					end
				end)
				return travel_time / 2
			end,
		}),
	},
}),
PlaceObj('ModItemStoryBit', {
	Category = "Tick",
	Enabled = true,
	HasNotification = false,
	HasPopup = false,
	Text = T(692339907492, --[[ModItemStoryBit px_droid_intro Text]] "Droids are essential for a burgeoning economy.\nPurchasable with some from the Galactican's.\n(With other methods of acquiring being worked on)\n\nThey do not require food, water, a bed, a room, etc....\nThey do not get upset, or feel emotions...\n\nBut A long time ago in a galaxy far far away; an upstart started to stockpile droids in secret.\nAnd unleashed them all at once against the Galactican Empire.\n\nThis attempt to install a dictatorship failed, and ever after the Galactican's changed how their droids operate.\n\n<color TextNegative>Each droid built degrades and will break if left unattended.</color>\nWhile repair kits are cheap and easy to build, they are extremely easy to detect.\nThus ensuring that any would be upstart require more to maintain (Or deceive) their droid army.\n\n<color TextEmphasis>All droids suffer from an incurable health condition.\nBut when a treatment is administered, they will be healed to full.\nDon't be caught off guard when a droids health drops low and there are no repair kits available!\n\nRepair Kits can be built in the colony workbench, after discovery of Silicone and Metal Alloys.\nThey can also be requested from other colonies via the Trade skill.</color>\nI wonder if any intrepid individuals could discover how to permanently fix their droids?\nOr at least stabilize them enough to not need to worry..... (WiP)"),
	Title = T(462477616521, --[[ModItemStoryBit px_droid_intro Title]] "Droid Tutorial"),
	id = "px_droid_intro",
}),
PlaceObj('ModItemBuildingCompositeDef', {
	ActiveIndState = "working_Special",
	BuildActivityTool = "WeldingTool",
	BuildEndAnimation = "standing_Repair_Weld_End",
	BuildIdleAnimations = {
		"standing_Repair_Weld_Idle",
	},
	BuildMenuCategory = "sub_DefenseDevices",
	BuildMenuIcon = "Mod/ucCehPy/General/PXSensorTower.png",
	BuildMenuPos = 90,
	BuildStartAnimation = "standing_Repair_Weld_Start",
	EntityHeight = 3900,
	InactiveIndState = "working",
	LockState = "hidden",
	MalfunctionOverTimeComponent = true,
	MaxTimeToMalfunction = 96000000,
	MinTimeToMalfunction = 38400000,
	NonWorkingIndState = "idle",
	PowerConsumption = 6000,
	ProximityInterception = false,
	ProximitySwitchColor = 4293149398,
	ProximitySwitchFilter = function (self, obj)
		return obj:CanMove() and Human.IsAttackTarget(self, obj) -- hacky, but it's the same code
	end,
	ProximitySwitchRange = 70000,
	RoomPlacement = "outdoors",
	SkirtSize = 0,
	StateIndicatorAttachId = "SignalLamp",
	StatusTextNotWorking = T(680984201551, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp StatusTextNotWorking]] "<positive>No threats are detected</negative>"),
	StatusTextWorking = T(435160793445, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp StatusTextWorking]] "<negative>Detecting threats</negative>"),
	TurnOnDelay = 0,
	affected_by_disasters = set( "SolarFlare", "Thunderstorm" ),
	construction_cost = PlaceObj('ConstructionCost', {
		CyberProcessor = 1000,
		Metal = 10000,
	}),
	construction_points = 15000,
	deconstruction_output = PlaceObj('ConstructionCost', {
		CPUCore = 1000,
		ScrapMetal = 10000,
	}),
	description = T(939503605659, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp description]] "Signal hijacking tower; enabling us to not only detect if an attack is imminent, but we can also try and change the temperament of the animals that are gathering!"),
	display_name = T(935842762688, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp display_name]] "Fauna Detection Tower"),
	display_name_short = T(992328866609, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp display_name_short]] "Cyber Com Tower"),
	enable_overlay_on_placement = {
		RangeOverlay = true,
		RoomsOverlay = true,
	},
	enable_overlay_on_selection = {
		RangeOverlay = true,
	},
	entity = "PXSensorTower",
	group = "Power",
	id = "cyber_motion_sensor_temp",
	labels = {
		"SolarFlareShieldedTargets",
		"CyberComTower",
	},
	lock_block_box = box(-300, -600, 0, 300, 600, 3850),
	menu_description = T(274227230921, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp menu_description]] "This tower will let us tap into the <em>faunas intranet signal network</em>, and detect if there is a buildup of biomass. Meaning we can tell when an attack is nearly here!\nWith enough of these, we could even force the attack to start on our terms!"),
	menu_display_name = T(770422888529, --[[ModItemBuildingCompositeDef cyber_motion_sensor_temp menu_display_name]] "Cyber Com Tower"),
	object_class = "Building",
	progress = 500000,
	range_tags = {
		"sensor",
		"combat",
	},
	realtime_working_anim = true,
	repair_cost = PlaceObj('ConstructionCost', {
		Metal = 10000,
	}),
	update_interval = 3000,
}),
PlaceObj('ModItemBuildingCompositeDef', {
	ActiveIndState = "working_Special",
	BuildActivityTool = "WeldingTool",
	BuildEndAnimation = "standing_Repair_Weld_End",
	BuildIdleAnimations = {
		"standing_Repair_Weld_Idle",
	},
	BuildMenuCategory = "sub_DefenseDevices",
	BuildMenuIcon = "UI/Icons/Build Menu/infrared_detector",
	BuildMenuPos = 90,
	BuildStartAnimation = "standing_Repair_Weld_Start",
	EntityHeight = 3900,
	HasSecondSmartConnection = true,
	HasSmartConnection = true,
	InactiveIndState = "working",
	IsPowerConsumer = true,
	IsPowerSwitch = true,
	LockState = "hidden",
	MalfunctionOverTimeComponent = true,
	MaxMalfunctionDamage = 65,
	MaxTimeToMalfunction = 19200000,
	MinMalfunctionDamage = 35,
	MinTimeToMalfunction = 9600000,
	NonWorkingIndState = "idle",
	PowerComponent = true,
	PowerConsumption = 6000,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "CyberSensor",
		}),
	},
	ProximityInterception = false,
	ProximitySwitchColor = 4293186370,
	ProximitySwitchComponent = true,
	ProximitySwitchFilter = function (self, obj)
		return obj:CanMove() and Human.IsAttackTarget(self, obj) -- hacky, but it's the same code
	end,
	ProximitySwitchRange = 110000,
	RoomPlacement = "outdoors",
	SkirtSize = 0,
	StateIndicatorAttachId = "SignalLamp",
	StatusTextNotWorking = T(578362301901, --[[ModItemBuildingCompositeDef cyber_sensor StatusTextNotWorking]] "<positive>No threats are detected</negative>"),
	StatusTextWorking = T(302751981411, --[[ModItemBuildingCompositeDef cyber_sensor StatusTextWorking]] "<negative>Detecting threats</negative>"),
	TurnOnDelay = 0,
	affected_by_disasters = set( "SolarFlare", "Thunderstorm" ),
	can_turn_off = true,
	construction_cost = PlaceObj('ConstructionCost', {
		CPUCore = 1000,
		Metal = 10000,
	}),
	construction_points = 15000,
	deconstruction_output = PlaceObj('ConstructionCost', {
		CPUCore = 1000,
		ScrapMetal = 10000,
	}),
	description = T(446142274524, --[[ModItemBuildingCompositeDef cyber_sensor description]] "Activates when there are hostile animals in range.\n<opt(SensorDescription)>"),
	display_name = T(427620548318, --[[ModItemBuildingCompositeDef cyber_sensor display_name]] "Cyber-Infused Motion sensor"),
	display_name_pl = T(437180714311, --[[ModItemBuildingCompositeDef cyber_sensor display_name_pl]] "Cyber-Infused Motion sensors"),
	enable_overlay_on_placement = {
		RangeOverlay = true,
		RoomsOverlay = true,
	},
	enable_overlay_on_selection = {
		RangeOverlay = true,
	},
	entity = "MotionSensor",
	group = "Power",
	id = "cyber_sensor",
	labels = {
		"SolarFlareShieldedTargets",
	},
	lock_block_box = box(-300, -600, 0, 300, 600, 3850),
	object_class = "Building",
	range_tags = {
		"sensor",
		"combat",
	},
	realtime_working_anim = true,
	repair_cost = PlaceObj('ConstructionCost', {
		Metal = 10000,
	}),
	update_interval = 3000,
}),
PlaceObj('ModItemBuildingCompositeDef', {
	ActiveIndState = "working_Special",
	BuildActivityTool = "WeldingTool",
	BuildEndAnimation = "standing_Repair_Weld_End",
	BuildIdleAnimations = {
		"standing_Repair_Weld_Idle",
	},
	BuildMenuCategory = "sub_DefenseDevices",
	BuildMenuIcon = "UI/Icons/Build Menu/infrared_detector",
	BuildMenuPos = 90,
	BuildStartAnimation = "standing_Repair_Weld_Start",
	EntityHeight = 3900,
	HasSecondSmartConnection = true,
	HasSmartConnection = true,
	InactiveIndState = "working",
	IsPowerConsumer = true,
	IsPowerSwitch = true,
	LockState = "hidden",
	MalfunctionOverTimeComponent = true,
	MaxMalfunctionDamage = 10,
	MaxTimeToMalfunction = 192000000,
	MinMalfunctionDamage = 5,
	MinTimeToMalfunction = 96000000,
	NonWorkingIndState = "idle",
	PowerComponent = true,
	PowerConsumption = 6000,
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "AlienSensor",
		}),
	},
	ProximityInterception = false,
	ProximitySwitchColor = 4293186370,
	ProximitySwitchComponent = true,
	ProximitySwitchFilter = function (self, obj)
		return obj:CanMove() and Human.IsAttackTarget(self, obj) -- hacky, but it's the same code
	end,
	ProximitySwitchRange = 90000,
	RoomPlacement = "outdoors",
	SkirtSize = 0,
	StateIndicatorAttachId = "SignalLamp",
	StatusTextNotWorking = T(537466444033, --[[ModItemBuildingCompositeDef alien_sensor StatusTextNotWorking]] "<positive>No threats are detected</negative>"),
	StatusTextWorking = T(792301125251, --[[ModItemBuildingCompositeDef alien_sensor StatusTextWorking]] "<negative>Detecting threats</negative>"),
	TurnOnDelay = 0,
	affected_by_disasters = set( "SolarFlare", "Thunderstorm" ),
	can_turn_off = true,
	construction_cost = PlaceObj('ConstructionCost', {
		CPUCore = 1000,
		Metal = 10000,
	}),
	construction_points = 15000,
	deconstruction_output = PlaceObj('ConstructionCost', {
		CPUCore = 1000,
		ScrapMetal = 10000,
	}),
	description = T(342027716413, --[[ModItemBuildingCompositeDef alien_sensor description]] "Activates when there are hostile animals in range.\n<opt(SensorDescription)>"),
	display_name = T(606057404456, --[[ModItemBuildingCompositeDef alien_sensor display_name]] "Alien-Infused Motion sensor"),
	display_name_pl = T(170591190349, --[[ModItemBuildingCompositeDef alien_sensor display_name_pl]] "Alien-Infused Motion sensors"),
	enable_overlay_on_placement = {
		RangeOverlay = true,
		RoomsOverlay = true,
	},
	enable_overlay_on_selection = {
		RangeOverlay = true,
	},
	entity = "MotionSensor",
	group = "Power",
	id = "alien_sensor",
	labels = {
		"SolarFlareShieldedTargets",
	},
	lock_block_box = box(-300, -600, 0, 300, 600, 3850),
	object_class = "Building",
	range_tags = {
		"sensor",
		"combat",
	},
	realtime_working_anim = true,
	repair_cost = PlaceObj('ConstructionCost', {
		Metal = 10000,
	}),
	update_interval = 3000,
}),
PlaceObj('ModItemTextStyle', {
	DisabledRolloverTextColor = 4292464583,
	DisabledShadowColor = 1073741824,
	DisabledTextColor = 4290754479,
	RolloverTextColor = 4294964457,
	ShadowColor = 1073741824,
	ShadowSize = 2,
	TextColor = 4288166861,
	TextFont = T(357438671892, --[[ModItemTextStyle px_purple TextFont]] "LibelSuitRg, 21"),
	id = "px_purple",
}),
PlaceObj('ModItemTutorialHint', {
	Hints = {
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/ProjectXBanner.jpg",
			Text = T(342504349709, --[[ModItemTutorialHint px_hint_intro Text]] "<color TextButton>Project-X Tutorial</color>\n\nWelcome to Project-X!\nThis improves the mid to late game in multiple ways.\nRead further to learn the specific details/mechanics added."),
			TextGamepad = T(608006514907, --[[ModItemTutorialHint px_hint_intro TextGamepad]] "<color TextButton>Project-X Tutorial</color>\n\nWelcome to Project-X!\nThis improves the mid to late game in multiple ways.\nRead further to learn the specific details/mechanics added!"),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Research01.PNG",
			Text = T(690418417191, --[[ModItemTutorialHint px_hint_intro Text]] "<color TextButton>Research Part 1</color>\n\nThere are over 110 added technologies in this mod.\nAll of them are in new technology columns see above.\nScroll to the right in the Research Tab to view them.\n\nNotice that these columns seem a bit sparse?\nA lot of them are hidden, and require you to progress in this mods content."),
			TextGamepad = T(367261662748, --[[ModItemTutorialHint px_hint_intro TextGamepad]] "<color TextButton>Research Part 1</color>\n\nThere are over 110 added technologies in this mod.\nAll of them are in new technology columns see above.\nScroll to the right in the Research Tab to view them.\n\nNotice that these columns seem a bit sparse?\nA lot of them are hidden, and require you to progress in this mods content."),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Research02.png",
			Text = T(789477960926, --[[ModItemTutorialHint px_hint_intro Text]] "<color TextButton>Research Part 2</color>\n\nThere is a new <color px_purple>PX color</color> describing specific requirements & info. \nBuilding or other unique requirements will be listed in this color.\n\nSome technologies are required before you can see more.\nIf you want to speedrun, only research things with that disclaimer!\nAlthough who knows what you could be missing...."),
			TextGamepad = T(488649881538, --[[ModItemTutorialHint px_hint_intro TextGamepad]] "<color TextButton>Research Part 2</color>\n\nThere is a new <color px_purple>PX color</color> describing specific requirements & info. \nBuilding or other unique requirements will be listed in this color.\n\nSome technologies are required before you can see more.\nIf you want to speedrun, only research things with that disclaimer!\nAlthough who knows what you could be missing...."),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Signal Relay.PNG",
			Text = T(578059195810, --[[ModItemTutorialHint px_hint_intro Text]] '<color TextButton>Signal Relay</color>\n\nThe Signal Relay is the "start" of PX content.\nAll off-planet research tech requires this to be online.\n\nBe warned, this is PX\'s Orbital Antenna and Orbital Radio.\nInsect attacks will be much stronger after it is built.\nI wonder what their deal is?'),
			TextGamepad = T(724495544803, --[[ModItemTutorialHint px_hint_intro TextGamepad]] '<color TextButton>Signal Relay</color>\n\nThe Signal Relay is the "start" of PX content.\nAll off-planet research tech requires this to be online.\n\nBe warned, this is PX\'s Orbital Antenna and Orbital Radio.\nInsect attacks will be much stronger after it is built.\nI wonder what their deal is?'),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Insects Level Up 2.PNG",
			Text = T(116247983022, --[[ModItemTutorialHint px_hint_intro Text]] "<color TextButton>Animals and Organs pt 1!</color>\n\nProject-X uses the Insects Level Up All Species mod.\nThis means that the insects will be deadlier/beefier/smarter.\n\nAlways be on the lookout for new species traits or observation notes.\nYou don't want to using pierce damage (railguns for ex) against an insect that has evolved to be near immune to piercing damage!"),
			TextGamepad = T(960148962792, --[[ModItemTutorialHint px_hint_intro TextGamepad]] "<color TextButton>Animals and Organs pt 1!</color>\n\nProject-X uses the Insects Level Up All Species mod.\nThis means that the insects will be deadlier/beefier/smarter.\n\nAlways be on the lookout for new species traits or observation notes.\nYou don't want to using pierce damage (railguns for ex) against an insect that has evolved to be near immune to piercing damage!"),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Insects Level Up 1.PNG",
			Text = T(100828764260, --[[ModItemTutorialHint px_hint_intro Text]] '<color TextButton>Animals and Organs pt 2!</color>\n\nLearning about Animal Organs is done in the "Top Secret" tech column.\n\nDo you be a good little colony and send the notes to the Empire?\nHow about help the rebellion, sell them on the Black Market?\nOr hoard them and use it to craft some of the deadliest weapons and armor?\n<em>Subject to Change</em>'),
			TextGamepad = T(727785907980, --[[ModItemTutorialHint px_hint_intro TextGamepad]] '<color TextButton>Animals and Organs pt 2!</color>\n\nLearning about Animal Organs is done in the "Top Secret" tech column.\n\nDo you be a good little colony and send your notes to the Empire?\nHow about help the rebellion? Sell them on the Black Market?\nOr hoard them and use it to craft some of the deadliest weapons and armor?\n<em>Subject to Change</em>'),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/PX Hiring.PNG",
			Text = T(653529255609, --[[ModItemTutorialHint px_hint_intro Text]] "<color TextButton>Colonists!</color>\n\nProject-X allows for you to recruit a near unlimited amount of colonists.\nSome are available through the Galactican Empire's Colonization Committee via PX-003.\nSome require you to make less.... official contacts.\nOthers are found on expeditions.\n<em>Subject to Change</em>"),
			TextGamepad = T(825814159775, --[[ModItemTutorialHint px_hint_intro TextGamepad]] "<color TextButton>Colonists!</color>\n\nProject-X allows for you to recruit a near unlimited amount of colonists.\nSome are available through the Galactican Empire's Colonization Committee via PX-003.\nSome require you to make less.... official contacts.\nOthers are found on expeditions.\n<em>Subject to Change</em>"),
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Secrets.PNG",
			Text = T(367270467629, --[[ModItemTutorialHint px_hint_intro Text]] '<color TextButton>"Living" Colonists</color>\n\nProject-X code is watching what your colonists do.\nColonists will gain trait\'s based on what they do, how they like the colony, etc...\nEven non-PX colonists are being watched and will grow!\n\nColonists with "Secrets" will unlock unique growth events.\n<em>Subject to Change</em>'),
			TextGamepad = T(338914090653, --[[ModItemTutorialHint px_hint_intro TextGamepad]] '<color TextButton>"Living" Colonists</color>\n\nProject-X code is watching what your colonists do.\nColonists will gain trait\'s based on what they do, how they like the colony, etc...\nEven non-PX colonists are being watched and will grow!\n\nColonists with "Secrets" will unlock unique growth events.\n<em>Subject to Change</em>'),
		}),
	},
	Tutorial = "",
	display_name = T(625864238485, --[[ModItemTutorialHint px_hint_intro display_name]] "Project-X Tutorial"),
	id = "px_hint_intro",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "StoryBitCompleted",
			Handler = function (self, storybit_id, storybit_state)
				--[[ print("A story bit completed!")
				print(storybit_id)
				print(storybit_state)
				print("px_tut is: ",px_tut) ]]
				if (storybit_id == "x_hint_early" or storybit_id == "x_hint_middle" or storybit_id == "x_hint_late") and not px_tut then
					px_tut = true
					self:ShowNotification()
				end
			end,
		}),
	},
	new_in = "Robots",
}),
PlaceObj('ModItemHealthCondition', {
	AffectableBodyParts = {
		PlaceObj('HealthConditionBodyParts', {
			BodyPartGroup = "WholeBody",
			param_bindings = false,
		}),
	},
	BleedingModifier = 1000,
	DisplayName = T(361546234283, --[[ModItemHealthCondition weak_gunshot DisplayName]] "Low caliber gunshot"),
	HealthLoss = 10000,
	ManipulationModifierOpt = -5000,
	MovementModifierOpt = -5000,
	PainModifier = 5000,
	group = "Weapons_Human",
	id = "weak_gunshot",
}),
PlaceObj('ModItemStoryBit', {
	Category = "Tick",
	Delay = 240000,
	Effects = {
		PlaceObj('ExecuteCode', {
			Code = function (self, obj)
				droid_cost_calc()
				human_cost_calc()
			end,
			param_bindings = false,
		}),
	},
	Enabled = true,
	HasPopup = false,
	NotificationExpirationBar = true,
	NotificationPriority = "Critical",
	NotificationRolloverText = T(574370061709, --[[ModItemStoryBit px_gal_scan NotificationRolloverText]] "Routine scan in progress, please await results before "),
	NotificationTitle = T(581063467782, --[[ModItemStoryBit px_gal_scan NotificationTitle]] "::GALACTICAN SCAN IN PROGRESS::"),
	Prerequisites = {
		PlaceObj('CheckCooldown', {
			Cooldown = "px_faction_cd",
			param_bindings = false,
		}),
		PlaceObj('CheckRandom', {
			Chance = 0,
			param_bindings = false,
		}),
	},
	id = "px_gal_scan",
}),
PlaceObj('ModItemCooldownDef', {
	TimeMax = 12480000,
	TimeMin = 7680000,
	TimeScale = "days",
	id = "px_faction_cd",
}),
PlaceObj('ModItemBuildingCompositeDef', {
	ActiveIndState = "working_Special",
	BuildActivityTool = "WeldingTool",
	BuildEndAnimation = "standing_Repair_Weld_End",
	BuildIdleAnimations = {
		"standing_Repair_Weld_Idle",
	},
	BuildMenuCategory = "sub_DefenseDevices",
	BuildMenuIcon = "Mod/ucCehPy/General/ObeliskDecorPX.png",
	BuildMenuPos = 90,
	BuildStartAnimation = "standing_Repair_Weld_Start",
	EntityHeight = 3900,
	HasSecondSmartConnection = true,
	InactiveIndState = "working",
	LockState = "hidden",
	MaxMalfunctionDamage = 0,
	MaxTimeToMalfunction = 96000000000,
	MinMalfunctionDamage = 0,
	MinTimeToMalfunction = 96000000000,
	NonWorkingIndState = "idle",
	PowerConsumption = 6000,
	ProximityInterception = false,
	ProximitySwitchColor = 4293149398,
	ProximitySwitchFilter = function (self, obj)
		return obj:CanMove() and Human.IsAttackTarget(self, obj) -- hacky, but it's the same code
	end,
	ProximitySwitchRange = 130000,
	RoomPlacement = "outdoors",
	SkirtSize = 0,
	StateIndicatorAttachId = "PXObeliskDec",
	StatusTextNotWorking = T(255582587201, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp StatusTextNotWorking]] "<positive>No threats are detected</negative>"),
	StatusTextWorking = T(752471945174, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp StatusTextWorking]] "<negative>Detecting threats</negative>"),
	TurnOnDelay = 0,
	affected_by_disasters = set( "SolarFlare", "Thunderstorm" ),
	composite_part_names = {
		"Body",
	},
	construction_cost = PlaceObj('ConstructionCost', {
		AlienProcessor = 1000,
		Metal = 10000,
	}),
	construction_points = 15000,
	cursor_hint = "",
	deconstruction_output = PlaceObj('ConstructionCost', {
		CPUCore = 1000,
		ScrapMetal = 10000,
	}),
	description = T(409042361539, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp description]] "All these organs next to some special broadcast equipment... I bet we could try and lure a specific species to be in the next attack group with these!"),
	display_name = T(634710997141, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp display_name]] "Fauna Selection Tower"),
	display_name_short = T(355941365403, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp display_name_short]] "Alien Com Tower"),
	enable_overlay_on_placement = {
		RangeOverlay = true,
		RoomsOverlay = true,
	},
	enable_overlay_on_selection = {
		RangeOverlay = true,
	},
	entity = "PXObeliskDec",
	group = "Power",
	id = "alien_motion_sensor_temp",
	labels = {
		"SolarFlareShieldedTargets",
		"AlienComTower",
	},
	lock_block_box = box(-300, -600, 0, 300, 600, 3850),
	menu_description = T(692068368758, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp menu_description]] "Alien biology combined with broadcast equipment! This will let us send communications to the <em>faunas intranet signal network</em>. The more we build, the better chance we have to successfully influence the next attack!"),
	menu_display_name = T(709079682173, --[[ModItemBuildingCompositeDef alien_motion_sensor_temp menu_display_name]] "Alien Com Tower"),
	object_class = "Building",
	progress = 500000,
	range_tags = {
		"sensor",
		"combat",
	},
	realtime_working_anim = true,
	repair_cost = PlaceObj('ConstructionCost', {
		Metal = 10000,
	}),
	update_interval = 3000,
}),
PlaceObj('ModItemFolder', {
	'name', "Folder Organs / Aliens",
}),
PlaceObj('ModItemRecipe', {
	ApplyResRequirements = false,
	BuildCategory = "CraftTools",
	Description = T(283071391129, --[[ModItemRecipe px_recipe_tool_backpack Description]] "Make a backpack to help with moving around"),
	DisplayName = T(491972254411, --[[ModItemRecipe px_recipe_tool_backpack DisplayName]] "Sew Backpack"),
	DisplayNameMenu = T(429014356997, --[[ModItemRecipe px_recipe_tool_backpack DisplayNameMenu]] "Sew Backpack"),
	Icon = "Mod/ucCehPy/General/LightBackpackSmall.png",
	InputResources = {
		PlaceObj('ResAmount', {
			'resource', "FabricsAll",
			'amount', 20000,
		}),
	},
	OutputResources = {
		PlaceObj('ResAmount', {
			'resource', "LightBackpackPX",
		}),
	},
	Prerequisites = {
		PlaceObj('CheckTech', {
			Tech = "xr_g0_tools",
		}),
	},
	RequiredDeviceInterfaces = {
		"BasicTailoringInterface",
	},
	id = "px_recipe_tool_backpack",
}),
PlaceObj('ModItemStoryBit', {
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXRelay.png",
	SelectObject = false,
	Text = T(393601063650, --[[ModItemStoryBit sensor_parent Text]] "Our Advanced Communication towers can do so much for us.\nWhat would we like to do?\n\n"),
	Title = T(968822504662, --[[ModItemStoryBit sensor_parent Title]] "Communicate with the fauna"),
	id = "sensor_parent",
	max_reply_id = 4,
	PlaceObj('StoryBitReply', {
		Text = T(901023290801, --[[ModItemStoryBit sensor_parent Text]] "Check the status of the next attack"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "px_Attack_Not_Ready",
				param_bindings = false,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "MinTimeBetweenAttacks",
				Negate = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "px_Attack_Ready",
				param_bindings = false,
			}),
		},
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "MinTimeBetweenAttacks",
				Negate = true,
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(153219952334, --[[ModItemStoryBit sensor_parent PrerequisiteText]] "No Alien Com Tower or already attempted"),
		Prerequisites = {
			PlaceObj('CheckAND', {
				Conditions = {
					PlaceObj('CheckObjectCount', {
						Amount = 1,
						Condition = ">=",
						Filters = {
							PlaceObj('IsBuildingClass', {
								BuildingClass = "alien_motion_sensor_temp",
								param_bindings = false,
							}),
						},
						Label = "Buildings",
						param_bindings = false,
					}),
					PlaceObj('CheckExpression', {
						Expression = function (self, obj) return not animal_override_attempted end,
						param_bindings = false,
					}),
				},
				param_bindings = false,
			}),
		},
		Text = T(843276153168, --[[ModItemStoryBit sensor_parent Text]] "Influence the next attack's species"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "px_influence_species",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(720689740825, --[[ModItemStoryBit sensor_parent PrerequisiteText]] "No Cyber Com Tower's or already attempted"),
		Prerequisites = {
			PlaceObj('CheckAND', {
				Conditions = {
					PlaceObj('CheckObjectCount', {
						Amount = 1,
						Condition = ">=",
						Filters = {
							PlaceObj('IsBuildingClass', {
								BuildingClass = "cyber_motion_sensor_temp",
								param_bindings = false,
							}),
						},
						Label = "Buildings",
						param_bindings = false,
					}),
					PlaceObj('CheckExpression', {
						Expression = function (self, obj) return not animal_temperament_attempted end,
						param_bindings = false,
					}),
				},
				param_bindings = false,
			}),
		},
		Text = T(843276153168, --[[ModItemStoryBit sensor_parent Text]] "Influence the next attack's temperament or timing"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "px_influence_aggression",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(224983184964, --[[ModItemStoryBit sensor_parent Text]] "Nothing"),
		param_bindings = false,
		unique_id = 4,
	}),
}),
PlaceObj('ModItemStoryBit', {
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXRelayTamerHQ.png",
	Text = T(199136582193, --[[ModItemStoryBit px_influence_species Text]] "We don't know exactly how the alien organs communicate with the creatures.\nSo we will leave a lot of the details to the Nuedo organs in our towers.\n\nPlease select what species you would like to try and lure:"),
	Title = T(287839584815, --[[ModItemStoryBit px_influence_species Title]] "Influencing the next attack"),
	id = "px_influence_species",
	max_reply_id = 8,
	PlaceObj('StoryBitReply', {
		Text = T(292769526756, --[[ModItemStoryBit px_influence_species Text]] "The stubborn Skarabei"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "PEx_Skarabei_Brute"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(469161097880, --[[ModItemStoryBit px_influence_species Text]] "The gaseous Glutch"),
		param_bindings = false,
		unique_id = 2,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "Bloated_Glutch"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(745190832114, --[[ModItemStoryBit px_influence_species Text]] "The deadly Deathflys"),
		param_bindings = false,
		unique_id = 3,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "Frenzied_Bomber_Dragonfly"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(274314646053, --[[ModItemStoryBit px_influence_species Text]] "The slicing Scissorhands"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "Brutal_Duelist_Scissorhands"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(400924491512, --[[ModItemStoryBit px_influence_species Text]] "The tactful Tecatli"),
		param_bindings = false,
		unique_id = 5,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "Heat_Reinforced_Tecatli"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(976901941319, --[[ModItemStoryBit px_influence_species Text]] "The jacked Junos"),
		param_bindings = false,
		unique_id = 6,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "Angry_Juno"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(340986458132, --[[ModItemStoryBit px_influence_species Text]] "The sadistic Shriekers"),
		param_bindings = false,
		unique_id = 7,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "Plague_Sniper_Shrieker"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(224273707231, --[[ModItemStoryBit px_influence_species Text]] "The diplomatic dogs"),
		param_bindings = false,
		unique_id = 8,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_override_attempted = true
					if diminishReturnCheck('alien_motion_sensor_temp') then
					  animal_override = "dog_T3"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_override)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
}),
PlaceObj('ModItemStoryBit', {
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXRelayTamerHQ.png",
	Text = T(690194321441, --[[ModItemStoryBit px_insect_override_failed Text]] "Against our best efforts, the <em>faunas intranet signal network</em> has not undergone any significant changes.\nThe attack will commence as whatever is coordinating this network desires.\n\nWe must be ready for anything!"),
	Title = T(708338656782, --[[ModItemStoryBit px_insect_override_failed Title]] "Override Attempt Failed"),
	id = "px_insect_override_failed",
}),
PlaceObj('ModItemStoryBit', {
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/ProjectXRelayTamerHQ.png",
	Text = T(607138123055, --[[ModItemStoryBit px_insect_override_passed Text]] "The <em>faunas intranet signal network</em> has changed rapidly, signifying our desired change has taken effect!\nThe attack will commence as whatever is coordinating this network desires.\n\nOur preparations can be fine tuned now that we know what is coming!"),
	Title = T(484544524026, --[[ModItemStoryBit px_insect_override_passed Title]] "Override Attempt Succeeded"),
	id = "px_insect_override_passed",
}),
PlaceObj('ModItemStoryBit', {
	HasNotification = false,
	Text = T(733074827463, --[[ModItemStoryBit px_influence_aggression Text]] "Our Cyber based Fauna Detection Towers are ready to try and inject a pattern of signals into the <em>faunas intranet signal network</em>!\n\nPlease select what we want to happen:"),
	Title = T(151651433375, --[[ModItemStoryBit px_influence_aggression Title]] "Aggression Override Attempt"),
	id = "px_influence_aggression",
	max_reply_id = 4,
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(125369128218, --[[ModItemStoryBit px_influence_aggression PrerequisiteText]] "Attack not ready"),
		Prerequisites = {
			PlaceObj('CheckCooldown', {
				Cooldown = "Attack",
				param_bindings = false,
			}),
		},
		Text = T(497445403048, --[[ModItemStoryBit px_influence_aggression Text]] "Trigger the attack now!"),
		param_bindings = false,
		unique_id = 1,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('StoryBitActivate', {
				Id = "AnimalAttack_Controller_sig2_ProjectX",
				param_bindings = false,
			}),
		},
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		PrerequisiteText = T(984290006058, --[[ModItemStoryBit px_influence_aggression PrerequisiteText]] "WiP, not ready yet"),
		Prerequisites = {
			PlaceObj('CheckAND', {
				Conditions = {
					PlaceObj('CheckCharacter', {
						Character = "AliceDerHase",
						Negate = true,
						param_bindings = false,
					}),
					PlaceObj('CheckCharacter', {
						Character = "AliceDerHase",
						param_bindings = false,
					}),
				},
				param_bindings = false,
			}),
		},
		Text = T(445524563198, --[[ModItemStoryBit px_influence_aggression Text]] "Turn the attack passive!"),
		param_bindings = false,
		unique_id = 4,
	}),
	PlaceObj('StoryBitOutcome', {
		Effects = {
			PlaceObj('ExecuteCode', {
				Code = function (self, obj)
					animal_temperament_attempted = true
					if diminishReturnCheck('cyber_motion_sensor_temp') then
					  animal_temperament_overrive = "Passive"
					  ForceActivateStoryBit("px_insect_override_passed", nil, nil, nil, true)
					else
					  ForceActivateStoryBit("px_insect_override_failed", nil, nil, nil, true)
					end
					print(animal_temperament_overrive)
				end,
				param_bindings = false,
			}),
		},
		Weight = 10000,
		param_bindings = false,
	}),
	PlaceObj('StoryBitReply', {
		Text = T(454710829719, --[[ModItemStoryBit px_influence_aggression Text]] "Nothing"),
		param_bindings = false,
		unique_id = 3,
	}),
}),
PlaceObj('ModItemTutorialHint', {
	Hints = {
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/ProjectXBanner.jpg",
			Text = T(429600696417, --[[ModItemTutorialHint Droid_Tutorial Text]] "<color TextButton>Project-X's Droid Tutorial</color>\nYou've hired your first droid! This tutorial aims to explain why and how they behave in PX.\n\n"),
			TextGamepad = "",
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Consortium.PNG",
			Text = T(737322681527, --[[ModItemTutorialHint Droid_Tutorial Text]] "<color TextButton>Androids, a brief history Pt 1</color>\n\nAfter the Consortium lost Hope, the Galactican Empire used the subsequent civilian fears of a robot uprising to perform a power grab. The Consortium was Nationalized, and strict limits where imposed on any Android built.\n\nThe citizens where calmed, and the Empire now has near infinite Robot Production capacity."),
			TextGamepad = "",
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Hope.PNG",
			Text = T(639225446806, --[[ModItemTutorialHint Droid_Tutorial Text]] "<color TextButton>Androids, a brief history Pt. 2</color>\n\nHope has gone into hiding, and occasionally short videos can be found in intergalactic forums from her. She and her band of defenders continue to advocate for sentient Android rights, against the gigantic Galactican Empire (And Consortium Executives who are now part of the government)."),
			TextGamepad = "",
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Droid Degrading.PNG",
			Text = T(880686731765, --[[ModItemTutorialHint Droid_Tutorial Text]] "<color TextButton>Androids, built-in weaknesses</color>\n\nThe Empire has continued Android development, and has variants purchasable to governors and <em>colonies</em>.\nBut the Androids all now come with:\n- Rapid degradation \n- Software inhibitors\n- Required continuous connectivity to the old Consortium servers"),
			TextGamepad = "",
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Droid Repair.PNG",
			Text = T(892912698761, --[[ModItemTutorialHint Droid_Tutorial Text]] '<color TextButton>Android Owner Expectations</color>\n\nThe built in degradation is the most important thing to manage.\nIt is a slow loss of integrity that cannot be stopped.\n\nBy buildings and keeping "Droid Repair Parts" or "Repair Kits", Androids can be repaired to full integrity once they get below 30% Integrity.'),
			TextGamepad = "",
		}),
		PlaceObj('TutorialHintItem', {
			Image = "Mod/ucCehPy/tutorials/Attack Alert.PNG",
			Text = T(368341700494, --[[ModItemTutorialHint Droid_Tutorial Text]] "<color TextButton>Android Owner Expectations</color>\n\nThe repairing of an Android sends a signal to the Empire.\nThis is the same method the Consortium knew of Hope's escape, and her growing.\nWhen a repair is missed, the Empire is quick to review to ensure another Android does not gain sentience again!\n\nNow instead of extrajudicial army of Robots, the Galactican Empire and it's full military might can be sent to stop it this time!"),
			TextGamepad = "",
		}),
	},
	Tutorial = "",
	display_name = T(333774284906, --[[ModItemTutorialHint Droid_Tutorial display_name]] "Project-X Tutorial"),
	id = "Droid_Tutorial",
	msg_reactions = {
		PlaceObj('MsgReaction', {
			Event = "StoryBitCompleted",
			Handler = function (self, storybit_id, storybit_state)
				--[[ print("A story bit completed!")
				print(storybit_id)
				print(storybit_state)
				print("px_tut is: ",px_tut) ]]
				if (storybit_id == "DroidCandidatesPX" or  storybit_id == "px_droid_intro") and px_tut then
					px_tut = true
					self:ShowNotification()
				end
			end,
		}),
	},
	new_in = "Robots",
}),
PlaceObj('ModItemStoryBit', {
	HasNotification = false,
	Image = "Mod/ucCehPy/Events/warning.png",
	Text = T(473407848827, --[[ModItemStoryBit PreReqs_Not_Found Text]] "<color TextNegative>WARNING WARNING</color>\n\nProject-X Repaired requires the following mods to be loaded:\n\n- Insects Level Up (All Species)\n- SAD_CommonLib\n\nOne or more of the above mods are not loaded.\nProject-X will not work as-is!"),
	Title = T(779341325400, --[[ModItemStoryBit PreReqs_Not_Found Title]] "Project-X PreRequisite Mods not loaded!"),
	id = "PreReqs_Not_Found",
}),
PlaceObj('ModItemTech', {
	BuildMenuCategoryHighlights = {
		"Storages",
	},
	Description = T(449954694427, --[[ModItemTech StorageSafes Description]] "Money takes so much space nowadays! We definitely need a dedicated safe space to store them and protect them.\n\n<style TechSubtitleBlue>Unlocks</style>\n<tabulator><em>Safe</em>: <building_cost('StorageSafe')>"),
	DisplayName = T(452517609019, --[[ModItemTech StorageSafes DisplayName]] "Safes"),
	Icon = "UI/Icons/Research/storage_safes",
	LockPrerequisites = {
		PlaceObj('CheckResourceUnlocked', {
			Resource = "Metal",
		}),
	},
	ResearchPoints = 6000,
	SortKey = 6,
	id = "StorageSafes",
	money_value = 6250000,
	PlaceObj('RemoveLockedState', {
		Class = "BuildingCompositeDef",
		Group = "Storages",
		LockState = "hidden",
		PresetId = "StorageSafe",
	}),
}),
}
